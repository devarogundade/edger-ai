{
  "id": "fa77abcd65f27dbd79477cc664b2ebf5",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
        "content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
      },
      "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
        "content": "pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
      },
      "contracts/Factory.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"./lib/Enums.sol\";\r\nimport {Strategy} from \"./Strategy.sol\";\r\nimport {IFactory} from \"./interfaces/IFactory.sol\";\r\n\r\ncontract Factory is IFactory {\r\n    address internal _revenue;\r\n    address internal _dataFeed;\r\n    address internal _swapRouter;\r\n\r\n    address internal constant EDGER =\r\n        0x3E646e062F05e01e1860eA53a6DC81e7E9162DE6;\r\n\r\n    constructor(address revenue_, address dataFeed_, address swapRouter_) {\r\n        _revenue = revenue_;\r\n        _dataFeed = dataFeed_;\r\n        _swapRouter = swapRouter_;\r\n    }\r\n\r\n    function createStrategy(\r\n        address[] memory tokens,\r\n        uint256[] memory splitRatio,\r\n        Enums.Visibility visibility,\r\n        uint256 depositUsdMin,\r\n        uint256 forkCost,\r\n        Enums.ActionCall[] memory allowedActions\r\n    ) external returns (address) {\r\n        Strategy strategy = new Strategy(\r\n            address(this),\r\n            msg.sender,\r\n            visibility,\r\n            depositUsdMin,\r\n            forkCost,\r\n            tokens,\r\n            splitRatio,\r\n            allowedActions\r\n        );\r\n\r\n        emit StrategyCreated(\r\n            address(strategy),\r\n            msg.sender,\r\n            tokens,\r\n            splitRatio,\r\n            visibility,\r\n            depositUsdMin,\r\n            forkCost,\r\n            allowedActions\r\n        );\r\n\r\n        return address(strategy);\r\n    }\r\n\r\n    function forkStrategy(address strategy) external payable returns (address) {\r\n        Strategy base = Strategy(payable(strategy));\r\n\r\n        Strategy fork = new Strategy(\r\n            address(this),\r\n            msg.sender,\r\n            Enums.Visibility.Private,\r\n            base.getDepositUsdMin(),\r\n            0, // forkCost\r\n            base.getTokens(),\r\n            base.getSplitRatio(),\r\n            base.getAllowedActions()\r\n        );\r\n\r\n        base.onFork{value: msg.value}();\r\n\r\n        emit StrategyForked(strategy, address(fork), msg.sender);\r\n\r\n        return address(strategy);\r\n    }\r\n\r\n    function getRevenueAddress() external view override returns (address) {\r\n        return _revenue;\r\n    }\r\n\r\n    function getSwapRouterAddress() external view override returns (address) {\r\n        return _swapRouter;\r\n    }\r\n\r\n    function getPriceOracleAddress() external view override returns (address) {\r\n        return _dataFeed;\r\n    }\r\n\r\n    function edger() external pure override returns (address) {\r\n        return EDGER;\r\n    }\r\n}\r\n"
      },
      "contracts/interfaces/IFactory.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"../lib/Enums.sol\";\r\n\r\ninterface IFactory {\r\n    event StrategyCreated(\r\n        address strategy,\r\n        address creator,\r\n        address[] tokens,\r\n        uint256[] splitRatio,\r\n        Enums.Visibility visibility,\r\n        uint256 depositUsdMin,\r\n        uint256 forkCost,\r\n        Enums.ActionCall[] allowedActions\r\n    );\r\n\r\n    event StrategyForked(address base, address fork, address forker);\r\n\r\n    function createStrategy(\r\n        address[] memory tokens,\r\n        uint256[] memory splitRatio,\r\n        Enums.Visibility visibility,\r\n        uint256 depositUsdMin,\r\n        uint256 forkCost,\r\n        Enums.ActionCall[] memory allowedActions\r\n    ) external returns (address);\r\n\r\n    function forkStrategy(address strategy) external payable returns (address);\r\n\r\n    function getRevenueAddress() external view returns (address);\r\n\r\n    function getSwapRouterAddress() external view returns (address);\r\n\r\n    function getPriceOracleAddress() external view returns (address);\r\n\r\n    function edger() external view returns (address);\r\n}\r\n"
      },
      "contracts/interfaces/IMultiTokenPool.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"../lib/Enums.sol\";\r\nimport {IPoolAdmin} from \"./IPoolAdmin.sol\";\r\n\r\ninterface IMultiTokenPool is IPoolAdmin {\r\n    event TokensDeposited(address indexed lp, address token, uint256 amount);\r\n\r\n    event TokensWithdrawn(\r\n        address indexed lp,\r\n        address[] tokens,\r\n        uint256[] amounts\r\n    );\r\n\r\n    event TokensDonated(address indexed donor, address token, uint256 amount);\r\n\r\n    function deposit(address token, uint256 amount) external;\r\n\r\n    function depositETH(uint256 amount) external payable;\r\n\r\n    function withdraw(uint256 lpAmount) external;\r\n\r\n    function withdrawSingle(address tokenOut, uint256 lpAmount) external;\r\n\r\n    function withdrawSingleETH(uint256 lpAmount) external;\r\n\r\n    function donate(address token, uint256 amount) external;\r\n\r\n    function donateETH(uint256 amount) external payable;\r\n\r\n    function getTokens() external view returns (address[] memory);\r\n\r\n    function getBalances() external view returns (uint256[] memory);\r\n\r\n    function getSplitRatio() external view returns (uint256[] memory);\r\n\r\n    function getDepositUsdMin() external view returns (uint256);\r\n\r\n    function getAllowedActions()\r\n        external\r\n        view\r\n        returns (Enums.ActionCall[] memory);\r\n}\r\n"
      },
      "contracts/interfaces/IPoolAdmin.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\ninterface IPoolAdmin {\r\n    function addToken(address token, uint256 ratio) external;\r\n\r\n    function removeToken(address token) external;\r\n}\r\n"
      },
      "contracts/interfaces/IPriceOracle.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\ninterface IPriceOracle {\r\n    function getAmountOutInUsd(\r\n        uint256 amountIn,\r\n        address tokenIn\r\n    ) external view returns (uint256 amountOut);\r\n\r\n    function getAmountsOutInUsd(\r\n        uint256[] memory amountIns,\r\n        address[] memory tokenIns\r\n    ) external view returns (uint256 amountOut);\r\n\r\n    function getAmountOut(\r\n        uint256 amountIn,\r\n        address tokenIn,\r\n        address tokenOut\r\n    ) external view returns (uint256 amountOut);\r\n\r\n    function getAmountsOut(\r\n        uint256[] memory amountIns,\r\n        address[] memory tokenIns,\r\n        address tokenOut\r\n    ) external view returns (uint256 amountOut);\r\n}\r\n"
      },
      "contracts/interfaces/IRevenue.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Types} from \"../lib/Types.sol\";\r\n\r\ninterface IRevenue {\r\n    event Funded(address indexed user, uint256 amount);\r\n\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n\r\n    function fund(address to) external payable;\r\n\r\n    function withdraw(uint256 amount) external;\r\n\r\n    function balanceOf(\r\n        address user\r\n    ) external view returns (Types.Revenue memory);\r\n}\r\n"
      },
      "contracts/interfaces/IStrategy.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"../lib/Enums.sol\";\r\nimport {Params} from \"../lib/Params.sol\";\r\n\r\ninterface IStrategy {\r\n    event ExecuteCalled(Params.ExecuteCall call);\r\n\r\n    function onFork() external payable;\r\n\r\n    function executeCall(Params.ExecuteCall memory call) external;\r\n\r\n    function creator() external view returns (address);\r\n\r\n    function factory() external view returns (address);\r\n\r\n    function getForkCost() external view returns (uint256);\r\n}\r\n"
      },
      "contracts/interfaces/IWETH.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\ninterface IWETH {\r\n    function withdraw(uint value) external;\r\n}\r\n"
      },
      "contracts/lib/Enums.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nlibrary Enums {\r\n    enum Visibility {\r\n        Public,\r\n        Private\r\n    }\r\n\r\n    enum ActionCall {\r\n        AdjustSplitRatio,\r\n        SwapToSingle,\r\n        SwapToMany,\r\n        None\r\n        // SupplyToAave,\r\n        // BorrowFromAave,\r\n        // BridgeToken\r\n    }\r\n}\r\n"
      },
      "contracts/lib/Params.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"./Enums.sol\";\r\n\r\nlibrary Params {\r\n    struct ExecuteCall {\r\n        Enums.ActionCall action;\r\n        bytes data;\r\n    }\r\n}\r\n"
      },
      "contracts/lib/Types.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nlibrary Types {\r\n    struct Revenue {\r\n        uint256 claimed;\r\n        uint256 unClaimed;\r\n    }\r\n}\r\n"
      },
      "contracts/pool/MultiTokenPool.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"../lib/Enums.sol\";\r\nimport {IFactory} from \"../interfaces/IFactory.sol\";\r\nimport {IPriceOracle} from \"../interfaces/IPriceOracle.sol\";\r\nimport {IMultiTokenPool} from \"../interfaces/IMultiTokenPool.sol\";\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {IUniswapV2Router02} from \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\r\n\r\nimport {PoolActions} from \"./PoolActions.sol\";\r\n\r\ncontract MultiTokenPool is ERC20, PoolActions, IMultiTokenPool, Ownable {\r\n    constructor(\r\n        address factory_,\r\n        address creator_,\r\n        uint256 depositUsdMin_,\r\n        address[] memory initialTokens_,\r\n        uint256[] memory initialSplitRatio_,\r\n        Enums.ActionCall[] memory allowedActions_\r\n    ) ERC20(\"LPToken\", \"LP\") Ownable(creator_) {\r\n        require(\r\n            initialTokens_.length == initialSplitRatio_.length,\r\n            \"Mismatched arrays\"\r\n        );\r\n\r\n        _factory = factory_;\r\n\r\n        address swapRouter = IFactory(_factory).getSwapRouterAddress();\r\n        _swapRouter = IUniswapV2Router02(swapRouter);\r\n\r\n        _depositUsdMin = depositUsdMin_;\r\n\r\n        _underlyingTokens = initialTokens_;\r\n        _splitRatio = initialSplitRatio_;\r\n\r\n        _allowedActions = allowedActions_;\r\n\r\n        uint256 totalRatio = 0;\r\n        for (uint256 i = 0; i < initialSplitRatio_.length; i++) {\r\n            totalRatio += initialSplitRatio_[i];\r\n            _isUnderlyingToken[initialTokens_[i]] = true;\r\n        }\r\n\r\n        require(totalRatio == DIVISOR, \"Invalid ratio sum\");\r\n    }\r\n\r\n    ////////////////////////////////////////////////\r\n    //// POOL FUNCTIONS                         ////\r\n    ////////////////////////////////////////////////\r\n\r\n    function deposit(\r\n        address token,\r\n        uint256 amount\r\n    ) external override onlyOwner {\r\n        require(_isUnderlyingToken[token], \"ETH not supported\");\r\n\r\n        address priceOracle = IFactory(_factory).getPriceOracleAddress();\r\n        uint256 amountUsd = IPriceOracle(priceOracle).getAmountOutInUsd(\r\n            amount,\r\n            token\r\n        );\r\n\r\n        require(\r\n            amountUsd >= _depositUsdMin,\r\n            \"Insufficient deposit amount in usd\"\r\n        );\r\n\r\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\r\n\r\n        _mint(msg.sender, amountUsd);\r\n\r\n        emit TokensDeposited(msg.sender, token, amount);\r\n    }\r\n\r\n    function depositETH(uint256 amount) external payable override onlyOwner {\r\n        require(msg.value == amount, \"Incorrect ETH amount\");\r\n        require(_isUnderlyingToken[SONIC_COIN], \"ETH not supported\");\r\n\r\n        address priceOracle = IFactory(_factory).getPriceOracleAddress();\r\n\r\n        uint256 amountUsd = IPriceOracle(priceOracle).getAmountOutInUsd(\r\n            amount,\r\n            SONIC_COIN\r\n        );\r\n\r\n        require(\r\n            amountUsd >= _depositUsdMin,\r\n            \"Insufficient deposit amount in usd\"\r\n        );\r\n\r\n        _mint(msg.sender, amountUsd);\r\n\r\n        emit TokensDeposited(msg.sender, SONIC_COIN, amount);\r\n    }\r\n\r\n    function withdraw(uint256 lpAmount) external override {\r\n        require(lpAmount > 0, \"Invalid amount\");\r\n\r\n        uint256 totalSupply = totalSupply();\r\n        require(totalSupply > 0, \"No liquidity\");\r\n\r\n        for (uint256 i = 0; i < _underlyingTokens.length; i++) {\r\n            address tokenOut = _underlyingTokens[i];\r\n            uint256 amountOut = (getBalance(tokenOut) * lpAmount) / totalSupply;\r\n\r\n            if (tokenOut == SONIC_COIN) {\r\n                (bool _success, ) = payable(msg.sender).call{value: amountOut}(\r\n                    \"\"\r\n                );\r\n\r\n                require(_success, \"ETH transfer failed\");\r\n            } else {\r\n                IERC20(tokenOut).transfer(msg.sender, amountOut);\r\n            }\r\n        }\r\n\r\n        _burn(msg.sender, lpAmount);\r\n    }\r\n\r\n    function withdrawSingle(address token, uint256 lpAmount) external override {\r\n        _withdrawSingle(token, lpAmount);\r\n    }\r\n\r\n    function withdrawSingleETH(uint256 lpAmount) external override {\r\n        _withdrawSingle(SONIC_COIN, lpAmount);\r\n    }\r\n\r\n    function _withdrawSingle(address tokenOut, uint256 lpAmount) internal {\r\n        require(lpAmount > 0, \"Invalid amount\");\r\n        require(_isUnderlyingToken[tokenOut], \"Invalid token\");\r\n\r\n        uint256 totalSupply = totalSupply();\r\n        require(totalSupply > 0, \"No liquidity\");\r\n\r\n        for (uint256 i = 0; i < _underlyingTokens.length; i++) {\r\n            address tokenIn = _underlyingTokens[i];\r\n            uint256 amountIn = (getBalance(tokenIn) * lpAmount) / totalSupply;\r\n\r\n            address[] memory path = new address[](2);\r\n\r\n            path[0] = tokenIn == SONIC_COIN ? _swapRouter.WETH() : tokenIn;\r\n            path[1] = tokenOut == SONIC_COIN ? _swapRouter.WETH() : tokenOut;\r\n\r\n            if (tokenIn == tokenOut && tokenOut == SONIC_COIN) {\r\n                (bool _success, ) = payable(msg.sender).call{value: amountIn}(\r\n                    \"\"\r\n                );\r\n\r\n                require(_success, \"ETH transfer failed\");\r\n            } else if (tokenIn == tokenOut) {\r\n                IERC20(tokenIn).transfer(msg.sender, amountIn);\r\n            } else if (tokenIn == SONIC_COIN) {\r\n                _swapRouter.swapExactETHForTokens{value: amountIn}(\r\n                    0, // amountOutMin\r\n                    path,\r\n                    msg.sender,\r\n                    block.timestamp + 1\r\n                );\r\n            } else {\r\n                IERC20(tokenIn).approve(address(_swapRouter), amountIn);\r\n\r\n                _swapRouter.swapExactTokensForTokens(\r\n                    amountIn,\r\n                    0, // amountOutMin\r\n                    path,\r\n                    msg.sender,\r\n                    block.timestamp + 1\r\n                );\r\n            }\r\n        }\r\n\r\n        _burn(msg.sender, lpAmount);\r\n    }\r\n\r\n    function donate(address token, uint256 amount) external override {\r\n        require(_isUnderlyingToken[token], \"Invalid token\");\r\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\r\n\r\n        emit TokensDonated(msg.sender, token, amount);\r\n    }\r\n\r\n    function donateETH(uint256 amount) external payable override {\r\n        require(_isUnderlyingToken[SONIC_COIN], \"ETH not supported\");\r\n        require(msg.value == amount, \"Incorrect ETH amount\");\r\n\r\n        emit TokensDonated(msg.sender, SONIC_COIN, amount);\r\n    }\r\n\r\n    ////////////////////////////////////////////////\r\n    //// VIEW FUNCTIONS                         ////\r\n    ////////////////////////////////////////////////\r\n\r\n    // Get the list of underlying tokens in the pool\r\n    function getTokens() external view override returns (address[] memory) {\r\n        return _underlyingTokens;\r\n    }\r\n\r\n    // Get the balances of all underlying tokens in the pool\r\n    function getBalances() external view override returns (uint256[] memory) {\r\n        uint256[] memory balances = new uint256[](_underlyingTokens.length);\r\n        for (uint256 i = 0; i < _underlyingTokens.length; i++) {\r\n            balances[i] = getBalance(_underlyingTokens[i]);\r\n        }\r\n        return balances;\r\n    }\r\n\r\n    function getSplitRatio() external view override returns (uint256[] memory) {\r\n        return _splitRatio;\r\n    }\r\n\r\n    function getDepositUsdMin() external view override returns (uint256) {\r\n        return _depositUsdMin;\r\n    }\r\n\r\n    function getAllowedActions()\r\n        external\r\n        view\r\n        override\r\n        returns (Enums.ActionCall[] memory)\r\n    {\r\n        return _allowedActions;\r\n    }\r\n\r\n    ////////////////////////////////////////////////\r\n    //// ADMIN FUNCTIONS                        ////\r\n    ////////////////////////////////////////////////\r\n\r\n    function addToken(\r\n        address token,\r\n        uint256 ratio\r\n    ) external override onlyOwner {\r\n        require(!_isUnderlyingToken[token], \"Token exists\");\r\n\r\n        _underlyingTokens.push(token);\r\n        _splitRatio.push(ratio);\r\n\r\n        _isUnderlyingToken[token] = true;\r\n    }\r\n\r\n    function removeToken(address token) external override onlyOwner {\r\n        require(_isUnderlyingToken[token], \"Token not found\");\r\n        require(\r\n            IERC20(token).balanceOf(address(this)) == 0,\r\n            \"Non-zero balance\"\r\n        );\r\n\r\n        for (uint256 i = 0; i < _underlyingTokens.length; i++) {\r\n            if (_underlyingTokens[i] == token) {\r\n                _underlyingTokens[i] = _underlyingTokens[\r\n                    _underlyingTokens.length - 1\r\n                ];\r\n                _underlyingTokens.pop();\r\n                _splitRatio[i] = _splitRatio[_splitRatio.length - 1];\r\n                _splitRatio.pop();\r\n                _isUnderlyingToken[token] = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n"
      },
      "contracts/pool/PoolActions.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"../lib/Enums.sol\";\r\nimport {IWETH} from \"../interfaces/IWETH.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {IUniswapV2Router02} from \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\r\nabstract contract PoolActions {\r\n    IUniswapV2Router02 internal immutable _swapRouter;\r\n    address internal immutable _factory;\r\n\r\n    uint256 internal _depositUsdMin;\r\n\r\n    uint256[] internal _splitRatio;\r\n    address[] internal _underlyingTokens;\r\n\r\n    Enums.ActionCall[] internal _allowedActions;\r\n\r\n    mapping(address => bool) internal _isUnderlyingToken;\r\n\r\n    uint256 constant DIVISOR = 10_000;\r\n    address constant SONIC_COIN = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n\r\n    receive() external payable {}\r\n\r\n    function _swapToSingle(\r\n        address[] memory tokensIn,\r\n        address tokenOut\r\n    ) internal {\r\n        require(_isUnderlyingToken[tokenOut], \"Invalid token\");\r\n\r\n        for (uint256 i = 0; i < tokensIn.length; i++) {\r\n            address tokenIn = tokensIn[i];\r\n            uint256 amountIn = getBalance(tokenIn);\r\n\r\n            if (amountIn == 0) continue;\r\n\r\n            address[] memory path = new address[](2);\r\n\r\n            path[0] = tokenIn == SONIC_COIN ? _swapRouter.WETH() : tokenIn;\r\n            path[1] = tokenOut == SONIC_COIN ? _swapRouter.WETH() : tokenOut;\r\n\r\n            if (tokenIn == tokenOut) {\r\n                continue;\r\n            } else if (tokenIn == SONIC_COIN) {\r\n                _swapRouter.swapExactETHForTokens{value: amountIn}(\r\n                    0, // amountOutMin\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp + 1\r\n                );\r\n            } else if (tokenOut == SONIC_COIN) {\r\n                IERC20(tokenIn).approve(address(_swapRouter), amountIn);\r\n\r\n                _swapRouter.swapExactTokensForETH(\r\n                    amountIn,\r\n                    0, // amountOutMin\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp + 1\r\n                );\r\n            } else {\r\n                IERC20(tokenIn).approve(address(_swapRouter), amountIn);\r\n\r\n                _swapRouter.swapExactTokensForTokens(\r\n                    amountIn,\r\n                    0, // amountOutMin\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp + 1\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    function _swapToMany(address tokenIn, address[] memory tokensOut) internal {\r\n        require(_isUnderlyingToken[tokenIn], \"Invalid token\");\r\n\r\n        uint256 amountIns = tokenIn == SONIC_COIN\r\n            ? address(this).balance\r\n            : IERC20(tokenIn).balanceOf(address(this));\r\n\r\n        if (amountIns == 0) return;\r\n\r\n        uint256 amountIn = (amountIns / tokensOut.length);\r\n\r\n        for (uint256 i = 0; i < tokensOut.length; i++) {\r\n            address tokenOut = tokensOut[i];\r\n            require(_isUnderlyingToken[tokenOut], \"Invalid token\");\r\n\r\n            address[] memory path = new address[](2);\r\n\r\n            path[0] = tokenIn == SONIC_COIN ? _swapRouter.WETH() : tokenIn;\r\n            path[1] = tokenOut == SONIC_COIN ? _swapRouter.WETH() : tokenOut;\r\n\r\n            if (tokenIn == tokenOut) {\r\n                continue;\r\n            } else if (tokenIn == SONIC_COIN) {\r\n                _swapRouter.swapExactETHForTokens{value: amountIn}(\r\n                    0, // amountOutMin\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp + 1\r\n                );\r\n            } else if (tokenOut == SONIC_COIN) {\r\n                IERC20(tokenIn).approve(address(_swapRouter), amountIn);\r\n\r\n                _swapRouter.swapExactTokensForETH(\r\n                    amountIn,\r\n                    0, // amountOutMin\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp + 1\r\n                );\r\n            } else {\r\n                IERC20(tokenIn).approve(address(_swapRouter), amountIn);\r\n\r\n                _swapRouter.swapExactTokensForTokens(\r\n                    amountIn,\r\n                    0, // amountOutMin\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp + 1\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    function _adjustSplitRatio(uint256[] memory newRatios) internal {\r\n        require(newRatios.length == _underlyingTokens.length, \"Invalid length\");\r\n\r\n        uint256 totalRatio = 0;\r\n        for (uint256 i = 0; i < newRatios.length; i++) {\r\n            totalRatio += newRatios[i];\r\n        }\r\n\r\n        require(totalRatio == DIVISOR, \"Invalid ratio sum\");\r\n\r\n        _splitRatio = newRatios;\r\n    }\r\n\r\n    function getBalance(address token) internal view returns (uint256) {\r\n        return\r\n            token == SONIC_COIN\r\n                ? address(this).balance\r\n                : IERC20(token).balanceOf(address(this));\r\n    }\r\n}\r\n"
      },
      "contracts/Strategy.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\nimport {Enums} from \"./lib/Enums.sol\";\nimport {Types} from \"./lib/Types.sol\";\nimport {Params} from \"./lib/Params.sol\";\nimport {IStrategy} from \"./interfaces/IStrategy.sol\";\nimport {MultiTokenPool} from \"./pool/MultiTokenPool.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IFactory} from \"./interfaces/IFactory.sol\";\nimport {IRevenue} from \"./interfaces/IRevenue.sol\";\n\ncontract Strategy is MultiTokenPool, IStrategy {\n    uint256 internal _forkCost;\n    Enums.Visibility internal _visibility;\n\n    constructor(\n        address factory_,\n        address creator_,\n        Enums.Visibility visibility_,\n        uint256 depositUsdMin_,\n        uint256 forkCost_,\n        address[] memory initialTokens_,\n        uint256[] memory initialSplitRatio_,\n        Enums.ActionCall[] memory allowedActions_\n    )\n        MultiTokenPool(\n            factory_,\n            creator_,\n            depositUsdMin_,\n            initialTokens_,\n            initialSplitRatio_,\n            allowedActions_\n        )\n    {\n        _visibility = visibility_;\n        _forkCost = forkCost_;\n    }\n\n    function onFork() external payable override onlyFactor {\n        require(_visibility == Enums.Visibility.Public, \"Disallowed\");\n        require(_forkCost <= msg.value, \"Insufficient fork cost\");\n\n        IRevenue(IFactory(_factory).getRevenueAddress()).fund{value: msg.value}(\n            owner()\n        );\n    }\n\n    function executeCall(\n        Params.ExecuteCall memory call\n    ) external override onlyEdger {\n        require(_isAllowedAction(call.action), \"Action not allowed\");\n\n        if (call.action == Enums.ActionCall.AdjustSplitRatio) {\n            uint256[] memory ratio = abi.decode(call.data, (uint256[]));\n\n            super._adjustSplitRatio(ratio);\n        }\n\n        if (call.action == Enums.ActionCall.SwapToSingle) {\n            (address[] memory tokensIn, address tokenOut) = abi.decode(\n                call.data,\n                (address[], address)\n            );\n\n            super._swapToSingle(tokensIn, tokenOut);\n        }\n\n        if (call.action == Enums.ActionCall.SwapToMany) {\n            (address tokenIn, address[] memory tokensOut) = abi.decode(\n                call.data,\n                (address, address[])\n            );\n\n            super._swapToMany(tokenIn, tokensOut);\n        }\n\n        emit ExecuteCalled(call);\n    }\n\n    ////////////////////////////////////////////////\n    //// INTERNAL FUNCTIONS                     ////\n    ////////////////////////////////////////////////\n\n    function _isAllowedAction(\n        Enums.ActionCall action\n    ) internal view returns (bool allowed) {\n        allowed = false;\n\n        for (uint i = 0; i < _allowedActions.length; i++) {\n            if (_allowedActions[i] == action) {\n                allowed = true;\n                break;\n            }\n        }\n    }\n\n    ////////////////////////////////////////////////\n    //// VIEW FUNCTIONS                         ////\n    ////////////////////////////////////////////////\n\n    function creator() external view override returns (address) {\n        return owner();\n    }\n\n    function factory() external view override returns (address) {\n        return _factory;\n    }\n\n    function getForkCost() external view override returns (uint256) {\n        return _forkCost;\n    }\n\n    ////////////////////////////////////////////////\n    //// MODIFIERS                              ////\n    ////////////////////////////////////////////////\n\n    modifier onlyFactor() {\n        require(msg.sender == _factory, \"Only factory is allowed\");\n        _;\n    }\n\n    modifier onlyEdger() {\n        require(\n            msg.sender == IFactory(_factory).edger(),\n            \"Only edger is allowed\"\n        );\n        _;\n    }\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 934,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                933
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              284
            ],
            "IERC20Errors": [
              189
            ],
            "IERC721Errors": [
              237
            ]
          },
          "id": 285,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:1",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 189,
              "linearizedBaseContracts": [
                189
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 159,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "654:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "670:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "687:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:1"
                  },
                  "src": "623:80:1"
                },
                {
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 164,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "891:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:1"
                  },
                  "src": "866:41:1"
                },
                {
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 169,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "1104:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:1"
                  },
                  "src": "1077:45:1"
                },
                {
                  "documentation": {
                    "id": 170,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:1",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 178,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1511:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1528:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1547:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:1"
                  },
                  "src": "1478:85:1"
                },
                {
                  "documentation": {
                    "id": 179,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 183,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 181,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1775:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:1"
                  },
                  "src": "1748:45:1"
                },
                {
                  "documentation": {
                    "id": 184,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:1",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 188,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "2025:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:1"
                  },
                  "src": "1999:43:1"
                }
              ],
              "scope": 285,
              "src": "280:1764:1",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 190,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:1",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 237,
              "linearizedBaseContracts": [
                237
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 191,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:1",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 195,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "2469:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:1"
                  },
                  "src": "2444:40:1"
                },
                {
                  "documentation": {
                    "id": 196,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:1",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 200,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "2656:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:1"
                  },
                  "src": "2627:46:1"
                },
                {
                  "documentation": {
                    "id": 201,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:1",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 209,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3000:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3016:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3033:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:1"
                  },
                  "src": "2973:75:1"
                },
                {
                  "documentation": {
                    "id": 210,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 214,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 212,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 214,
                        "src": "3237:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:1"
                  },
                  "src": "3211:42:1"
                },
                {
                  "documentation": {
                    "id": 215,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 219,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "3451:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:1"
                  },
                  "src": "3423:46:1"
                },
                {
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 226,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3760:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3778:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:1"
                  },
                  "src": "3727:68:1"
                },
                {
                  "documentation": {
                    "id": 227,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 231,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "4008:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:1"
                  },
                  "src": "3980:46:1"
                },
                {
                  "documentation": {
                    "id": 232,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 236,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "4262:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:1"
                  },
                  "src": "4234:46:1"
                }
              ],
              "scope": 285,
              "src": "2190:2092:1",
              "usedErrors": [
                195,
                200,
                209,
                214,
                219,
                226,
                231,
                236
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 238,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:1",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 284,
              "linearizedBaseContracts": [
                284
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 249,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4860:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4876:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4893:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4909:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:1"
                  },
                  "src": "4827:99:1"
                },
                {
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 254,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "5116:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:1"
                  },
                  "src": "5089:43:1"
                },
                {
                  "documentation": {
                    "id": 255,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 259,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "5331:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:1"
                  },
                  "src": "5302:47:1"
                },
                {
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 266,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5651:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5669:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:1"
                  },
                  "src": "5616:68:1"
                },
                {
                  "documentation": {
                    "id": 267,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 271,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 271,
                        "src": "5898:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:1"
                  },
                  "src": "5869:47:1"
                },
                {
                  "documentation": {
                    "id": 272,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 276,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "6153:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:1"
                  },
                  "src": "6124:47:1"
                },
                {
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:1",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 283,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6494:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6513:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:1"
                  },
                  "src": "6462:73:1"
                }
              ],
              "scope": 285,
              "src": "4430:2107:1",
              "usedErrors": [
                249,
                254,
                259,
                266,
                271,
                276,
                283
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ]
          },
          "id": 800,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 286,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 288,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 878,
              "src": "131:36:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 287,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "139:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 290,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 904,
              "src": "168:63:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 289,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 903,
                    "src": "176:14:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 292,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 934,
              "src": "232:48:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 291,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "240:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 294,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 285,
              "src": "281:65:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 293,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 189,
                    "src": "289:12:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 296,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "1133:7:2"
                  },
                  "id": 297,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:2"
                },
                {
                  "baseName": {
                    "id": 298,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "1142:6:2"
                  },
                  "id": 299,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:2"
                },
                {
                  "baseName": {
                    "id": 300,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 903,
                    "src": "1150:14:2"
                  },
                  "id": 301,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:2"
                },
                {
                  "baseName": {
                    "id": 302,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 189,
                    "src": "1166:12:2"
                  },
                  "id": 303,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:2"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 295,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:2",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 799,
              "linearizedBaseContracts": [
                799,
                189,
                903,
                877,
                933
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1185:53:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 306,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:2",
                    "keyType": {
                      "id": 304,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 305,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1245:83:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 312,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:2",
                    "keyType": {
                      "id": 308,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 311,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:2",
                      "keyType": {
                        "id": 309,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 310,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1335:28:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1370:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1396:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 335,
                    "nodeType": "Block",
                    "src": "1657:57:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 327,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "1667:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 328,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "1675:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1667:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "1667:13:2"
                      },
                      {
                        "expression": {
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 331,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "1690:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 332,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "1700:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1690:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 334,
                        "nodeType": "ExpressionStatement",
                        "src": "1690:17:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 320,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:171:2",
                    "text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
                  },
                  "id": 336,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1627:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1613:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1613:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1648:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1634:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1634:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1612:44:2"
                  },
                  "returnParameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1657:0:2"
                  },
                  "scope": 799,
                  "src": "1601:113:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    890
                  ],
                  "body": {
                    "id": 344,
                    "nodeType": "Block",
                    "src": "1839:29:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 342,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 317,
                          "src": "1856:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 341,
                        "id": 343,
                        "nodeType": "Return",
                        "src": "1849:12:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 337,
                    "nodeType": "StructuredDocumentation",
                    "src": "1720:54:2",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 345,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1788:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1792:2:2"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1824:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1824:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1823:15:2"
                  },
                  "scope": 799,
                  "src": "1779:89:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    896
                  ],
                  "body": {
                    "id": 353,
                    "nodeType": "Block",
                    "src": "2043:31:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 351,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "2060:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 350,
                        "id": 352,
                        "nodeType": "Return",
                        "src": "2053:14:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1874:102:2",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 354,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1990:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1996:2:2"
                  },
                  "returnParameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "2028:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2028:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2027:15:2"
                  },
                  "scope": 799,
                  "src": "1981:93:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    902
                  ],
                  "body": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "2763:26:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2780:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 359,
                        "id": 361,
                        "nodeType": "Return",
                        "src": "2773:9:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 355,
                    "nodeType": "StructuredDocumentation",
                    "src": "2080:622:2",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 363,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2716:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2724:2:2"
                  },
                  "returnParameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 363,
                        "src": "2756:5:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2756:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2755:7:2"
                  },
                  "scope": 799,
                  "src": "2707:82:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    826
                  ],
                  "body": {
                    "id": 371,
                    "nodeType": "Block",
                    "src": "2910:36:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 369,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "2927:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 368,
                        "id": 370,
                        "nodeType": "Return",
                        "src": "2920:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 364,
                    "nodeType": "StructuredDocumentation",
                    "src": "2795:49:2",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 372,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2858:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2869:2:2"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 372,
                        "src": "2901:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2901:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2900:9:2"
                  },
                  "scope": 799,
                  "src": "2849:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    834
                  ],
                  "body": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "3078:42:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 380,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "3095:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 382,
                          "indexExpression": {
                            "id": 381,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "3105:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3095:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 379,
                        "id": 383,
                        "nodeType": "Return",
                        "src": "3088:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 373,
                    "nodeType": "StructuredDocumentation",
                    "src": "2952:47:2",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 385,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "3013:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3031:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "3023:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3023:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3022:17:2"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "3069:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3069:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3068:9:2"
                  },
                  "scope": 799,
                  "src": "3004:116:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    844
                  ],
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "3390:103:2",
                    "statements": [
                      {
                        "assignments": [
                          396
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 396,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3408:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 408,
                            "src": "3400:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3400:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 399,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 397,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "3416:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3416:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3400:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 401,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "3448:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 402,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "3455:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 403,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "3459:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 400,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "3438:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3438:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 405,
                        "nodeType": "ExpressionStatement",
                        "src": "3438:27:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3482:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 394,
                        "id": 407,
                        "nodeType": "Return",
                        "src": "3475:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 386,
                    "nodeType": "StructuredDocumentation",
                    "src": "3126:184:2",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3324:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3341:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3333:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3353:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3345:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3345:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:27:2"
                  },
                  "returnParameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3384:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3384:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3383:6:2"
                  },
                  "scope": 799,
                  "src": "3315:178:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    854
                  ],
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "3640:51:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 419,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "3657:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 421,
                            "indexExpression": {
                              "id": 420,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "3669:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3657:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 423,
                          "indexExpression": {
                            "id": 422,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "3676:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3657:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 418,
                        "id": 424,
                        "nodeType": "Return",
                        "src": "3650:34:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "3499:47:2",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3560:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3578:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3570:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3570:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3593:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3585:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3585:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3569:32:2"
                  },
                  "returnParameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3631:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3631:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3630:9:2"
                  },
                  "scope": 799,
                  "src": "3551:140:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    864
                  ],
                  "body": {
                    "id": 449,
                    "nodeType": "Block",
                    "src": "4077:107:2",
                    "statements": [
                      {
                        "assignments": [
                          437
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 437,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4095:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 449,
                            "src": "4087:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 436,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4087:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 440,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 438,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "4103:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4103:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4087:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 442,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "4134:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 443,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "4141:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 444,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "4150:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 441,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 690,
                            "src": "4125:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4125:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "4125:31:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4173:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 435,
                        "id": 448,
                        "nodeType": "Return",
                        "src": "4166:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "3697:296:2",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "4007:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4023:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4015:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4015:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4040:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4032:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4032:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4014:32:2"
                  },
                  "returnParameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4071:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4071:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4070:6:2"
                  },
                  "scope": 799,
                  "src": "3998:186:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    876
                  ],
                  "body": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "4869:151:2",
                    "statements": [
                      {
                        "assignments": [
                          463
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 463,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4887:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "4879:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4879:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 466,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 464,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "4897:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4897:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4879:30:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 468,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4935:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 469,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "4941:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 470,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4950:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 467,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "4919:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4919:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "4919:37:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 474,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4976:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 475,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "4982:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 476,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4986:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 473,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "4966:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4966:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 478,
                        "nodeType": "ExpressionStatement",
                        "src": "4966:26:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5009:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 461,
                        "id": 480,
                        "nodeType": "Return",
                        "src": "5002:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "4190:581:2",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 482,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4785:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4806:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4798:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4798:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4820:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4812:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4812:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4832:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4824:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4824:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4797:41:2"
                  },
                  "returnParameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4863:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4863:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4862:6:2"
                  },
                  "scope": 799,
                  "src": "4776:244:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "5462:231:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 492,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "5476:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5492:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5484:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 493,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5484:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5484:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5476:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 506,
                        "nodeType": "IfStatement",
                        "src": "5472:86:2",
                        "trueBody": {
                          "id": 505,
                          "nodeType": "Block",
                          "src": "5496:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 501,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5544:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 500,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5536:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 499,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5536:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5536:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 498,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "5517:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5517:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 504,
                              "nodeType": "RevertStatement",
                              "src": "5510:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 507,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "5571:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5585:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5577:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 508,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5577:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5577:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5571:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 521,
                        "nodeType": "IfStatement",
                        "src": "5567:86:2",
                        "trueBody": {
                          "id": 520,
                          "nodeType": "Block",
                          "src": "5589:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 516,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5639:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 515,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5631:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 514,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5631:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 517,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5631:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 513,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "5610:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5610:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 519,
                              "nodeType": "RevertStatement",
                              "src": "5603:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 523,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "5670:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 524,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "5676:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 525,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "5680:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 522,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "5662:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5662:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "5662:24:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 483,
                    "nodeType": "StructuredDocumentation",
                    "src": "5026:362:2",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5402:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5420:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5412:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5412:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5434:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5426:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5426:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5446:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5438:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5438:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5411:41:2"
                  },
                  "returnParameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5462:0:2"
                  },
                  "scope": 799,
                  "src": "5393:300:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 605,
                    "nodeType": "Block",
                    "src": "6083:1032:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 539,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "6097:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6113:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6105:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 540,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6105:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6105:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6097:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 576,
                          "nodeType": "Block",
                          "src": "6271:362:2",
                          "statements": [
                            {
                              "assignments": [
                                551
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 551,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6293:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 576,
                                  "src": "6285:19:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 550,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6285:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 555,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 552,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 307,
                                  "src": "6307:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 554,
                                "indexExpression": {
                                  "id": 553,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 532,
                                  "src": "6317:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6307:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6285:37:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 556,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 551,
                                  "src": "6340:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 557,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6354:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6340:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 566,
                              "nodeType": "IfStatement",
                              "src": "6336:115:2",
                              "trueBody": {
                                "id": 565,
                                "nodeType": "Block",
                                "src": "6361:90:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 560,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 532,
                                          "src": "6411:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 561,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 551,
                                          "src": "6417:11:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 562,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 536,
                                          "src": "6430:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 559,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "6386:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 563,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6386:50:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 564,
                                    "nodeType": "RevertStatement",
                                    "src": "6379:57:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 575,
                              "nodeType": "UncheckedBlock",
                              "src": "6464:159:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 567,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "6571:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 569,
                                      "indexExpression": {
                                        "id": 568,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 532,
                                        "src": "6581:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6571:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 572,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 570,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 551,
                                        "src": "6589:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 571,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 536,
                                        "src": "6603:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6589:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6571:37:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 574,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6571:37:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 577,
                        "nodeType": "IfStatement",
                        "src": "6093:540:2",
                        "trueBody": {
                          "id": 549,
                          "nodeType": "Block",
                          "src": "6117:148:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 545,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 315,
                                  "src": "6233:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 546,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6249:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6233:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 548,
                              "nodeType": "ExpressionStatement",
                              "src": "6233:21:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 578,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "6647:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6661:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6653:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 579,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6653:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6653:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6647:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 597,
                          "nodeType": "Block",
                          "src": "6862:206:2",
                          "statements": [
                            {
                              "id": 596,
                              "nodeType": "UncheckedBlock",
                              "src": "6876:182:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 594,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 590,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "7021:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 592,
                                      "indexExpression": {
                                        "id": 591,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 534,
                                        "src": "7031:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7021:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 593,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "7038:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7021:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 595,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7021:22:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 598,
                        "nodeType": "IfStatement",
                        "src": "6643:425:2",
                        "trueBody": {
                          "id": 589,
                          "nodeType": "Block",
                          "src": "6665:191:2",
                          "statements": [
                            {
                              "id": 588,
                              "nodeType": "UncheckedBlock",
                              "src": "6679:167:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 584,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "6810:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 585,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "6826:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6810:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 587,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6810:21:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 600,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "7092:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 601,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "7098:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 602,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "7102:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 599,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "7083:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7083:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 604,
                        "nodeType": "EmitStatement",
                        "src": "7078:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 530,
                    "nodeType": "StructuredDocumentation",
                    "src": "5699:304:2",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "6017:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6033:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "6025:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6025:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6047:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "6039:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6039:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6059:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "6051:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6051:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6024:41:2"
                  },
                  "returnParameters": {
                    "id": 538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6083:0:2"
                  },
                  "scope": 799,
                  "src": "6008:1107:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 638,
                    "nodeType": "Block",
                    "src": "7514:152:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 614,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "7528:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7547:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7539:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 615,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7539:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7539:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7528:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 628,
                        "nodeType": "IfStatement",
                        "src": "7524:91:2",
                        "trueBody": {
                          "id": 627,
                          "nodeType": "Block",
                          "src": "7551:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 623,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7601:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 622,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7593:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 621,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7593:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 624,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7593:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 620,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "7572:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7572:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 626,
                              "nodeType": "RevertStatement",
                              "src": "7565:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7640:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7632:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 630,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7632:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7632:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 634,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "7644:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 635,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "7653:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 629,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "7624:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7624:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 637,
                        "nodeType": "ExpressionStatement",
                        "src": "7624:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 607,
                    "nodeType": "StructuredDocumentation",
                    "src": "7121:332:2",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 639,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7467:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7481:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7473:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7473:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7498:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7490:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7490:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7472:32:2"
                  },
                  "returnParameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7514:0:2"
                  },
                  "scope": 799,
                  "src": "7458:208:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 671,
                    "nodeType": "Block",
                    "src": "8040:150:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 647,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "8054:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8073:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8065:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 648,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8065:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8065:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8054:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 661,
                        "nodeType": "IfStatement",
                        "src": "8050:89:2",
                        "trueBody": {
                          "id": 660,
                          "nodeType": "Block",
                          "src": "8077:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 656,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8125:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8117:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 654,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8117:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8117:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 653,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "8098:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8098:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 659,
                              "nodeType": "RevertStatement",
                              "src": "8091:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 663,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "8156:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8173:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8165:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 664,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8165:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8165:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 668,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "8177:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 662,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "8148:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8148:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "8148:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 640,
                    "nodeType": "StructuredDocumentation",
                    "src": "7672:307:2",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 672,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7993:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 642,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "8007:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "7999:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7999:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8024:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "8016:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8016:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7998:32:2"
                  },
                  "returnParameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8040:0:2"
                  },
                  "scope": 799,
                  "src": "7984:206:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 689,
                    "nodeType": "Block",
                    "src": "8800:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 683,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "8819:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 684,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "8826:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 685,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "8835:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8842:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 682,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 750,
                            "src": "8810:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8810:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 688,
                        "nodeType": "ExpressionStatement",
                        "src": "8810:37:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 673,
                    "nodeType": "StructuredDocumentation",
                    "src": "8196:525:2",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 690,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8735:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 675,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8752:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8744:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8744:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8767:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8759:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8759:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8784:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8776:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8776:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8743:47:2"
                  },
                  "returnParameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8800:0:2"
                  },
                  "scope": 799,
                  "src": "8726:128:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 749,
                    "nodeType": "Block",
                    "src": "9799:334:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 702,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "9813:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9830:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9822:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 703,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9822:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9822:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9813:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 716,
                        "nodeType": "IfStatement",
                        "src": "9809:89:2",
                        "trueBody": {
                          "id": 715,
                          "nodeType": "Block",
                          "src": "9834:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9884:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 710,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9876:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 709,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9876:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9876:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 708,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 183,
                                  "src": "9855:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9855:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 714,
                              "nodeType": "RevertStatement",
                              "src": "9848:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 717,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "9911:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9930:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9922:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 718,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9922:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9922:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9911:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 731,
                        "nodeType": "IfStatement",
                        "src": "9907:90:2",
                        "trueBody": {
                          "id": 730,
                          "nodeType": "Block",
                          "src": "9934:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 726,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9983:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 725,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9975:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 724,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9975:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9975:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 723,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "9955:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9955:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 729,
                              "nodeType": "RevertStatement",
                              "src": "9948:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 732,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 313,
                                "src": "10006:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 735,
                              "indexExpression": {
                                "id": 733,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "10018:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10006:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 736,
                            "indexExpression": {
                              "id": 734,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "10025:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10006:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 737,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "10036:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10006:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 739,
                        "nodeType": "ExpressionStatement",
                        "src": "10006:35:2"
                      },
                      {
                        "condition": {
                          "id": 740,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "10055:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 748,
                        "nodeType": "IfStatement",
                        "src": "10051:76:2",
                        "trueBody": {
                          "id": 747,
                          "nodeType": "Block",
                          "src": "10066:61:2",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 742,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "10094:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 743,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "10101:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 744,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 697,
                                    "src": "10110:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 741,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "10085:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10085:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 746,
                              "nodeType": "EmitStatement",
                              "src": "10080:36:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 691,
                    "nodeType": "StructuredDocumentation",
                    "src": "8860:836:2",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 750,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9710:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9727:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9719:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9719:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9742:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9734:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9734:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9759:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9751:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9751:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9771:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9766:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9766:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9718:63:2"
                  },
                  "returnParameters": {
                    "id": 701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9799:0:2"
                  },
                  "scope": 799,
                  "src": "9701:432:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "10504:387:2",
                    "statements": [
                      {
                        "assignments": [
                          761
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 761,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10522:16:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 797,
                            "src": "10514:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 760,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10514:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 766,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 763,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "10551:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 764,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "10558:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 762,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "10541:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10541:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10514:52:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 767,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "10580:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10604:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 769,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10604:7:2",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 768,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10599:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10599:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10613:3:2",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10599:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10580:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 796,
                        "nodeType": "IfStatement",
                        "src": "10576:309:2",
                        "trueBody": {
                          "id": 795,
                          "nodeType": "Block",
                          "src": "10618:267:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 774,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 761,
                                  "src": "10636:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 775,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 757,
                                  "src": "10655:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10636:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 784,
                              "nodeType": "IfStatement",
                              "src": "10632:130:2",
                              "trueBody": {
                                "id": 783,
                                "nodeType": "Block",
                                "src": "10662:100:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 778,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 755,
                                          "src": "10714:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 779,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10723:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 780,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10741:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 777,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 178,
                                        "src": "10687:26:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 781,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10687:60:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 782,
                                    "nodeType": "RevertStatement",
                                    "src": "10680:67:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 794,
                              "nodeType": "UncheckedBlock",
                              "src": "10775:100:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 786,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 753,
                                        "src": "10812:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 787,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 755,
                                        "src": "10819:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 790,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 788,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10828:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 789,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10847:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10828:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 791,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10854:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 785,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        690,
                                        750
                                      ],
                                      "referencedDeclaration": 750,
                                      "src": "10803:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10803:57:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 793,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10803:57:2"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 751,
                    "nodeType": "StructuredDocumentation",
                    "src": "10139:271:2",
                    "text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 798,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10424:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10448:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10440:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10440:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 755,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10463:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10455:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10455:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10480:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10472:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10472:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10439:47:2"
                  },
                  "returnParameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10504:0:2"
                  },
                  "scope": 799,
                  "src": "10415:476:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 800,
              "src": "1106:9787:2",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "105:10789:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ]
          },
          "id": 878,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 801,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 802,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:3",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 877,
              "linearizedBaseContracts": [
                877
              ],
              "name": "IERC20",
              "nameLocation": "214:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 803,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 811,
                  "name": "Transfer",
                  "nameLocation": "396:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 805,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "405:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "427:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 809,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "447:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:3"
                  },
                  "src": "390:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 812,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 820,
                  "name": "Approval",
                  "nameLocation": "627:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 814,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "636:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 816,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "659:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 815,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 818,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "684:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:3"
                  },
                  "src": "621:78:3"
                },
                {
                  "documentation": {
                    "id": 821,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:3",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 826,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 822,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:3"
                  },
                  "returnParameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 826,
                        "src": "821:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:3"
                  },
                  "scope": 877,
                  "src": "775:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 827,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:3",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 834,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 829,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "931:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 828,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:3"
                  },
                  "returnParameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "971:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:3"
                  },
                  "scope": 877,
                  "src": "912:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 835,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:3",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 844,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 837,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1222:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 836,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1234:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:3"
                  },
                  "returnParameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1267:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:3"
                  },
                  "scope": 877,
                  "src": "1204:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 845,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 854,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1567:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 849,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1582:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 848,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:3"
                  },
                  "returnParameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1622:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:3"
                  },
                  "scope": 877,
                  "src": "1548:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:3",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 864,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2326:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2343:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:3"
                  },
                  "returnParameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2376:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:3"
                  },
                  "scope": 877,
                  "src": "2309:73:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 865,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 876,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 867,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2712:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2726:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 868,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 871,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2738:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 870,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:3"
                  },
                  "returnParameters": {
                    "id": 875,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2771:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:3"
                  },
                  "scope": 877,
                  "src": "2690:87:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 878,
              "src": "204:2575:3",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "106:2674:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ],
            "IERC20Metadata": [
              903
            ]
          },
          "id": 904,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 879,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 881,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 904,
              "sourceUnit": 878,
              "src": "151:37:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 880,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "159:6:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 883,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "306:6:4"
                  },
                  "id": 884,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:4"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 882,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:4",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 903,
              "linearizedBaseContracts": [
                903,
                877
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 885,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 890,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 886,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:4"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "417:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:4"
                  },
                  "scope": 903,
                  "src": "378:54:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 891,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:4",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 896,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 892,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:4"
                  },
                  "returnParameters": {
                    "id": 895,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 896,
                        "src": "540:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:4"
                  },
                  "scope": 903,
                  "src": "499:56:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 897,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:4",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 902,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:4"
                  },
                  "returnParameters": {
                    "id": 901,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 900,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "674:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 899,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:4"
                  },
                  "scope": 903,
                  "src": "631:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 904,
              "src": "278:405:4",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "125:559:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              933
            ]
          },
          "id": 934,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 905,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 906,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 933,
              "linearizedBaseContracts": [
                933
              ],
              "name": "Context",
              "nameLocation": "642:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 914,
                    "nodeType": "Block",
                    "src": "718:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 911,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 910,
                        "id": 913,
                        "nodeType": "Return",
                        "src": "728:17:5"
                      }
                    ]
                  },
                  "id": 915,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 907,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:5"
                  },
                  "returnParameters": {
                    "id": 910,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 909,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "709:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:5"
                  },
                  "scope": 933,
                  "src": "656:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 923,
                    "nodeType": "Block",
                    "src": "825:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 920,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 919,
                        "id": 922,
                        "nodeType": "Return",
                        "src": "835:15:5"
                      }
                    ]
                  },
                  "id": 924,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 916,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:5"
                  },
                  "returnParameters": {
                    "id": 919,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 918,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "809:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:5"
                  },
                  "scope": 933,
                  "src": "758:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 931,
                    "nodeType": "Block",
                    "src": "935:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 928,
                        "id": 930,
                        "nodeType": "Return",
                        "src": "945:8:5"
                      }
                    ]
                  },
                  "id": 932,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 925,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:5"
                  },
                  "returnParameters": {
                    "id": 928,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 932,
                        "src": "926:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:5"
                  },
                  "scope": 933,
                  "src": "863:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 934,
              "src": "624:338:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:5"
        },
        "id": 5
      },
      "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
          "exportedSymbols": {
            "IUniswapV2Router01": [
              1241
            ]
          },
          "id": 1242,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 935,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IUniswapV2Router01",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1241,
              "linearizedBaseContracts": [
                1241
              ],
              "name": "IUniswapV2Router01",
              "nameLocation": "36:18:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c45a0155",
                  "id": 940,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nameLocation": "70:7:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 936,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "77:2:6"
                  },
                  "returnParameters": {
                    "id": 939,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 938,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 940,
                        "src": "103:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 937,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "103:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "102:9:6"
                  },
                  "scope": 1241,
                  "src": "61:51:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ad5c4648",
                  "id": 945,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "WETH",
                  "nameLocation": "126:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 941,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "130:2:6"
                  },
                  "returnParameters": {
                    "id": 944,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 943,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 945,
                        "src": "156:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 942,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "156:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "155:9:6"
                  },
                  "scope": 1241,
                  "src": "117:48:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e8e33700",
                  "id": 970,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addLiquidity",
                  "nameLocation": "180:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 962,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 947,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "210:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "202:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 946,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "202:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 949,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "234:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "226:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 948,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "226:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 951,
                        "mutability": "mutable",
                        "name": "amountADesired",
                        "nameLocation": "255:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "250:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 950,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "250:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 953,
                        "mutability": "mutable",
                        "name": "amountBDesired",
                        "nameLocation": "284:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "279:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 952,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "279:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 955,
                        "mutability": "mutable",
                        "name": "amountAMin",
                        "nameLocation": "313:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "308:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 954,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "308:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 957,
                        "mutability": "mutable",
                        "name": "amountBMin",
                        "nameLocation": "338:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "333:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 956,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "333:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 959,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "366:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "358:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 958,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "358:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 961,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "383:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "378:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 960,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "378:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "192:205:6"
                  },
                  "returnParameters": {
                    "id": 969,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 964,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nameLocation": "421:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "416:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 963,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 966,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nameLocation": "435:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "430:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 965,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "430:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 968,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "449:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "444:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 967,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "444:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:44:6"
                  },
                  "scope": 1241,
                  "src": "171:289:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f305d719",
                  "id": 991,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addLiquidityETH",
                  "nameLocation": "474:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 983,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 972,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "507:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "499:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 971,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "499:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 974,
                        "mutability": "mutable",
                        "name": "amountTokenDesired",
                        "nameLocation": "527:18:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "522:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 973,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "522:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 976,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nameLocation": "560:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "555:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 975,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "555:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 978,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nameLocation": "589:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "584:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 977,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "584:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 980,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "619:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "611:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 979,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "611:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 982,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "636:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "631:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 981,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "631:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "489:161:6"
                  },
                  "returnParameters": {
                    "id": 990,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 985,
                        "mutability": "mutable",
                        "name": "amountToken",
                        "nameLocation": "682:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "677:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 984,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "677:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 987,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nameLocation": "700:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "695:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 986,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "695:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 989,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "716:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "711:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 988,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "711:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "676:50:6"
                  },
                  "scope": 1241,
                  "src": "465:262:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "baa2abde",
                  "id": 1012,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidity",
                  "nameLocation": "741:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1006,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 993,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "774:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "766:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 992,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "766:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 995,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "798:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "790:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 997,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "819:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "814:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 996,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "814:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 999,
                        "mutability": "mutable",
                        "name": "amountAMin",
                        "nameLocation": "843:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "838:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 998,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "838:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1001,
                        "mutability": "mutable",
                        "name": "amountBMin",
                        "nameLocation": "868:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "863:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "863:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1003,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "896:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "888:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "888:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1005,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "913:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "908:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1004,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "908:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "756:171:6"
                  },
                  "returnParameters": {
                    "id": 1011,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1008,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nameLocation": "951:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "946:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1007,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "946:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1010,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nameLocation": "965:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "960:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1009,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "960:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "945:28:6"
                  },
                  "scope": 1241,
                  "src": "732:242:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "02751cec",
                  "id": 1031,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityETH",
                  "nameLocation": "988:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1025,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1014,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1024:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1031,
                        "src": "1016:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1013,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1016:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1016,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "1044:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1031,
                        "src": "1039:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1015,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1018,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nameLocation": "1068:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1031,
                        "src": "1063:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1017,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1063:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1020,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nameLocation": "1097:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1031,
                        "src": "1092:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1019,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1092:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1022,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1127:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1031,
                        "src": "1119:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1021,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1119:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1024,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1144:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1031,
                        "src": "1139:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1023,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1139:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1006:152:6"
                  },
                  "returnParameters": {
                    "id": 1030,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1027,
                        "mutability": "mutable",
                        "name": "amountToken",
                        "nameLocation": "1182:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1031,
                        "src": "1177:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1026,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1177:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1029,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nameLocation": "1200:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1031,
                        "src": "1195:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1028,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1195:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1176:34:6"
                  },
                  "scope": 1241,
                  "src": "979:232:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2195995c",
                  "id": 1060,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityWithPermit",
                  "nameLocation": "1225:25:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1054,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1033,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "1268:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1260:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1260:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1035,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "1292:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1284:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1284:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1037,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "1313:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1308:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1308:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1039,
                        "mutability": "mutable",
                        "name": "amountAMin",
                        "nameLocation": "1337:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1332:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1038,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1332:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1041,
                        "mutability": "mutable",
                        "name": "amountBMin",
                        "nameLocation": "1362:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1357:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1357:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1043,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1390:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1382:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1382:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1045,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1407:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1402:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1402:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1047,
                        "mutability": "mutable",
                        "name": "approveMax",
                        "nameLocation": "1430:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1425:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1425:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1049,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "1448:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1442:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1442:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1051,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1459:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1451:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1050,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1451:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1053,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1470:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1462:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1052,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1462:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1250:227:6"
                  },
                  "returnParameters": {
                    "id": 1059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1056,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nameLocation": "1501:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1496:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1055,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1496:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1058,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nameLocation": "1515:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1510:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1057,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1510:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1495:28:6"
                  },
                  "scope": 1241,
                  "src": "1216:308:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ded9382a",
                  "id": 1087,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityETHWithPermit",
                  "nameLocation": "1538:28:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1081,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1062,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1584:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1576:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1061,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1576:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1064,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "1604:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1599:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1599:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1066,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nameLocation": "1628:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1623:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1068,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nameLocation": "1657:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1652:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1652:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1070,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1687:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1679:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1679:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1072,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1704:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1699:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1071,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1699:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1074,
                        "mutability": "mutable",
                        "name": "approveMax",
                        "nameLocation": "1727:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1722:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1073,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1722:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1076,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "1745:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1739:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1075,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1739:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1078,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1756:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1748:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1748:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1080,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1767:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1759:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1759:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:208:6"
                  },
                  "returnParameters": {
                    "id": 1086,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "amountToken",
                        "nameLocation": "1798:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1793:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1793:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1085,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nameLocation": "1816:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1811:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1084,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1811:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1792:34:6"
                  },
                  "scope": 1241,
                  "src": "1529:298:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "38ed1739",
                  "id": 1104,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForTokens",
                  "nameLocation": "1841:24:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1099,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "1880:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "1875:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1875:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1091,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "1903:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "1898:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1090,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1898:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1094,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "1944:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "1925:23:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1092,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1925:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1093,
                          "nodeType": "ArrayTypeName",
                          "src": "1925:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1096,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1966:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "1958:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1095,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1958:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1098,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1983:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "1978:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1097,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1978:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1865:132:6"
                  },
                  "returnParameters": {
                    "id": 1103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1102,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2030:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "2016:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1100,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2016:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1101,
                          "nodeType": "ArrayTypeName",
                          "src": "2016:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2015:23:6"
                  },
                  "scope": 1241,
                  "src": "1832:207:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8803dbee",
                  "id": 1121,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensForExactTokens",
                  "nameLocation": "2053:24:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1116,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1106,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "2092:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1121,
                        "src": "2087:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2087:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1108,
                        "mutability": "mutable",
                        "name": "amountInMax",
                        "nameLocation": "2116:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1121,
                        "src": "2111:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1107,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2111:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1111,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "2156:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1121,
                        "src": "2137:23:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1109,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2137:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1110,
                          "nodeType": "ArrayTypeName",
                          "src": "2137:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1113,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2178:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1121,
                        "src": "2170:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2170:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1115,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2195:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1121,
                        "src": "2190:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1114,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2190:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2077:132:6"
                  },
                  "returnParameters": {
                    "id": 1120,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1119,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2242:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1121,
                        "src": "2228:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1117,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2228:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1118,
                          "nodeType": "ArrayTypeName",
                          "src": "2228:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2227:23:6"
                  },
                  "scope": 1241,
                  "src": "2044:207:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7ff36ab5",
                  "id": 1136,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactETHForTokens",
                  "nameLocation": "2265:21:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1123,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "2292:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "2287:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2287:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1126,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "2325:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "2306:23:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1124,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2306:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1125,
                          "nodeType": "ArrayTypeName",
                          "src": "2306:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1128,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2339:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "2331:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1127,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2331:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1130,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2348:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "2343:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1129,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2286:71:6"
                  },
                  "returnParameters": {
                    "id": 1135,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1134,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2422:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "2408:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1132,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2408:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1133,
                          "nodeType": "ArrayTypeName",
                          "src": "2408:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2407:23:6"
                  },
                  "scope": 1241,
                  "src": "2256:175:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4a25d94a",
                  "id": 1153,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensForExactETH",
                  "nameLocation": "2445:21:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1138,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "2472:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "2467:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1137,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2467:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1140,
                        "mutability": "mutable",
                        "name": "amountInMax",
                        "nameLocation": "2488:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "2483:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1139,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2483:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1143,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "2520:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "2501:23:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1141,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2501:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1142,
                          "nodeType": "ArrayTypeName",
                          "src": "2501:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1145,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2534:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "2526:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1144,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2526:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1147,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2543:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "2538:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1146,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2538:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2466:86:6"
                  },
                  "returnParameters": {
                    "id": 1152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1151,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2601:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "2587:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1149,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2587:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1150,
                          "nodeType": "ArrayTypeName",
                          "src": "2587:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2586:23:6"
                  },
                  "scope": 1241,
                  "src": "2436:174:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18cbafe5",
                  "id": 1170,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForETH",
                  "nameLocation": "2624:21:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1155,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "2651:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2646:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1154,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2646:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1157,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "2666:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2661:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1156,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2661:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1160,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "2699:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2680:23:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1158,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2680:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1159,
                          "nodeType": "ArrayTypeName",
                          "src": "2680:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1162,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2713:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2705:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2705:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1164,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2722:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2717:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1163,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2717:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2645:86:6"
                  },
                  "returnParameters": {
                    "id": 1169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1168,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2780:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2766:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1166,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2766:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1167,
                          "nodeType": "ArrayTypeName",
                          "src": "2766:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2765:23:6"
                  },
                  "scope": 1241,
                  "src": "2615:174:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fb3bdb41",
                  "id": 1185,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapETHForExactTokens",
                  "nameLocation": "2803:21:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1172,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "2830:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "2825:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1171,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2825:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1175,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "2860:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "2841:23:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1173,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2841:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1174,
                          "nodeType": "ArrayTypeName",
                          "src": "2841:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1177,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2874:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "2866:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2866:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1179,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2883:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "2878:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1178,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2878:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2824:68:6"
                  },
                  "returnParameters": {
                    "id": 1184,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1183,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2957:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "2943:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1181,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2943:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1182,
                          "nodeType": "ArrayTypeName",
                          "src": "2943:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2942:23:6"
                  },
                  "scope": 1241,
                  "src": "2794:172:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ad615dec",
                  "id": 1196,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "quote",
                  "nameLocation": "2981:5:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1192,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1187,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nameLocation": "2992:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "2987:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1186,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2987:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1189,
                        "mutability": "mutable",
                        "name": "reserveA",
                        "nameLocation": "3006:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "3001:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1188,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3001:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1191,
                        "mutability": "mutable",
                        "name": "reserveB",
                        "nameLocation": "3021:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "3016:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1190,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2986:44:6"
                  },
                  "returnParameters": {
                    "id": 1195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1194,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nameLocation": "3059:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "3054:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1193,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3054:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3053:14:6"
                  },
                  "scope": 1241,
                  "src": "2972:96:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "054d50d4",
                  "id": 1207,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountOut",
                  "nameLocation": "3082:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1198,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "3100:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "3095:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1197,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3095:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1200,
                        "mutability": "mutable",
                        "name": "reserveIn",
                        "nameLocation": "3115:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "3110:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1199,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3110:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1202,
                        "mutability": "mutable",
                        "name": "reserveOut",
                        "nameLocation": "3131:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "3126:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1201,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3126:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3094:48:6"
                  },
                  "returnParameters": {
                    "id": 1206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1205,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "3171:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "3166:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1204,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3166:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3165:16:6"
                  },
                  "scope": 1241,
                  "src": "3073:109:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "85f8c259",
                  "id": 1218,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountIn",
                  "nameLocation": "3196:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1209,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "3213:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "3208:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1208,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3208:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1211,
                        "mutability": "mutable",
                        "name": "reserveIn",
                        "nameLocation": "3229:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "3224:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3224:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "reserveOut",
                        "nameLocation": "3245:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "3240:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3240:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3207:49:6"
                  },
                  "returnParameters": {
                    "id": 1217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1216,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "3285:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "3280:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3280:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3279:15:6"
                  },
                  "scope": 1241,
                  "src": "3187:108:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d06ca61f",
                  "id": 1229,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsOut",
                  "nameLocation": "3309:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1220,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "3328:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "3323:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1219,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3323:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1223,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "3357:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "3338:23:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1221,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3338:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1222,
                          "nodeType": "ArrayTypeName",
                          "src": "3338:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3322:40:6"
                  },
                  "returnParameters": {
                    "id": 1228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1227,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "3400:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "3386:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1225,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3386:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1226,
                          "nodeType": "ArrayTypeName",
                          "src": "3386:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3385:23:6"
                  },
                  "scope": 1241,
                  "src": "3300:109:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1f00ca74",
                  "id": 1240,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsIn",
                  "nameLocation": "3423:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1231,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "3441:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1240,
                        "src": "3436:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1230,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3436:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1234,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "3471:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1240,
                        "src": "3452:23:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1232,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3452:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1233,
                          "nodeType": "ArrayTypeName",
                          "src": "3452:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3435:41:6"
                  },
                  "returnParameters": {
                    "id": 1239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1238,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "3514:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1240,
                        "src": "3500:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1236,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3500:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1237,
                          "nodeType": "ArrayTypeName",
                          "src": "3500:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3499:23:6"
                  },
                  "scope": 1241,
                  "src": "3414:109:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1242,
              "src": "26:3499:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "0:3526:6"
        },
        "id": 6
      },
      "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
          "exportedSymbols": {
            "IUniswapV2Router01": [
              1241
            ],
            "IUniswapV2Router02": [
              1329
            ]
          },
          "id": 1330,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1243,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:7"
            },
            {
              "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
              "file": "./IUniswapV2Router01.sol",
              "id": 1244,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1330,
              "sourceUnit": 1242,
              "src": "26:34:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1245,
                    "name": "IUniswapV2Router01",
                    "nameLocations": [
                      "94:18:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1241,
                    "src": "94:18:7"
                  },
                  "id": 1246,
                  "nodeType": "InheritanceSpecifier",
                  "src": "94:18:7"
                }
              ],
              "canonicalName": "IUniswapV2Router02",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1329,
              "linearizedBaseContracts": [
                1329,
                1241
              ],
              "name": "IUniswapV2Router02",
              "nameLocation": "72:18:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "af2979eb",
                  "id": 1263,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
                  "nameLocation": "128:47:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1248,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "193:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "185:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "185:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1250,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "213:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "208:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1249,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "208:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1252,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nameLocation": "237:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "232:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1251,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "232:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1254,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nameLocation": "266:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "261:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1253,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "261:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1256,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "296:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "288:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "288:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1258,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "313:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "308:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1257,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "308:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "175:152:7"
                  },
                  "returnParameters": {
                    "id": 1262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1261,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nameLocation": "351:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "346:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1260,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "346:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "345:16:7"
                  },
                  "scope": 1329,
                  "src": "119:243:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5b0d5984",
                  "id": 1288,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
                  "nameLocation": "376:57:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1265,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "451:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "443:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1264,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "443:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1267,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "471:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "466:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1266,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "466:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1269,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nameLocation": "495:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "490:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1268,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "490:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1271,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nameLocation": "524:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "519:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1270,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "519:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1273,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "554:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "546:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1272,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "546:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1275,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "571:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "566:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1274,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "566:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1277,
                        "mutability": "mutable",
                        "name": "approveMax",
                        "nameLocation": "594:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "589:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1276,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "589:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1279,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "612:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "606:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1278,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "606:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1281,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "623:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "615:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1280,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "615:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1283,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "634:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "626:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1282,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "626:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "433:208:7"
                  },
                  "returnParameters": {
                    "id": 1287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1286,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nameLocation": "665:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "660:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1285,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "659:16:7"
                  },
                  "scope": 1329,
                  "src": "367:309:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5c11d795",
                  "id": 1302,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
                  "nameLocation": "691:53:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1300,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1290,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "759:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1302,
                        "src": "754:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1289,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "754:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1292,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "782:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1302,
                        "src": "777:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1291,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1295,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "823:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1302,
                        "src": "804:23:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1293,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "804:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1294,
                          "nodeType": "ArrayTypeName",
                          "src": "804:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1297,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "845:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1302,
                        "src": "837:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1296,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "837:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1299,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "862:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1302,
                        "src": "857:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1298,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "857:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "744:132:7"
                  },
                  "returnParameters": {
                    "id": 1301,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "885:0:7"
                  },
                  "scope": 1329,
                  "src": "682:204:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b6f9de95",
                  "id": 1314,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
                  "nameLocation": "900:50:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1304,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "965:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1314,
                        "src": "960:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1303,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "960:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1307,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "1006:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1314,
                        "src": "987:23:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1305,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "987:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1306,
                          "nodeType": "ArrayTypeName",
                          "src": "987:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1309,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1028:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1314,
                        "src": "1020:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1308,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1311,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1045:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1314,
                        "src": "1040:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1310,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1040:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "950:109:7"
                  },
                  "returnParameters": {
                    "id": 1313,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1076:0:7"
                  },
                  "scope": 1329,
                  "src": "891:186:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "791ac947",
                  "id": 1328,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                  "nameLocation": "1091:50:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1316,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "1156:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1328,
                        "src": "1151:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1315,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1151:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1318,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "1179:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1328,
                        "src": "1174:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1317,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1174:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1321,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "1220:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1328,
                        "src": "1201:23:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1319,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1201:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1320,
                          "nodeType": "ArrayTypeName",
                          "src": "1201:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1323,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1242:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1328,
                        "src": "1234:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1322,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1325,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1259:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1328,
                        "src": "1254:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1324,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1254:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1141:132:7"
                  },
                  "returnParameters": {
                    "id": 1327,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1282:0:7"
                  },
                  "scope": 1329,
                  "src": "1082:201:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1330,
              "src": "62:1223:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "0:1286:7"
        },
        "id": 7
      },
      "contracts/Factory.sol": {
        "ast": {
          "absolutePath": "contracts/Factory.sol",
          "exportedSymbols": {
            "Enums": [
              2203
            ],
            "Factory": [
              1541
            ],
            "IFactory": [
              1945
            ],
            "Strategy": [
              1860
            ]
          },
          "id": 1542,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1331,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:8"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "./lib/Enums.sol",
              "id": 1333,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1542,
              "sourceUnit": 2204,
              "src": "68:38:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1332,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2203,
                    "src": "76:5:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/Strategy.sol",
              "file": "./Strategy.sol",
              "id": 1335,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1542,
              "sourceUnit": 1861,
              "src": "108:40:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1334,
                    "name": "Strategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1860,
                    "src": "116:8:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IFactory.sol",
              "file": "./interfaces/IFactory.sol",
              "id": 1337,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1542,
              "sourceUnit": 1946,
              "src": "150:51:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1336,
                    "name": "IFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1945,
                    "src": "158:8:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1338,
                    "name": "IFactory",
                    "nameLocations": [
                      "225:8:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1945,
                    "src": "225:8:8"
                  },
                  "id": 1339,
                  "nodeType": "InheritanceSpecifier",
                  "src": "225:8:8"
                }
              ],
              "canonicalName": "Factory",
              "contractDependencies": [
                1860
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1541,
              "linearizedBaseContracts": [
                1541,
                1945
              ],
              "name": "Factory",
              "nameLocation": "214:7:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "_revenue",
                  "nameLocation": "258:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1541,
                  "src": "241:25:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1343,
                  "mutability": "mutable",
                  "name": "_dataFeed",
                  "nameLocation": "290:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1541,
                  "src": "273:26:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1345,
                  "mutability": "mutable",
                  "name": "_swapRouter",
                  "nameLocation": "323:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1541,
                  "src": "306:28:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1348,
                  "mutability": "constant",
                  "name": "EDGER",
                  "nameLocation": "369:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1541,
                  "src": "343:85:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307833453634366530363246303565303165313836306541353361364443383165374539313632444536",
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "386:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x3E646e062F05e01e1860eA53a6DC81e7E9162DE6"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1369,
                    "nodeType": "Block",
                    "src": "507:106:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1357,
                            "name": "_revenue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "518:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1358,
                            "name": "revenue_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "529:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "518:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1360,
                        "nodeType": "ExpressionStatement",
                        "src": "518:19:8"
                      },
                      {
                        "expression": {
                          "id": 1363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1361,
                            "name": "_dataFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "548:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1362,
                            "name": "dataFeed_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1352,
                            "src": "560:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "548:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1364,
                        "nodeType": "ExpressionStatement",
                        "src": "548:21:8"
                      },
                      {
                        "expression": {
                          "id": 1367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1365,
                            "name": "_swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1345,
                            "src": "580:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1366,
                            "name": "swapRouter_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "594:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "580:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1368,
                        "nodeType": "ExpressionStatement",
                        "src": "580:25:8"
                      }
                    ]
                  },
                  "id": 1370,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1350,
                        "mutability": "mutable",
                        "name": "revenue_",
                        "nameLocation": "457:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1370,
                        "src": "449:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1349,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "449:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1352,
                        "mutability": "mutable",
                        "name": "dataFeed_",
                        "nameLocation": "475:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1370,
                        "src": "467:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "467:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1354,
                        "mutability": "mutable",
                        "name": "swapRouter_",
                        "nameLocation": "494:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1370,
                        "src": "486:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1353,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "486:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "448:58:8"
                  },
                  "returnParameters": {
                    "id": 1356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "507:0:8"
                  },
                  "scope": 1541,
                  "src": "437:176:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1917
                  ],
                  "body": {
                    "id": 1432,
                    "nodeType": "Block",
                    "src": "899:555:8",
                    "statements": [
                      {
                        "assignments": [
                          1394
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1394,
                            "mutability": "mutable",
                            "name": "strategy",
                            "nameLocation": "919:8:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1432,
                            "src": "910:17:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Strategy_$1860",
                              "typeString": "contract Strategy"
                            },
                            "typeName": {
                              "id": 1393,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1392,
                                "name": "Strategy",
                                "nameLocations": [
                                  "910:8:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1860,
                                "src": "910:8:8"
                              },
                              "referencedDeclaration": 1860,
                              "src": "910:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$1860",
                                "typeString": "contract Strategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1411,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1400,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "965:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Factory_$1541",
                                    "typeString": "contract Factory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Factory_$1541",
                                    "typeString": "contract Factory"
                                  }
                                ],
                                "id": 1399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "957:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1398,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "957:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "957:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1402,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "985:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "989:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "985:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1404,
                              "name": "visibility",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1379,
                              "src": "1010:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Visibility_$2197",
                                "typeString": "enum Enums.Visibility"
                              }
                            },
                            {
                              "id": 1405,
                              "name": "depositUsdMin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1381,
                              "src": "1035:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1406,
                              "name": "forkCost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "1063:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1407,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "1086:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 1408,
                              "name": "splitRatio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1376,
                              "src": "1107:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1409,
                              "name": "allowedActions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1387,
                              "src": "1132:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                                "typeString": "enum Enums.ActionCall[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_Visibility_$2197",
                                "typeString": "enum Enums.Visibility"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                                "typeString": "enum Enums.ActionCall[] memory"
                              }
                            ],
                            "id": 1397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "930:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_enum$_Visibility_$2197_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr_$returns$_t_contract$_Strategy_$1860_$",
                              "typeString": "function (address,address,enum Enums.Visibility,uint256,uint256,address[] memory,uint256[] memory,enum Enums.ActionCall[] memory) returns (contract Strategy)"
                            },
                            "typeName": {
                              "id": 1396,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1395,
                                "name": "Strategy",
                                "nameLocations": [
                                  "934:8:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1860,
                                "src": "934:8:8"
                              },
                              "referencedDeclaration": 1860,
                              "src": "934:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$1860",
                                "typeString": "contract Strategy"
                              }
                            }
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "930:227:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Strategy_$1860",
                            "typeString": "contract Strategy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "910:247:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1415,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1394,
                                  "src": "1213:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Strategy_$1860",
                                    "typeString": "contract Strategy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Strategy_$1860",
                                    "typeString": "contract Strategy"
                                  }
                                ],
                                "id": 1414,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1205:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1413,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1205:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1205:17:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1417,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1237:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1241:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1237:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1419,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "1262:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 1420,
                              "name": "splitRatio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1376,
                              "src": "1283:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1421,
                              "name": "visibility",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1379,
                              "src": "1308:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Visibility_$2197",
                                "typeString": "enum Enums.Visibility"
                              }
                            },
                            {
                              "id": 1422,
                              "name": "depositUsdMin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1381,
                              "src": "1333:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1423,
                              "name": "forkCost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "1361:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1424,
                              "name": "allowedActions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1387,
                              "src": "1384:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                                "typeString": "enum Enums.ActionCall[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_Visibility_$2197",
                                "typeString": "enum Enums.Visibility"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                                "typeString": "enum Enums.ActionCall[] memory"
                              }
                            ],
                            "id": 1412,
                            "name": "StrategyCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1887,
                            "src": "1175:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_enum$_Visibility_$2197_$_t_uint256_$_t_uint256_$_t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address[] memory,uint256[] memory,enum Enums.Visibility,uint256,uint256,enum Enums.ActionCall[] memory)"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1175:234:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1426,
                        "nodeType": "EmitStatement",
                        "src": "1170:239:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1429,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1394,
                              "src": "1437:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$1860",
                                "typeString": "contract Strategy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Strategy_$1860",
                                "typeString": "contract Strategy"
                              }
                            ],
                            "id": 1428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1429:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1427,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1429:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1429:17:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1391,
                        "id": 1431,
                        "nodeType": "Return",
                        "src": "1422:24:8"
                      }
                    ]
                  },
                  "functionSelector": "8403ef08",
                  "id": 1433,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createStrategy",
                  "nameLocation": "630:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1388,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1373,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "672:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "655:23:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1371,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "655:7:8",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1372,
                          "nodeType": "ArrayTypeName",
                          "src": "655:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1376,
                        "mutability": "mutable",
                        "name": "splitRatio",
                        "nameLocation": "706:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "689:27:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1374,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "689:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1375,
                          "nodeType": "ArrayTypeName",
                          "src": "689:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1379,
                        "mutability": "mutable",
                        "name": "visibility",
                        "nameLocation": "744:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "727:27:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Visibility_$2197",
                          "typeString": "enum Enums.Visibility"
                        },
                        "typeName": {
                          "id": 1378,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1377,
                            "name": "Enums.Visibility",
                            "nameLocations": [
                              "727:5:8",
                              "733:10:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2197,
                            "src": "727:16:8"
                          },
                          "referencedDeclaration": 2197,
                          "src": "727:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Visibility_$2197",
                            "typeString": "enum Enums.Visibility"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1381,
                        "mutability": "mutable",
                        "name": "depositUsdMin",
                        "nameLocation": "773:13:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "765:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1380,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "765:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1383,
                        "mutability": "mutable",
                        "name": "forkCost",
                        "nameLocation": "805:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "797:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "797:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1387,
                        "mutability": "mutable",
                        "name": "allowedActions",
                        "nameLocation": "850:14:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "824:40:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1385,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1384,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "824:5:8",
                                "830:10:8"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2202,
                              "src": "824:16:8"
                            },
                            "referencedDeclaration": 2202,
                            "src": "824:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 1386,
                          "nodeType": "ArrayTypeName",
                          "src": "824:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "644:227:8"
                  },
                  "returnParameters": {
                    "id": 1391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1390,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "890:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1389,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:9:8"
                  },
                  "scope": 1541,
                  "src": "621:833:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1924
                  ],
                  "body": {
                    "id": 1503,
                    "nodeType": "Block",
                    "src": "1537:527:8",
                    "statements": [
                      {
                        "assignments": [
                          1442
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1442,
                            "mutability": "mutable",
                            "name": "base",
                            "nameLocation": "1557:4:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1503,
                            "src": "1548:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Strategy_$1860",
                              "typeString": "contract Strategy"
                            },
                            "typeName": {
                              "id": 1441,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1440,
                                "name": "Strategy",
                                "nameLocations": [
                                  "1548:8:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1860,
                                "src": "1548:8:8"
                              },
                              "referencedDeclaration": 1860,
                              "src": "1548:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$1860",
                                "typeString": "contract Strategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1449,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1446,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1435,
                                  "src": "1581:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1573:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1444,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1573:8:8",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1573:17:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1443,
                            "name": "Strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1860,
                            "src": "1564:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strategy_$1860_$",
                              "typeString": "type(contract Strategy)"
                            }
                          },
                          "id": 1448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1564:27:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Strategy_$1860",
                            "typeString": "contract Strategy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1548:43:8"
                      },
                      {
                        "assignments": [
                          1452
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1452,
                            "mutability": "mutable",
                            "name": "fork",
                            "nameLocation": "1613:4:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1503,
                            "src": "1604:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Strategy_$1860",
                              "typeString": "contract Strategy"
                            },
                            "typeName": {
                              "id": 1451,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1450,
                                "name": "Strategy",
                                "nameLocations": [
                                  "1604:8:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1860,
                                "src": "1604:8:8"
                              },
                              "referencedDeclaration": 1860,
                              "src": "1604:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$1860",
                                "typeString": "contract Strategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1479,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1458,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1655:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Factory_$1541",
                                    "typeString": "contract Factory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Factory_$1541",
                                    "typeString": "contract Factory"
                                  }
                                ],
                                "id": 1457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1647:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1456,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1647:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1647:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1460,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1675:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1679:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1675:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1462,
                                  "name": "Enums",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2203,
                                  "src": "1700:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Enums_$2203_$",
                                    "typeString": "type(library Enums)"
                                  }
                                },
                                "id": 1463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1706:10:8",
                                "memberName": "Visibility",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2197,
                                "src": "1700:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Visibility_$2197_$",
                                  "typeString": "type(enum Enums.Visibility)"
                                }
                              },
                              "id": 1464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1717:7:8",
                              "memberName": "Private",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2196,
                              "src": "1700:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Visibility_$2197",
                                "typeString": "enum Enums.Visibility"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1465,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1442,
                                  "src": "1739:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Strategy_$1860",
                                    "typeString": "contract Strategy"
                                  }
                                },
                                "id": 1466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1744:16:8",
                                "memberName": "getDepositUsdMin",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2943,
                                "src": "1739:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 1467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1739:23:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1777:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1469,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1442,
                                  "src": "1805:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Strategy_$1860",
                                    "typeString": "contract Strategy"
                                  }
                                },
                                "id": 1470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1810:9:8",
                                "memberName": "getTokens",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2879,
                                "src": "1805:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                  "typeString": "function () view external returns (address[] memory)"
                                }
                              },
                              "id": 1471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1805:16:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1472,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1442,
                                  "src": "1836:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Strategy_$1860",
                                    "typeString": "contract Strategy"
                                  }
                                },
                                "id": 1473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1841:13:8",
                                "memberName": "getSplitRatio",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2934,
                                "src": "1836:18:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                  "typeString": "function () view external returns (uint256[] memory)"
                                }
                              },
                              "id": 1474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1836:20:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1475,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1442,
                                  "src": "1871:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Strategy_$1860",
                                    "typeString": "contract Strategy"
                                  }
                                },
                                "id": 1476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1876:17:8",
                                "memberName": "getAllowedActions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2954,
                                "src": "1871:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr_$",
                                  "typeString": "function () view external returns (enum Enums.ActionCall[] memory)"
                                }
                              },
                              "id": 1477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1871:24:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                                "typeString": "enum Enums.ActionCall[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_Visibility_$2197",
                                "typeString": "enum Enums.Visibility"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                                "typeString": "enum Enums.ActionCall[] memory"
                              }
                            ],
                            "id": 1455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1620:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_enum$_Visibility_$2197_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr_$returns$_t_contract$_Strategy_$1860_$",
                              "typeString": "function (address,address,enum Enums.Visibility,uint256,uint256,address[] memory,uint256[] memory,enum Enums.ActionCall[] memory) returns (contract Strategy)"
                            },
                            "typeName": {
                              "id": 1454,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1453,
                                "name": "Strategy",
                                "nameLocations": [
                                  "1624:8:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1860,
                                "src": "1624:8:8"
                              },
                              "referencedDeclaration": 1860,
                              "src": "1624:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$1860",
                                "typeString": "contract Strategy"
                              }
                            }
                          },
                          "id": 1478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1620:286:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Strategy_$1860",
                            "typeString": "contract Strategy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1604:302:8"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1480,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1442,
                                "src": "1919:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Strategy_$1860",
                                  "typeString": "contract Strategy"
                                }
                              },
                              "id": 1482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1924:6:8",
                              "memberName": "onFork",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1648,
                              "src": "1919:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 1485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 1483,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1938:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1942:5:8",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1938:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1919:29:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1919:31:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1487,
                        "nodeType": "ExpressionStatement",
                        "src": "1919:31:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1489,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1435,
                              "src": "1983:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1492,
                                  "name": "fork",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1452,
                                  "src": "2001:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Strategy_$1860",
                                    "typeString": "contract Strategy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Strategy_$1860",
                                    "typeString": "contract Strategy"
                                  }
                                ],
                                "id": 1491,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1993:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1490,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1993:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1993:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1494,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2008:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2012:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2008:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1488,
                            "name": "StrategyForked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1895,
                            "src": "1968:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1968:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1497,
                        "nodeType": "EmitStatement",
                        "src": "1963:56:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1500,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1435,
                              "src": "2047:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2039:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1498,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2039:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2039:17:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1439,
                        "id": 1502,
                        "nodeType": "Return",
                        "src": "2032:24:8"
                      }
                    ]
                  },
                  "functionSelector": "64f079e1",
                  "id": 1504,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forkStrategy",
                  "nameLocation": "1471:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1436,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1435,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nameLocation": "1492:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1504,
                        "src": "1484:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1434,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1484:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1483:18:8"
                  },
                  "returnParameters": {
                    "id": 1439,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1438,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1504,
                        "src": "1528:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1437,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1527:9:8"
                  },
                  "scope": 1541,
                  "src": "1462:602:8",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1929
                  ],
                  "body": {
                    "id": 1512,
                    "nodeType": "Block",
                    "src": "2142:34:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1510,
                          "name": "_revenue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1341,
                          "src": "2160:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1509,
                        "id": 1511,
                        "nodeType": "Return",
                        "src": "2153:15:8"
                      }
                    ]
                  },
                  "functionSelector": "78d1c86d",
                  "id": 1513,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRevenueAddress",
                  "nameLocation": "2081:17:8",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1506,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2115:8:8"
                  },
                  "parameters": {
                    "id": 1505,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2098:2:8"
                  },
                  "returnParameters": {
                    "id": 1509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1508,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1513,
                        "src": "2133:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1507,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2133:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2132:9:8"
                  },
                  "scope": 1541,
                  "src": "2072:104:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1934
                  ],
                  "body": {
                    "id": 1521,
                    "nodeType": "Block",
                    "src": "2257:37:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1519,
                          "name": "_swapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1345,
                          "src": "2275:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1518,
                        "id": 1520,
                        "nodeType": "Return",
                        "src": "2268:18:8"
                      }
                    ]
                  },
                  "functionSelector": "f5c8ba93",
                  "id": 1522,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSwapRouterAddress",
                  "nameLocation": "2193:20:8",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1515,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2230:8:8"
                  },
                  "parameters": {
                    "id": 1514,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2213:2:8"
                  },
                  "returnParameters": {
                    "id": 1518,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1517,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1522,
                        "src": "2248:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1516,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2248:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2247:9:8"
                  },
                  "scope": 1541,
                  "src": "2184:110:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1939
                  ],
                  "body": {
                    "id": 1530,
                    "nodeType": "Block",
                    "src": "2376:35:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1528,
                          "name": "_dataFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "2394:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1527,
                        "id": 1529,
                        "nodeType": "Return",
                        "src": "2387:16:8"
                      }
                    ]
                  },
                  "functionSelector": "8b5350cc",
                  "id": 1531,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPriceOracleAddress",
                  "nameLocation": "2311:21:8",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1524,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2349:8:8"
                  },
                  "parameters": {
                    "id": 1523,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2332:2:8"
                  },
                  "returnParameters": {
                    "id": 1527,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1526,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1531,
                        "src": "2367:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1525,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2367:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2366:9:8"
                  },
                  "scope": 1541,
                  "src": "2302:109:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1944
                  ],
                  "body": {
                    "id": 1539,
                    "nodeType": "Block",
                    "src": "2477:31:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1537,
                          "name": "EDGER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1348,
                          "src": "2495:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1536,
                        "id": 1538,
                        "nodeType": "Return",
                        "src": "2488:12:8"
                      }
                    ]
                  },
                  "functionSelector": "f94f657c",
                  "id": 1540,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "edger",
                  "nameLocation": "2428:5:8",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1533,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2450:8:8"
                  },
                  "parameters": {
                    "id": 1532,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2433:2:8"
                  },
                  "returnParameters": {
                    "id": 1536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1535,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1540,
                        "src": "2468:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1534,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2468:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2467:9:8"
                  },
                  "scope": 1541,
                  "src": "2419:89:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1542,
              "src": "205:2306:8",
              "usedErrors": [],
              "usedEvents": [
                1887,
                1895
              ]
            }
          ],
          "src": "40:2473:8"
        },
        "id": 8
      },
      "contracts/Strategy.sol": {
        "ast": {
          "absolutePath": "contracts/Strategy.sol",
          "exportedSymbols": {
            "Enums": [
              2203
            ],
            "IFactory": [
              1945
            ],
            "IRevenue": [
              2148
            ],
            "IStrategy": [
              2184
            ],
            "MultiTokenPool": [
              3082
            ],
            "Ownable": [
              147
            ],
            "Params": [
              2214
            ],
            "Strategy": [
              1860
            ],
            "Types": [
              2222
            ]
          },
          "id": 1861,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1543,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:9"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "./lib/Enums.sol",
              "id": 1545,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1861,
              "sourceUnit": 2204,
              "src": "65:38:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1544,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2203,
                    "src": "73:5:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/Types.sol",
              "file": "./lib/Types.sol",
              "id": 1547,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1861,
              "sourceUnit": 2223,
              "src": "104:38:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1546,
                    "name": "Types",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2222,
                    "src": "112:5:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/Params.sol",
              "file": "./lib/Params.sol",
              "id": 1549,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1861,
              "sourceUnit": 2215,
              "src": "143:40:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1548,
                    "name": "Params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2214,
                    "src": "151:6:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IStrategy.sol",
              "file": "./interfaces/IStrategy.sol",
              "id": 1551,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1861,
              "sourceUnit": 2185,
              "src": "184:53:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1550,
                    "name": "IStrategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2184,
                    "src": "192:9:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/pool/MultiTokenPool.sol",
              "file": "./pool/MultiTokenPool.sol",
              "id": 1553,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1861,
              "sourceUnit": 3083,
              "src": "238:57:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1552,
                    "name": "MultiTokenPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3082,
                    "src": "246:14:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1555,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1861,
              "sourceUnit": 148,
              "src": "296:67:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1554,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "304:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IFactory.sol",
              "file": "./interfaces/IFactory.sol",
              "id": 1557,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1861,
              "sourceUnit": 1946,
              "src": "364:51:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1556,
                    "name": "IFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1945,
                    "src": "372:8:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IRevenue.sol",
              "file": "./interfaces/IRevenue.sol",
              "id": 1559,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1861,
              "sourceUnit": 2149,
              "src": "416:51:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1558,
                    "name": "IRevenue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2148,
                    "src": "424:8:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1560,
                    "name": "MultiTokenPool",
                    "nameLocations": [
                      "490:14:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3082,
                    "src": "490:14:9"
                  },
                  "id": 1561,
                  "nodeType": "InheritanceSpecifier",
                  "src": "490:14:9"
                },
                {
                  "baseName": {
                    "id": 1562,
                    "name": "IStrategy",
                    "nameLocations": [
                      "506:9:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2184,
                    "src": "506:9:9"
                  },
                  "id": 1563,
                  "nodeType": "InheritanceSpecifier",
                  "src": "506:9:9"
                }
              ],
              "canonicalName": "Strategy",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1860,
              "linearizedBaseContracts": [
                1860,
                2184,
                3082,
                147,
                2051,
                2066,
                3573,
                799,
                189,
                903,
                877,
                933
              ],
              "name": "Strategy",
              "nameLocation": "478:8:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "_forkCost",
                  "nameLocation": "539:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1860,
                  "src": "522:26:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1568,
                  "mutability": "mutable",
                  "name": "_visibility",
                  "nameLocation": "580:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1860,
                  "src": "554:37:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Visibility_$2197",
                    "typeString": "enum Enums.Visibility"
                  },
                  "typeName": {
                    "id": 1567,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1566,
                      "name": "Enums.Visibility",
                      "nameLocations": [
                        "554:5:9",
                        "560:10:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2197,
                      "src": "554:16:9"
                    },
                    "referencedDeclaration": 2197,
                    "src": "554:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Visibility_$2197",
                      "typeString": "enum Enums.Visibility"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1608,
                    "nodeType": "Block",
                    "src": "1100:73:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1600,
                            "name": "_visibility",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1568,
                            "src": "1110:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Visibility_$2197",
                              "typeString": "enum Enums.Visibility"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1601,
                            "name": "visibility_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1575,
                            "src": "1124:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Visibility_$2197",
                              "typeString": "enum Enums.Visibility"
                            }
                          },
                          "src": "1110:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Visibility_$2197",
                            "typeString": "enum Enums.Visibility"
                          }
                        },
                        "id": 1603,
                        "nodeType": "ExpressionStatement",
                        "src": "1110:25:9"
                      },
                      {
                        "expression": {
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1604,
                            "name": "_forkCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1565,
                            "src": "1145:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1605,
                            "name": "forkCost_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1579,
                            "src": "1157:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1145:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1607,
                        "nodeType": "ExpressionStatement",
                        "src": "1145:21:9"
                      }
                    ]
                  },
                  "id": 1609,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1592,
                          "name": "factory_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1570,
                          "src": "938:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1593,
                          "name": "creator_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1572,
                          "src": "960:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1594,
                          "name": "depositUsdMin_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1577,
                          "src": "982:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1595,
                          "name": "initialTokens_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1582,
                          "src": "1010:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1596,
                          "name": "initialSplitRatio_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1585,
                          "src": "1038:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1597,
                          "name": "allowedActions_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1589,
                          "src": "1070:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                            "typeString": "enum Enums.ActionCall[] memory"
                          }
                        }
                      ],
                      "id": 1598,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1591,
                        "name": "MultiTokenPool",
                        "nameLocations": [
                          "910:14:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3082,
                        "src": "910:14:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "910:185:9"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1570,
                        "mutability": "mutable",
                        "name": "factory_",
                        "nameLocation": "627:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1609,
                        "src": "619:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1569,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "619:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1572,
                        "mutability": "mutable",
                        "name": "creator_",
                        "nameLocation": "653:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1609,
                        "src": "645:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "645:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1575,
                        "mutability": "mutable",
                        "name": "visibility_",
                        "nameLocation": "688:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1609,
                        "src": "671:28:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Visibility_$2197",
                          "typeString": "enum Enums.Visibility"
                        },
                        "typeName": {
                          "id": 1574,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1573,
                            "name": "Enums.Visibility",
                            "nameLocations": [
                              "671:5:9",
                              "677:10:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2197,
                            "src": "671:16:9"
                          },
                          "referencedDeclaration": 2197,
                          "src": "671:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Visibility_$2197",
                            "typeString": "enum Enums.Visibility"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1577,
                        "mutability": "mutable",
                        "name": "depositUsdMin_",
                        "nameLocation": "717:14:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1609,
                        "src": "709:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1576,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1579,
                        "mutability": "mutable",
                        "name": "forkCost_",
                        "nameLocation": "749:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1609,
                        "src": "741:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1578,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "741:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1582,
                        "mutability": "mutable",
                        "name": "initialTokens_",
                        "nameLocation": "785:14:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1609,
                        "src": "768:31:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1580,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "768:7:9",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1581,
                          "nodeType": "ArrayTypeName",
                          "src": "768:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1585,
                        "mutability": "mutable",
                        "name": "initialSplitRatio_",
                        "nameLocation": "826:18:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1609,
                        "src": "809:35:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1583,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "809:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1584,
                          "nodeType": "ArrayTypeName",
                          "src": "809:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1589,
                        "mutability": "mutable",
                        "name": "allowedActions_",
                        "nameLocation": "880:15:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1609,
                        "src": "854:41:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1587,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1586,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "854:5:9",
                                "860:10:9"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2202,
                              "src": "854:16:9"
                            },
                            "referencedDeclaration": 2202,
                            "src": "854:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 1588,
                          "nodeType": "ArrayTypeName",
                          "src": "854:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "609:292:9"
                  },
                  "returnParameters": {
                    "id": 1599,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1100:0:9"
                  },
                  "scope": 1860,
                  "src": "598:575:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2162
                  ],
                  "body": {
                    "id": 1647,
                    "nodeType": "Block",
                    "src": "1234:258:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Visibility_$2197",
                                "typeString": "enum Enums.Visibility"
                              },
                              "id": 1620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1616,
                                "name": "_visibility",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1568,
                                "src": "1252:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Visibility_$2197",
                                  "typeString": "enum Enums.Visibility"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 1617,
                                    "name": "Enums",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2203,
                                    "src": "1267:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Enums_$2203_$",
                                      "typeString": "type(library Enums)"
                                    }
                                  },
                                  "id": 1618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1273:10:9",
                                  "memberName": "Visibility",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2197,
                                  "src": "1267:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Visibility_$2197_$",
                                    "typeString": "type(enum Enums.Visibility)"
                                  }
                                },
                                "id": 1619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1284:6:9",
                                "memberName": "Public",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2195,
                                "src": "1267:23:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Visibility_$2197",
                                  "typeString": "enum Enums.Visibility"
                                }
                              },
                              "src": "1252:38:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "446973616c6c6f776564",
                              "id": 1621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1292:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2d6423744790b6029c9d5ea599c0fe5e8c874ff122fdf0e58daf8ea12b798429",
                                "typeString": "literal_string \"Disallowed\""
                              },
                              "value": "Disallowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2d6423744790b6029c9d5ea599c0fe5e8c874ff122fdf0e58daf8ea12b798429",
                                "typeString": "literal_string \"Disallowed\""
                              }
                            ],
                            "id": 1615,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1244:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1244:61:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1623,
                        "nodeType": "ExpressionStatement",
                        "src": "1244:61:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1625,
                                "name": "_forkCost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1565,
                                "src": "1323:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1626,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1336:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1340:5:9",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1336:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1323:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420666f726b20636f7374",
                              "id": 1629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1347:24:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_de3313357729295e3f34a33febe827e07a3e8f74ab904af250524aefd1220f55",
                                "typeString": "literal_string \"Insufficient fork cost\""
                              },
                              "value": "Insufficient fork cost"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_de3313357729295e3f34a33febe827e07a3e8f74ab904af250524aefd1220f55",
                                "typeString": "literal_string \"Insufficient fork cost\""
                              }
                            ],
                            "id": 1624,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1315:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1315:57:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1631,
                        "nodeType": "ExpressionStatement",
                        "src": "1315:57:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1643,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "1468:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1468:7:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1634,
                                            "name": "_factory",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3097,
                                            "src": "1401:8:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1633,
                                          "name": "IFactory",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1945,
                                          "src": "1392:8:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IFactory_$1945_$",
                                            "typeString": "type(contract IFactory)"
                                          }
                                        },
                                        "id": 1635,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1392:18:9",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IFactory_$1945",
                                          "typeString": "contract IFactory"
                                        }
                                      },
                                      "id": 1636,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1411:17:9",
                                      "memberName": "getRevenueAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1929,
                                      "src": "1392:36:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 1637,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1392:38:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1632,
                                  "name": "IRevenue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2148,
                                  "src": "1383:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IRevenue_$2148_$",
                                    "typeString": "type(contract IRevenue)"
                                  }
                                },
                                "id": 1638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1383:48:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRevenue_$2148",
                                  "typeString": "contract IRevenue"
                                }
                              },
                              "id": 1639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1432:4:9",
                              "memberName": "fund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2134,
                              "src": "1383:53:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                                "typeString": "function (address) payable external"
                              }
                            },
                            "id": 1642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 1640,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1444:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1448:5:9",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1444:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1383:71:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                              "typeString": "function (address) payable external"
                            }
                          },
                          "id": 1645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1383:102:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1646,
                        "nodeType": "ExpressionStatement",
                        "src": "1383:102:9"
                      }
                    ]
                  },
                  "functionSelector": "8769b449",
                  "id": 1648,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1613,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1612,
                        "name": "onlyFactor",
                        "nameLocations": [
                          "1223:10:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1843,
                        "src": "1223:10:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1223:10:9"
                    }
                  ],
                  "name": "onFork",
                  "nameLocation": "1188:6:9",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1611,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1214:8:9"
                  },
                  "parameters": {
                    "id": 1610,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1194:2:9"
                  },
                  "returnParameters": {
                    "id": 1614,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1234:0:9"
                  },
                  "scope": 1860,
                  "src": "1179:313:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2168
                  ],
                  "body": {
                    "id": 1764,
                    "nodeType": "Block",
                    "src": "1593:853:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1659,
                                    "name": "call",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1651,
                                    "src": "1628:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExecuteCall_$2213_memory_ptr",
                                      "typeString": "struct Params.ExecuteCall memory"
                                    }
                                  },
                                  "id": 1660,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1633:6:9",
                                  "memberName": "action",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2210,
                                  "src": "1628:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ActionCall_$2202",
                                    "typeString": "enum Enums.ActionCall"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_ActionCall_$2202",
                                    "typeString": "enum Enums.ActionCall"
                                  }
                                ],
                                "id": 1658,
                                "name": "_isAllowedAction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1803,
                                "src": "1611:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_enum$_ActionCall_$2202_$returns$_t_bool_$",
                                  "typeString": "function (enum Enums.ActionCall) view returns (bool)"
                                }
                              },
                              "id": 1661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1611:29:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416374696f6e206e6f7420616c6c6f776564",
                              "id": 1662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1642:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_32c7620b5360e60589e0401697015dce3c79159a7bdfc332f8060d2e478c957b",
                                "typeString": "literal_string \"Action not allowed\""
                              },
                              "value": "Action not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_32c7620b5360e60589e0401697015dce3c79159a7bdfc332f8060d2e478c957b",
                                "typeString": "literal_string \"Action not allowed\""
                              }
                            ],
                            "id": 1657,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1603:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1603:60:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1664,
                        "nodeType": "ExpressionStatement",
                        "src": "1603:60:9"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ActionCall_$2202",
                            "typeString": "enum Enums.ActionCall"
                          },
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1665,
                              "name": "call",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1651,
                              "src": "1678:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExecuteCall_$2213_memory_ptr",
                                "typeString": "struct Params.ExecuteCall memory"
                              }
                            },
                            "id": 1666,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1683:6:9",
                            "memberName": "action",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2210,
                            "src": "1678:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1667,
                                "name": "Enums",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2203,
                                "src": "1693:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Enums_$2203_$",
                                  "typeString": "type(library Enums)"
                                }
                              },
                              "id": 1668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1699:10:9",
                              "memberName": "ActionCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2202,
                              "src": "1693:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ActionCall_$2202_$",
                                "typeString": "type(enum Enums.ActionCall)"
                              }
                            },
                            "id": 1669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1710:16:9",
                            "memberName": "AdjustSplitRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2198,
                            "src": "1693:33:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "src": "1678:48:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1693,
                        "nodeType": "IfStatement",
                        "src": "1674:183:9",
                        "trueBody": {
                          "id": 1692,
                          "nodeType": "Block",
                          "src": "1728:129:9",
                          "statements": [
                            {
                              "assignments": [
                                1675
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1675,
                                  "mutability": "mutable",
                                  "name": "ratio",
                                  "nameLocation": "1759:5:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1692,
                                  "src": "1742:22:9",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 1673,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1742:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1674,
                                    "nodeType": "ArrayTypeName",
                                    "src": "1742:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                      "typeString": "uint256[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1685,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1678,
                                      "name": "call",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1651,
                                      "src": "1778:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ExecuteCall_$2213_memory_ptr",
                                        "typeString": "struct Params.ExecuteCall memory"
                                      }
                                    },
                                    "id": 1679,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1783:4:9",
                                    "memberName": "data",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2212,
                                    "src": "1778:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "baseExpression": {
                                          "id": 1681,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1790:7:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 1680,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1790:7:9",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1682,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1790:9:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                          "typeString": "type(uint256[] memory)"
                                        }
                                      }
                                    ],
                                    "id": 1683,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1789:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                      "typeString": "type(uint256[] memory)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                      "typeString": "type(uint256[] memory)"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1676,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "1767:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1677,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "1771:6:9",
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "1767:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1767:34:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1742:59:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1689,
                                    "name": "ratio",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1675,
                                    "src": "1840:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1686,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -25,
                                    "src": "1816:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_super$_Strategy_$1860_$",
                                      "typeString": "type(contract super Strategy)"
                                    }
                                  },
                                  "id": 1688,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1822:17:9",
                                  "memberName": "_adjustSplitRatio",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3545,
                                  "src": "1816:23:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256[] memory)"
                                  }
                                },
                                "id": 1690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1816:30:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1691,
                              "nodeType": "ExpressionStatement",
                              "src": "1816:30:9"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ActionCall_$2202",
                            "typeString": "enum Enums.ActionCall"
                          },
                          "id": 1699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1694,
                              "name": "call",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1651,
                              "src": "1871:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExecuteCall_$2213_memory_ptr",
                                "typeString": "struct Params.ExecuteCall memory"
                              }
                            },
                            "id": 1695,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1876:6:9",
                            "memberName": "action",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2210,
                            "src": "1871:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1696,
                                "name": "Enums",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2203,
                                "src": "1886:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Enums_$2203_$",
                                  "typeString": "type(library Enums)"
                                }
                              },
                              "id": 1697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1892:10:9",
                              "memberName": "ActionCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2202,
                              "src": "1886:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ActionCall_$2202_$",
                                "typeString": "type(enum Enums.ActionCall)"
                              }
                            },
                            "id": 1698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1903:12:9",
                            "memberName": "SwapToSingle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2199,
                            "src": "1886:29:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "src": "1871:44:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1727,
                        "nodeType": "IfStatement",
                        "src": "1867:266:9",
                        "trueBody": {
                          "id": 1726,
                          "nodeType": "Block",
                          "src": "1917:216:9",
                          "statements": [
                            {
                              "assignments": [
                                1704,
                                1706
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1704,
                                  "mutability": "mutable",
                                  "name": "tokensIn",
                                  "nameLocation": "1949:8:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1726,
                                  "src": "1932:25:9",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 1702,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1932:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1703,
                                    "nodeType": "ArrayTypeName",
                                    "src": "1932:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1706,
                                  "mutability": "mutable",
                                  "name": "tokenOut",
                                  "nameLocation": "1967:8:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1726,
                                  "src": "1959:16:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1705,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1959:7:9",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1718,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1709,
                                      "name": "call",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1651,
                                      "src": "2007:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ExecuteCall_$2213_memory_ptr",
                                        "typeString": "struct Params.ExecuteCall memory"
                                      }
                                    },
                                    "id": 1710,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2012:4:9",
                                    "memberName": "data",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2212,
                                    "src": "2007:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "baseExpression": {
                                          "id": 1712,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2035:7:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1711,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2035:7:9",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1713,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2035:9:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                                          "typeString": "type(address[] memory)"
                                        }
                                      },
                                      {
                                        "id": 1715,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2046:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1714,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2046:7:9",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "id": 1716,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "2034:20:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_address_$_$",
                                      "typeString": "tuple(type(address[] memory),type(address))"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_address_$_$",
                                      "typeString": "tuple(type(address[] memory),type(address))"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1707,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "1979:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "1983:6:9",
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "1979:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1979:89:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_address_payable_$",
                                  "typeString": "tuple(address[] memory,address payable)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1931:137:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1722,
                                    "name": "tokensIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1704,
                                    "src": "2103:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  {
                                    "id": 1723,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1706,
                                    "src": "2113:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1719,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -25,
                                    "src": "2083:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_super$_Strategy_$1860_$",
                                      "typeString": "type(contract super Strategy)"
                                    }
                                  },
                                  "id": 1721,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2089:13:9",
                                  "memberName": "_swapToSingle",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3294,
                                  "src": "2083:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$__$",
                                    "typeString": "function (address[] memory,address)"
                                  }
                                },
                                "id": 1724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2083:39:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1725,
                              "nodeType": "ExpressionStatement",
                              "src": "2083:39:9"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ActionCall_$2202",
                            "typeString": "enum Enums.ActionCall"
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1728,
                              "name": "call",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1651,
                              "src": "2147:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExecuteCall_$2213_memory_ptr",
                                "typeString": "struct Params.ExecuteCall memory"
                              }
                            },
                            "id": 1729,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2152:6:9",
                            "memberName": "action",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2210,
                            "src": "2147:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1730,
                                "name": "Enums",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2203,
                                "src": "2162:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Enums_$2203_$",
                                  "typeString": "type(library Enums)"
                                }
                              },
                              "id": 1731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2168:10:9",
                              "memberName": "ActionCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2202,
                              "src": "2162:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ActionCall_$2202_$",
                                "typeString": "type(enum Enums.ActionCall)"
                              }
                            },
                            "id": 1732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2179:10:9",
                            "memberName": "SwapToMany",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2200,
                            "src": "2162:27:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "src": "2147:42:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1759,
                        "nodeType": "IfStatement",
                        "src": "2143:262:9",
                        "trueBody": {
                          "id": 1758,
                          "nodeType": "Block",
                          "src": "2191:214:9",
                          "statements": [
                            {
                              "assignments": [
                                1735,
                                1738
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1735,
                                  "mutability": "mutable",
                                  "name": "tokenIn",
                                  "nameLocation": "2214:7:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1758,
                                  "src": "2206:15:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1734,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2206:7:9",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1738,
                                  "mutability": "mutable",
                                  "name": "tokensOut",
                                  "nameLocation": "2240:9:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1758,
                                  "src": "2223:26:9",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 1736,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2223:7:9",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1737,
                                    "nodeType": "ArrayTypeName",
                                    "src": "2223:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1750,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1741,
                                      "name": "call",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1651,
                                      "src": "2281:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ExecuteCall_$2213_memory_ptr",
                                        "typeString": "struct Params.ExecuteCall memory"
                                      }
                                    },
                                    "id": 1742,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2286:4:9",
                                    "memberName": "data",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2212,
                                    "src": "2281:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "id": 1744,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2309:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1743,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2309:7:9",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      {
                                        "baseExpression": {
                                          "id": 1746,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2318:7:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1745,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2318:7:9",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1747,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2318:9:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                                          "typeString": "type(address[] memory)"
                                        }
                                      }
                                    ],
                                    "id": 1748,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "2308:20:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$",
                                      "typeString": "tuple(type(address),type(address[] memory))"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$",
                                      "typeString": "tuple(type(address),type(address[] memory))"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1739,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2253:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2257:6:9",
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "2253:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2253:89:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_payable_$_t_array$_t_address_$dyn_memory_ptr_$",
                                  "typeString": "tuple(address payable,address[] memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2205:137:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1754,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1735,
                                    "src": "2375:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1755,
                                    "name": "tokensOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1738,
                                    "src": "2384:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1751,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -25,
                                    "src": "2357:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_super$_Strategy_$1860_$",
                                      "typeString": "type(contract super Strategy)"
                                    }
                                  },
                                  "id": 1753,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2363:11:9",
                                  "memberName": "_swapToMany",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3495,
                                  "src": "2357:17:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address[] memory)"
                                  }
                                },
                                "id": 1756,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2357:37:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1757,
                              "nodeType": "ExpressionStatement",
                              "src": "2357:37:9"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1761,
                              "name": "call",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1651,
                              "src": "2434:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExecuteCall_$2213_memory_ptr",
                                "typeString": "struct Params.ExecuteCall memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ExecuteCall_$2213_memory_ptr",
                                "typeString": "struct Params.ExecuteCall memory"
                              }
                            ],
                            "id": 1760,
                            "name": "ExecuteCalled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2159,
                            "src": "2420:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_struct$_ExecuteCall_$2213_memory_ptr_$returns$__$",
                              "typeString": "function (struct Params.ExecuteCall memory)"
                            }
                          },
                          "id": 1762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2420:19:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1763,
                        "nodeType": "EmitStatement",
                        "src": "2415:24:9"
                      }
                    ]
                  },
                  "functionSelector": "b317650b",
                  "id": 1765,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1655,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1654,
                        "name": "onlyEdger",
                        "nameLocations": [
                          "1583:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1859,
                        "src": "1583:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1583:9:9"
                    }
                  ],
                  "name": "executeCall",
                  "nameLocation": "1507:11:9",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1653,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1574:8:9"
                  },
                  "parameters": {
                    "id": 1652,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1651,
                        "mutability": "mutable",
                        "name": "call",
                        "nameLocation": "1554:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1765,
                        "src": "1528:30:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExecuteCall_$2213_memory_ptr",
                          "typeString": "struct Params.ExecuteCall"
                        },
                        "typeName": {
                          "id": 1650,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1649,
                            "name": "Params.ExecuteCall",
                            "nameLocations": [
                              "1528:6:9",
                              "1535:11:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2213,
                            "src": "1528:18:9"
                          },
                          "referencedDeclaration": 2213,
                          "src": "1528:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExecuteCall_$2213_storage_ptr",
                            "typeString": "struct Params.ExecuteCall"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1518:46:9"
                  },
                  "returnParameters": {
                    "id": 1656,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1593:0:9"
                  },
                  "scope": 1860,
                  "src": "1498:948:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1802,
                    "nodeType": "Block",
                    "src": "2714:220:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1773,
                            "name": "allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1771,
                            "src": "2724:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2734:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2724:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1776,
                        "nodeType": "ExpressionStatement",
                        "src": "2724:15:9"
                      },
                      {
                        "body": {
                          "id": 1800,
                          "nodeType": "Block",
                          "src": "2800:128:9",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ActionCall_$2202",
                                  "typeString": "enum Enums.ActionCall"
                                },
                                "id": 1792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1788,
                                    "name": "_allowedActions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3109,
                                    "src": "2818:15:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage",
                                      "typeString": "enum Enums.ActionCall[] storage ref"
                                    }
                                  },
                                  "id": 1790,
                                  "indexExpression": {
                                    "id": 1789,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1778,
                                    "src": "2834:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2818:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ActionCall_$2202",
                                    "typeString": "enum Enums.ActionCall"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1791,
                                  "name": "action",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1768,
                                  "src": "2840:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ActionCall_$2202",
                                    "typeString": "enum Enums.ActionCall"
                                  }
                                },
                                "src": "2818:28:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1799,
                              "nodeType": "IfStatement",
                              "src": "2814:104:9",
                              "trueBody": {
                                "id": 1798,
                                "nodeType": "Block",
                                "src": "2848:70:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1795,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1793,
                                        "name": "allowed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1771,
                                        "src": "2866:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 1794,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2876:4:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2866:14:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1796,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2866:14:9"
                                  },
                                  {
                                    "id": 1797,
                                    "nodeType": "Break",
                                    "src": "2898:5:9"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1781,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1778,
                            "src": "2767:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1782,
                              "name": "_allowedActions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3109,
                              "src": "2771:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage",
                                "typeString": "enum Enums.ActionCall[] storage ref"
                              }
                            },
                            "id": 1783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2787:6:9",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2771:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2767:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1801,
                        "initializationExpression": {
                          "assignments": [
                            1778
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1778,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2760:1:9",
                              "nodeType": "VariableDeclaration",
                              "scope": 1801,
                              "src": "2755:6:9",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1777,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2755:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1780,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2764:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2755:10:9"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2795:3:9",
                            "subExpression": {
                              "id": 1785,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1778,
                              "src": "2795:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1787,
                          "nodeType": "ExpressionStatement",
                          "src": "2795:3:9"
                        },
                        "nodeType": "ForStatement",
                        "src": "2750:178:9"
                      }
                    ]
                  },
                  "id": 1803,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isAllowedAction",
                  "nameLocation": "2621:16:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1769,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1768,
                        "mutability": "mutable",
                        "name": "action",
                        "nameLocation": "2664:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1803,
                        "src": "2647:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ActionCall_$2202",
                          "typeString": "enum Enums.ActionCall"
                        },
                        "typeName": {
                          "id": 1767,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1766,
                            "name": "Enums.ActionCall",
                            "nameLocations": [
                              "2647:5:9",
                              "2653:10:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2202,
                            "src": "2647:16:9"
                          },
                          "referencedDeclaration": 2202,
                          "src": "2647:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ActionCall_$2202",
                            "typeString": "enum Enums.ActionCall"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2637:39:9"
                  },
                  "returnParameters": {
                    "id": 1772,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1771,
                        "mutability": "mutable",
                        "name": "allowed",
                        "nameLocation": "2705:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1803,
                        "src": "2700:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1770,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2700:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2699:14:9"
                  },
                  "scope": 1860,
                  "src": "2612:322:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    2173
                  ],
                  "body": {
                    "id": 1812,
                    "nodeType": "Block",
                    "src": "3160:31:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1809,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "3177:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3177:7:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1808,
                        "id": 1811,
                        "nodeType": "Return",
                        "src": "3170:14:9"
                      }
                    ]
                  },
                  "functionSelector": "02d05d3f",
                  "id": 1813,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "creator",
                  "nameLocation": "3109:7:9",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1805,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3133:8:9"
                  },
                  "parameters": {
                    "id": 1804,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3116:2:9"
                  },
                  "returnParameters": {
                    "id": 1808,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1807,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1813,
                        "src": "3151:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3151:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3150:9:9"
                  },
                  "scope": 1860,
                  "src": "3100:91:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2178
                  ],
                  "body": {
                    "id": 1821,
                    "nodeType": "Block",
                    "src": "3257:32:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1819,
                          "name": "_factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3097,
                          "src": "3274:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1818,
                        "id": 1820,
                        "nodeType": "Return",
                        "src": "3267:15:9"
                      }
                    ]
                  },
                  "functionSelector": "c45a0155",
                  "id": 1822,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nameLocation": "3206:7:9",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1815,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3230:8:9"
                  },
                  "parameters": {
                    "id": 1814,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3213:2:9"
                  },
                  "returnParameters": {
                    "id": 1818,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1817,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1822,
                        "src": "3248:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1816,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3248:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3247:9:9"
                  },
                  "scope": 1860,
                  "src": "3197:92:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2183
                  ],
                  "body": {
                    "id": 1830,
                    "nodeType": "Block",
                    "src": "3359:33:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1828,
                          "name": "_forkCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1565,
                          "src": "3376:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1827,
                        "id": 1829,
                        "nodeType": "Return",
                        "src": "3369:16:9"
                      }
                    ]
                  },
                  "functionSelector": "531bcdb3",
                  "id": 1831,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getForkCost",
                  "nameLocation": "3304:11:9",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1824,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3332:8:9"
                  },
                  "parameters": {
                    "id": 1823,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3315:2:9"
                  },
                  "returnParameters": {
                    "id": 1827,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1826,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1831,
                        "src": "3350:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1825,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3350:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3349:9:9"
                  },
                  "scope": 1860,
                  "src": "3295:97:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1842,
                    "nodeType": "Block",
                    "src": "3580:86:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1834,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3598:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3602:6:9",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3598:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1836,
                                "name": "_factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3097,
                                "src": "3612:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3598:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920666163746f727920697320616c6c6f776564",
                              "id": 1838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3622:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_12613c2ca220dc5e8390c4e16d6d08d4903efa285f831f590ad7b52f71d4e342",
                                "typeString": "literal_string \"Only factory is allowed\""
                              },
                              "value": "Only factory is allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_12613c2ca220dc5e8390c4e16d6d08d4903efa285f831f590ad7b52f71d4e342",
                                "typeString": "literal_string \"Only factory is allowed\""
                              }
                            ],
                            "id": 1833,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3590:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3590:58:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1840,
                        "nodeType": "ExpressionStatement",
                        "src": "3590:58:9"
                      },
                      {
                        "id": 1841,
                        "nodeType": "PlaceholderStatement",
                        "src": "3658:1:9"
                      }
                    ]
                  },
                  "id": 1843,
                  "name": "onlyFactor",
                  "nameLocation": "3567:10:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1832,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3577:2:9"
                  },
                  "src": "3558:108:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1858,
                    "nodeType": "Block",
                    "src": "3693:136:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1846,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3724:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3728:6:9",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3724:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1849,
                                        "name": "_factory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3097,
                                        "src": "3747:8:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1848,
                                      "name": "IFactory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1945,
                                      "src": "3738:8:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IFactory_$1945_$",
                                        "typeString": "type(contract IFactory)"
                                      }
                                    },
                                    "id": 1850,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3738:18:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IFactory_$1945",
                                      "typeString": "contract IFactory"
                                    }
                                  },
                                  "id": 1851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3757:5:9",
                                  "memberName": "edger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1944,
                                  "src": "3738:24:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 1852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3738:26:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3724:40:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920656467657220697320616c6c6f776564",
                              "id": 1854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3778:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fb025bd66e520b2cf36fe9d2a0f645aa267cffccca78782b37e734be7a0d944",
                                "typeString": "literal_string \"Only edger is allowed\""
                              },
                              "value": "Only edger is allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fb025bd66e520b2cf36fe9d2a0f645aa267cffccca78782b37e734be7a0d944",
                                "typeString": "literal_string \"Only edger is allowed\""
                              }
                            ],
                            "id": 1845,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3703:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3703:108:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1856,
                        "nodeType": "ExpressionStatement",
                        "src": "3703:108:9"
                      },
                      {
                        "id": 1857,
                        "nodeType": "PlaceholderStatement",
                        "src": "3821:1:9"
                      }
                    ]
                  },
                  "id": 1859,
                  "name": "onlyEdger",
                  "nameLocation": "3681:9:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1844,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3690:2:9"
                  },
                  "src": "3672:157:9",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1861,
              "src": "469:3362:9",
              "usedErrors": [
                13,
                18,
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                24,
                811,
                820,
                1961,
                1971,
                1979,
                2159
              ]
            }
          ],
          "src": "39:3793:9"
        },
        "id": 9
      },
      "contracts/interfaces/IFactory.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IFactory.sol",
          "exportedSymbols": {
            "Enums": [
              2203
            ],
            "IFactory": [
              1945
            ]
          },
          "id": 1946,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1862,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:10"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "../lib/Enums.sol",
              "id": 1864,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1946,
              "sourceUnit": 2204,
              "src": "68:39:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1863,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2203,
                    "src": "76:5:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1945,
              "linearizedBaseContracts": [
                1945
              ],
              "name": "IFactory",
              "nameLocation": "121:8:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "7c752b9113b23f79161cc728ca055e06564fd3019bfc3663d04ad659cc708264",
                  "id": 1887,
                  "name": "StrategyCreated",
                  "nameLocation": "143:15:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1886,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1866,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nameLocation": "177:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1887,
                        "src": "169:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1865,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "169:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1868,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "creator",
                        "nameLocation": "204:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1887,
                        "src": "196:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1867,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "196:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1871,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "232:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1887,
                        "src": "222:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1869,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "222:7:10",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1870,
                          "nodeType": "ArrayTypeName",
                          "src": "222:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1874,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "splitRatio",
                        "nameLocation": "259:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1887,
                        "src": "249:20:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1872,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "249:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1873,
                          "nodeType": "ArrayTypeName",
                          "src": "249:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1877,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "visibility",
                        "nameLocation": "297:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1887,
                        "src": "280:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Visibility_$2197",
                          "typeString": "enum Enums.Visibility"
                        },
                        "typeName": {
                          "id": 1876,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1875,
                            "name": "Enums.Visibility",
                            "nameLocations": [
                              "280:5:10",
                              "286:10:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2197,
                            "src": "280:16:10"
                          },
                          "referencedDeclaration": 2197,
                          "src": "280:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Visibility_$2197",
                            "typeString": "enum Enums.Visibility"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1879,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "depositUsdMin",
                        "nameLocation": "326:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1887,
                        "src": "318:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1878,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "318:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1881,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "forkCost",
                        "nameLocation": "358:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1887,
                        "src": "350:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1880,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "350:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1885,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "allowedActions",
                        "nameLocation": "396:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1887,
                        "src": "377:33:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1883,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1882,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "377:5:10",
                                "383:10:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2202,
                              "src": "377:16:10"
                            },
                            "referencedDeclaration": 2202,
                            "src": "377:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 1884,
                          "nodeType": "ArrayTypeName",
                          "src": "377:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "158:259:10"
                  },
                  "src": "137:281:10"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d41cbc93f20efdc0e7c08e245f3f4b52a335efa799019f8e94b49bff570b28b4",
                  "id": 1895,
                  "name": "StrategyForked",
                  "nameLocation": "432:14:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1894,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1889,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "455:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1895,
                        "src": "447:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1888,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1891,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fork",
                        "nameLocation": "469:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1895,
                        "src": "461:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1890,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "461:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1893,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "forker",
                        "nameLocation": "483:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1895,
                        "src": "475:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1892,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "475:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "446:44:10"
                  },
                  "src": "426:65:10"
                },
                {
                  "functionSelector": "8403ef08",
                  "id": 1917,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createStrategy",
                  "nameLocation": "508:14:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1913,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1898,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "550:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1917,
                        "src": "533:23:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1896,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "533:7:10",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1897,
                          "nodeType": "ArrayTypeName",
                          "src": "533:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1901,
                        "mutability": "mutable",
                        "name": "splitRatio",
                        "nameLocation": "584:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1917,
                        "src": "567:27:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1899,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "567:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1900,
                          "nodeType": "ArrayTypeName",
                          "src": "567:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1904,
                        "mutability": "mutable",
                        "name": "visibility",
                        "nameLocation": "622:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1917,
                        "src": "605:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Visibility_$2197",
                          "typeString": "enum Enums.Visibility"
                        },
                        "typeName": {
                          "id": 1903,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1902,
                            "name": "Enums.Visibility",
                            "nameLocations": [
                              "605:5:10",
                              "611:10:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2197,
                            "src": "605:16:10"
                          },
                          "referencedDeclaration": 2197,
                          "src": "605:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Visibility_$2197",
                            "typeString": "enum Enums.Visibility"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1906,
                        "mutability": "mutable",
                        "name": "depositUsdMin",
                        "nameLocation": "651:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1917,
                        "src": "643:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1905,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "643:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1908,
                        "mutability": "mutable",
                        "name": "forkCost",
                        "nameLocation": "683:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1917,
                        "src": "675:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1907,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "675:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1912,
                        "mutability": "mutable",
                        "name": "allowedActions",
                        "nameLocation": "728:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1917,
                        "src": "702:40:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1910,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1909,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "702:5:10",
                                "708:10:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2202,
                              "src": "702:16:10"
                            },
                            "referencedDeclaration": 2202,
                            "src": "702:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 1911,
                          "nodeType": "ArrayTypeName",
                          "src": "702:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "522:227:10"
                  },
                  "returnParameters": {
                    "id": 1916,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1915,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1917,
                        "src": "768:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1914,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "768:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "767:9:10"
                  },
                  "scope": 1945,
                  "src": "499:278:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "64f079e1",
                  "id": 1924,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forkStrategy",
                  "nameLocation": "794:12:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1920,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1919,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nameLocation": "815:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1924,
                        "src": "807:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1918,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "807:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "806:18:10"
                  },
                  "returnParameters": {
                    "id": 1923,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1922,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1924,
                        "src": "851:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1921,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "851:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "850:9:10"
                  },
                  "scope": 1945,
                  "src": "785:75:10",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "78d1c86d",
                  "id": 1929,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRevenueAddress",
                  "nameLocation": "877:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1925,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "894:2:10"
                  },
                  "returnParameters": {
                    "id": 1928,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1927,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1929,
                        "src": "920:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1926,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "920:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "919:9:10"
                  },
                  "scope": 1945,
                  "src": "868:61:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f5c8ba93",
                  "id": 1934,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSwapRouterAddress",
                  "nameLocation": "946:20:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1930,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "966:2:10"
                  },
                  "returnParameters": {
                    "id": 1933,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1932,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1934,
                        "src": "992:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1931,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "992:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "991:9:10"
                  },
                  "scope": 1945,
                  "src": "937:64:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8b5350cc",
                  "id": 1939,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPriceOracleAddress",
                  "nameLocation": "1018:21:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1935,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1039:2:10"
                  },
                  "returnParameters": {
                    "id": 1938,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1937,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1939,
                        "src": "1065:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1936,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1065:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1064:9:10"
                  },
                  "scope": 1945,
                  "src": "1009:65:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f94f657c",
                  "id": 1944,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "edger",
                  "nameLocation": "1091:5:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1940,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1096:2:10"
                  },
                  "returnParameters": {
                    "id": 1943,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1942,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1944,
                        "src": "1122:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1941,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1122:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1121:9:10"
                  },
                  "scope": 1945,
                  "src": "1082:49:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1946,
              "src": "111:1023:10",
              "usedErrors": [],
              "usedEvents": [
                1887,
                1895
              ]
            }
          ],
          "src": "40:1096:10"
        },
        "id": 10
      },
      "contracts/interfaces/IMultiTokenPool.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IMultiTokenPool.sol",
          "exportedSymbols": {
            "Enums": [
              2203
            ],
            "IMultiTokenPool": [
              2051
            ],
            "IPoolAdmin": [
              2066
            ]
          },
          "id": 2052,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1947,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:11"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "../lib/Enums.sol",
              "id": 1949,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2052,
              "sourceUnit": 2204,
              "src": "68:39:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1948,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2203,
                    "src": "76:5:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IPoolAdmin.sol",
              "file": "./IPoolAdmin.sol",
              "id": 1951,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2052,
              "sourceUnit": 2067,
              "src": "109:44:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1950,
                    "name": "IPoolAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2066,
                    "src": "117:10:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1952,
                    "name": "IPoolAdmin",
                    "nameLocations": [
                      "186:10:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2066,
                    "src": "186:10:11"
                  },
                  "id": 1953,
                  "nodeType": "InheritanceSpecifier",
                  "src": "186:10:11"
                }
              ],
              "canonicalName": "IMultiTokenPool",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2051,
              "linearizedBaseContracts": [
                2051,
                2066
              ],
              "name": "IMultiTokenPool",
              "nameLocation": "167:15:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "cbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f495517",
                  "id": 1961,
                  "name": "TokensDeposited",
                  "nameLocation": "210:15:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1960,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1955,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "lp",
                        "nameLocation": "242:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1961,
                        "src": "226:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1954,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "226:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1957,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "254:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1961,
                        "src": "246:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1956,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "246:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1959,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "269:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1961,
                        "src": "261:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1958,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "261:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "225:51:11"
                  },
                  "src": "204:73:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ac36971df326c5d24b63183927b8fe4cf71b792277ff128d73f0729a653323e3",
                  "id": 1971,
                  "name": "TokensWithdrawn",
                  "nameLocation": "291:15:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1970,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1963,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "lp",
                        "nameLocation": "333:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1971,
                        "src": "317:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1962,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "317:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1966,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "356:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1971,
                        "src": "346:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1964,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "346:7:11",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1965,
                          "nodeType": "ArrayTypeName",
                          "src": "346:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1969,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "383:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1971,
                        "src": "373:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1967,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "373:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1968,
                          "nodeType": "ArrayTypeName",
                          "src": "373:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "306:91:11"
                  },
                  "src": "285:113:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f74",
                  "id": 1979,
                  "name": "TokensDonated",
                  "nameLocation": "412:13:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1978,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1973,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "donor",
                        "nameLocation": "442:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1979,
                        "src": "426:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1972,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1975,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "457:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1979,
                        "src": "449:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1974,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "449:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1977,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "472:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1979,
                        "src": "464:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1976,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "464:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "425:54:11"
                  },
                  "src": "406:74:11"
                },
                {
                  "functionSelector": "47e7ef24",
                  "id": 1986,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "497:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1984,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1981,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "513:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1986,
                        "src": "505:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1980,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "505:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1983,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "528:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1986,
                        "src": "520:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1982,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "520:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "504:31:11"
                  },
                  "returnParameters": {
                    "id": 1985,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "544:0:11"
                  },
                  "scope": 2051,
                  "src": "488:57:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5358fbda",
                  "id": 1991,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositETH",
                  "nameLocation": "562:10:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1989,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1988,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "581:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1991,
                        "src": "573:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1987,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "573:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "572:16:11"
                  },
                  "returnParameters": {
                    "id": 1990,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "605:0:11"
                  },
                  "scope": 2051,
                  "src": "553:53:11",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2e1a7d4d",
                  "id": 1996,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "623:8:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1994,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1993,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "640:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1996,
                        "src": "632:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1992,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:18:11"
                  },
                  "returnParameters": {
                    "id": 1995,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "658:0:11"
                  },
                  "scope": 2051,
                  "src": "614:45:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f9c4d3db",
                  "id": 2003,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawSingle",
                  "nameLocation": "676:14:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2001,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1998,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "699:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2003,
                        "src": "691:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1997,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "691:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2000,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "717:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2003,
                        "src": "709:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1999,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "690:36:11"
                  },
                  "returnParameters": {
                    "id": 2002,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "735:0:11"
                  },
                  "scope": 2051,
                  "src": "667:69:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a216aa06",
                  "id": 2008,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawSingleETH",
                  "nameLocation": "753:17:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2006,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2005,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "779:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2008,
                        "src": "771:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2004,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "771:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "770:18:11"
                  },
                  "returnParameters": {
                    "id": 2007,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "797:0:11"
                  },
                  "scope": 2051,
                  "src": "744:54:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e69d849d",
                  "id": 2015,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "donate",
                  "nameLocation": "815:6:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2013,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2010,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "830:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2015,
                        "src": "822:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2009,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2012,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "845:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2015,
                        "src": "837:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2011,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "837:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:31:11"
                  },
                  "returnParameters": {
                    "id": 2014,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "861:0:11"
                  },
                  "scope": 2051,
                  "src": "806:56:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ab83f98a",
                  "id": 2020,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "donateETH",
                  "nameLocation": "879:9:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2018,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2017,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "897:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2020,
                        "src": "889:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2016,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "889:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "888:16:11"
                  },
                  "returnParameters": {
                    "id": 2019,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "921:0:11"
                  },
                  "scope": 2051,
                  "src": "870:52:11",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "aa6ca808",
                  "id": 2026,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokens",
                  "nameLocation": "939:9:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2021,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "948:2:11"
                  },
                  "returnParameters": {
                    "id": 2025,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2024,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2026,
                        "src": "974:16:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2022,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "974:7:11",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2023,
                          "nodeType": "ArrayTypeName",
                          "src": "974:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "973:18:11"
                  },
                  "scope": 2051,
                  "src": "930:62:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "00113e08",
                  "id": 2032,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalances",
                  "nameLocation": "1009:11:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2027,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1020:2:11"
                  },
                  "returnParameters": {
                    "id": 2031,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2030,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2032,
                        "src": "1046:16:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2028,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1046:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2029,
                          "nodeType": "ArrayTypeName",
                          "src": "1046:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1045:18:11"
                  },
                  "scope": 2051,
                  "src": "1000:64:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4eadcca8",
                  "id": 2038,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSplitRatio",
                  "nameLocation": "1081:13:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2033,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1094:2:11"
                  },
                  "returnParameters": {
                    "id": 2037,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2036,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2038,
                        "src": "1120:16:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2034,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1120:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2035,
                          "nodeType": "ArrayTypeName",
                          "src": "1120:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1119:18:11"
                  },
                  "scope": 2051,
                  "src": "1072:66:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8e4e9018",
                  "id": 2043,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDepositUsdMin",
                  "nameLocation": "1155:16:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2039,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1171:2:11"
                  },
                  "returnParameters": {
                    "id": 2042,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2041,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2043,
                        "src": "1197:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2040,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1197:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1196:9:11"
                  },
                  "scope": 2051,
                  "src": "1146:60:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2494452d",
                  "id": 2050,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllowedActions",
                  "nameLocation": "1223:17:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2044,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1240:2:11"
                  },
                  "returnParameters": {
                    "id": 2049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2048,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2050,
                        "src": "1293:25:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2046,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2045,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "1293:5:11",
                                "1299:10:11"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2202,
                              "src": "1293:16:11"
                            },
                            "referencedDeclaration": 2202,
                            "src": "1293:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 2047,
                          "nodeType": "ArrayTypeName",
                          "src": "1293:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1292:27:11"
                  },
                  "scope": 2051,
                  "src": "1214:106:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2052,
              "src": "157:1166:11",
              "usedErrors": [],
              "usedEvents": [
                1961,
                1971,
                1979
              ]
            }
          ],
          "src": "40:1285:11"
        },
        "id": 11
      },
      "contracts/interfaces/IPoolAdmin.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IPoolAdmin.sol",
          "exportedSymbols": {
            "IPoolAdmin": [
              2066
            ]
          },
          "id": 2067,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2053,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IPoolAdmin",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2066,
              "linearizedBaseContracts": [
                2066
              ],
              "name": "IPoolAdmin",
              "nameLocation": "78:10:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "af81c5b9",
                  "id": 2060,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addToken",
                  "nameLocation": "105:8:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2058,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2055,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "122:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2060,
                        "src": "114:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2054,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "114:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2057,
                        "mutability": "mutable",
                        "name": "ratio",
                        "nameLocation": "137:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2060,
                        "src": "129:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2056,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "129:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "113:30:12"
                  },
                  "returnParameters": {
                    "id": 2059,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "152:0:12"
                  },
                  "scope": 2066,
                  "src": "96:57:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5fa7b584",
                  "id": 2065,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeToken",
                  "nameLocation": "170:11:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2063,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2062,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "190:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2065,
                        "src": "182:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2061,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "182:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "181:15:12"
                  },
                  "returnParameters": {
                    "id": 2064,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "205:0:12"
                  },
                  "scope": 2066,
                  "src": "161:45:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2067,
              "src": "68:141:12",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:171:12"
        },
        "id": 12
      },
      "contracts/interfaces/IPriceOracle.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IPriceOracle.sol",
          "exportedSymbols": {
            "IPriceOracle": [
              2113
            ]
          },
          "id": 2114,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2068,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IPriceOracle",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2113,
              "linearizedBaseContracts": [
                2113
              ],
              "name": "IPriceOracle",
              "nameLocation": "78:12:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "67f46796",
                  "id": 2077,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountOutInUsd",
                  "nameLocation": "107:17:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2073,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2070,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "143:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2077,
                        "src": "135:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2069,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "135:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2072,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "170:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2077,
                        "src": "162:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2071,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "162:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "124:60:13"
                  },
                  "returnParameters": {
                    "id": 2076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2075,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "216:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2077,
                        "src": "208:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2074,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "208:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "207:19:13"
                  },
                  "scope": 2113,
                  "src": "98:129:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "04eb30c6",
                  "id": 2088,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsOutInUsd",
                  "nameLocation": "244:18:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2084,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2080,
                        "mutability": "mutable",
                        "name": "amountIns",
                        "nameLocation": "290:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2088,
                        "src": "273:26:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2078,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "273:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2079,
                          "nodeType": "ArrayTypeName",
                          "src": "273:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2083,
                        "mutability": "mutable",
                        "name": "tokenIns",
                        "nameLocation": "327:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2088,
                        "src": "310:25:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2081,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "310:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2082,
                          "nodeType": "ArrayTypeName",
                          "src": "310:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "262:80:13"
                  },
                  "returnParameters": {
                    "id": 2087,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2086,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "374:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2088,
                        "src": "366:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2085,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "366:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "365:19:13"
                  },
                  "scope": 2113,
                  "src": "235:150:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5e1e6325",
                  "id": 2099,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountOut",
                  "nameLocation": "402:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2095,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2090,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "433:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2099,
                        "src": "425:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "425:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2092,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "460:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2099,
                        "src": "452:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2091,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "452:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2094,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "486:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2099,
                        "src": "478:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2093,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "478:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "414:87:13"
                  },
                  "returnParameters": {
                    "id": 2098,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2097,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "533:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2099,
                        "src": "525:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2096,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "525:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "524:19:13"
                  },
                  "scope": 2113,
                  "src": "393:151:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9e99c826",
                  "id": 2112,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsOut",
                  "nameLocation": "561:13:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2102,
                        "mutability": "mutable",
                        "name": "amountIns",
                        "nameLocation": "602:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2112,
                        "src": "585:26:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2100,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "585:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2101,
                          "nodeType": "ArrayTypeName",
                          "src": "585:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2105,
                        "mutability": "mutable",
                        "name": "tokenIns",
                        "nameLocation": "639:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2112,
                        "src": "622:25:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2103,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "622:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2104,
                          "nodeType": "ArrayTypeName",
                          "src": "622:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2107,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "666:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2112,
                        "src": "658:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2106,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "574:107:13"
                  },
                  "returnParameters": {
                    "id": 2111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2110,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "713:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2112,
                        "src": "705:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2109,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "705:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "704:19:13"
                  },
                  "scope": 2113,
                  "src": "552:172:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2114,
              "src": "68:659:13",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:689:13"
        },
        "id": 13
      },
      "contracts/interfaces/IRevenue.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IRevenue.sol",
          "exportedSymbols": {
            "IRevenue": [
              2148
            ],
            "Types": [
              2222
            ]
          },
          "id": 2149,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2115,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:14"
            },
            {
              "absolutePath": "contracts/lib/Types.sol",
              "file": "../lib/Types.sol",
              "id": 2117,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2149,
              "sourceUnit": 2223,
              "src": "68:39:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2116,
                    "name": "Types",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2222,
                    "src": "76:5:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IRevenue",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2148,
              "linearizedBaseContracts": [
                2148
              ],
              "name": "IRevenue",
              "nameLocation": "121:8:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a524",
                  "id": 2123,
                  "name": "Funded",
                  "nameLocation": "143:6:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2119,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "166:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2123,
                        "src": "150:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2118,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "150:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2121,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "180:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2123,
                        "src": "172:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2120,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "172:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "149:38:14"
                  },
                  "src": "137:51:14"
                },
                {
                  "anonymous": false,
                  "eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
                  "id": 2129,
                  "name": "Withdrawn",
                  "nameLocation": "202:9:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2125,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "228:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2129,
                        "src": "212:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2124,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "212:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2127,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "242:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2129,
                        "src": "234:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2126,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "234:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "211:38:14"
                  },
                  "src": "196:54:14"
                },
                {
                  "functionSelector": "23024408",
                  "id": 2134,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fund",
                  "nameLocation": "267:4:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2131,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "280:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2134,
                        "src": "272:10:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2130,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "272:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "271:12:14"
                  },
                  "returnParameters": {
                    "id": 2133,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "300:0:14"
                  },
                  "scope": 2148,
                  "src": "258:43:14",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2e1a7d4d",
                  "id": 2139,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "318:8:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2136,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "335:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2139,
                        "src": "327:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2135,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "327:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "326:16:14"
                  },
                  "returnParameters": {
                    "id": 2138,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "351:0:14"
                  },
                  "scope": 2148,
                  "src": "309:43:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 2147,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "369:9:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2141,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "397:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2147,
                        "src": "389:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2140,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "389:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "378:30:14"
                  },
                  "returnParameters": {
                    "id": 2146,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2145,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2147,
                        "src": "432:20:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Revenue_$2221_memory_ptr",
                          "typeString": "struct Types.Revenue"
                        },
                        "typeName": {
                          "id": 2144,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2143,
                            "name": "Types.Revenue",
                            "nameLocations": [
                              "432:5:14",
                              "438:7:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2221,
                            "src": "432:13:14"
                          },
                          "referencedDeclaration": 2221,
                          "src": "432:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Revenue_$2221_storage_ptr",
                            "typeString": "struct Types.Revenue"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "431:22:14"
                  },
                  "scope": 2148,
                  "src": "360:94:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2149,
              "src": "111:346:14",
              "usedErrors": [],
              "usedEvents": [
                2123,
                2129
              ]
            }
          ],
          "src": "40:419:14"
        },
        "id": 14
      },
      "contracts/interfaces/IStrategy.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IStrategy.sol",
          "exportedSymbols": {
            "Enums": [
              2203
            ],
            "IStrategy": [
              2184
            ],
            "Params": [
              2214
            ]
          },
          "id": 2185,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2150,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:15"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "../lib/Enums.sol",
              "id": 2152,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2185,
              "sourceUnit": 2204,
              "src": "68:39:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2151,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2203,
                    "src": "76:5:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/Params.sol",
              "file": "../lib/Params.sol",
              "id": 2154,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2185,
              "sourceUnit": 2215,
              "src": "109:41:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2153,
                    "name": "Params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2214,
                    "src": "117:6:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IStrategy",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2184,
              "linearizedBaseContracts": [
                2184
              ],
              "name": "IStrategy",
              "nameLocation": "164:9:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "2dbb4029cc94c05452861994b3d66ab5d4b3f2b45418116b370c7981f2eebb90",
                  "id": 2159,
                  "name": "ExecuteCalled",
                  "nameLocation": "187:13:15",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2157,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "call",
                        "nameLocation": "220:4:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2159,
                        "src": "201:23:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExecuteCall_$2213_memory_ptr",
                          "typeString": "struct Params.ExecuteCall"
                        },
                        "typeName": {
                          "id": 2156,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2155,
                            "name": "Params.ExecuteCall",
                            "nameLocations": [
                              "201:6:15",
                              "208:11:15"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2213,
                            "src": "201:18:15"
                          },
                          "referencedDeclaration": 2213,
                          "src": "201:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExecuteCall_$2213_storage_ptr",
                            "typeString": "struct Params.ExecuteCall"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "200:25:15"
                  },
                  "src": "181:45:15"
                },
                {
                  "functionSelector": "8769b449",
                  "id": 2162,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onFork",
                  "nameLocation": "243:6:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2160,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "249:2:15"
                  },
                  "returnParameters": {
                    "id": 2161,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "268:0:15"
                  },
                  "scope": 2184,
                  "src": "234:35:15",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b317650b",
                  "id": 2168,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeCall",
                  "nameLocation": "286:11:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2165,
                        "mutability": "mutable",
                        "name": "call",
                        "nameLocation": "324:4:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "298:30:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExecuteCall_$2213_memory_ptr",
                          "typeString": "struct Params.ExecuteCall"
                        },
                        "typeName": {
                          "id": 2164,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2163,
                            "name": "Params.ExecuteCall",
                            "nameLocations": [
                              "298:6:15",
                              "305:11:15"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2213,
                            "src": "298:18:15"
                          },
                          "referencedDeclaration": 2213,
                          "src": "298:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExecuteCall_$2213_storage_ptr",
                            "typeString": "struct Params.ExecuteCall"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "297:32:15"
                  },
                  "returnParameters": {
                    "id": 2167,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "338:0:15"
                  },
                  "scope": 2184,
                  "src": "277:62:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "02d05d3f",
                  "id": 2173,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "creator",
                  "nameLocation": "356:7:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "363:2:15"
                  },
                  "returnParameters": {
                    "id": 2172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2171,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2173,
                        "src": "389:7:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "389:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "388:9:15"
                  },
                  "scope": 2184,
                  "src": "347:51:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c45a0155",
                  "id": 2178,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nameLocation": "415:7:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2174,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "422:2:15"
                  },
                  "returnParameters": {
                    "id": 2177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2176,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2178,
                        "src": "448:7:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "447:9:15"
                  },
                  "scope": 2184,
                  "src": "406:51:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "531bcdb3",
                  "id": 2183,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getForkCost",
                  "nameLocation": "474:11:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2179,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "485:2:15"
                  },
                  "returnParameters": {
                    "id": 2182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2181,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2183,
                        "src": "511:7:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2180,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "511:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "510:9:15"
                  },
                  "scope": 2184,
                  "src": "465:55:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2185,
              "src": "154:369:15",
              "usedErrors": [],
              "usedEvents": [
                2159
              ]
            }
          ],
          "src": "40:485:15"
        },
        "id": 15
      },
      "contracts/interfaces/IWETH.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IWETH.sol",
          "exportedSymbols": {
            "IWETH": [
              2192
            ]
          },
          "id": 2193,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2186,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:16"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IWETH",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2192,
              "linearizedBaseContracts": [
                2192
              ],
              "name": "IWETH",
              "nameLocation": "78:5:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "2e1a7d4d",
                  "id": 2191,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "100:8:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2188,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "114:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2191,
                        "src": "109:10:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2187,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "109:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "108:12:16"
                  },
                  "returnParameters": {
                    "id": 2190,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "129:0:16"
                  },
                  "scope": 2192,
                  "src": "91:39:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2193,
              "src": "68:65:16",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:95:16"
        },
        "id": 16
      },
      "contracts/lib/Enums.sol": {
        "ast": {
          "absolutePath": "contracts/lib/Enums.sol",
          "exportedSymbols": {
            "Enums": [
              2203
            ]
          },
          "id": 2204,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2194,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:17"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Enums",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2203,
              "linearizedBaseContracts": [
                2203
              ],
              "name": "Enums",
              "nameLocation": "76:5:17",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Enums.Visibility",
                  "id": 2197,
                  "members": [
                    {
                      "id": 2195,
                      "name": "Public",
                      "nameLocation": "116:6:17",
                      "nodeType": "EnumValue",
                      "src": "116:6:17"
                    },
                    {
                      "id": 2196,
                      "name": "Private",
                      "nameLocation": "133:7:17",
                      "nodeType": "EnumValue",
                      "src": "133:7:17"
                    }
                  ],
                  "name": "Visibility",
                  "nameLocation": "94:10:17",
                  "nodeType": "EnumDefinition",
                  "src": "89:58:17"
                },
                {
                  "canonicalName": "Enums.ActionCall",
                  "id": 2202,
                  "members": [
                    {
                      "id": 2198,
                      "name": "AdjustSplitRatio",
                      "nameLocation": "182:16:17",
                      "nodeType": "EnumValue",
                      "src": "182:16:17"
                    },
                    {
                      "id": 2199,
                      "name": "SwapToSingle",
                      "nameLocation": "209:12:17",
                      "nodeType": "EnumValue",
                      "src": "209:12:17"
                    },
                    {
                      "id": 2200,
                      "name": "SwapToMany",
                      "nameLocation": "232:10:17",
                      "nodeType": "EnumValue",
                      "src": "232:10:17"
                    },
                    {
                      "id": 2201,
                      "name": "None",
                      "nameLocation": "253:4:17",
                      "nodeType": "EnumValue",
                      "src": "253:4:17"
                    }
                  ],
                  "name": "ActionCall",
                  "nameLocation": "160:10:17",
                  "nodeType": "EnumDefinition",
                  "src": "155:187:17"
                }
              ],
              "scope": 2204,
              "src": "68:277:17",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:307:17"
        },
        "id": 17
      },
      "contracts/lib/Params.sol": {
        "ast": {
          "absolutePath": "contracts/lib/Params.sol",
          "exportedSymbols": {
            "Enums": [
              2203
            ],
            "Params": [
              2214
            ]
          },
          "id": 2215,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2205,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:18"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "./Enums.sol",
              "id": 2207,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2215,
              "sourceUnit": 2204,
              "src": "68:34:18",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2206,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2203,
                    "src": "76:5:18",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Params",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2214,
              "linearizedBaseContracts": [
                2214
              ],
              "name": "Params",
              "nameLocation": "114:6:18",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Params.ExecuteCall",
                  "id": 2213,
                  "members": [
                    {
                      "constant": false,
                      "id": 2210,
                      "mutability": "mutable",
                      "name": "action",
                      "nameLocation": "175:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2213,
                      "src": "158:23:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ActionCall_$2202",
                        "typeString": "enum Enums.ActionCall"
                      },
                      "typeName": {
                        "id": 2209,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2208,
                          "name": "Enums.ActionCall",
                          "nameLocations": [
                            "158:5:18",
                            "164:10:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2202,
                          "src": "158:16:18"
                        },
                        "referencedDeclaration": 2202,
                        "src": "158:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ActionCall_$2202",
                          "typeString": "enum Enums.ActionCall"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2212,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "198:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2213,
                      "src": "192:10:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2211,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "192:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ExecuteCall",
                  "nameLocation": "135:11:18",
                  "nodeType": "StructDefinition",
                  "scope": 2214,
                  "src": "128:82:18",
                  "visibility": "public"
                }
              ],
              "scope": 2215,
              "src": "106:107:18",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:175:18"
        },
        "id": 18
      },
      "contracts/lib/Types.sol": {
        "ast": {
          "absolutePath": "contracts/lib/Types.sol",
          "exportedSymbols": {
            "Types": [
              2222
            ]
          },
          "id": 2223,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2216,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:19"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Types",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2222,
              "linearizedBaseContracts": [
                2222
              ],
              "name": "Types",
              "nameLocation": "76:5:19",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Types.Revenue",
                  "id": 2221,
                  "members": [
                    {
                      "constant": false,
                      "id": 2218,
                      "mutability": "mutable",
                      "name": "claimed",
                      "nameLocation": "123:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2221,
                      "src": "115:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2217,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "115:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2220,
                      "mutability": "mutable",
                      "name": "unClaimed",
                      "nameLocation": "149:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2221,
                      "src": "141:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2219,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "141:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Revenue",
                  "nameLocation": "96:7:19",
                  "nodeType": "StructDefinition",
                  "scope": 2222,
                  "src": "89:77:19",
                  "visibility": "public"
                }
              ],
              "scope": 2223,
              "src": "68:101:19",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:131:19"
        },
        "id": 19
      },
      "contracts/pool/MultiTokenPool.sol": {
        "ast": {
          "absolutePath": "contracts/pool/MultiTokenPool.sol",
          "exportedSymbols": {
            "ERC20": [
              799
            ],
            "Enums": [
              2203
            ],
            "IERC20": [
              877
            ],
            "IFactory": [
              1945
            ],
            "IMultiTokenPool": [
              2051
            ],
            "IPriceOracle": [
              2113
            ],
            "IUniswapV2Router02": [
              1329
            ],
            "MultiTokenPool": [
              3082
            ],
            "Ownable": [
              147
            ],
            "PoolActions": [
              3573
            ]
          },
          "id": 3083,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2224,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:20"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "../lib/Enums.sol",
              "id": 2226,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3083,
              "sourceUnit": 2204,
              "src": "68:39:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2225,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2203,
                    "src": "76:5:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IFactory.sol",
              "file": "../interfaces/IFactory.sol",
              "id": 2228,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3083,
              "sourceUnit": 1946,
              "src": "109:52:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2227,
                    "name": "IFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1945,
                    "src": "117:8:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IPriceOracle.sol",
              "file": "../interfaces/IPriceOracle.sol",
              "id": 2230,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3083,
              "sourceUnit": 2114,
              "src": "163:60:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2229,
                    "name": "IPriceOracle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2113,
                    "src": "171:12:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IMultiTokenPool.sol",
              "file": "../interfaces/IMultiTokenPool.sol",
              "id": 2232,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3083,
              "sourceUnit": 2052,
              "src": "225:66:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2231,
                    "name": "IMultiTokenPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2051,
                    "src": "233:15:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 2234,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3083,
              "sourceUnit": 800,
              "src": "293:68:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2233,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 799,
                    "src": "301:5:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2236,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3083,
              "sourceUnit": 878,
              "src": "363:70:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2235,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "371:6:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 2238,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3083,
              "sourceUnit": 148,
              "src": "435:67:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2237,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "443:7:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
              "file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
              "id": 2240,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3083,
              "sourceUnit": 1330,
              "src": "504:101:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2239,
                    "name": "IUniswapV2Router02",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1329,
                    "src": "512:18:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/pool/PoolActions.sol",
              "file": "./PoolActions.sol",
              "id": 2242,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3083,
              "sourceUnit": 3574,
              "src": "609:46:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2241,
                    "name": "PoolActions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3573,
                    "src": "617:11:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2243,
                    "name": "ERC20",
                    "nameLocations": [
                      "686:5:20"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 799,
                    "src": "686:5:20"
                  },
                  "id": 2244,
                  "nodeType": "InheritanceSpecifier",
                  "src": "686:5:20"
                },
                {
                  "baseName": {
                    "id": 2245,
                    "name": "PoolActions",
                    "nameLocations": [
                      "693:11:20"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3573,
                    "src": "693:11:20"
                  },
                  "id": 2246,
                  "nodeType": "InheritanceSpecifier",
                  "src": "693:11:20"
                },
                {
                  "baseName": {
                    "id": 2247,
                    "name": "IMultiTokenPool",
                    "nameLocations": [
                      "706:15:20"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2051,
                    "src": "706:15:20"
                  },
                  "id": 2248,
                  "nodeType": "InheritanceSpecifier",
                  "src": "706:15:20"
                },
                {
                  "baseName": {
                    "id": 2249,
                    "name": "Ownable",
                    "nameLocations": [
                      "723:7:20"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "723:7:20"
                  },
                  "id": 2250,
                  "nodeType": "InheritanceSpecifier",
                  "src": "723:7:20"
                }
              ],
              "canonicalName": "MultiTokenPool",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3082,
              "linearizedBaseContracts": [
                3082,
                147,
                2051,
                2066,
                3573,
                799,
                189,
                903,
                877,
                933
              ],
              "name": "MultiTokenPool",
              "nameLocation": "668:14:20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2357,
                    "nodeType": "Block",
                    "src": "1025:764:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2277,
                                  "name": "initialTokens_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2259,
                                  "src": "1058:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 2278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1073:6:20",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1058:21:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2279,
                                  "name": "initialSplitRatio_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2262,
                                  "src": "1083:18:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 2280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1102:6:20",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1083:25:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1058:50:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d69736d61746368656420617272617973",
                              "id": 2282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1123:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481",
                                "typeString": "literal_string \"Mismatched arrays\""
                              },
                              "value": "Mismatched arrays"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481",
                                "typeString": "literal_string \"Mismatched arrays\""
                              }
                            ],
                            "id": 2276,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1036:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1036:117:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2284,
                        "nodeType": "ExpressionStatement",
                        "src": "1036:117:20"
                      },
                      {
                        "expression": {
                          "id": 2287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2285,
                            "name": "_factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3097,
                            "src": "1166:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2286,
                            "name": "factory_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2252,
                            "src": "1177:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1166:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2288,
                        "nodeType": "ExpressionStatement",
                        "src": "1166:19:20"
                      },
                      {
                        "assignments": [
                          2290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2290,
                            "mutability": "mutable",
                            "name": "swapRouter",
                            "nameLocation": "1206:10:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 2357,
                            "src": "1198:18:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2289,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1198:7:20",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2296,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2292,
                                  "name": "_factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3097,
                                  "src": "1228:8:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2291,
                                "name": "IFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1945,
                                "src": "1219:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFactory_$1945_$",
                                  "typeString": "type(contract IFactory)"
                                }
                              },
                              "id": 2293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1219:18:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFactory_$1945",
                                "typeString": "contract IFactory"
                              }
                            },
                            "id": 2294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1238:20:20",
                            "memberName": "getSwapRouterAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1934,
                            "src": "1219:39:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1219:41:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1198:62:20"
                      },
                      {
                        "expression": {
                          "id": 2301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2297,
                            "name": "_swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3095,
                            "src": "1271:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2299,
                                "name": "swapRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2290,
                                "src": "1304:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2298,
                              "name": "IUniswapV2Router02",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1329,
                              "src": "1285:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1329_$",
                                "typeString": "type(contract IUniswapV2Router02)"
                              }
                            },
                            "id": 2300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1285:30:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          },
                          "src": "1271:44:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 2302,
                        "nodeType": "ExpressionStatement",
                        "src": "1271:44:20"
                      },
                      {
                        "expression": {
                          "id": 2305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2303,
                            "name": "_depositUsdMin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3099,
                            "src": "1328:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2304,
                            "name": "depositUsdMin_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2256,
                            "src": "1345:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1328:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2306,
                        "nodeType": "ExpressionStatement",
                        "src": "1328:31:20"
                      },
                      {
                        "expression": {
                          "id": 2309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2307,
                            "name": "_underlyingTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3105,
                            "src": "1372:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2308,
                            "name": "initialTokens_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2259,
                            "src": "1392:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "1372:34:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 2310,
                        "nodeType": "ExpressionStatement",
                        "src": "1372:34:20"
                      },
                      {
                        "expression": {
                          "id": 2313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2311,
                            "name": "_splitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3102,
                            "src": "1417:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2312,
                            "name": "initialSplitRatio_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2262,
                            "src": "1431:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "1417:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 2314,
                        "nodeType": "ExpressionStatement",
                        "src": "1417:32:20"
                      },
                      {
                        "expression": {
                          "id": 2317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2315,
                            "name": "_allowedActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3109,
                            "src": "1462:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage",
                              "typeString": "enum Enums.ActionCall[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2316,
                            "name": "allowedActions_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2266,
                            "src": "1480:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                              "typeString": "enum Enums.ActionCall[] memory"
                            }
                          },
                          "src": "1462:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage",
                            "typeString": "enum Enums.ActionCall[] storage ref"
                          }
                        },
                        "id": 2318,
                        "nodeType": "ExpressionStatement",
                        "src": "1462:33:20"
                      },
                      {
                        "assignments": [
                          2320
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2320,
                            "mutability": "mutable",
                            "name": "totalRatio",
                            "nameLocation": "1516:10:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 2357,
                            "src": "1508:18:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2319,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1508:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2322,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1529:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1508:22:20"
                      },
                      {
                        "body": {
                          "id": 2348,
                          "nodeType": "Block",
                          "src": "1597:121:20",
                          "statements": [
                            {
                              "expression": {
                                "id": 2338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2334,
                                  "name": "totalRatio",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2320,
                                  "src": "1612:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2335,
                                    "name": "initialSplitRatio_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2262,
                                    "src": "1626:18:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 2337,
                                  "indexExpression": {
                                    "id": 2336,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2324,
                                    "src": "1645:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1626:21:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1612:35:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2339,
                              "nodeType": "ExpressionStatement",
                              "src": "1612:35:20"
                            },
                            {
                              "expression": {
                                "id": 2346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2340,
                                    "name": "_isUnderlyingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3113,
                                    "src": "1662:18:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 2344,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2341,
                                      "name": "initialTokens_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2259,
                                      "src": "1681:14:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 2343,
                                    "indexExpression": {
                                      "id": 2342,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2324,
                                      "src": "1696:1:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1681:17:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1662:37:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 2345,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1702:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1662:44:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2347,
                              "nodeType": "ExpressionStatement",
                              "src": "1662:44:20"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2327,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2324,
                            "src": "1561:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2328,
                              "name": "initialSplitRatio_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2262,
                              "src": "1565:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1584:6:20",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1565:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1561:29:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2349,
                        "initializationExpression": {
                          "assignments": [
                            2324
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2324,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1554:1:20",
                              "nodeType": "VariableDeclaration",
                              "scope": 2349,
                              "src": "1546:9:20",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2323,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1546:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2326,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1558:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1546:13:20"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1592:3:20",
                            "subExpression": {
                              "id": 2331,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2324,
                              "src": "1592:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2333,
                          "nodeType": "ExpressionStatement",
                          "src": "1592:3:20"
                        },
                        "nodeType": "ForStatement",
                        "src": "1541:177:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2351,
                                "name": "totalRatio",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2320,
                                "src": "1738:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2352,
                                "name": "DIVISOR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3116,
                                "src": "1752:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1738:21:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420726174696f2073756d",
                              "id": 2354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1761:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38835bc47bdd0a0bfcd75c0ecaae2f486482e496d2f52fa1b049d72d895eb704",
                                "typeString": "literal_string \"Invalid ratio sum\""
                              },
                              "value": "Invalid ratio sum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38835bc47bdd0a0bfcd75c0ecaae2f486482e496d2f52fa1b049d72d895eb704",
                                "typeString": "literal_string \"Invalid ratio sum\""
                              }
                            ],
                            "id": 2350,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1730:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:51:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2356,
                        "nodeType": "ExpressionStatement",
                        "src": "1730:51:20"
                      }
                    ]
                  },
                  "id": 2358,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "4c50546f6b656e",
                          "id": 2269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "990:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_91896885eb10c3c73de18aef4dd028882060740275c7a0f7d08a98d2ad73965d",
                            "typeString": "literal_string \"LPToken\""
                          },
                          "value": "LPToken"
                        },
                        {
                          "hexValue": "4c50",
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1001:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9c21acbd49d77f161dc74d87db3b4adb975d116ec37505d4dd76e89d2844ede3",
                            "typeString": "literal_string \"LP\""
                          },
                          "value": "LP"
                        }
                      ],
                      "id": 2271,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2268,
                        "name": "ERC20",
                        "nameLocations": [
                          "984:5:20"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 799,
                        "src": "984:5:20"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "984:22:20"
                    },
                    {
                      "arguments": [
                        {
                          "id": 2273,
                          "name": "creator_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2254,
                          "src": "1015:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2274,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2272,
                        "name": "Ownable",
                        "nameLocations": [
                          "1007:7:20"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1007:7:20"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1007:17:20"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2252,
                        "mutability": "mutable",
                        "name": "factory_",
                        "nameLocation": "768:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2358,
                        "src": "760:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "760:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2254,
                        "mutability": "mutable",
                        "name": "creator_",
                        "nameLocation": "795:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2358,
                        "src": "787:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2253,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "787:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2256,
                        "mutability": "mutable",
                        "name": "depositUsdMin_",
                        "nameLocation": "822:14:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2358,
                        "src": "814:22:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "814:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2259,
                        "mutability": "mutable",
                        "name": "initialTokens_",
                        "nameLocation": "864:14:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2358,
                        "src": "847:31:20",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2257,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "847:7:20",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2258,
                          "nodeType": "ArrayTypeName",
                          "src": "847:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2262,
                        "mutability": "mutable",
                        "name": "initialSplitRatio_",
                        "nameLocation": "906:18:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2358,
                        "src": "889:35:20",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2260,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "889:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2261,
                          "nodeType": "ArrayTypeName",
                          "src": "889:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2266,
                        "mutability": "mutable",
                        "name": "allowedActions_",
                        "nameLocation": "961:15:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2358,
                        "src": "935:41:20",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2264,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2263,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "935:5:20",
                                "941:10:20"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2202,
                              "src": "935:16:20"
                            },
                            "referencedDeclaration": 2202,
                            "src": "935:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 2265,
                          "nodeType": "ArrayTypeName",
                          "src": "935:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "749:234:20"
                  },
                  "returnParameters": {
                    "id": 2275,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1025:0:20"
                  },
                  "scope": 3082,
                  "src": "738:1051:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1986
                  ],
                  "body": {
                    "id": 2426,
                    "nodeType": "Block",
                    "src": "2062:576:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2369,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3113,
                                "src": "2081:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 2371,
                              "indexExpression": {
                                "id": 2370,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2360,
                                "src": "2100:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2081:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455448206e6f7420737570706f72746564",
                              "id": 2372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2108:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9d30b9cb3dbec6ac7a1342d613d3a72e366093233be813950c84004db17f9eab",
                                "typeString": "literal_string \"ETH not supported\""
                              },
                              "value": "ETH not supported"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9d30b9cb3dbec6ac7a1342d613d3a72e366093233be813950c84004db17f9eab",
                                "typeString": "literal_string \"ETH not supported\""
                              }
                            ],
                            "id": 2368,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2073:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2073:55:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2374,
                        "nodeType": "ExpressionStatement",
                        "src": "2073:55:20"
                      },
                      {
                        "assignments": [
                          2376
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2376,
                            "mutability": "mutable",
                            "name": "priceOracle",
                            "nameLocation": "2149:11:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 2426,
                            "src": "2141:19:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2375,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2141:7:20",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2382,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2378,
                                  "name": "_factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3097,
                                  "src": "2172:8:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2377,
                                "name": "IFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1945,
                                "src": "2163:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFactory_$1945_$",
                                  "typeString": "type(contract IFactory)"
                                }
                              },
                              "id": 2379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2163:18:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFactory_$1945",
                                "typeString": "contract IFactory"
                              }
                            },
                            "id": 2380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2182:21:20",
                            "memberName": "getPriceOracleAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1939,
                            "src": "2163:40:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2163:42:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2141:64:20"
                      },
                      {
                        "assignments": [
                          2384
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2384,
                            "mutability": "mutable",
                            "name": "amountUsd",
                            "nameLocation": "2224:9:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 2426,
                            "src": "2216:17:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2383,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2216:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2392,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2389,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2362,
                              "src": "2294:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2390,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2360,
                              "src": "2315:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2386,
                                  "name": "priceOracle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2376,
                                  "src": "2249:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2385,
                                "name": "IPriceOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2113,
                                "src": "2236:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPriceOracle_$2113_$",
                                  "typeString": "type(contract IPriceOracle)"
                                }
                              },
                              "id": 2387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2236:25:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPriceOracle_$2113",
                                "typeString": "contract IPriceOracle"
                              }
                            },
                            "id": 2388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2262:17:20",
                            "memberName": "getAmountOutInUsd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2077,
                            "src": "2236:43:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (uint256,address) view external returns (uint256)"
                            }
                          },
                          "id": 2391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2236:95:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2216:115:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2394,
                                "name": "amountUsd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2384,
                                "src": "2366:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2395,
                                "name": "_depositUsdMin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3099,
                                "src": "2379:14:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2366:27:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e74206465706f73697420616d6f756e7420696e20757364",
                              "id": 2397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2408:36:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_97c8811a5c9c088687c1bb66f526b3067714ee3173b5e059e016b410fbfc4468",
                                "typeString": "literal_string \"Insufficient deposit amount in usd\""
                              },
                              "value": "Insufficient deposit amount in usd"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_97c8811a5c9c088687c1bb66f526b3067714ee3173b5e059e016b410fbfc4468",
                                "typeString": "literal_string \"Insufficient deposit amount in usd\""
                              }
                            ],
                            "id": 2393,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2344:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2344:111:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2399,
                        "nodeType": "ExpressionStatement",
                        "src": "2344:111:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2404,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2495:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2499:6:20",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2495:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2408,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2515:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MultiTokenPool_$3082",
                                    "typeString": "contract MultiTokenPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MultiTokenPool_$3082",
                                    "typeString": "contract MultiTokenPool"
                                  }
                                ],
                                "id": 2407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2507:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2406,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2507:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2507:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2410,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2362,
                              "src": "2522:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2401,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2360,
                                  "src": "2475:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2400,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 877,
                                "src": "2468:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2468:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2482:12:20",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 876,
                            "src": "2468:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2468:61:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2412,
                        "nodeType": "ExpressionStatement",
                        "src": "2468:61:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2414,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2548:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2552:6:20",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2548:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2416,
                              "name": "amountUsd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2384,
                              "src": "2560:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2413,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "2542:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:28:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2418,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:28:20"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2420,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2604:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2608:6:20",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2604:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2422,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2360,
                              "src": "2616:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2423,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2362,
                              "src": "2623:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2419,
                            "name": "TokensDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1961,
                            "src": "2588:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2588:42:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2425,
                        "nodeType": "EmitStatement",
                        "src": "2583:47:20"
                      }
                    ]
                  },
                  "functionSelector": "47e7ef24",
                  "id": 2427,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2366,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2365,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2052:9:20"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2052:9:20"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2052:9:20"
                    }
                  ],
                  "name": "deposit",
                  "nameLocation": "1970:7:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2364,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2043:8:20"
                  },
                  "parameters": {
                    "id": 2363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2360,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1996:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2427,
                        "src": "1988:13:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2359,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1988:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2362,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2020:6:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2427,
                        "src": "2012:14:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2361,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2012:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1977:56:20"
                  },
                  "returnParameters": {
                    "id": 2367,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2062:0:20"
                  },
                  "scope": 3082,
                  "src": "1961:677:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1991
                  ],
                  "body": {
                    "id": 2488,
                    "nodeType": "Block",
                    "src": "2718:582:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2436,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2737:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2741:5:20",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2737:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2438,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2429,
                                "src": "2750:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2737:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e636f72726563742045544820616d6f756e74",
                              "id": 2440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2758:22:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b",
                                "typeString": "literal_string \"Incorrect ETH amount\""
                              },
                              "value": "Incorrect ETH amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b",
                                "typeString": "literal_string \"Incorrect ETH amount\""
                              }
                            ],
                            "id": 2435,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2729:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2729:52:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2442,
                        "nodeType": "ExpressionStatement",
                        "src": "2729:52:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2444,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3113,
                                "src": "2800:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 2446,
                              "indexExpression": {
                                "id": 2445,
                                "name": "SONIC_COIN",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3119,
                                "src": "2819:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2800:30:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455448206e6f7420737570706f72746564",
                              "id": 2447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2832:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9d30b9cb3dbec6ac7a1342d613d3a72e366093233be813950c84004db17f9eab",
                                "typeString": "literal_string \"ETH not supported\""
                              },
                              "value": "ETH not supported"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9d30b9cb3dbec6ac7a1342d613d3a72e366093233be813950c84004db17f9eab",
                                "typeString": "literal_string \"ETH not supported\""
                              }
                            ],
                            "id": 2443,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2792:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2792:60:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2449,
                        "nodeType": "ExpressionStatement",
                        "src": "2792:60:20"
                      },
                      {
                        "assignments": [
                          2451
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2451,
                            "mutability": "mutable",
                            "name": "priceOracle",
                            "nameLocation": "2873:11:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 2488,
                            "src": "2865:19:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2450,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2865:7:20",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2457,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2453,
                                  "name": "_factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3097,
                                  "src": "2896:8:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2452,
                                "name": "IFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1945,
                                "src": "2887:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFactory_$1945_$",
                                  "typeString": "type(contract IFactory)"
                                }
                              },
                              "id": 2454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2887:18:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFactory_$1945",
                                "typeString": "contract IFactory"
                              }
                            },
                            "id": 2455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2906:21:20",
                            "memberName": "getPriceOracleAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1939,
                            "src": "2887:40:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2887:42:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2865:64:20"
                      },
                      {
                        "assignments": [
                          2459
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2459,
                            "mutability": "mutable",
                            "name": "amountUsd",
                            "nameLocation": "2950:9:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 2488,
                            "src": "2942:17:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2458,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2942:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2467,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2464,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2429,
                              "src": "3020:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2465,
                              "name": "SONIC_COIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3119,
                              "src": "3041:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2461,
                                  "name": "priceOracle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2451,
                                  "src": "2975:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2460,
                                "name": "IPriceOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2113,
                                "src": "2962:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPriceOracle_$2113_$",
                                  "typeString": "type(contract IPriceOracle)"
                                }
                              },
                              "id": 2462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2962:25:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPriceOracle_$2113",
                                "typeString": "contract IPriceOracle"
                              }
                            },
                            "id": 2463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2988:17:20",
                            "memberName": "getAmountOutInUsd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2077,
                            "src": "2962:43:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (uint256,address) view external returns (uint256)"
                            }
                          },
                          "id": 2466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2962:100:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2942:120:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2469,
                                "name": "amountUsd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2459,
                                "src": "3097:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2470,
                                "name": "_depositUsdMin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3099,
                                "src": "3110:14:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3097:27:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e74206465706f73697420616d6f756e7420696e20757364",
                              "id": 2472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3139:36:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_97c8811a5c9c088687c1bb66f526b3067714ee3173b5e059e016b410fbfc4468",
                                "typeString": "literal_string \"Insufficient deposit amount in usd\""
                              },
                              "value": "Insufficient deposit amount in usd"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_97c8811a5c9c088687c1bb66f526b3067714ee3173b5e059e016b410fbfc4468",
                                "typeString": "literal_string \"Insufficient deposit amount in usd\""
                              }
                            ],
                            "id": 2468,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3075:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3075:111:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2474,
                        "nodeType": "ExpressionStatement",
                        "src": "3075:111:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2476,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3205:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3209:6:20",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3205:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2478,
                              "name": "amountUsd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2459,
                              "src": "3217:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2475,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "3199:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3199:28:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2480,
                        "nodeType": "ExpressionStatement",
                        "src": "3199:28:20"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2482,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3261:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3265:6:20",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3261:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2484,
                              "name": "SONIC_COIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3119,
                              "src": "3273:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2485,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2429,
                              "src": "3285:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2481,
                            "name": "TokensDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1961,
                            "src": "3245:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3245:47:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2487,
                        "nodeType": "EmitStatement",
                        "src": "3240:52:20"
                      }
                    ]
                  },
                  "functionSelector": "5358fbda",
                  "id": 2489,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2433,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2432,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2708:9:20"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2708:9:20"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2708:9:20"
                    }
                  ],
                  "name": "depositETH",
                  "nameLocation": "2655:10:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2431,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2699:8:20"
                  },
                  "parameters": {
                    "id": 2430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2429,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2674:6:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2489,
                        "src": "2666:14:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2428,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2666:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2665:16:20"
                  },
                  "returnParameters": {
                    "id": 2434,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2718:0:20"
                  },
                  "scope": 3082,
                  "src": "2646:654:20",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1996
                  ],
                  "body": {
                    "id": 2583,
                    "nodeType": "Block",
                    "src": "3362:747:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2496,
                                "name": "lpAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2491,
                                "src": "3381:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3392:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3381:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420616d6f756e74",
                              "id": 2499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3395:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                "typeString": "literal_string \"Invalid amount\""
                              },
                              "value": "Invalid amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                "typeString": "literal_string \"Invalid amount\""
                              }
                            ],
                            "id": 2495,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3373:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3373:39:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2501,
                        "nodeType": "ExpressionStatement",
                        "src": "3373:39:20"
                      },
                      {
                        "assignments": [
                          2503
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2503,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "3433:11:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 2583,
                            "src": "3425:19:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2502,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3425:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2506,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2504,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "3447:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3447:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3425:35:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2508,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2503,
                                "src": "3479:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3493:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3479:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f206c6971756964697479",
                              "id": 2511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3496:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
                                "typeString": "literal_string \"No liquidity\""
                              },
                              "value": "No liquidity"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
                                "typeString": "literal_string \"No liquidity\""
                              }
                            ],
                            "id": 2507,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3471:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3471:40:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2513,
                        "nodeType": "ExpressionStatement",
                        "src": "3471:40:20"
                      },
                      {
                        "body": {
                          "id": 2575,
                          "nodeType": "Block",
                          "src": "3579:483:20",
                          "statements": [
                            {
                              "assignments": [
                                2526
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2526,
                                  "mutability": "mutable",
                                  "name": "tokenOut",
                                  "nameLocation": "3602:8:20",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2575,
                                  "src": "3594:16:20",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 2525,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3594:7:20",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2530,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 2527,
                                  "name": "_underlyingTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3105,
                                  "src": "3613:17:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2529,
                                "indexExpression": {
                                  "id": 2528,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2515,
                                  "src": "3631:1:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3613:20:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3594:39:20"
                            },
                            {
                              "assignments": [
                                2532
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2532,
                                  "mutability": "mutable",
                                  "name": "amountOut",
                                  "nameLocation": "3656:9:20",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2575,
                                  "src": "3648:17:20",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2531,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3648:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2541,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2537,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 2534,
                                            "name": "tokenOut",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2526,
                                            "src": "3680:8:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 2533,
                                          "name": "getBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3572,
                                          "src": "3669:10:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view returns (uint256)"
                                          }
                                        },
                                        "id": 2535,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3669:20:20",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 2536,
                                        "name": "lpAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2491,
                                        "src": "3692:8:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3669:31:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2538,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3668:33:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 2539,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2503,
                                  "src": "3704:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3668:47:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3648:67:20"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2542,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2526,
                                  "src": "3736:8:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2543,
                                  "name": "SONIC_COIN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3119,
                                  "src": "3748:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3736:22:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 2573,
                                "nodeType": "Block",
                                "src": "3968:83:20",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 2568,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "4013:3:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 2569,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4017:6:20",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "4013:10:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2570,
                                          "name": "amountOut",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2532,
                                          "src": "4025:9:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 2565,
                                              "name": "tokenOut",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2526,
                                              "src": "3994:8:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2564,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 877,
                                            "src": "3987:6:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 2566,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3987:16:20",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$877",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2567,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4004:8:20",
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 844,
                                        "src": "3987:25:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 2571,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3987:48:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2572,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3987:48:20"
                                  }
                                ]
                              },
                              "id": 2574,
                              "nodeType": "IfStatement",
                              "src": "3732:319:20",
                              "trueBody": {
                                "id": 2563,
                                "nodeType": "Block",
                                "src": "3760:202:20",
                                "statements": [
                                  {
                                    "assignments": [
                                      2546,
                                      null
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2546,
                                        "mutability": "mutable",
                                        "name": "_success",
                                        "nameLocation": "3785:8:20",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2563,
                                        "src": "3780:13:20",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "typeName": {
                                          "id": 2545,
                                          "name": "bool",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3780:4:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "visibility": "internal"
                                      },
                                      null
                                    ],
                                    "id": 2557,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "hexValue": "",
                                          "id": 2555,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3864:2:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          },
                                          "value": ""
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                              "typeString": "literal_string \"\""
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 2549,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "3807:3:20",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 2550,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "3811:6:20",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3807:10:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 2548,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3799:8:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_payable_$",
                                                "typeString": "type(address payable)"
                                              },
                                              "typeName": {
                                                "id": 2547,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3799:8:20",
                                                "stateMutability": "payable",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2551,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3799:19:20",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          },
                                          "id": 2552,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3819:4:20",
                                          "memberName": "call",
                                          "nodeType": "MemberAccess",
                                          "src": "3799:24:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                          }
                                        },
                                        "id": 2554,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "names": [
                                          "value"
                                        ],
                                        "nodeType": "FunctionCallOptions",
                                        "options": [
                                          {
                                            "id": 2553,
                                            "name": "amountOut",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2532,
                                            "src": "3831:9:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "src": "3799:42:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                        }
                                      },
                                      "id": 2556,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3799:86:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "tuple(bool,bytes memory)"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3779:106:20"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2559,
                                          "name": "_success",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2546,
                                          "src": "3914:8:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "455448207472616e73666572206661696c6564",
                                          "id": 2560,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3924:21:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
                                            "typeString": "literal_string \"ETH transfer failed\""
                                          },
                                          "value": "ETH transfer failed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
                                            "typeString": "literal_string \"ETH transfer failed\""
                                          }
                                        ],
                                        "id": 2558,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "3906:7:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 2561,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3906:40:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2562,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3906:40:20"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2518,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2515,
                            "src": "3544:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2519,
                              "name": "_underlyingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3105,
                              "src": "3548:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3566:6:20",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3548:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3544:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2576,
                        "initializationExpression": {
                          "assignments": [
                            2515
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2515,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3537:1:20",
                              "nodeType": "VariableDeclaration",
                              "scope": 2576,
                              "src": "3529:9:20",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2514,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3529:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2517,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3541:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3529:13:20"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3574:3:20",
                            "subExpression": {
                              "id": 2522,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2515,
                              "src": "3574:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2524,
                          "nodeType": "ExpressionStatement",
                          "src": "3574:3:20"
                        },
                        "nodeType": "ForStatement",
                        "src": "3524:538:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2578,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4080:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4084:6:20",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4080:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2580,
                              "name": "lpAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2491,
                              "src": "4092:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2577,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 672,
                            "src": "4074:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4074:27:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2582,
                        "nodeType": "ExpressionStatement",
                        "src": "4074:27:20"
                      }
                    ]
                  },
                  "functionSelector": "2e1a7d4d",
                  "id": 2584,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "3317:8:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2493,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3353:8:20"
                  },
                  "parameters": {
                    "id": 2492,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2491,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "3334:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2584,
                        "src": "3326:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2490,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3325:18:20"
                  },
                  "returnParameters": {
                    "id": 2494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3362:0:20"
                  },
                  "scope": 3082,
                  "src": "3308:801:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2003
                  ],
                  "body": {
                    "id": 2597,
                    "nodeType": "Block",
                    "src": "4192:51:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2593,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2586,
                              "src": "4219:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2594,
                              "name": "lpAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2588,
                              "src": "4226:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2592,
                            "name": "_withdrawSingle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2804,
                            "src": "4203:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4203:32:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2596,
                        "nodeType": "ExpressionStatement",
                        "src": "4203:32:20"
                      }
                    ]
                  },
                  "functionSelector": "f9c4d3db",
                  "id": 2598,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawSingle",
                  "nameLocation": "4126:14:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2590,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4183:8:20"
                  },
                  "parameters": {
                    "id": 2589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2586,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4149:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2598,
                        "src": "4141:13:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4141:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2588,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "4164:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2598,
                        "src": "4156:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2587,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4156:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4140:33:20"
                  },
                  "returnParameters": {
                    "id": 2591,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4192:0:20"
                  },
                  "scope": 3082,
                  "src": "4117:126:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2008
                  ],
                  "body": {
                    "id": 2609,
                    "nodeType": "Block",
                    "src": "4314:56:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2605,
                              "name": "SONIC_COIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3119,
                              "src": "4341:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2606,
                              "name": "lpAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2600,
                              "src": "4353:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2604,
                            "name": "_withdrawSingle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2804,
                            "src": "4325:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4325:37:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2608,
                        "nodeType": "ExpressionStatement",
                        "src": "4325:37:20"
                      }
                    ]
                  },
                  "functionSelector": "a216aa06",
                  "id": 2610,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawSingleETH",
                  "nameLocation": "4260:17:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2602,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4305:8:20"
                  },
                  "parameters": {
                    "id": 2601,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2600,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "4286:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2610,
                        "src": "4278:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2599,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4278:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4277:18:20"
                  },
                  "returnParameters": {
                    "id": 2603,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4314:0:20"
                  },
                  "scope": 3082,
                  "src": "4251:119:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2803,
                    "nodeType": "Block",
                    "src": "4448:1693:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2618,
                                "name": "lpAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2614,
                                "src": "4467:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4478:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4467:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420616d6f756e74",
                              "id": 2621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4481:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                "typeString": "literal_string \"Invalid amount\""
                              },
                              "value": "Invalid amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                "typeString": "literal_string \"Invalid amount\""
                              }
                            ],
                            "id": 2617,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4459:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4459:39:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2623,
                        "nodeType": "ExpressionStatement",
                        "src": "4459:39:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2625,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3113,
                                "src": "4517:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 2627,
                              "indexExpression": {
                                "id": 2626,
                                "name": "tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2612,
                                "src": "4536:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4517:28:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e",
                              "id": 2628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4547:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              },
                              "value": "Invalid token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              }
                            ],
                            "id": 2624,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4509:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4509:54:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2630,
                        "nodeType": "ExpressionStatement",
                        "src": "4509:54:20"
                      },
                      {
                        "assignments": [
                          2632
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2632,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "4584:11:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 2803,
                            "src": "4576:19:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2631,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4576:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2635,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2633,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "4598:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4598:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4576:35:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2637,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2632,
                                "src": "4630:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4644:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4630:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f206c6971756964697479",
                              "id": 2640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4647:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
                                "typeString": "literal_string \"No liquidity\""
                              },
                              "value": "No liquidity"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
                                "typeString": "literal_string \"No liquidity\""
                              }
                            ],
                            "id": 2636,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4622:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4622:40:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2642,
                        "nodeType": "ExpressionStatement",
                        "src": "4622:40:20"
                      },
                      {
                        "body": {
                          "id": 2795,
                          "nodeType": "Block",
                          "src": "4730:1364:20",
                          "statements": [
                            {
                              "assignments": [
                                2655
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2655,
                                  "mutability": "mutable",
                                  "name": "tokenIn",
                                  "nameLocation": "4753:7:20",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2795,
                                  "src": "4745:15:20",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 2654,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4745:7:20",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2659,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 2656,
                                  "name": "_underlyingTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3105,
                                  "src": "4763:17:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2658,
                                "indexExpression": {
                                  "id": 2657,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2644,
                                  "src": "4781:1:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4763:20:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4745:38:20"
                            },
                            {
                              "assignments": [
                                2661
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2661,
                                  "mutability": "mutable",
                                  "name": "amountIn",
                                  "nameLocation": "4806:8:20",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2795,
                                  "src": "4798:16:20",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2660,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4798:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2670,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2666,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 2663,
                                            "name": "tokenIn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2655,
                                            "src": "4829:7:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 2662,
                                          "name": "getBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3572,
                                          "src": "4818:10:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view returns (uint256)"
                                          }
                                        },
                                        "id": 2664,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4818:19:20",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 2665,
                                        "name": "lpAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2614,
                                        "src": "4840:8:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4818:30:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2667,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4817:32:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 2668,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2632,
                                  "src": "4852:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4817:46:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4798:65:20"
                            },
                            {
                              "assignments": [
                                2675
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2675,
                                  "mutability": "mutable",
                                  "name": "path",
                                  "nameLocation": "4897:4:20",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2795,
                                  "src": "4880:21:20",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 2673,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4880:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 2674,
                                    "nodeType": "ArrayTypeName",
                                    "src": "4880:9:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2681,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 2679,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4918:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "id": 2678,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "4904:13:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (address[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 2676,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4908:7:20",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 2677,
                                    "nodeType": "ArrayTypeName",
                                    "src": "4908:9:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  }
                                },
                                "id": 2680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4904:16:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4880:40:20"
                            },
                            {
                              "expression": {
                                "id": 2693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2682,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2675,
                                    "src": "4937:4:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 2684,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 2683,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4942:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4937:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 2687,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2685,
                                      "name": "tokenIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2655,
                                      "src": "4947:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 2686,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3119,
                                      "src": "4958:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "4947:21:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 2691,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2655,
                                    "src": "4992:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 2692,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "4947:52:20",
                                  "trueExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 2688,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3095,
                                        "src": "4971:11:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 2689,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4983:4:20",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 945,
                                      "src": "4971:16:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 2690,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4971:18:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4937:62:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2694,
                              "nodeType": "ExpressionStatement",
                              "src": "4937:62:20"
                            },
                            {
                              "expression": {
                                "id": 2706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2695,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2675,
                                    "src": "5014:4:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 2697,
                                  "indexExpression": {
                                    "hexValue": "31",
                                    "id": 2696,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5019:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5014:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 2700,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2698,
                                      "name": "tokenOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2612,
                                      "src": "5024:8:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 2699,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3119,
                                      "src": "5036:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "5024:22:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 2704,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2612,
                                    "src": "5070:8:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 2705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "5024:54:20",
                                  "trueExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 2701,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3095,
                                        "src": "5049:11:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 2702,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5061:4:20",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 945,
                                      "src": "5049:16:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 2703,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5049:18:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5014:64:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2707,
                              "nodeType": "ExpressionStatement",
                              "src": "5014:64:20"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 2710,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2708,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2655,
                                    "src": "5099:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 2709,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2612,
                                    "src": "5110:8:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5099:19:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 2713,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2711,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2612,
                                    "src": "5122:8:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 2712,
                                    "name": "SONIC_COIN",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3119,
                                    "src": "5134:10:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5122:22:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5099:45:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 2736,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2734,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2655,
                                    "src": "5357:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 2735,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2612,
                                    "src": "5368:8:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5357:19:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 2749,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2747,
                                      "name": "tokenIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2655,
                                      "src": "5469:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 2748,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3119,
                                      "src": "5480:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "5469:21:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 2791,
                                    "nodeType": "Block",
                                    "src": "5744:339:20",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 2772,
                                                  "name": "_swapRouter",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3095,
                                                  "src": "5795:11:20",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                    "typeString": "contract IUniswapV2Router02"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                    "typeString": "contract IUniswapV2Router02"
                                                  }
                                                ],
                                                "id": 2771,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "5787:7:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 2770,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "5787:7:20",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 2773,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "5787:20:20",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 2774,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2661,
                                              "src": "5809:8:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 2767,
                                                  "name": "tokenIn",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2655,
                                                  "src": "5770:7:20",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 2766,
                                                "name": "IERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "5763:6:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                                  "typeString": "type(contract IERC20)"
                                                }
                                              },
                                              "id": 2768,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "5763:15:20",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$877",
                                                "typeString": "contract IERC20"
                                              }
                                            },
                                            "id": 2769,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5779:7:20",
                                            "memberName": "approve",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 864,
                                            "src": "5763:23:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                          },
                                          "id": 2775,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5763:55:20",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 2776,
                                        "nodeType": "ExpressionStatement",
                                        "src": "5763:55:20"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 2780,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2661,
                                              "src": "5898:8:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "hexValue": "30",
                                              "id": 2781,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5929:1:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            {
                                              "id": 2782,
                                              "name": "path",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2675,
                                              "src": "5969:4:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 2783,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "5996:3:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 2784,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "6000:6:20",
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "5996:10:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2788,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 2785,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "6029:5:20",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 2786,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "6035:9:20",
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "6029:15:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 2787,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6047:1:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "6029:19:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 2777,
                                              "name": "_swapRouter",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3095,
                                              "src": "5839:11:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                "typeString": "contract IUniswapV2Router02"
                                              }
                                            },
                                            "id": 2779,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5851:24:20",
                                            "memberName": "swapExactTokensForTokens",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1104,
                                            "src": "5839:36:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 2789,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5839:228:20",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 2790,
                                        "nodeType": "ExpressionStatement",
                                        "src": "5839:228:20"
                                      }
                                    ]
                                  },
                                  "id": 2792,
                                  "nodeType": "IfStatement",
                                  "src": "5465:618:20",
                                  "trueBody": {
                                    "id": 2765,
                                    "nodeType": "Block",
                                    "src": "5492:246:20",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "30",
                                              "id": 2755,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5584:1:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            {
                                              "id": 2756,
                                              "name": "path",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2675,
                                              "src": "5624:4:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 2757,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "5651:3:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 2758,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "5655:6:20",
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "5651:10:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2762,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 2759,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "5684:5:20",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 2760,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "5690:9:20",
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "5684:15:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 2761,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "5702:1:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "5684:19:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                  "typeString": "address[] memory"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "id": 2750,
                                                "name": "_swapRouter",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3095,
                                                "src": "5511:11:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                  "typeString": "contract IUniswapV2Router02"
                                                }
                                              },
                                              "id": 2752,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "5523:21:20",
                                              "memberName": "swapExactETHForTokens",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1136,
                                              "src": "5511:33:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                                "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                                              }
                                            },
                                            "id": 2754,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "names": [
                                              "value"
                                            ],
                                            "nodeType": "FunctionCallOptions",
                                            "options": [
                                              {
                                                "id": 2753,
                                                "name": "amountIn",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2661,
                                                "src": "5552:8:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "src": "5511:50:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                                              "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 2763,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5511:211:20",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 2764,
                                        "nodeType": "ExpressionStatement",
                                        "src": "5511:211:20"
                                      }
                                    ]
                                  }
                                },
                                "id": 2793,
                                "nodeType": "IfStatement",
                                "src": "5353:730:20",
                                "trueBody": {
                                  "id": 2746,
                                  "nodeType": "Block",
                                  "src": "5378:81:20",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 2741,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "5422:3:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 2742,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5426:6:20",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "5422:10:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 2743,
                                            "name": "amountIn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2661,
                                            "src": "5434:8:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 2738,
                                                "name": "tokenIn",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2655,
                                                "src": "5404:7:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 2737,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 877,
                                              "src": "5397:6:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 2739,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5397:15:20",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$877",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 2740,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5413:8:20",
                                          "memberName": "transfer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 844,
                                          "src": "5397:24:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                            "typeString": "function (address,uint256) external returns (bool)"
                                          }
                                        },
                                        "id": 2744,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5397:46:20",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 2745,
                                      "nodeType": "ExpressionStatement",
                                      "src": "5397:46:20"
                                    }
                                  ]
                                }
                              },
                              "id": 2794,
                              "nodeType": "IfStatement",
                              "src": "5095:988:20",
                              "trueBody": {
                                "id": 2733,
                                "nodeType": "Block",
                                "src": "5146:201:20",
                                "statements": [
                                  {
                                    "assignments": [
                                      2716,
                                      null
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2716,
                                        "mutability": "mutable",
                                        "name": "_success",
                                        "nameLocation": "5171:8:20",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2733,
                                        "src": "5166:13:20",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "typeName": {
                                          "id": 2715,
                                          "name": "bool",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5166:4:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "visibility": "internal"
                                      },
                                      null
                                    ],
                                    "id": 2727,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "hexValue": "",
                                          "id": 2725,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5249:2:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          },
                                          "value": ""
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                              "typeString": "literal_string \"\""
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 2719,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "5193:3:20",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 2720,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "5197:6:20",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "5193:10:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 2718,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "5185:8:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_payable_$",
                                                "typeString": "type(address payable)"
                                              },
                                              "typeName": {
                                                "id": 2717,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5185:8:20",
                                                "stateMutability": "payable",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2721,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5185:19:20",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          },
                                          "id": 2722,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5205:4:20",
                                          "memberName": "call",
                                          "nodeType": "MemberAccess",
                                          "src": "5185:24:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                          }
                                        },
                                        "id": 2724,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "names": [
                                          "value"
                                        ],
                                        "nodeType": "FunctionCallOptions",
                                        "options": [
                                          {
                                            "id": 2723,
                                            "name": "amountIn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2661,
                                            "src": "5217:8:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "src": "5185:41:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                        }
                                      },
                                      "id": 2726,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5185:85:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "tuple(bool,bytes memory)"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5165:105:20"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2729,
                                          "name": "_success",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2716,
                                          "src": "5299:8:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "455448207472616e73666572206661696c6564",
                                          "id": 2730,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5309:21:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
                                            "typeString": "literal_string \"ETH transfer failed\""
                                          },
                                          "value": "ETH transfer failed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
                                            "typeString": "literal_string \"ETH transfer failed\""
                                          }
                                        ],
                                        "id": 2728,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "5291:7:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 2731,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5291:40:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2732,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5291:40:20"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2647,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "4695:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2648,
                              "name": "_underlyingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3105,
                              "src": "4699:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4717:6:20",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4699:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4695:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2796,
                        "initializationExpression": {
                          "assignments": [
                            2644
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2644,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4688:1:20",
                              "nodeType": "VariableDeclaration",
                              "scope": 2796,
                              "src": "4680:9:20",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2643,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4680:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2646,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4692:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4680:13:20"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4725:3:20",
                            "subExpression": {
                              "id": 2651,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2644,
                              "src": "4725:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2653,
                          "nodeType": "ExpressionStatement",
                          "src": "4725:3:20"
                        },
                        "nodeType": "ForStatement",
                        "src": "4675:1419:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2798,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6112:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6116:6:20",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6112:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2800,
                              "name": "lpAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2614,
                              "src": "6124:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2797,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 672,
                            "src": "6106:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6106:27:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2802,
                        "nodeType": "ExpressionStatement",
                        "src": "6106:27:20"
                      }
                    ]
                  },
                  "id": 2804,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_withdrawSingle",
                  "nameLocation": "4387:15:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2615,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2612,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "4411:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2804,
                        "src": "4403:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2611,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4403:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2614,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "4429:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2804,
                        "src": "4421:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2613,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4421:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4402:36:20"
                  },
                  "returnParameters": {
                    "id": 2616,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4448:0:20"
                  },
                  "scope": 3082,
                  "src": "4378:1763:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    2015
                  ],
                  "body": {
                    "id": 2839,
                    "nodeType": "Block",
                    "src": "6214:200:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2813,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3113,
                                "src": "6233:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 2815,
                              "indexExpression": {
                                "id": 2814,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2806,
                                "src": "6252:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6233:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e",
                              "id": 2816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6260:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              },
                              "value": "Invalid token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              }
                            ],
                            "id": 2812,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6225:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6225:51:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2818,
                        "nodeType": "ExpressionStatement",
                        "src": "6225:51:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2823,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6314:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6318:6:20",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6314:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2827,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6334:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MultiTokenPool_$3082",
                                    "typeString": "contract MultiTokenPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MultiTokenPool_$3082",
                                    "typeString": "contract MultiTokenPool"
                                  }
                                ],
                                "id": 2826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6326:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2825,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6326:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6326:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2829,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2808,
                              "src": "6341:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2820,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2806,
                                  "src": "6294:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2819,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 877,
                                "src": "6287:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6287:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6301:12:20",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 876,
                            "src": "6287:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6287:61:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2831,
                        "nodeType": "ExpressionStatement",
                        "src": "6287:61:20"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2833,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6380:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6384:6:20",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6380:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2835,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2806,
                              "src": "6392:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2836,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2808,
                              "src": "6399:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2832,
                            "name": "TokensDonated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "6366:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6366:40:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2838,
                        "nodeType": "EmitStatement",
                        "src": "6361:45:20"
                      }
                    ]
                  },
                  "functionSelector": "e69d849d",
                  "id": 2840,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "donate",
                  "nameLocation": "6158:6:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2810,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6205:8:20"
                  },
                  "parameters": {
                    "id": 2809,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2806,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6173:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2840,
                        "src": "6165:13:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6165:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2808,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6188:6:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2840,
                        "src": "6180:14:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2807,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6180:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6164:31:20"
                  },
                  "returnParameters": {
                    "id": 2811,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6214:0:20"
                  },
                  "scope": 3082,
                  "src": "6149:265:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2020
                  ],
                  "body": {
                    "id": 2868,
                    "nodeType": "Block",
                    "src": "6483:205:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2847,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3113,
                                "src": "6502:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 2849,
                              "indexExpression": {
                                "id": 2848,
                                "name": "SONIC_COIN",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3119,
                                "src": "6521:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6502:30:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455448206e6f7420737570706f72746564",
                              "id": 2850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6534:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9d30b9cb3dbec6ac7a1342d613d3a72e366093233be813950c84004db17f9eab",
                                "typeString": "literal_string \"ETH not supported\""
                              },
                              "value": "ETH not supported"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9d30b9cb3dbec6ac7a1342d613d3a72e366093233be813950c84004db17f9eab",
                                "typeString": "literal_string \"ETH not supported\""
                              }
                            ],
                            "id": 2846,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6494:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6494:60:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2852,
                        "nodeType": "ExpressionStatement",
                        "src": "6494:60:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2854,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6573:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6577:5:20",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6573:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2856,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2842,
                                "src": "6586:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6573:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e636f72726563742045544820616d6f756e74",
                              "id": 2858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6594:22:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b",
                                "typeString": "literal_string \"Incorrect ETH amount\""
                              },
                              "value": "Incorrect ETH amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b",
                                "typeString": "literal_string \"Incorrect ETH amount\""
                              }
                            ],
                            "id": 2853,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6565:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6565:52:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2860,
                        "nodeType": "ExpressionStatement",
                        "src": "6565:52:20"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2862,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6649:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6653:6:20",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6649:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2864,
                              "name": "SONIC_COIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3119,
                              "src": "6661:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2865,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2842,
                              "src": "6673:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2861,
                            "name": "TokensDonated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "6635:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6635:45:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2867,
                        "nodeType": "EmitStatement",
                        "src": "6630:50:20"
                      }
                    ]
                  },
                  "functionSelector": "ab83f98a",
                  "id": 2869,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "donateETH",
                  "nameLocation": "6431:9:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2844,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6474:8:20"
                  },
                  "parameters": {
                    "id": 2843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2842,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6449:6:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2869,
                        "src": "6441:14:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2841,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6441:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6440:16:20"
                  },
                  "returnParameters": {
                    "id": 2845,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6483:0:20"
                  },
                  "scope": 3082,
                  "src": "6422:266:20",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2026
                  ],
                  "body": {
                    "id": 2878,
                    "nodeType": "Block",
                    "src": "6985:43:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 2876,
                          "name": "_underlyingTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3105,
                          "src": "7003:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "functionReturnParameters": 2875,
                        "id": 2877,
                        "nodeType": "Return",
                        "src": "6996:24:20"
                      }
                    ]
                  },
                  "functionSelector": "aa6ca808",
                  "id": 2879,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokens",
                  "nameLocation": "6923:9:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2871,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6949:8:20"
                  },
                  "parameters": {
                    "id": 2870,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6932:2:20"
                  },
                  "returnParameters": {
                    "id": 2875,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2874,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2879,
                        "src": "6967:16:20",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2872,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6967:7:20",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2873,
                          "nodeType": "ArrayTypeName",
                          "src": "6967:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6966:18:20"
                  },
                  "scope": 3082,
                  "src": "6914:114:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2032
                  ],
                  "body": {
                    "id": 2923,
                    "nodeType": "Block",
                    "src": "7171:250:20",
                    "statements": [
                      {
                        "assignments": [
                          2890
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2890,
                            "mutability": "mutable",
                            "name": "balances",
                            "nameLocation": "7199:8:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 2923,
                            "src": "7182:25:20",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2888,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7182:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2889,
                              "nodeType": "ArrayTypeName",
                              "src": "7182:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2897,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2894,
                                "name": "_underlyingTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3105,
                                "src": "7224:17:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 2895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7242:6:20",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7224:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7210:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2891,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7214:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2892,
                              "nodeType": "ArrayTypeName",
                              "src": "7214:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 2896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7210:39:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7182:67:20"
                      },
                      {
                        "body": {
                          "id": 2919,
                          "nodeType": "Block",
                          "src": "7315:73:20",
                          "statements": [
                            {
                              "expression": {
                                "id": 2917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2909,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2890,
                                    "src": "7330:8:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 2911,
                                  "indexExpression": {
                                    "id": 2910,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2899,
                                    "src": "7339:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7330:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 2913,
                                        "name": "_underlyingTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3105,
                                        "src": "7355:17:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 2915,
                                      "indexExpression": {
                                        "id": 2914,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2899,
                                        "src": "7373:1:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7355:20:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2912,
                                    "name": "getBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3572,
                                    "src": "7344:10:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view returns (uint256)"
                                    }
                                  },
                                  "id": 2916,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7344:32:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7330:46:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2918,
                              "nodeType": "ExpressionStatement",
                              "src": "7330:46:20"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2902,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2899,
                            "src": "7280:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2903,
                              "name": "_underlyingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3105,
                              "src": "7284:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7302:6:20",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7284:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7280:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2920,
                        "initializationExpression": {
                          "assignments": [
                            2899
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2899,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "7273:1:20",
                              "nodeType": "VariableDeclaration",
                              "scope": 2920,
                              "src": "7265:9:20",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2898,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7265:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2901,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7277:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7265:13:20"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "7310:3:20",
                            "subExpression": {
                              "id": 2906,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2899,
                              "src": "7310:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2908,
                          "nodeType": "ExpressionStatement",
                          "src": "7310:3:20"
                        },
                        "nodeType": "ForStatement",
                        "src": "7260:128:20"
                      },
                      {
                        "expression": {
                          "id": 2921,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2890,
                          "src": "7405:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "functionReturnParameters": 2885,
                        "id": 2922,
                        "nodeType": "Return",
                        "src": "7398:15:20"
                      }
                    ]
                  },
                  "functionSelector": "00113e08",
                  "id": 2924,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalances",
                  "nameLocation": "7107:11:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2881,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7135:8:20"
                  },
                  "parameters": {
                    "id": 2880,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7118:2:20"
                  },
                  "returnParameters": {
                    "id": 2885,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2884,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2924,
                        "src": "7153:16:20",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2882,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7153:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2883,
                          "nodeType": "ArrayTypeName",
                          "src": "7153:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7152:18:20"
                  },
                  "scope": 3082,
                  "src": "7098:323:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2038
                  ],
                  "body": {
                    "id": 2933,
                    "nodeType": "Block",
                    "src": "7504:37:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 2931,
                          "name": "_splitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3102,
                          "src": "7522:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 2930,
                        "id": 2932,
                        "nodeType": "Return",
                        "src": "7515:18:20"
                      }
                    ]
                  },
                  "functionSelector": "4eadcca8",
                  "id": 2934,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSplitRatio",
                  "nameLocation": "7438:13:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2926,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7468:8:20"
                  },
                  "parameters": {
                    "id": 2925,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7451:2:20"
                  },
                  "returnParameters": {
                    "id": 2930,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2929,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2934,
                        "src": "7486:16:20",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2927,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7486:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2928,
                          "nodeType": "ArrayTypeName",
                          "src": "7486:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7485:18:20"
                  },
                  "scope": 3082,
                  "src": "7429:112:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2043
                  ],
                  "body": {
                    "id": 2942,
                    "nodeType": "Block",
                    "src": "7618:40:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 2940,
                          "name": "_depositUsdMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3099,
                          "src": "7636:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2939,
                        "id": 2941,
                        "nodeType": "Return",
                        "src": "7629:21:20"
                      }
                    ]
                  },
                  "functionSelector": "8e4e9018",
                  "id": 2943,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDepositUsdMin",
                  "nameLocation": "7558:16:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2936,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7591:8:20"
                  },
                  "parameters": {
                    "id": 2935,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7574:2:20"
                  },
                  "returnParameters": {
                    "id": 2939,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2938,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2943,
                        "src": "7609:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2937,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7609:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7608:9:20"
                  },
                  "scope": 3082,
                  "src": "7549:109:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2050
                  ],
                  "body": {
                    "id": 2953,
                    "nodeType": "Block",
                    "src": "7795:41:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 2951,
                          "name": "_allowedActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3109,
                          "src": "7813:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage",
                            "typeString": "enum Enums.ActionCall[] storage ref"
                          }
                        },
                        "functionReturnParameters": 2950,
                        "id": 2952,
                        "nodeType": "Return",
                        "src": "7806:22:20"
                      }
                    ]
                  },
                  "functionSelector": "2494452d",
                  "id": 2954,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllowedActions",
                  "nameLocation": "7675:17:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2945,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7736:8:20"
                  },
                  "parameters": {
                    "id": 2944,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7692:2:20"
                  },
                  "returnParameters": {
                    "id": 2950,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2949,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2954,
                        "src": "7763:25:20",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2947,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2946,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "7763:5:20",
                                "7769:10:20"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2202,
                              "src": "7763:16:20"
                            },
                            "referencedDeclaration": 2202,
                            "src": "7763:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2202",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 2948,
                          "nodeType": "ArrayTypeName",
                          "src": "7763:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7762:27:20"
                  },
                  "scope": 3082,
                  "src": "7666:170:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2060
                  ],
                  "body": {
                    "id": 2990,
                    "nodeType": "Block",
                    "src": "8109:191:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "8128:26:20",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 2965,
                                  "name": "_isUnderlyingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3113,
                                  "src": "8129:18:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 2967,
                                "indexExpression": {
                                  "id": 2966,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2956,
                                  "src": "8148:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8129:25:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e20657869737473",
                              "id": 2969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8156:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3db9ad693b88c6e4fb0e48ab391a338f8a5d940c93fde8dc913f7afc81f17d10",
                                "typeString": "literal_string \"Token exists\""
                              },
                              "value": "Token exists"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3db9ad693b88c6e4fb0e48ab391a338f8a5d940c93fde8dc913f7afc81f17d10",
                                "typeString": "literal_string \"Token exists\""
                              }
                            ],
                            "id": 2964,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8120:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8120:51:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2971,
                        "nodeType": "ExpressionStatement",
                        "src": "8120:51:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2975,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2956,
                              "src": "8207:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2972,
                              "name": "_underlyingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3105,
                              "src": "8184:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8202:4:20",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8184:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8184:29:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2977,
                        "nodeType": "ExpressionStatement",
                        "src": "8184:29:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2981,
                              "name": "ratio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2958,
                              "src": "8241:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2978,
                              "name": "_splitRatio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3102,
                              "src": "8224:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8236:4:20",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8224:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 2982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8224:23:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2983,
                        "nodeType": "ExpressionStatement",
                        "src": "8224:23:20"
                      },
                      {
                        "expression": {
                          "id": 2988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2984,
                              "name": "_isUnderlyingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3113,
                              "src": "8260:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2986,
                            "indexExpression": {
                              "id": 2985,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2956,
                              "src": "8279:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8260:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8288:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8260:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2989,
                        "nodeType": "ExpressionStatement",
                        "src": "8260:32:20"
                      }
                    ]
                  },
                  "functionSelector": "af81c5b9",
                  "id": 2991,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2962,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2961,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "8099:9:20"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "8099:9:20"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8099:9:20"
                    }
                  ],
                  "name": "addToken",
                  "nameLocation": "8017:8:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2960,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "8090:8:20"
                  },
                  "parameters": {
                    "id": 2959,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2956,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8044:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2991,
                        "src": "8036:13:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2955,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8036:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2958,
                        "mutability": "mutable",
                        "name": "ratio",
                        "nameLocation": "8068:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2991,
                        "src": "8060:13:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2957,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8060:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8025:55:20"
                  },
                  "returnParameters": {
                    "id": 2963,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8109:0:20"
                  },
                  "scope": 3082,
                  "src": "8008:292:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2065
                  ],
                  "body": {
                    "id": 3080,
                    "nodeType": "Block",
                    "src": "8372:690:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3000,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3113,
                                "src": "8391:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 3002,
                              "indexExpression": {
                                "id": 3001,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2993,
                                "src": "8410:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8391:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e206e6f7420666f756e64",
                              "id": 3003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8418:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_487af3faa279cd1df07c0d1897feb1b8a94d7a439a5fcca3a8f816912eee96c2",
                                "typeString": "literal_string \"Token not found\""
                              },
                              "value": "Token not found"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_487af3faa279cd1df07c0d1897feb1b8a94d7a439a5fcca3a8f816912eee96c2",
                                "typeString": "literal_string \"Token not found\""
                              }
                            ],
                            "id": 2999,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8383:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8383:53:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3005,
                        "nodeType": "ExpressionStatement",
                        "src": "8383:53:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3013,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8501:4:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MultiTokenPool_$3082",
                                          "typeString": "contract MultiTokenPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_MultiTokenPool_$3082",
                                          "typeString": "contract MultiTokenPool"
                                        }
                                      ],
                                      "id": 3012,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8493:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3011,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8493:7:20",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3014,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8493:13:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 3008,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2993,
                                        "src": "8476:5:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3007,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 877,
                                      "src": "8469:6:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 3009,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8469:13:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$877",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3010,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8483:9:20",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 834,
                                  "src": "8469:23:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 3015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8469:38:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8511:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8469:43:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f6e2d7a65726f2062616c616e6365",
                              "id": 3018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8527:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8475eb1d5b3d67d1054f96b81bd9eb461071f90775ea9ca975c1fc6c3cfd6d67",
                                "typeString": "literal_string \"Non-zero balance\""
                              },
                              "value": "Non-zero balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8475eb1d5b3d67d1054f96b81bd9eb461071f90775ea9ca975c1fc6c3cfd6d67",
                                "typeString": "literal_string \"Non-zero balance\""
                              }
                            ],
                            "id": 3006,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8447:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8447:109:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3020,
                        "nodeType": "ExpressionStatement",
                        "src": "8447:109:20"
                      },
                      {
                        "body": {
                          "id": 3078,
                          "nodeType": "Block",
                          "src": "8624:431:20",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 3032,
                                    "name": "_underlyingTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3105,
                                    "src": "8643:17:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 3034,
                                  "indexExpression": {
                                    "id": 3033,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3022,
                                    "src": "8661:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8643:20:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 3035,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2993,
                                  "src": "8667:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "8643:29:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3077,
                              "nodeType": "IfStatement",
                              "src": "8639:405:20",
                              "trueBody": {
                                "id": 3076,
                                "nodeType": "Block",
                                "src": "8674:370:20",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 3046,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 3037,
                                          "name": "_underlyingTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3105,
                                          "src": "8693:17:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 3039,
                                        "indexExpression": {
                                          "id": 3038,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3022,
                                          "src": "8711:1:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "8693:20:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 3040,
                                          "name": "_underlyingTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3105,
                                          "src": "8716:17:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 3045,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 3044,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 3041,
                                              "name": "_underlyingTokens",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3105,
                                              "src": "8756:17:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                "typeString": "address[] storage ref"
                                              }
                                            },
                                            "id": 3042,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "8774:6:20",
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "8756:24:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 3043,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8783:1:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "8756:28:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8716:87:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "8693:110:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3047,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8693:110:20"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 3048,
                                          "name": "_underlyingTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3105,
                                          "src": "8822:17:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 3050,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8840:3:20",
                                        "memberName": "pop",
                                        "nodeType": "MemberAccess",
                                        "src": "8822:21:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                          "typeString": "function (address[] storage pointer)"
                                        }
                                      },
                                      "id": 3051,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8822:23:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3052,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8822:23:20"
                                  },
                                  {
                                    "expression": {
                                      "id": 3062,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 3053,
                                          "name": "_splitRatio",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3102,
                                          "src": "8864:11:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 3055,
                                        "indexExpression": {
                                          "id": 3054,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3022,
                                          "src": "8876:1:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "8864:14:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 3056,
                                          "name": "_splitRatio",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3102,
                                          "src": "8881:11:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 3061,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 3060,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 3057,
                                              "name": "_splitRatio",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3102,
                                              "src": "8893:11:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 3058,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "8905:6:20",
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "8893:18:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 3059,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8914:1:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "8893:22:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8881:35:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8864:52:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3063,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8864:52:20"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 3064,
                                          "name": "_splitRatio",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3102,
                                          "src": "8935:11:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 3066,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8947:3:20",
                                        "memberName": "pop",
                                        "nodeType": "MemberAccess",
                                        "src": "8935:15:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                          "typeString": "function (uint256[] storage pointer)"
                                        }
                                      },
                                      "id": 3067,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8935:17:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3068,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8935:17:20"
                                  },
                                  {
                                    "expression": {
                                      "id": 3073,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 3069,
                                          "name": "_isUnderlyingToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3113,
                                          "src": "8971:18:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                            "typeString": "mapping(address => bool)"
                                          }
                                        },
                                        "id": 3071,
                                        "indexExpression": {
                                          "id": 3070,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2993,
                                          "src": "8990:5:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "8971:25:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "66616c7365",
                                        "id": 3072,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8999:5:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
                                      "src": "8971:33:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3074,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8971:33:20"
                                  },
                                  {
                                    "id": 3075,
                                    "nodeType": "Break",
                                    "src": "9023:5:20"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3025,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3022,
                            "src": "8589:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3026,
                              "name": "_underlyingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3105,
                              "src": "8593:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8611:6:20",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8593:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8589:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3079,
                        "initializationExpression": {
                          "assignments": [
                            3022
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3022,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8582:1:20",
                              "nodeType": "VariableDeclaration",
                              "scope": 3079,
                              "src": "8574:9:20",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3021,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8574:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3024,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8586:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8574:13:20"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8619:3:20",
                            "subExpression": {
                              "id": 3029,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3022,
                              "src": "8619:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3031,
                          "nodeType": "ExpressionStatement",
                          "src": "8619:3:20"
                        },
                        "nodeType": "ForStatement",
                        "src": "8569:486:20"
                      }
                    ]
                  },
                  "functionSelector": "5fa7b584",
                  "id": 3081,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2997,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2996,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "8362:9:20"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "8362:9:20"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8362:9:20"
                    }
                  ],
                  "name": "removeToken",
                  "nameLocation": "8317:11:20",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2995,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "8353:8:20"
                  },
                  "parameters": {
                    "id": 2994,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2993,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8337:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3081,
                        "src": "8329:13:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2992,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8329:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8328:15:20"
                  },
                  "returnParameters": {
                    "id": 2998,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8372:0:20"
                  },
                  "scope": 3082,
                  "src": "8308:754:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3083,
              "src": "659:8406:20",
              "usedErrors": [
                13,
                18,
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                24,
                811,
                820,
                1961,
                1971,
                1979
              ]
            }
          ],
          "src": "40:9027:20"
        },
        "id": 20
      },
      "contracts/pool/PoolActions.sol": {
        "ast": {
          "absolutePath": "contracts/pool/PoolActions.sol",
          "exportedSymbols": {
            "Enums": [
              2203
            ],
            "IERC20": [
              877
            ],
            "IUniswapV2Router02": [
              1329
            ],
            "IWETH": [
              2192
            ],
            "PoolActions": [
              3573
            ]
          },
          "id": 3574,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3084,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:21"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "../lib/Enums.sol",
              "id": 3086,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3574,
              "sourceUnit": 2204,
              "src": "68:39:21",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3085,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2203,
                    "src": "76:5:21",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IWETH.sol",
              "file": "../interfaces/IWETH.sol",
              "id": 3088,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3574,
              "sourceUnit": 2193,
              "src": "109:46:21",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3087,
                    "name": "IWETH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2192,
                    "src": "117:5:21",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 3090,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3574,
              "sourceUnit": 878,
              "src": "157:70:21",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3089,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "165:6:21",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
              "file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
              "id": 3092,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3574,
              "sourceUnit": 1330,
              "src": "229:101:21",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3091,
                    "name": "IUniswapV2Router02",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1329,
                    "src": "237:18:21",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "PoolActions",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3573,
              "linearizedBaseContracts": [
                3573
              ],
              "name": "PoolActions",
              "nameLocation": "350:11:21",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 3095,
                  "mutability": "immutable",
                  "name": "_swapRouter",
                  "nameLocation": "407:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3573,
                  "src": "369:49:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                    "typeString": "contract IUniswapV2Router02"
                  },
                  "typeName": {
                    "id": 3094,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3093,
                      "name": "IUniswapV2Router02",
                      "nameLocations": [
                        "369:18:21"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1329,
                      "src": "369:18:21"
                    },
                    "referencedDeclaration": 1329,
                    "src": "369:18:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3097,
                  "mutability": "immutable",
                  "name": "_factory",
                  "nameLocation": "452:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3573,
                  "src": "425:35:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "425:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3099,
                  "mutability": "mutable",
                  "name": "_depositUsdMin",
                  "nameLocation": "486:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3573,
                  "src": "469:31:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3102,
                  "mutability": "mutable",
                  "name": "_splitRatio",
                  "nameLocation": "528:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3573,
                  "src": "509:30:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3100,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "509:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3101,
                    "nodeType": "ArrayTypeName",
                    "src": "509:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3105,
                  "mutability": "mutable",
                  "name": "_underlyingTokens",
                  "nameLocation": "565:17:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3573,
                  "src": "546:36:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3103,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "546:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3104,
                    "nodeType": "ArrayTypeName",
                    "src": "546:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3109,
                  "mutability": "mutable",
                  "name": "_allowedActions",
                  "nameLocation": "619:15:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3573,
                  "src": "591:43:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage",
                    "typeString": "enum Enums.ActionCall[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3107,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3106,
                        "name": "Enums.ActionCall",
                        "nameLocations": [
                          "591:5:21",
                          "597:10:21"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2202,
                        "src": "591:16:21"
                      },
                      "referencedDeclaration": 2202,
                      "src": "591:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ActionCall_$2202",
                        "typeString": "enum Enums.ActionCall"
                      }
                    },
                    "id": 3108,
                    "nodeType": "ArrayTypeName",
                    "src": "591:18:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_ActionCall_$2202_$dyn_storage_ptr",
                      "typeString": "enum Enums.ActionCall[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3113,
                  "mutability": "mutable",
                  "name": "_isUnderlyingToken",
                  "nameLocation": "677:18:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3573,
                  "src": "643:52:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 3112,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3110,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "651:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "643:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3111,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "662:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 3116,
                  "mutability": "constant",
                  "name": "DIVISOR",
                  "nameLocation": "721:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3573,
                  "src": "704:33:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "704:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31305f303030",
                    "id": 3115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "731:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10_000"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 3119,
                  "mutability": "constant",
                  "name": "SONIC_COIN",
                  "nameLocation": "761:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3573,
                  "src": "744:72:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
                    "id": 3118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "774:42:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3122,
                    "nodeType": "Block",
                    "src": "852:2:21",
                    "statements": []
                  },
                  "id": 3123,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3120,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "832:2:21"
                  },
                  "returnParameters": {
                    "id": 3121,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "852:0:21"
                  },
                  "scope": 3573,
                  "src": "825:29:21",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3293,
                    "nodeType": "Block",
                    "src": "964:1586:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3132,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3113,
                                "src": "983:18:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 3134,
                              "indexExpression": {
                                "id": 3133,
                                "name": "tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3128,
                                "src": "1002:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "983:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e",
                              "id": 3135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1013:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              },
                              "value": "Invalid token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              }
                            ],
                            "id": 3131,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "975:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "975:54:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3137,
                        "nodeType": "ExpressionStatement",
                        "src": "975:54:21"
                      },
                      {
                        "body": {
                          "id": 3291,
                          "nodeType": "Block",
                          "src": "1088:1455:21",
                          "statements": [
                            {
                              "assignments": [
                                3150
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3150,
                                  "mutability": "mutable",
                                  "name": "tokenIn",
                                  "nameLocation": "1111:7:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3291,
                                  "src": "1103:15:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3149,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1103:7:21",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3154,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3151,
                                  "name": "tokensIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3126,
                                  "src": "1121:8:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 3153,
                                "indexExpression": {
                                  "id": 3152,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3139,
                                  "src": "1130:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1121:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1103:29:21"
                            },
                            {
                              "assignments": [
                                3156
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3156,
                                  "mutability": "mutable",
                                  "name": "amountIn",
                                  "nameLocation": "1155:8:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3291,
                                  "src": "1147:16:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3155,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1147:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3160,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 3158,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3150,
                                    "src": "1177:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3157,
                                  "name": "getBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3572,
                                  "src": "1166:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 3159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1166:19:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1147:38:21"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3161,
                                  "name": "amountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3156,
                                  "src": "1206:8:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3162,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1218:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1206:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3165,
                              "nodeType": "IfStatement",
                              "src": "1202:27:21",
                              "trueBody": {
                                "id": 3164,
                                "nodeType": "Continue",
                                "src": "1221:8:21"
                              }
                            },
                            {
                              "assignments": [
                                3170
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3170,
                                  "mutability": "mutable",
                                  "name": "path",
                                  "nameLocation": "1263:4:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3291,
                                  "src": "1246:21:21",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3168,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1246:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3169,
                                    "nodeType": "ArrayTypeName",
                                    "src": "1246:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3176,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 3174,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1284:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "id": 3173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "1270:13:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (address[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3171,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1274:7:21",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3172,
                                    "nodeType": "ArrayTypeName",
                                    "src": "1274:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  }
                                },
                                "id": 3175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1270:16:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1246:40:21"
                            },
                            {
                              "expression": {
                                "id": 3188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3177,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "1303:4:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3179,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 3178,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1308:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1303:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3182,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3180,
                                      "name": "tokenIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3150,
                                      "src": "1313:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3181,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3119,
                                      "src": "1324:10:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "1313:21:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 3186,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3150,
                                    "src": "1358:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 3187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "1313:52:21",
                                  "trueExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3183,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3095,
                                        "src": "1337:11:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 3184,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1349:4:21",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 945,
                                      "src": "1337:16:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 3185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1337:18:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1303:62:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3189,
                              "nodeType": "ExpressionStatement",
                              "src": "1303:62:21"
                            },
                            {
                              "expression": {
                                "id": 3201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3190,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "1380:4:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3192,
                                  "indexExpression": {
                                    "hexValue": "31",
                                    "id": 3191,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1385:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1380:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3195,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3193,
                                      "name": "tokenOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3128,
                                      "src": "1390:8:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3194,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3119,
                                      "src": "1402:10:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "1390:22:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 3199,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3128,
                                    "src": "1436:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 3200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "1390:54:21",
                                  "trueExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3196,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3095,
                                        "src": "1415:11:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 3197,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1427:4:21",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 945,
                                      "src": "1415:16:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 3198,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1415:18:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1380:64:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3202,
                              "nodeType": "ExpressionStatement",
                              "src": "1380:64:21"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3203,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3150,
                                  "src": "1465:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 3204,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3128,
                                  "src": "1476:8:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1465:19:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 3210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3208,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3150,
                                    "src": "1539:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 3209,
                                    "name": "SONIC_COIN",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3119,
                                    "src": "1550:10:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "1539:21:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3229,
                                      "name": "tokenOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3128,
                                      "src": "1821:8:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3230,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3119,
                                      "src": "1833:10:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "1821:22:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 3287,
                                    "nodeType": "Block",
                                    "src": "2190:342:21",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 3266,
                                                  "name": "_swapRouter",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3095,
                                                  "src": "2241:11:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                    "typeString": "contract IUniswapV2Router02"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                    "typeString": "contract IUniswapV2Router02"
                                                  }
                                                ],
                                                "id": 3265,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "2233:7:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 3264,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "2233:7:21",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 3267,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "2233:20:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 3268,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3156,
                                              "src": "2255:8:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 3261,
                                                  "name": "tokenIn",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3150,
                                                  "src": "2216:7:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 3260,
                                                "name": "IERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "2209:6:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                                  "typeString": "type(contract IERC20)"
                                                }
                                              },
                                              "id": 3262,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "2209:15:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$877",
                                                "typeString": "contract IERC20"
                                              }
                                            },
                                            "id": 3263,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "2225:7:21",
                                            "memberName": "approve",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 864,
                                            "src": "2209:23:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                          },
                                          "id": 3269,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2209:55:21",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 3270,
                                        "nodeType": "ExpressionStatement",
                                        "src": "2209:55:21"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 3274,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3156,
                                              "src": "2344:8:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "hexValue": "30",
                                              "id": 3275,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2375:1:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            {
                                              "id": 3276,
                                              "name": "path",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3170,
                                              "src": "2415:4:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              }
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "id": 3279,
                                                  "name": "this",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -28,
                                                  "src": "2450:4:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_PoolActions_$3573",
                                                    "typeString": "contract PoolActions"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_PoolActions_$3573",
                                                    "typeString": "contract PoolActions"
                                                  }
                                                ],
                                                "id": 3278,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "2442:7:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 3277,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "2442:7:21",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 3280,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "2442:13:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3284,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 3281,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "2478:5:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 3282,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "2484:9:21",
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "2478:15:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 3283,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2496:1:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "2478:19:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 3271,
                                              "name": "_swapRouter",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3095,
                                              "src": "2285:11:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                "typeString": "contract IUniswapV2Router02"
                                              }
                                            },
                                            "id": 3273,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "2297:24:21",
                                            "memberName": "swapExactTokensForTokens",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1104,
                                            "src": "2285:36:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 3285,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2285:231:21",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 3286,
                                        "nodeType": "ExpressionStatement",
                                        "src": "2285:231:21"
                                      }
                                    ]
                                  },
                                  "id": 3288,
                                  "nodeType": "IfStatement",
                                  "src": "1817:715:21",
                                  "trueBody": {
                                    "id": 3259,
                                    "nodeType": "Block",
                                    "src": "1845:339:21",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 3238,
                                                  "name": "_swapRouter",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3095,
                                                  "src": "1896:11:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                    "typeString": "contract IUniswapV2Router02"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                    "typeString": "contract IUniswapV2Router02"
                                                  }
                                                ],
                                                "id": 3237,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "1888:7:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 3236,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "1888:7:21",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 3239,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "1888:20:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 3240,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3156,
                                              "src": "1910:8:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 3233,
                                                  "name": "tokenIn",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3150,
                                                  "src": "1871:7:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 3232,
                                                "name": "IERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "1864:6:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                                  "typeString": "type(contract IERC20)"
                                                }
                                              },
                                              "id": 3234,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "1864:15:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$877",
                                                "typeString": "contract IERC20"
                                              }
                                            },
                                            "id": 3235,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1880:7:21",
                                            "memberName": "approve",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 864,
                                            "src": "1864:23:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                          },
                                          "id": 3241,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1864:55:21",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 3242,
                                        "nodeType": "ExpressionStatement",
                                        "src": "1864:55:21"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 3246,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3156,
                                              "src": "1996:8:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "hexValue": "30",
                                              "id": 3247,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2027:1:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            {
                                              "id": 3248,
                                              "name": "path",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3170,
                                              "src": "2067:4:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              }
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "id": 3251,
                                                  "name": "this",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -28,
                                                  "src": "2102:4:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_PoolActions_$3573",
                                                    "typeString": "contract PoolActions"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_PoolActions_$3573",
                                                    "typeString": "contract PoolActions"
                                                  }
                                                ],
                                                "id": 3250,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "2094:7:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 3249,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "2094:7:21",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 3252,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "2094:13:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3256,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 3253,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "2130:5:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 3254,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "2136:9:21",
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "2130:15:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 3255,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2148:1:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "2130:19:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 3243,
                                              "name": "_swapRouter",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3095,
                                              "src": "1940:11:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                "typeString": "contract IUniswapV2Router02"
                                              }
                                            },
                                            "id": 3245,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1952:21:21",
                                            "memberName": "swapExactTokensForETH",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1170,
                                            "src": "1940:33:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 3257,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1940:228:21",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 3258,
                                        "nodeType": "ExpressionStatement",
                                        "src": "1940:228:21"
                                      }
                                    ]
                                  }
                                },
                                "id": 3289,
                                "nodeType": "IfStatement",
                                "src": "1535:997:21",
                                "trueBody": {
                                  "id": 3228,
                                  "nodeType": "Block",
                                  "src": "1562:249:21",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 3216,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1654:1:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          {
                                            "id": 3217,
                                            "name": "path",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3170,
                                            "src": "1694:4:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 3220,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "1729:4:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_PoolActions_$3573",
                                                  "typeString": "contract PoolActions"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_PoolActions_$3573",
                                                  "typeString": "contract PoolActions"
                                                }
                                              ],
                                              "id": 3219,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1721:7:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 3218,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1721:7:21",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 3221,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1721:13:21",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3225,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 3222,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "1757:5:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 3223,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "1763:9:21",
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "1757:15:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 3224,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1775:1:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "1757:19:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 3211,
                                              "name": "_swapRouter",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3095,
                                              "src": "1581:11:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                "typeString": "contract IUniswapV2Router02"
                                              }
                                            },
                                            "id": 3213,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1593:21:21",
                                            "memberName": "swapExactETHForTokens",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1136,
                                            "src": "1581:33:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                              "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 3215,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "names": [
                                            "value"
                                          ],
                                          "nodeType": "FunctionCallOptions",
                                          "options": [
                                            {
                                              "id": 3214,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3156,
                                              "src": "1622:8:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "src": "1581:50:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                                            "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                                          }
                                        },
                                        "id": 3226,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1581:214:21",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 3227,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1581:214:21"
                                    }
                                  ]
                                }
                              },
                              "id": 3290,
                              "nodeType": "IfStatement",
                              "src": "1461:1071:21",
                              "trueBody": {
                                "id": 3207,
                                "nodeType": "Block",
                                "src": "1486:43:21",
                                "statements": [
                                  {
                                    "id": 3206,
                                    "nodeType": "Continue",
                                    "src": "1505:8:21"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3142,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3139,
                            "src": "1062:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3143,
                              "name": "tokensIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3126,
                              "src": "1066:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1075:6:21",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1066:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1062:19:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3292,
                        "initializationExpression": {
                          "assignments": [
                            3139
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3139,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1055:1:21",
                              "nodeType": "VariableDeclaration",
                              "scope": 3292,
                              "src": "1047:9:21",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3138,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1047:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3141,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1059:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1047:13:21"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1083:3:21",
                            "subExpression": {
                              "id": 3146,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3139,
                              "src": "1083:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3148,
                          "nodeType": "ExpressionStatement",
                          "src": "1083:3:21"
                        },
                        "nodeType": "ForStatement",
                        "src": "1042:1501:21"
                      }
                    ]
                  },
                  "id": 3294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_swapToSingle",
                  "nameLocation": "871:13:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3126,
                        "mutability": "mutable",
                        "name": "tokensIn",
                        "nameLocation": "912:8:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3294,
                        "src": "895:25:21",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3124,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "895:7:21",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3125,
                          "nodeType": "ArrayTypeName",
                          "src": "895:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3128,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "939:8:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3294,
                        "src": "931:16:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3127,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "884:70:21"
                  },
                  "returnParameters": {
                    "id": 3130,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "964:0:21"
                  },
                  "scope": 3573,
                  "src": "862:1688:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3494,
                    "nodeType": "Block",
                    "src": "2633:1808:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3303,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3113,
                                "src": "2652:18:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 3305,
                              "indexExpression": {
                                "id": 3304,
                                "name": "tokenIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3296,
                                "src": "2671:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2652:27:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e",
                              "id": 3306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2681:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              },
                              "value": "Invalid token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              }
                            ],
                            "id": 3302,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2644:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2644:53:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3308,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:53:21"
                      },
                      {
                        "assignments": [
                          3310
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3310,
                            "mutability": "mutable",
                            "name": "amountIns",
                            "nameLocation": "2718:9:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3494,
                            "src": "2710:17:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3309,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2710:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3329,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3311,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3296,
                              "src": "2730:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3312,
                              "name": "SONIC_COIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3119,
                              "src": "2741:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2730:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3325,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2838:4:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PoolActions_$3573",
                                      "typeString": "contract PoolActions"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PoolActions_$3573",
                                      "typeString": "contract PoolActions"
                                    }
                                  ],
                                  "id": 3324,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2830:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3323,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2830:7:21",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2830:13:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3320,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3296,
                                    "src": "2811:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3319,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 877,
                                  "src": "2804:6:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 3321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2804:15:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$877",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 3322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2820:9:21",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 834,
                              "src": "2804:25:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 3327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2804:40:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "2730:114:21",
                          "trueExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3316,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2775:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PoolActions_$3573",
                                    "typeString": "contract PoolActions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PoolActions_$3573",
                                    "typeString": "contract PoolActions"
                                  }
                                ],
                                "id": 3315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2767:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3314,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2767:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2767:13:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 3318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2781:7:21",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "2767:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2710:134:21"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3330,
                            "name": "amountIns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3310,
                            "src": "2861:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2874:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2861:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3334,
                        "nodeType": "IfStatement",
                        "src": "2857:27:21",
                        "trueBody": {
                          "functionReturnParameters": 3301,
                          "id": 3333,
                          "nodeType": "Return",
                          "src": "2877:7:21"
                        }
                      },
                      {
                        "assignments": [
                          3336
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3336,
                            "mutability": "mutable",
                            "name": "amountIn",
                            "nameLocation": "2904:8:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3494,
                            "src": "2896:16:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3335,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2896:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3342,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3337,
                                "name": "amountIns",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3310,
                                "src": "2916:9:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "expression": {
                                  "id": 3338,
                                  "name": "tokensOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3299,
                                  "src": "2928:9:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 3339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2938:6:21",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2928:16:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2916:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3341,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2915:30:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2896:49:21"
                      },
                      {
                        "body": {
                          "id": 3492,
                          "nodeType": "Block",
                          "src": "3005:1429:21",
                          "statements": [
                            {
                              "assignments": [
                                3355
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3355,
                                  "mutability": "mutable",
                                  "name": "tokenOut",
                                  "nameLocation": "3028:8:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3492,
                                  "src": "3020:16:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3354,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3020:7:21",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3359,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3356,
                                  "name": "tokensOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3299,
                                  "src": "3039:9:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 3358,
                                "indexExpression": {
                                  "id": 3357,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3344,
                                  "src": "3049:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3039:12:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3020:31:21"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 3361,
                                      "name": "_isUnderlyingToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3113,
                                      "src": "3074:18:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 3363,
                                    "indexExpression": {
                                      "id": 3362,
                                      "name": "tokenOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3355,
                                      "src": "3093:8:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3074:28:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e76616c696420746f6b656e",
                                    "id": 3364,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3104:15:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                      "typeString": "literal_string \"Invalid token\""
                                    },
                                    "value": "Invalid token"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                      "typeString": "literal_string \"Invalid token\""
                                    }
                                  ],
                                  "id": 3360,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3066:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3066:54:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3366,
                              "nodeType": "ExpressionStatement",
                              "src": "3066:54:21"
                            },
                            {
                              "assignments": [
                                3371
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3371,
                                  "mutability": "mutable",
                                  "name": "path",
                                  "nameLocation": "3154:4:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3492,
                                  "src": "3137:21:21",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3369,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3137:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3370,
                                    "nodeType": "ArrayTypeName",
                                    "src": "3137:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3377,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 3375,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3175:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "id": 3374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "3161:13:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (address[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3372,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3165:7:21",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3373,
                                    "nodeType": "ArrayTypeName",
                                    "src": "3165:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  }
                                },
                                "id": 3376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3161:16:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3137:40:21"
                            },
                            {
                              "expression": {
                                "id": 3389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3378,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3371,
                                    "src": "3194:4:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3380,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 3379,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3199:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3194:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3383,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3381,
                                      "name": "tokenIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3296,
                                      "src": "3204:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3382,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3119,
                                      "src": "3215:10:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "3204:21:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 3387,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3296,
                                    "src": "3249:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 3388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "3204:52:21",
                                  "trueExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3384,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3095,
                                        "src": "3228:11:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 3385,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3240:4:21",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 945,
                                      "src": "3228:16:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 3386,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3228:18:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3194:62:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3390,
                              "nodeType": "ExpressionStatement",
                              "src": "3194:62:21"
                            },
                            {
                              "expression": {
                                "id": 3402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3391,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3371,
                                    "src": "3271:4:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3393,
                                  "indexExpression": {
                                    "hexValue": "31",
                                    "id": 3392,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3276:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3271:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3394,
                                      "name": "tokenOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3355,
                                      "src": "3281:8:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3395,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3119,
                                      "src": "3293:10:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "3281:22:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 3400,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3355,
                                    "src": "3327:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 3401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "3281:54:21",
                                  "trueExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3397,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3095,
                                        "src": "3306:11:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 3398,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3318:4:21",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 945,
                                      "src": "3306:16:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 3399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3306:18:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3271:64:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3403,
                              "nodeType": "ExpressionStatement",
                              "src": "3271:64:21"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3404,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3296,
                                  "src": "3356:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 3405,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3355,
                                  "src": "3367:8:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3356:19:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 3411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3409,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3296,
                                    "src": "3430:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 3410,
                                    "name": "SONIC_COIN",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3119,
                                    "src": "3441:10:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "3430:21:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3432,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3430,
                                      "name": "tokenOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3355,
                                      "src": "3712:8:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3431,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3119,
                                      "src": "3724:10:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "3712:22:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 3488,
                                    "nodeType": "Block",
                                    "src": "4081:342:21",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 3467,
                                                  "name": "_swapRouter",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3095,
                                                  "src": "4132:11:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                    "typeString": "contract IUniswapV2Router02"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                    "typeString": "contract IUniswapV2Router02"
                                                  }
                                                ],
                                                "id": 3466,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4124:7:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 3465,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "4124:7:21",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 3468,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4124:20:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 3469,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3336,
                                              "src": "4146:8:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 3462,
                                                  "name": "tokenIn",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3296,
                                                  "src": "4107:7:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 3461,
                                                "name": "IERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "4100:6:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                                  "typeString": "type(contract IERC20)"
                                                }
                                              },
                                              "id": 3463,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4100:15:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$877",
                                                "typeString": "contract IERC20"
                                              }
                                            },
                                            "id": 3464,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4116:7:21",
                                            "memberName": "approve",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 864,
                                            "src": "4100:23:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                          },
                                          "id": 3470,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4100:55:21",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 3471,
                                        "nodeType": "ExpressionStatement",
                                        "src": "4100:55:21"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 3475,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3336,
                                              "src": "4235:8:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "hexValue": "30",
                                              "id": 3476,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "4266:1:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            {
                                              "id": 3477,
                                              "name": "path",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3371,
                                              "src": "4306:4:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              }
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "id": 3480,
                                                  "name": "this",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -28,
                                                  "src": "4341:4:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_PoolActions_$3573",
                                                    "typeString": "contract PoolActions"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_PoolActions_$3573",
                                                    "typeString": "contract PoolActions"
                                                  }
                                                ],
                                                "id": 3479,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4333:7:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 3478,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "4333:7:21",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 3481,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4333:13:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3485,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 3482,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "4369:5:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 3483,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "4375:9:21",
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "4369:15:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 3484,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4387:1:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "4369:19:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 3472,
                                              "name": "_swapRouter",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3095,
                                              "src": "4176:11:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                "typeString": "contract IUniswapV2Router02"
                                              }
                                            },
                                            "id": 3474,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4188:24:21",
                                            "memberName": "swapExactTokensForTokens",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1104,
                                            "src": "4176:36:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 3486,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4176:231:21",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 3487,
                                        "nodeType": "ExpressionStatement",
                                        "src": "4176:231:21"
                                      }
                                    ]
                                  },
                                  "id": 3489,
                                  "nodeType": "IfStatement",
                                  "src": "3708:715:21",
                                  "trueBody": {
                                    "id": 3460,
                                    "nodeType": "Block",
                                    "src": "3736:339:21",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 3439,
                                                  "name": "_swapRouter",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3095,
                                                  "src": "3787:11:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                    "typeString": "contract IUniswapV2Router02"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                    "typeString": "contract IUniswapV2Router02"
                                                  }
                                                ],
                                                "id": 3438,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "3779:7:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 3437,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "3779:7:21",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 3440,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "3779:20:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 3441,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3336,
                                              "src": "3801:8:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 3434,
                                                  "name": "tokenIn",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3296,
                                                  "src": "3762:7:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 3433,
                                                "name": "IERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "3755:6:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                                  "typeString": "type(contract IERC20)"
                                                }
                                              },
                                              "id": 3435,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "3755:15:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$877",
                                                "typeString": "contract IERC20"
                                              }
                                            },
                                            "id": 3436,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3771:7:21",
                                            "memberName": "approve",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 864,
                                            "src": "3755:23:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                          },
                                          "id": 3442,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3755:55:21",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 3443,
                                        "nodeType": "ExpressionStatement",
                                        "src": "3755:55:21"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 3447,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3336,
                                              "src": "3887:8:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "hexValue": "30",
                                              "id": 3448,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "3918:1:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            {
                                              "id": 3449,
                                              "name": "path",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3371,
                                              "src": "3958:4:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              }
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "id": 3452,
                                                  "name": "this",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -28,
                                                  "src": "3993:4:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_PoolActions_$3573",
                                                    "typeString": "contract PoolActions"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_PoolActions_$3573",
                                                    "typeString": "contract PoolActions"
                                                  }
                                                ],
                                                "id": 3451,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "3985:7:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 3450,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "3985:7:21",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 3453,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "3985:13:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3457,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 3454,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "4021:5:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 3455,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "4027:9:21",
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "4021:15:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 3456,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4039:1:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "4021:19:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 3444,
                                              "name": "_swapRouter",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3095,
                                              "src": "3831:11:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                "typeString": "contract IUniswapV2Router02"
                                              }
                                            },
                                            "id": 3446,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3843:21:21",
                                            "memberName": "swapExactTokensForETH",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1170,
                                            "src": "3831:33:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 3458,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3831:228:21",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 3459,
                                        "nodeType": "ExpressionStatement",
                                        "src": "3831:228:21"
                                      }
                                    ]
                                  }
                                },
                                "id": 3490,
                                "nodeType": "IfStatement",
                                "src": "3426:997:21",
                                "trueBody": {
                                  "id": 3429,
                                  "nodeType": "Block",
                                  "src": "3453:249:21",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 3417,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3545:1:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          {
                                            "id": 3418,
                                            "name": "path",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3371,
                                            "src": "3585:4:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 3421,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "3620:4:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_PoolActions_$3573",
                                                  "typeString": "contract PoolActions"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_PoolActions_$3573",
                                                  "typeString": "contract PoolActions"
                                                }
                                              ],
                                              "id": 3420,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3612:7:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 3419,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3612:7:21",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 3422,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3612:13:21",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3426,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 3423,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "3648:5:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 3424,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "3654:9:21",
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "3648:15:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 3425,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "3666:1:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "3648:19:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 3412,
                                              "name": "_swapRouter",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3095,
                                              "src": "3472:11:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$1329",
                                                "typeString": "contract IUniswapV2Router02"
                                              }
                                            },
                                            "id": 3414,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3484:21:21",
                                            "memberName": "swapExactETHForTokens",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1136,
                                            "src": "3472:33:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                              "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 3416,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "names": [
                                            "value"
                                          ],
                                          "nodeType": "FunctionCallOptions",
                                          "options": [
                                            {
                                              "id": 3415,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3336,
                                              "src": "3513:8:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "src": "3472:50:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                                            "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                                          }
                                        },
                                        "id": 3427,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3472:214:21",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 3428,
                                      "nodeType": "ExpressionStatement",
                                      "src": "3472:214:21"
                                    }
                                  ]
                                }
                              },
                              "id": 3491,
                              "nodeType": "IfStatement",
                              "src": "3352:1071:21",
                              "trueBody": {
                                "id": 3408,
                                "nodeType": "Block",
                                "src": "3377:43:21",
                                "statements": [
                                  {
                                    "id": 3407,
                                    "nodeType": "Continue",
                                    "src": "3396:8:21"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3347,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3344,
                            "src": "2978:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3348,
                              "name": "tokensOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3299,
                              "src": "2982:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2992:6:21",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2982:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2978:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3493,
                        "initializationExpression": {
                          "assignments": [
                            3344
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3344,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2971:1:21",
                              "nodeType": "VariableDeclaration",
                              "scope": 3493,
                              "src": "2963:9:21",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3343,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2963:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3346,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2975:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2963:13:21"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3000:3:21",
                            "subExpression": {
                              "id": 3351,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3344,
                              "src": "3000:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3353,
                          "nodeType": "ExpressionStatement",
                          "src": "3000:3:21"
                        },
                        "nodeType": "ForStatement",
                        "src": "2958:1476:21"
                      }
                    ]
                  },
                  "id": 3495,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_swapToMany",
                  "nameLocation": "2567:11:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3300,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3296,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "2587:7:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3495,
                        "src": "2579:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3295,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2579:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3299,
                        "mutability": "mutable",
                        "name": "tokensOut",
                        "nameLocation": "2613:9:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3495,
                        "src": "2596:26:21",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3297,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2596:7:21",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3298,
                          "nodeType": "ArrayTypeName",
                          "src": "2596:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2578:45:21"
                  },
                  "returnParameters": {
                    "id": 3301,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2633:0:21"
                  },
                  "scope": 3573,
                  "src": "2558:1883:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3544,
                    "nodeType": "Block",
                    "src": "4513:335:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3502,
                                  "name": "newRatios",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3498,
                                  "src": "4532:9:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 3503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4542:6:21",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4532:16:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3504,
                                  "name": "_underlyingTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3105,
                                  "src": "4552:17:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 3505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4570:6:21",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4552:24:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4532:44:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206c656e677468",
                              "id": 3507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4578:16:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7",
                                "typeString": "literal_string \"Invalid length\""
                              },
                              "value": "Invalid length"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7",
                                "typeString": "literal_string \"Invalid length\""
                              }
                            ],
                            "id": 3501,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4524:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4524:71:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3509,
                        "nodeType": "ExpressionStatement",
                        "src": "4524:71:21"
                      },
                      {
                        "assignments": [
                          3511
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3511,
                            "mutability": "mutable",
                            "name": "totalRatio",
                            "nameLocation": "4616:10:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3544,
                            "src": "4608:18:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3510,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4608:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3513,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4629:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4608:22:21"
                      },
                      {
                        "body": {
                          "id": 3531,
                          "nodeType": "Block",
                          "src": "4688:53:21",
                          "statements": [
                            {
                              "expression": {
                                "id": 3529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3525,
                                  "name": "totalRatio",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3511,
                                  "src": "4703:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 3526,
                                    "name": "newRatios",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3498,
                                    "src": "4717:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 3528,
                                  "indexExpression": {
                                    "id": 3527,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3515,
                                    "src": "4727:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4717:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4703:26:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3530,
                              "nodeType": "ExpressionStatement",
                              "src": "4703:26:21"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3518,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3515,
                            "src": "4661:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3519,
                              "name": "newRatios",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3498,
                              "src": "4665:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 3520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4675:6:21",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4665:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4661:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3532,
                        "initializationExpression": {
                          "assignments": [
                            3515
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3515,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4654:1:21",
                              "nodeType": "VariableDeclaration",
                              "scope": 3532,
                              "src": "4646:9:21",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3514,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4646:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3517,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4658:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4646:13:21"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4683:3:21",
                            "subExpression": {
                              "id": 3522,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3515,
                              "src": "4683:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3524,
                          "nodeType": "ExpressionStatement",
                          "src": "4683:3:21"
                        },
                        "nodeType": "ForStatement",
                        "src": "4641:100:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3534,
                                "name": "totalRatio",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3511,
                                "src": "4761:10:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 3535,
                                "name": "DIVISOR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3116,
                                "src": "4775:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4761:21:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420726174696f2073756d",
                              "id": 3537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4784:19:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38835bc47bdd0a0bfcd75c0ecaae2f486482e496d2f52fa1b049d72d895eb704",
                                "typeString": "literal_string \"Invalid ratio sum\""
                              },
                              "value": "Invalid ratio sum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38835bc47bdd0a0bfcd75c0ecaae2f486482e496d2f52fa1b049d72d895eb704",
                                "typeString": "literal_string \"Invalid ratio sum\""
                              }
                            ],
                            "id": 3533,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4753:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4753:51:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3539,
                        "nodeType": "ExpressionStatement",
                        "src": "4753:51:21"
                      },
                      {
                        "expression": {
                          "id": 3542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3540,
                            "name": "_splitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3102,
                            "src": "4817:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3541,
                            "name": "newRatios",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3498,
                            "src": "4831:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "4817:23:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 3543,
                        "nodeType": "ExpressionStatement",
                        "src": "4817:23:21"
                      }
                    ]
                  },
                  "id": 3545,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_adjustSplitRatio",
                  "nameLocation": "4458:17:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3499,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3498,
                        "mutability": "mutable",
                        "name": "newRatios",
                        "nameLocation": "4493:9:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3545,
                        "src": "4476:26:21",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3496,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4476:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3497,
                          "nodeType": "ArrayTypeName",
                          "src": "4476:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4475:28:21"
                  },
                  "returnParameters": {
                    "id": 3500,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4513:0:21"
                  },
                  "scope": 3573,
                  "src": "4449:399:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3571,
                    "nodeType": "Block",
                    "src": "4923:157:21",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3552,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3547,
                              "src": "4954:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3553,
                              "name": "SONIC_COIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3119,
                              "src": "4963:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4954:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3566,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5066:4:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PoolActions_$3573",
                                      "typeString": "contract PoolActions"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PoolActions_$3573",
                                      "typeString": "contract PoolActions"
                                    }
                                  ],
                                  "id": 3565,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5058:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3564,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5058:7:21",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5058:13:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3561,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3547,
                                    "src": "5041:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3560,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 877,
                                  "src": "5034:6:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 3562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5034:13:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$877",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 3563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5048:9:21",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 834,
                              "src": "5034:23:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 3568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5034:38:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "4954:118:21",
                          "trueExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3557,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5001:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PoolActions_$3573",
                                    "typeString": "contract PoolActions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PoolActions_$3573",
                                    "typeString": "contract PoolActions"
                                  }
                                ],
                                "id": 3556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4993:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3555,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4993:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4993:13:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 3559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5007:7:21",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "4993:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3551,
                        "id": 3570,
                        "nodeType": "Return",
                        "src": "4934:138:21"
                      }
                    ]
                  },
                  "id": 3572,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalance",
                  "nameLocation": "4865:10:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3548,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3547,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4884:5:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3572,
                        "src": "4876:13:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4875:15:21"
                  },
                  "returnParameters": {
                    "id": 3551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3550,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3572,
                        "src": "4914:7:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4914:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4913:9:21"
                  },
                  "scope": 3573,
                  "src": "4856:224:21",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3574,
              "src": "332:4751:21",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:5045:21"
        },
        "id": 21
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
        "IUniswapV2Router01": {
          "abi": [
            {
              "inputs": [],
              "name": "WETH",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountADesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBDesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenDesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidityETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveOut",
                  "type": "uint256"
                }
              ],
              "name": "getAmountIn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveOut",
                  "type": "uint256"
                }
              ],
              "name": "getAmountOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsIn",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsOut",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveB",
                  "type": "uint256"
                }
              ],
              "name": "quote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidityETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityETHWithPermit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityWithPermit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapETHForExactTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactETHForTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForETH",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMax",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensForExactETH",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMax",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensForExactTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "WETH()": "ad5c4648",
              "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
              "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
              "factory()": "c45a0155",
              "getAmountIn(uint256,uint256,uint256)": "85f8c259",
              "getAmountOut(uint256,uint256,uint256)": "054d50d4",
              "getAmountsIn(uint256,address[])": "1f00ca74",
              "getAmountsOut(uint256,address[])": "d06ca61f",
              "quote(uint256,uint256,uint256)": "ad615dec",
              "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
              "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
              "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
              "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
              "swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
              "swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
              "swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
              "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
              "swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
              "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}"
        }
      },
      "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
        "IUniswapV2Router02": {
          "abi": [
            {
              "inputs": [],
              "name": "WETH",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountADesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBDesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenDesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidityETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveOut",
                  "type": "uint256"
                }
              ],
              "name": "getAmountIn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveOut",
                  "type": "uint256"
                }
              ],
              "name": "getAmountOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsIn",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsOut",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveB",
                  "type": "uint256"
                }
              ],
              "name": "quote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidityETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityETHWithPermit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityWithPermit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapETHForExactTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactETHForTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForETH",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMax",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensForExactETH",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMax",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensForExactTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "WETH()": "ad5c4648",
              "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
              "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
              "factory()": "c45a0155",
              "getAmountIn(uint256,uint256,uint256)": "85f8c259",
              "getAmountOut(uint256,uint256,uint256)": "054d50d4",
              "getAmountsIn(uint256,address[])": "1f00ca74",
              "getAmountsOut(uint256,address[])": "d06ca61f",
              "quote(uint256,uint256,uint256)": "ad615dec",
              "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
              "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
              "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
              "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
              "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
              "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
              "swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
              "swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
              "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
              "swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
              "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
              "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
              "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
              "swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
              "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}"
        }
      },
      "contracts/Factory.sol": {
        "Factory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "revenue_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "dataFeed_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapRouter_",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "splitRatio",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "enum Enums.Visibility",
                  "name": "visibility",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "depositUsdMin",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "forkCost",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "allowedActions",
                  "type": "uint8[]"
                }
              ],
              "name": "StrategyCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "fork",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "forker",
                  "type": "address"
                }
              ],
              "name": "StrategyForked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "splitRatio",
                  "type": "uint256[]"
                },
                {
                  "internalType": "enum Enums.Visibility",
                  "name": "visibility",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "depositUsdMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "forkCost",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "allowedActions",
                  "type": "uint8[]"
                }
              ],
              "name": "createStrategy",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "edger",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                }
              ],
              "name": "forkStrategy",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPriceOracleAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRevenueAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSwapRouterAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 190,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803460a357601f61533638819003918201601f19168301916001600160401b0383118484101760a85780849260609460405283398101031260a35760428160be565b906057604060516020840160be565b920160be565b600080546001600160a01b039485166001600160a01b03199182161790915560018054938516938216939093179092556002805491909316911617905560405161526490816100d28239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820360a35756fe608080604052600436101561001357600080fd5b600090813560e01c90816364f079e1146103ea5750806378d1c86d146103c45780638403ef08146100e25780638b5350cc146100bb578063f5c8ba93146100945763f94f657c1461006357600080fd5b346100915780600319360112610091576020604051733e646e062f05e01e1860ea53a6dc81e7e9162de68152f35b80fd5b503461009157806003193601126100915760206001600160a01b0360025416604051908152f35b503461009157806003193601126100915760206001600160a01b0360015416604051908152f35b50346100915760c0366003190112610091576004359067ffffffffffffffff82116100915736602383011215610091578160040135610120816108cb565b9261012e6040519485610893565b8184526024602085019260051b8201019036821161039057602401915b8183106103a4575050506024359067ffffffffffffffff8211610091573660238301121561009157816004013591610182836108cb565b926101906040519485610893565b8084526024602085019160051b8301019136831161039057602401905b82821061039457505050604435906002821015610091576064356084359060a4359267ffffffffffffffff841161009157366023850112156100915783600401356101f7816108cb565b946102056040519687610893565b8186526024602087019260051b8201019036821161039057602401915b818310610373575050506040516148758082019082821067ffffffffffffffff83111761035f5782916102ac916109ba843930815233602082015261026a604082018a6108e3565b85606082015286608082015261010060a082015261029d61028f61010083018d610906565b82810360c08401528b610943565b9060e081830391015287610977565b039082f09081156103535750936103189360209793610348936103316103266001600160a01b037f7c752b9113b23f79161cc728ca055e06564fd3019bfc3663d04ad659cc7082649a169a604051998a998d8b52338f8c015261010060408c01526101008b0190610906565b9089820360608b0152610943565b9460808801906108e3565b60a086015260c085015283820360e0850152610977565b0390a1604051908152f35b604051903d90823e3d90fd5b602484634e487b7160e01b81526041600452fd5b8235600481101561038c57815260209283019201610222565b8480fd5b8380fd5b81358152602091820191016101ad565b82356001600160a01b038116810361038c5781526020928301920161014b565b50346100915780600319360112610091576001600160a01b036020915416604051908152f35b9050602036600319011261088f57600435906001600160a01b038216809203610633577f8e4e9018000000000000000000000000000000000000000000000000000000008152602081600481855afa908115610884578391610852575b50604051907faa6ca8080000000000000000000000000000000000000000000000000000000082528382600481865afa9182156106285784926107ae575b506040517f4eadcca80000000000000000000000000000000000000000000000000000000081528481600481875afa9081156107a357859161070e575b50604051907f2494452d0000000000000000000000000000000000000000000000000000000082528582600481885afa918215610703578692610656575b5060405193614875938486019486861067ffffffffffffffff871117610642579261056361057f9593610571938998966109ba8a393087523360208801526001604088015260608701528a608087015261010060a0870152610100860190610906565b9084820360c0860152610943565b9160e0818403910152610977565b039083f0801561063757813b15610633576040517f8769b449000000000000000000000000000000000000000000000000000000008152838160048134875af1801561062857916020946060927fd41cbc93f20efdc0e7c08e245f3f4b52a335efa799019f8e94b49bff570b28b494610618575b50506001600160a01b03604051918583521685820152336040820152a1604051908152f35b8161062291610893565b386105f3565b6040513d86823e3d90fd5b8280fd5b6040513d84823e3d90fd5b602489634e487b7160e01b81526041600452fd5b9091503d8087833e6106688183610893565b8101906020818303126106fb5780519067ffffffffffffffff82116106ff57019080601f830112156106fb578151906106a0826108cb565b926106ae6040519485610893565b82845260208085019360051b8201019182116106f757602001915b8183106106da575050509038610500565b825160048110156106f3578152602092830192016106c9565b8980fd5b8880fd5b8680fd5b8780fd5b6040513d88823e3d90fd5b90503d8086833e61071f8183610893565b81019060208183031261079f5780519067ffffffffffffffff82116106fb57019080601f8301121561079f578151610756816108cb565b926107646040519485610893565b81845260208085019260051b8201019283116106ff57602001905b82821061078f57505050386104c2565b815181526020918201910161077f565b8580fd5b6040513d87823e3d90fd5b9091503d8085833e6107c08183610893565b81019060208183031261038c5780519067ffffffffffffffff821161079f57019080601f8301121561038c578151906107f8826108cb565b926108066040519485610893565b82845260208085019360051b8201019182116106fb57602001915b818310610832575050509038610485565b82516001600160a01b03811681036106ff57815260209283019201610821565b90506020813d60201161087c575b8161086d60209383610893565b81010312610633575138610447565b3d9150610860565b6040513d85823e3d90fd5b5080fd5b90601f8019910116810190811067ffffffffffffffff8211176108b557604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116108b55760051b60200190565b9060028210156108f05752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b8181106109245750505090565b82516001600160a01b0316845260209384019390920191600101610917565b906020808351928381520192019060005b8181106109615750505090565b8251845260209384019390920191600101610954565b90602080835192838152019201906000905b8082106109965750505090565b90919283519060048210156108f05760208160019382935201940192019061098956fe60c0806040523461077d57614875803803809161001c82856109dc565b833981016101008282031261077d57610034826109ff565b90610041602084016109ff565b91604084015192600284101561077d5760608501519260808601519560a081015160018060401b03811161077d5781019482601f8701121561077d5785519061008982610a13565b9661009760405198896109dc565b828852602088016020819460051b8301019186831161077d57602001905b8282106109c45750505060c08301516001600160401b03811161077d5783019584601f8801121561077d578651936100ec85610a13565b976100fa604051998a6109dc565b858952602089016020819760051b8301019188831161077d57602001905b8282106109b45750505060e0810151906001600160401b03821161077d57019585601f8801121561077d5786519661014f88610a13565b9661015d60405198896109dc565b88885260208801916020839a60051b82010191821161077d57602001915b81831061099b575050506040516101936040826109dc565b600781526626282a37b5b2b760c91b6020820152604051906101b66040836109dc565b600282526104c560f41b60208301528051906001600160401b03821161068e5760035490600182811c92168015610991575b60208310146108af5781601f849311610942575b50602090601f83116001146108da576000926108cf575b50508160011b916000199060031b1c1916176003555b8051906001600160401b03821161068e5760045490600182811c921680156108c5575b60208310146108af5781601f849311610855575b50602090601f83116001146107ed576000926107e2575b50508160011b916000199060031b1c1916176004555b6001600160a01b031680156107cc57600a80546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38851885103610796575060a081905260405163f5c8ba9360e01b815290602090829060049082906001600160a01b03165afa90811561078a5760009161074b575b506001600160a01b03166080526005558551906001600160401b03821161068e5768010000000000000000821161068e5760075482600755808310610710575b506007600052602060002060005b8381106106f35750508551929150506001600160401b03821161068e5768010000000000000000821161068e57600654826006558083106106b8575b506006600052602060002060005b8381106106a45750509151929150506001600160401b03821161068e5768010000000000000000821161068e576008548260085580831061063d575b5090600860005260206000208160051c9160005b8381106105f05750601f198116900380610588575b505050506000936000945b82518610156104955761043f8684610a41565b51810180911161047f57946001906001600160a01b0361045f8287610a41565b5116600052600960205260406000208260ff19825416179055019461042c565b634e487b7160e01b600052601160045260246000fd5b61271085910361054f5760ff8019600c5416911617600c55600b55604051613e099081610a6c8239608051818181610287015281816102f10152818161043a015281816104aa01528181610c6601528181610cd001528181610d6f01528181610dfe01528181610ee601528181611603015281816139e601528181613a6901528181613b0701528181613b810152613c46015260a0518181816108520152818161097001528181611a4b0152818161200b01526122690152f35b60405162461bcd60e51b8152602060048201526011602482015270496e76616c696420726174696f2073756d60781b6044820152606490fd5b9260009360005b8181106105a457505050015538808080610421565b909194855160048110156105da576105d0602091846001949060ff809160031b9316831b921b19161790565b960192910161058f565b634e487b7160e01b600052602160045260246000fd5b6000805b6020811061060957508382015560010161040c565b9590815160048110156105da57610634602091896001949060ff809160031b9316831b921b19161790565b920196016105f4565b61066b9060086000526020600020601f80860160051c82019281871680610671575b500160051c0190610a2a565b386103f8565b6000198501908154906000199060200360031b1c1690553861065f565b634e487b7160e01b600052604160045260246000fd5b6001906020845194019381840155016103bc565b60066000526106ed907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f908101908401610a2a565b386103ae565b82516001600160a01b031681830155602090920191600101610372565b6007600052610745907fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688908101908401610a2a565b38610364565b90506020813d602011610782575b81610766602093836109dc565b8101031261077d57610777906109ff565b38610324565b600080fd5b3d9150610759565b6040513d6000823e3d90fd5b62461bcd60e51b81526020600482015260116024820152704d69736d6174636865642061727261797360781b6044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b015190503880610277565b600460009081528281209350601f198516905b81811061083d5750908460019594939210610824575b505050811b0160045561028d565b015160001960f88460031b161c19169055388080610816565b92936020600181928786015181550195019301610800565b600460005261089f907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f850160051c810191602086106108a5575b601f0160051c0190610a2a565b38610260565b9091508190610892565b634e487b7160e01b600052602260045260246000fd5b91607f169161024c565b015190503880610213565b600360009081528281209350601f198516905b81811061092a5750908460019594939210610911575b505050811b01600355610229565b015160001960f88460031b161c19169055388080610903565b929360206001819287860151815501950193016108ed565b600360005261098b907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f850160051c810191602086106108a557601f0160051c0190610a2a565b386101fc565b91607f16916101e8565b8251600481101561077d5781526020928301920161017b565b8151815260209182019101610118565b602080916109d1846109ff565b8152019101906100b5565b601f909101601f19168101906001600160401b0382119082101761068e57604052565b51906001600160a01b038216820361077d57565b6001600160401b03811161068e5760051b60200190565b818110610a35575050565b60008155600101610a2a565b8051821015610a555760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c8062113e0814612fa957806302d05d3f14611a0e57806306fdde0314612eec578063095ea7b314612e4457806318160ddd14612e2657806323b872dd14612d255780632494452d146125385780632e1a7d4d14612430578063313ce5671461241457806347e7ef24146122045780634eadcca814612183578063531bcdb3146121655780635358fbda14611f9f5780635fa7b58414611d1457806370a0823114611cdd578063715018a614611c755780638769b44914611a355780638da5cb5b14611a0e5780638e4e9018146119f057806395d89b41146118e3578063a216aa06146115a1578063a9059cbb1461156f578063aa6ca808146114d9578063ab83f98a14611449578063af81c5b91461130f578063b317650b14610876578063c45a015514610832578063dd62ed3e146107e2578063e69d849d146106ee578063f2fde38b146106415763f9c4d3db1461017b575061000e565b3461063e57604036600319011261063e576101946130b0565b6024356101a281151561322a565b6001600160a01b0382169081845260096020526101c560ff604086205416613596565b600254926101d4841515613275565b6040926060919073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81149087805b600754811015610630576001600160a01b03610211826131ad565b90549060031b1c166102348a61022f8a61022a856135e1565b6132c0565b6132e9565b906040516102428982613141565b600281528a36602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8214801561062a576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105e05787916105f1575b505b6001600160a01b036102ca846131f9565b9116905287156105eb576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105e05787916105a3575b505b6001600160a01b0361033484613206565b91169052828714808061059c575b1561036e575050505082808060019561036694335af1610360613321565b50613351565b0188906101f6565b929392156103ef57505060405163a9059cbb60e01b815233600482015260248101919091529260209184916044918391905af19182156103e4576001926103b6575b50610366565b6103d69060203d81116103dd575b6103ce8183613141565b810190613309565b50386103b0565b503d6103c4565b6040513d8c823e3d90fd5b939450929091901561049f5750600142019182421161048b57918b9161042e9493604051809681948293637ff36ab560e01b84523390600485016138d9565b03916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19182156103e4576001926104705750610366565b6103d6903d808d833e6104838183613141565b8101906134b7565b60248c634e487b7160e01b81526011600452fd5b906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169160208d6040519283809263095ea7b360e01b825281610504888a60048401602090939291936001600160a01b0360408201951681520152565b03925af1801561059157610575575b50600142019283421161056157916105499493918d8094604051978895869485936338ed173960e01b85523391600486016138a0565b03925af19182156103e4576001926104705750610366565b60248d634e487b7160e01b81526011600452fd5b61058c9060203d81116103dd576103ce8183613141565b610513565b6040513d8f823e3d90fd5b5088610342565b90506020813d82116105d8575b816105bd60209383613141565b810103126105d4576105ce906133e7565b38610321565b8680fd5b3d91506105b0565b6040513d89823e3d90fd5b88610323565b90506020813d8211610622575b8161060b60209383613141565b810103126105d45761061c906133e7565b386102b7565b3d91506105fe565b826102b9565b5061063b8633613772565b80f35b80fd5b503461063e57602036600319011261063e576001600160a01b036106636130b0565b61066b6137f3565b1680156106c2576001600160a01b03600a548273ffffffffffffffffffffffffffffffffffffffff19821617600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b6024827f1e4fbdf700000000000000000000000000000000000000000000000000000000815280600452fd5b503461063e57604036600319011261063e576107086130b0565b6024356001600160a01b03821690818452600960205261072e60ff604086205416613596565b6040516323b872dd60e01b815233600482015230602482015260448101829052916020908390606490829088905af19081156107d7577f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f74926107b4926107ba575b50604051918291339583602090939291936001600160a01b0360408201951681520152565b0390a280f35b6107d29060203d6020116103dd576103ce8183613141565b61078f565b6040513d86823e3d90fd5b503461063e57604036600319011261063e576001600160a01b0360406108066130b0565b92826108106130cb565b9416815260016020522091166000526020526020604060002054604051908152f35b503461063e578060031936011261063e5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461063e57602036600319011261063e5760043567ffffffffffffffff811161130b576040600319823603011261130b57604051906040820182811067ffffffffffffffff8211176112f7576040528060040135600481101561102457825260248101359067ffffffffffffffff8211611024570136602382011215611028578260048201359161090783613179565b926109156040519485613141565b808452366024838301011161102857806024602093018386013783010152602082019081526040517ff94f657c0000000000000000000000000000000000000000000000000000000081526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156107d75784906112b7575b6001600160a01b039150163303611273578151916004831015928361125f576008549385805b8681101561125357600888528260ff8260051c7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3015460f88460031b161c169061123f57600481101561123f578414610a20576001016109c5565b5050505090915060015b156111fb5780516004811015610b49571561102c575b80516004811015610b4957600114610b5d575b80516004811015610b4957600214610abb575b610aa490610ab57f2dbb4029cc94c05452861994b3d66ab5d4b3f2b45418116b370c7981f2eebb9093604051938493602085526020850190516130e1565b51604080840152606083019061306f565b0390a180f35b8151908151820191604081840312610b4557610ad9602082016133e7565b9360408201519167ffffffffffffffff83116105d4577f2dbb4029cc94c05452861994b3d66ab5d4b3f2b45418116b370c7981f2eebb90956001600160a01b03610b34610b3b936020610ab59781610aa49b01920101613531565b911661390b565b9350509050610a66565b8480fd5b602484634e487b7160e01b81526021600452fd5b9091825191825183016040848203126110285760208401519067ffffffffffffffff8211611024576040610ba76001600160a01b0393602080610bae959997990191870101613531565b93016133e7565b168083526009602052610bc760ff604085205416613596565b60609460409273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee831491855b8251811015611016576001600160a01b03610c028285613216565b5116610c0d816135e1565b801561100c5760405191610c218c84613141565b600283528836602085013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81148015611006576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610fbc578c91610fcd575b505b6001600160a01b03610ca9866131f9565b911690528715610fc7576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610fbc578c91610f7f575b505b6001600160a01b03610d1386613206565b91169052818903610d2c57505050506001905b01610be7565b15610de057506001420191824211610dcc57918991610d6393604051809581948293637ff36ab560e01b84523090600485016138d9565b03916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af18015610dc1579060019291610da7575b50610d26565b610dba903d808b833e6104838183613141565b5038610da1565b6040513d8a823e3d90fd5b60248a634e487b7160e01b81526011600452fd5b908615610ecf5760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482018190526024820183905292602090829060449082908f905af18015610ec457610ea8575b506001420192834211610e945791610e7b93918b8094604051968795869485936318cbafe560e01b85523091600486016138a0565b03925af18015610dc1579060019291610da75750610d26565b60248b634e487b7160e01b81526011600452fd5b610ebf9060203d81116103dd576103ce8183613141565b610e46565b6040513d8d823e3d90fd5b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482018190526024820183905292602090829060449082908f905af18015610ec457610f63575b506001420192834211610e945791610e7b93918b8094604051968795869485936338ed173960e01b85523091600486016138a0565b610f7a9060203d81116103dd576103ce8183613141565b610f2e565b90506020813d8211610fb4575b81610f9960209383613141565b81010312610fb057610faa906133e7565b38610d00565b8b80fd5b3d9150610f8c565b6040513d8e823e3d90fd5b88610d02565b90506020813d8211610ffe575b81610fe760209383613141565b81010312610fb057610ff8906133e7565b38610c96565b3d9150610fda565b81610c98565b5050600190610d26565b509594965050505050610a53565b8380fd5b8280fd5b906110418151602080825183010191016134b7565b8051600754036111b7578391825b82518410156110775761106f6001916110688686613216565b5190613893565b93019261104f565b61271091949350036111735780519067ffffffffffffffff821161115f5768010000000000000000821161115f5760065482600655808310611101575b5060200160068552845b8281106110cd57505050610a40565b60019060208351930192817ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0155016110be565b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01827ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f015b81811061115457506110b4565b868155600101611147565b602485634e487b7160e01b81526041600452fd5b606460405162461bcd60e51b815260206004820152601160248201527f496e76616c696420726174696f2073756d0000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964206c656e6774680000000000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601260248201527f416374696f6e206e6f7420616c6c6f77656400000000000000000000000000006044820152fd5b602489634e487b7160e01b81526021600452fd5b50929394505050610a2a565b602485634e487b7160e01b81526021600452fd5b606460405162461bcd60e51b815260206004820152601560248201527f4f6e6c7920656467657220697320616c6c6f77656400000000000000000000006044820152fd5b506020813d6020116112ef575b816112d160209383613141565b81010312611024576112ea6001600160a01b03916133e7565b61099f565b3d91506112c4565b602484634e487b7160e01b81526041600452fd5b5080fd5b503461063e57604036600319011261063e576113296130b0565b6113316137f3565b6001600160a01b03811690818352600960205260ff60408420541661140557600754680100000000000000008110156112f7579061137882600161139794016007556131ad565b9091906001600160a01b038084549260031b9316831b921b1916179055565b600654680100000000000000008110156113f1576113be8160016113d893016006556131de565b6024359082549060031b91821b91600019901b1916179055565b8152600960205260408120805460ff1916600117905580f35b602483634e487b7160e01b81526041600452fd5b606460405162461bcd60e51b815260206004820152600c60248201527f546f6b656e2065786973747300000000000000000000000000000000000000006044820152fd5b50602036600319011261063e5760043573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8252600960205261148560ff60408420541661339c565b61149081341461346c565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f7460403392a280f35b503461063e578060031936011261063e5760405180916020600754928381520191600782527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688915b8181106115505761154c8561153881870382613141565b604051918291602083526020830190613104565b0390f35b82546001600160a01b0316845260209093019260019283019201611521565b503461063e57604036600319011261063e5761159661158c6130b0565b602435903361367b565b602060405160018152f35b503461063e57602036600319011261063e576004356115c181151561322a565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260096020526115ed60ff604084205416613596565b600254906115fc821515613275565b60409060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685805b6007548110156118d8576001600160a01b03611649826131ad565b90549060031b1c166116628861022f8861022a856135e1565b906040516116708782613141565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee821480156118d2576040516315ab88c960e31b81526020816004818b5afa9081156105e0578791611899575b505b6001600160a01b036116cf846131f9565b911690526040516315ab88c960e31b81526020816004818b5afa9081156105e0578791611860575b506001600160a01b0361170984613206565b911690528080611858575b156117395750505082808060019561173194335af1610360613321565b01869061162e565b9192911561179e575060405163a9059cbb60e01b815233600482015260248101919091529260209184916044918391905af1918215610dc157600192611780575b50611731565b6117979060203d81116103dd576103ce8183613141565b503861177a565b60405163095ea7b360e01b81526001600160a01b0387166004820152602481018390529094509091602090829060449082908e905af180156103e45761183c575b506001420192834211610dcc5790899161180f60405195869384936338ed173960e01b85523391600486016138a0565b038183875af1918215610dc1576001926118295750611731565b611797903d808b833e6104838183613141565b6118539060203d81116103dd576103ce8183613141565b6117df565b506001611714565b90506020813d8211611891575b8161187a60209383613141565b810103126105d45761188b906133e7565b386116f7565b3d915061186d565b90506020813d82116118ca575b816118b360209383613141565b810103126105d4576118c4906133e7565b386116bc565b3d91506118a6565b826116be565b5061063b8433613772565b503461063e578060031936011261063e576040519080600454908160011c916001811680156119e6575b6020841081146119d2578386529081156119ab575060011461194e575b61154c8461193a81860382613141565b60405191829160208352602083019061306f565b600481527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b8082106119915750909150810160200161193a8261192a565b919260018160209254838588010152019101909291611978565b60ff191660208087019190915292151560051b8501909201925061193a915083905061192a565b602483634e487b7160e01b81526022600452fd5b92607f169261190d565b503461063e578060031936011261063e576020600554604051908152f35b503461063e578060031936011261063e5760206001600160a01b03600a5416604051908152f35b508060031936011261063e576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016803303611c315760ff600c54166002811015611c1d57611bd957600b543410611b95576020600491604051928380927f78d1c86d0000000000000000000000000000000000000000000000000000000082525afa8015611b8a578290611b4a575b6001600160a01b03915016816001600160a01b03600a5416823b1561130b5781906024604051809581937f23024408000000000000000000000000000000000000000000000000000000008352600483015234905af18015611b3d57611b2f5780f35b611b3891613141565b388180f35b50604051903d90823e3d90fd5b506020813d602011611b82575b81611b6460209383613141565b8101031261130b57611b7d6001600160a01b03916133e7565b611acc565b3d9150611b57565b6040513d84823e3d90fd5b606460405162461bcd60e51b815260206004820152601660248201527f496e73756666696369656e7420666f726b20636f7374000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600a60248201527f446973616c6c6f776564000000000000000000000000000000000000000000006044820152fd5b602483634e487b7160e01b81526021600452fd5b606460405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920666163746f727920697320616c6c6f7765640000000000000000006044820152fd5b503461063e578060031936011261063e57611c8e6137f3565b806001600160a01b03600a5473ffffffffffffffffffffffffffffffffffffffff198116600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461063e57602036600319011261063e5760406020916001600160a01b03611d046130b0565b1681528083522054604051908152f35b503461063e57602036600319011261063e576001600160a01b03611d366130b0565b611d3e6137f3565b16808252600960205260ff60408320541615611f5b576040516370a0823160e01b8152306004820152602081602481855afa908115611f50578391611f1e575b50611eda57815b60075480821015611ed457826001600160a01b03611da2846131ad565b90549060031b1c1614611db85750600101611d85565b6000198101908111611eac576001600160a01b03611dd8611de9926131ad565b90549060031b1c16611378836131ad565b6007548015611ec05760001901611dff816131ad565b6001600160a01b0382549160031b1b191690556007556006546000198101908111611eac5790611e41611e34611e5a936131de565b90549060031b1c916131de565b90919082549060031b91821b91600019901b1916179055565b6006548015611e985760001901611e70816131de565b8154906000199060031b1b19169055600655815260096020526040812060ff19815416905580f35b602483634e487b7160e01b81526031600452fd5b602484634e487b7160e01b81526011600452fd5b602484634e487b7160e01b81526031600452fd5b50505080f35b606460405162461bcd60e51b815260206004820152601060248201527f4e6f6e2d7a65726f2062616c616e6365000000000000000000000000000000006044820152fd5b90506020813d602011611f48575b81611f3960209383613141565b81010312611028575138611d7e565b3d9150611f2c565b6040513d85823e3d90fd5b606460405162461bcd60e51b815260206004820152600f60248201527f546f6b656e206e6f7420666f756e6400000000000000000000000000000000006044820152fd5b50602036600319011261063e57600435611fb76137f3565b611fc281341461346c565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82526009602052611fee60ff60408420541661339c565b6040516322d4d43360e21b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115611f50578391612120575b5060206001600160a01b03916044604051809481936333fa33cb60e11b835287600484015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6024840152165afa8015611f505783906120ec575b6120a3915061209d6005548210156133fb565b33613835565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f49551760403392a280f35b506020813d602011612118575b8161210660209383613141565b81010312611028576120a3905161208a565b3d91506120f9565b90506020813d60201161215d575b8161213b60209383613141565b810103126110285760206121566001600160a01b03926133e7565b915061203b565b3d915061212e565b503461063e578060031936011261063e576020600b54604051908152f35b503461063e578060031936011261063e5760405180916020600654928381520191600682527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f915b8181106121ee5761154c856121e281870382613141565b60405191829182613035565b82548452602090930192600192830192016121cb565b503461063e57604036600319011261063e5761221e6130b0565b6024356122296137f3565b6001600160a01b038216808452600960205261224b60ff60408620541661339c565b604051916322d4d43360e21b83526020836004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9283156123905785936123cf575b5060206001600160a01b03936044604051809681936333fa33cb60e11b8352866004840152876024840152165afa92831561239057859361239b575b506122e46005548410156133fb565b6040516323b872dd60e01b815233600482015230602482015260448101829052916020908390606490829089905af18015612390577fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f495517936107b49361234f92612373575b5033613835565b604051918291339583602090939291936001600160a01b0360408201951681520152565b61238b9060203d6020116103dd576103ce8183613141565b612348565b6040513d87823e3d90fd5b9092506020813d6020116123c7575b816123b760209383613141565b81010312610b45575191386122d5565b3d91506123aa565b92506020833d60201161240c575b816123ea60209383613141565b81010312610b455760206124056001600160a01b03946133e7565b9350612299565b3d91506123dd565b503461063e578060031936011261063e57602060405160128152f35b503461063e57602036600319011261063e5760043561245081151561322a565b6002549061245f821515613275565b82805b60075481101561252d576001600160a01b0361247d826131ad565b90549060031b1c166124968561022f8661022a856135e1565b9073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036124d057508280806001956124c894335af1610360613321565b018390612462565b60405163a9059cbb60e01b81523360048201526024810192909252909260209184916044918391905af19182156123905760019261250f575b506124c8565b6125269060203d81116103dd576103ce8183613141565b5038612509565b5061063b8233613772565b503461063e578060031936011261063e576040518060206008549283815201918183600886527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee39286905b80601f830110612a9c5761269c945491818110612a81575b818110612a63575b818110612a45575b818110612a27575b818110612a0a575b8181106129ec575b8181106129ce575b8181106129b0575b818110612992575b818110612974575b818110612956575b818110612938575b81811061291a575b8181106128fc575b8181106128de575b8181106128c0575b8181106128a2575b818110612884575b818110612866575b818110612848575b81811061282a575b81811061280c575b8181106127ee575b8181106127d0575b8181106127b2575b818110612794575b818110612776575b818110612758575b81811061273a575b81811061271c575b8181106126fe575b106126e7575b509392930383613141565b604051928392602084019060208552518091526040840192915b8181106126c4575050500390f35b91935091602080826126d960019488516130e1565b0194019101918493926126b6565b906126f78160209360f81c6130e1565b0138612691565b9260208161271460019360ff8760f01c166130e1565b01930161268b565b9260208161273260019360ff8760e81c166130e1565b019301612683565b9260208161275060019360ff8760e01c166130e1565b01930161267b565b9260208161276e60019360ff8760d81c166130e1565b019301612673565b9260208161278c60019360ff8760d01c166130e1565b01930161266b565b926020816127aa60019360ff8760c81c166130e1565b019301612663565b926020816127c860019360ff8760c01c166130e1565b01930161265b565b926020816127e660019360ff8760b81c166130e1565b019301612653565b9260208161280460019360ff8760b01c166130e1565b01930161264b565b9260208161282260019360ff8760a81c166130e1565b019301612643565b9260208161284060019360ff8760a01c166130e1565b01930161263b565b9260208161285e60019360ff8760981c166130e1565b019301612633565b9260208161287c60019360ff8760901c166130e1565b01930161262b565b9260208161289a60019360ff8760881c166130e1565b019301612623565b926020816128b860019360ff8760801c166130e1565b01930161261b565b926020816128d660019360ff8760781c166130e1565b019301612613565b926020816128f460019360ff8760701c166130e1565b01930161260b565b9260208161291260019360ff8760681c166130e1565b019301612603565b9260208161293060019360ff8760601c166130e1565b0193016125fb565b9260208161294e60019360ff8760581c166130e1565b0193016125f3565b9260208161296c60019360ff8760501c166130e1565b0193016125eb565b9260208161298a60019360ff8760481c166130e1565b0193016125e3565b926020816129a860019360ff8760401c166130e1565b0193016125db565b926020816129c660019360ff8760381c166130e1565b0193016125d3565b926020816129e460019360ff8760301c166130e1565b0193016125cb565b92602081612a0260019360ff8760281c166130e1565b0193016125c3565b92602081612a1f60019360ff87851c166130e1565b0193016125bb565b92602081612a3d60019360ff8760181c166130e1565b0193016125b3565b92602081612a5b60019360ff8760101c166130e1565b0193016125ab565b92602081612a7960019360ff8760081c166130e1565b0193016125a3565b92602081612a9460019360ff87166130e1565b01930161259b565b916020919350610400600191612d178754612aba8360ff83166130e1565b612acc86840160ff8360081c166130e1565b612adf6040840160ff8360101c166130e1565b612af26060840160ff8360181c166130e1565b612b046080840160ff83891c166130e1565b612b1760a0840160ff8360281c166130e1565b612b2a60c0840160ff8360301c166130e1565b612b3d60e0840160ff8360381c166130e1565b612b51610100840160ff8360401c166130e1565b612b65610120840160ff8360481c166130e1565b612b79610140840160ff8360501c166130e1565b612b8d610160840160ff8360581c166130e1565b612ba1610180840160ff8360601c166130e1565b612bb56101a0840160ff8360681c166130e1565b612bc96101c0840160ff8360701c166130e1565b612bdd6101e0840160ff8360781c166130e1565b612bf1610200840160ff8360801c166130e1565b612c05610220840160ff8360881c166130e1565b612c19610240840160ff8360901c166130e1565b612c2d610260840160ff8360981c166130e1565b612c41610280840160ff8360a01c166130e1565b612c556102a0840160ff8360a81c166130e1565b612c696102c0840160ff8360b01c166130e1565b612c7d6102e0840160ff8360b81c166130e1565b612c91610300840160ff8360c01c166130e1565b612ca5610320840160ff8360c81c166130e1565b612cb9610340840160ff8360d01c166130e1565b612ccd610360840160ff8360d81c166130e1565b612ce1610380840160ff8360e01c166130e1565b612cf56103a0840160ff8360e81c166130e1565b612d096103c0840160ff8360f01c166130e1565b6103e083019060f81c6130e1565b019401920184929391612583565b503461063e57606036600319011261063e57612d3f6130b0565b612d476130cb565b604435916001600160a01b0381168085526001602052604085206001600160a01b03331686526020526040852054906000198210612d8c575b5050611596935061367b565b848210612df2578015612ddf573315612dcc576040868692611596985260016020528181206001600160a01b033316825260205220910390553880612d80565b602486634a1406b160e11b815280600452fd5b60248663e602df0560e01b815280600452fd5b60648686847ffb8f41b200000000000000000000000000000000000000000000000000000000835233600452602452604452fd5b503461063e578060031936011261063e576020600254604051908152f35b503461063e57604036600319011261063e57612e5e6130b0565b602435903315612ed9576001600160a01b0316918215612ec65760408291338152600160205281812085825260205220556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b80634a1406b160e11b6024925280600452fd5b60248363e602df0560e01b815280600452fd5b503461063e578060031936011261063e576040519080600354908160011c91600181168015612f9f575b6020841081146119d2578386529081156119ab5750600114612f425761154c8461193a81860382613141565b600381527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b808210612f855750909150810160200161193a8261192a565b919260018160209254838588010152019101909291612f6c565b92607f1692612f16565b503461063e578060031936011261063e57600754612fc681613195565b91612fd46040519384613141565b818352601f19612fe383613195565b013660208501375b818110613000576040518061154c8582613035565b806130246001600160a01b036130176001946131ad565b90549060031b1c166135e1565b61302e8286613216565b5201612feb565b602060408183019282815284518094520192019060005b8181106130595750505090565b825184526020938401939092019160010161304c565b919082519283825260005b84811061309b575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161307a565b600435906001600160a01b03821682036130c657565b600080fd5b602435906001600160a01b03821682036130c657565b9060048210156130ee5752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b8181106131225750505090565b82516001600160a01b0316845260209384019390920191600101613115565b90601f8019910116810190811067ffffffffffffffff82111761316357604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161316357601f01601f191660200190565b67ffffffffffffffff81116131635760051b60200190565b6007548110156131c857600760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6006548110156131c857600660005260206000200190600090565b8051156131c85760200190565b8051600110156131c85760400190565b80518210156131c85760209160051b010190565b1561323157565b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420616d6f756e740000000000000000000000000000000000006044820152fd5b1561327c57565b606460405162461bcd60e51b815260206004820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b818102929181159184041417156132d357565b634e487b7160e01b600052601160045260246000fd5b81156132f3570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126130c6575180151581036130c65790565b3d1561334c573d9061333282613179565b916133406040519384613141565b82523d6000602084013e565b606090565b1561335857565b606460405162461bcd60e51b815260206004820152601360248201527f455448207472616e73666572206661696c6564000000000000000000000000006044820152fd5b156133a357565b606460405162461bcd60e51b815260206004820152601160248201527f455448206e6f7420737570706f727465640000000000000000000000000000006044820152fd5b51906001600160a01b03821682036130c657565b1561340257565b608460405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e74206465706f73697420616d6f756e7420696e207560448201527f73640000000000000000000000000000000000000000000000000000000000006064820152fd5b1561347357565b606460405162461bcd60e51b815260206004820152601460248201527f496e636f72726563742045544820616d6f756e740000000000000000000000006044820152fd5b6020818303126130c65780519067ffffffffffffffff82116130c657019080601f830112156130c65781516134eb81613195565b926134f96040519485613141565b81845260208085019260051b8201019283116130c657602001905b8282106135215750505090565b8151815260209182019101613514565b9080601f830112156130c657815161354881613195565b926135566040519485613141565b81845260208085019260051b8201019283116130c657602001905b82821061357e5750505090565b6020809161358b846133e7565b815201910190613571565b1561359d57565b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420746f6b656e000000000000000000000000000000000000006044820152fd5b6000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee810361360e5750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa91821561366f57809261363e57505090565b9091506020823d602011613667575b8161365a60209383613141565b8101031261063e57505190565b3d915061364d565b604051903d90823e3d90fd5b6001600160a01b0316908115613743576001600160a01b03169182156137145760008281528060205260408120548281106136fa5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b03168015613743576000918183528260205260408320548181106137da57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b6001600160a01b03600a5416330361380757565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6001600160a01b03169081156137145761385181600254613893565b6002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009284845283825260408420818154019055604051908152a3565b919082018092116132d357565b906138ce6080936001600160a01b03929796959784526000602085015260a0604085015260a0840190613104565b951660608201520152565b6001600160a01b036139006060939695949660008452608060208501526080840190613104565b951660408201520152565b906001600160a01b03821680600052600960205261393060ff60406000205416613596565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81149360008515613d6d5750475b8015613d65578351919491613967916132e9565b946060936040929060005b8151811015613d5a576001600160a01b0361398d8284613216565b5116908160005260096020526139aa60ff60406000205416613596565b604051916139b88984613141565b60028352863660208501378515613d54576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115613b5957600091613d1b575b505b6001600160a01b03613a2a856131f9565b9116905273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8114908115613d15576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115613b5957600091613cdc575b505b6001600160a01b03613aad86613206565b911690528803613ac35750600191505b01613972565b8515613b65575060014201918242116132d357613afa926000916040519485928392637ff36ab560e01b84523090600485016138d9565b03818d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1918215613b5957600192613b3e575b50613abd565b613b52903d806000833e6104838183613141565b5038613b38565b6040513d6000823e3d90fd5b15613c2f5760405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201819052602482018c9052929060208160448160008d5af18015613b5957613c13575b50600142018042116132d357613bfb938c60008094604051978895869485936318cbafe560e01b85523091600486016138a0565b03925af1918215613b5957600192613b3e5750613abd565b613c2a9060203d81116103dd576103ce8183613141565b613bc7565b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201819052602482018c9052929060208160448160008d5af18015613b5957613cc0575b50600142018042116132d357613bfb938c60008094604051978895869485936338ed173960e01b85523091600486016138a0565b613cd79060203d81116103dd576103ce8183613141565b613c8c565b906020823d8211613d0d575b81613cf560209383613141565b8101031261063e5750613d07906133e7565b38613a9a565b3d9150613ce8565b80613a9c565b906020823d8211613d4c575b81613d3460209383613141565b8101031261063e5750613d46906133e7565b38613a17565b3d9150613d27565b84613a19565b505050505050509050565b509350505050565b6040516370a0823160e01b8152306004820152602081602481875afa91821561366f578092613d9e575b5050613953565b9091506020823d602011613dcb575b81613dba60209383613141565b8101031261063e5750513880613d97565b3d9150613dad56fea26469706673582212203c3f4a32f13042b341519148a8715900a9db43fc2ffc692cb36fc3773c791bc964736f6c634300081c0033a264697066735822122055deecd749364ef91930e775f13a83b0812e157c064fcb7944d6508ed8b4882164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH1 0xA3 JUMPI PUSH1 0x1F PUSH2 0x5336 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xA8 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xA3 JUMPI PUSH1 0x42 DUP2 PUSH1 0xBE JUMP JUMPDEST SWAP1 PUSH1 0x57 PUSH1 0x40 PUSH1 0x51 PUSH1 0x20 DUP5 ADD PUSH1 0xBE JUMP JUMPDEST SWAP3 ADD PUSH1 0xBE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x5264 SWAP1 DUP2 PUSH2 0xD2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH1 0xA3 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x64F079E1 EQ PUSH2 0x3EA JUMPI POP DUP1 PUSH4 0x78D1C86D EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x8403EF08 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x8B5350CC EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF5C8BA93 EQ PUSH2 0x94 JUMPI PUSH4 0xF94F657C EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0x3E646E062F05E01E1860EA53A6DC81E7E9162DE6 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x91 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x91 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x91 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x120 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x12E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x390 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x3A4 JUMPI POP POP POP PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x91 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x91 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x182 DUP4 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x190 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x390 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x394 JUMPI POP POP POP PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x91 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x91 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x91 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1F7 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP5 PUSH2 0x205 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x893 JUMP JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x24 PUSH1 0x20 DUP8 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x390 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x373 JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x4875 DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x35F JUMPI DUP3 SWAP2 PUSH2 0x2AC SWAP2 PUSH2 0x9BA DUP5 CODECOPY ADDRESS DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x26A PUSH1 0x40 DUP3 ADD DUP11 PUSH2 0x8E3 JUMP JUMPDEST DUP6 PUSH1 0x60 DUP3 ADD MSTORE DUP7 PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x29D PUSH2 0x28F PUSH2 0x100 DUP4 ADD DUP14 PUSH2 0x906 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE DUP12 PUSH2 0x943 JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP2 DUP4 SUB SWAP2 ADD MSTORE DUP8 PUSH2 0x977 JUMP JUMPDEST SUB SWAP1 DUP3 CREATE SWAP1 DUP2 ISZERO PUSH2 0x353 JUMPI POP SWAP4 PUSH2 0x318 SWAP4 PUSH1 0x20 SWAP8 SWAP4 PUSH2 0x348 SWAP4 PUSH2 0x331 PUSH2 0x326 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x7C752B9113B23F79161CC728CA055E06564FD3019BFC3663D04AD659CC708264 SWAP11 AND SWAP11 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP14 DUP12 MSTORE CALLER DUP16 DUP13 ADD MSTORE PUSH2 0x100 PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0x100 DUP12 ADD SWAP1 PUSH2 0x906 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x943 JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP9 ADD SWAP1 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x977 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x38C JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x222 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1AD JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x38C JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x14B JUMP JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x88F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 SWAP3 SUB PUSH2 0x633 JUMPI PUSH32 0x8E4E901800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x884 JUMPI DUP4 SWAP2 PUSH2 0x852 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH32 0xAA6CA80800000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP4 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x628 JUMPI DUP5 SWAP3 PUSH2 0x7AE JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x4EADCCA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP5 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI DUP6 SWAP2 PUSH2 0x70E JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH32 0x2494452D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP3 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x703 JUMPI DUP7 SWAP3 PUSH2 0x656 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP4 PUSH2 0x4875 SWAP4 DUP5 DUP7 ADD SWAP5 DUP7 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0x642 JUMPI SWAP3 PUSH2 0x563 PUSH2 0x57F SWAP6 SWAP4 PUSH2 0x571 SWAP4 DUP10 SWAP9 SWAP7 PUSH2 0x9BA DUP11 CODECOPY ADDRESS DUP8 MSTORE CALLER PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE DUP11 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x906 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x943 JUMP JUMPDEST SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x977 JUMP JUMPDEST SUB SWAP1 DUP4 CREATE DUP1 ISZERO PUSH2 0x637 JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8769B44900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 CALLVALUE DUP8 GAS CALL DUP1 ISZERO PUSH2 0x628 JUMPI SWAP2 PUSH1 0x20 SWAP5 PUSH1 0x60 SWAP3 PUSH32 0xD41CBC93F20EFDC0E7C08E245F3F4B52A335EFA799019F8E94B49BFF570B28B4 SWAP5 PUSH2 0x618 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 DUP6 DUP4 MSTORE AND DUP6 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP2 PUSH2 0x622 SWAP2 PUSH2 0x893 JUMP JUMPDEST CODESIZE PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x668 DUP2 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x6FB JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6FF JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x6FB JUMPI DUP2 MLOAD SWAP1 PUSH2 0x6A0 DUP3 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x6AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x6F7 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x6DA JUMPI POP POP POP SWAP1 CODESIZE PUSH2 0x500 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x6C9 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x71F DUP2 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x79F JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6FB JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x79F JUMPI DUP2 MLOAD PUSH2 0x756 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x764 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x6FF JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x78F JUMPI POP POP POP CODESIZE PUSH2 0x4C2 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x77F JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x7C0 DUP2 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x38C JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x79F JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x38C JUMPI DUP2 MLOAD SWAP1 PUSH2 0x7F8 DUP3 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x806 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x6FB JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x832 JUMPI POP POP POP SWAP1 CODESIZE PUSH2 0x485 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6FF JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x821 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x87C JUMPI JUMPDEST DUP2 PUSH2 0x86D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x633 JUMPI MLOAD CODESIZE PUSH2 0x447 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8B5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8B5 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x8F0 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x924 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x917 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x961 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x954 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x996 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP4 MLOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x20 DUP2 PUSH1 0x1 SWAP4 DUP3 SWAP4 MSTORE ADD SWAP5 ADD SWAP3 ADD SWAP1 PUSH2 0x989 JUMP INVALID PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x77D JUMPI PUSH2 0x4875 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x9DC JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH2 0x100 DUP3 DUP3 SUB SLT PUSH2 0x77D JUMPI PUSH2 0x34 DUP3 PUSH2 0x9FF JUMP JUMPDEST SWAP1 PUSH2 0x41 PUSH1 0x20 DUP5 ADD PUSH2 0x9FF JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MLOAD SWAP3 PUSH1 0x2 DUP5 LT ISZERO PUSH2 0x77D JUMPI PUSH1 0x60 DUP6 ADD MLOAD SWAP3 PUSH1 0x80 DUP7 ADD MLOAD SWAP6 PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI DUP2 ADD SWAP5 DUP3 PUSH1 0x1F DUP8 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP6 MLOAD SWAP1 PUSH2 0x89 DUP3 PUSH2 0xA13 JUMP JUMPDEST SWAP7 PUSH2 0x97 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x9DC JUMP JUMPDEST DUP3 DUP9 MSTORE PUSH1 0x20 DUP9 ADD PUSH1 0x20 DUP2 SWAP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP7 DUP4 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9C4 JUMPI POP POP POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI DUP4 ADD SWAP6 DUP5 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP7 MLOAD SWAP4 PUSH2 0xEC DUP6 PUSH2 0xA13 JUMP JUMPDEST SWAP8 PUSH2 0xFA PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x9DC JUMP JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x20 DUP10 ADD PUSH1 0x20 DUP2 SWAP8 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP9 DUP4 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH1 0xE0 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x77D JUMPI ADD SWAP6 DUP6 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP7 MLOAD SWAP7 PUSH2 0x14F DUP9 PUSH2 0xA13 JUMP JUMPDEST SWAP7 PUSH2 0x15D PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x9DC JUMP JUMPDEST DUP9 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP2 PUSH1 0x20 DUP4 SWAP11 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x99B JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x193 PUSH1 0x40 DUP3 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x26282A37B5B2B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B6 PUSH1 0x40 DUP4 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE PUSH2 0x4C5 PUSH1 0xF4 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x991 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8AF JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x942 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x8DA JUMPI PUSH1 0x0 SWAP3 PUSH2 0x8CF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8C5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8AF JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x855 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7ED JUMPI PUSH1 0x0 SWAP3 PUSH2 0x7E2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP9 MLOAD DUP9 MLOAD SUB PUSH2 0x796 JUMPI POP PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0xF5C8BA93 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x74B JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x5 SSTORE DUP6 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x7 SLOAD DUP3 PUSH1 0x7 SSTORE DUP1 DUP4 LT PUSH2 0x710 JUMPI JUMPDEST POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6F3 JUMPI POP POP DUP6 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x6B8 JUMPI JUMPDEST POP PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6A4 JUMPI POP POP SWAP2 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x8 SLOAD DUP3 PUSH1 0x8 SSTORE DUP1 DUP4 LT PUSH2 0x63D JUMPI JUMPDEST POP SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x5F0 JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x588 JUMPI JUMPDEST POP POP POP POP PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP5 JUMPDEST DUP3 MLOAD DUP7 LT ISZERO PUSH2 0x495 JUMPI PUSH2 0x43F DUP7 DUP5 PUSH2 0xA41 JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x47F JUMPI SWAP5 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x45F DUP3 DUP8 PUSH2 0xA41 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP5 PUSH2 0x42C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2710 DUP6 SWAP2 SUB PUSH2 0x54F JUMPI PUSH1 0xFF DUP1 NOT PUSH1 0xC SLOAD AND SWAP2 AND OR PUSH1 0xC SSTORE PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH2 0x3E09 SWAP1 DUP2 PUSH2 0xA6C DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x287 ADD MSTORE DUP2 DUP2 PUSH2 0x2F1 ADD MSTORE DUP2 DUP2 PUSH2 0x43A ADD MSTORE DUP2 DUP2 PUSH2 0x4AA ADD MSTORE DUP2 DUP2 PUSH2 0xC66 ADD MSTORE DUP2 DUP2 PUSH2 0xCD0 ADD MSTORE DUP2 DUP2 PUSH2 0xD6F ADD MSTORE DUP2 DUP2 PUSH2 0xDFE ADD MSTORE DUP2 DUP2 PUSH2 0xEE6 ADD MSTORE DUP2 DUP2 PUSH2 0x1603 ADD MSTORE DUP2 DUP2 PUSH2 0x39E6 ADD MSTORE DUP2 DUP2 PUSH2 0x3A69 ADD MSTORE DUP2 DUP2 PUSH2 0x3B07 ADD MSTORE DUP2 DUP2 PUSH2 0x3B81 ADD MSTORE PUSH2 0x3C46 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x852 ADD MSTORE DUP2 DUP2 PUSH2 0x970 ADD MSTORE DUP2 DUP2 PUSH2 0x1A4B ADD MSTORE DUP2 DUP2 PUSH2 0x200B ADD MSTORE PUSH2 0x2269 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420726174696F2073756D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5A4 JUMPI POP POP POP ADD SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x421 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 DUP6 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5D0 PUSH1 0x20 SWAP2 DUP5 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x58F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x609 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x40C JUMP JUMPDEST SWAP6 SWAP1 DUP2 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x634 PUSH1 0x20 SWAP2 DUP10 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP3 ADD SWAP7 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x66B SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP2 DUP8 AND DUP1 PUSH2 0x671 JUMPI JUMPDEST POP ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x0 NOT DUP6 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x65F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE PUSH2 0x6ED SWAP1 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x3AE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 ADD SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 MSTORE PUSH2 0x745 SWAP1 PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x364 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x782 JUMPI JUMPDEST DUP2 PUSH2 0x766 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9DC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x77D JUMPI PUSH2 0x777 SWAP1 PUSH2 0x9FF JUMP JUMPDEST CODESIZE PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x759 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D69736D61746368656420617272617973 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x83D JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x824 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x28D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x816 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH2 0x89F SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x8A5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x260 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x24C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x92A JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x911 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x229 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x903 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH2 0x98B SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x8A5 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x1FC JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x77D JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x17B JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x118 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x9D1 DUP5 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x68E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x77D JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x68E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xA35 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA2A JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x113E08 EQ PUSH2 0x2FA9 JUMPI DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x1A0E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2EEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E44 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E26 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D25 JUMPI DUP1 PUSH4 0x2494452D EQ PUSH2 0x2538 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2430 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2414 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x2204 JUMPI DUP1 PUSH4 0x4EADCCA8 EQ PUSH2 0x2183 JUMPI DUP1 PUSH4 0x531BCDB3 EQ PUSH2 0x2165 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x1F9F JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0x1D14 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1CDD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C75 JUMPI DUP1 PUSH4 0x8769B449 EQ PUSH2 0x1A35 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A0E JUMPI DUP1 PUSH4 0x8E4E9018 EQ PUSH2 0x19F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18E3 JUMPI DUP1 PUSH4 0xA216AA06 EQ PUSH2 0x15A1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x156F JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x14D9 JUMPI DUP1 PUSH4 0xAB83F98A EQ PUSH2 0x1449 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x130F JUMPI DUP1 PUSH4 0xB317650B EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x832 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7E2 JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x641 JUMPI PUSH4 0xF9C4D3DB EQ PUSH2 0x17B JUMPI POP PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x194 PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1A2 DUP2 ISZERO ISZERO PUSH2 0x322A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1C5 PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH2 0x1D4 DUP5 ISZERO ISZERO PUSH2 0x3275 JUMP JUMPDEST PUSH1 0x40 SWAP3 PUSH1 0x60 SWAP2 SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 DUP8 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x630 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x211 DUP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x234 DUP11 PUSH2 0x22F DUP11 PUSH2 0x22A DUP6 PUSH2 0x35E1 JUMP JUMPDEST PUSH2 0x32C0 JUMP JUMPDEST PUSH2 0x32E9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x242 DUP10 DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP11 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x5F1 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2CA DUP5 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x5A3 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x334 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP3 DUP8 EQ DUP1 DUP1 PUSH2 0x59C JUMPI JUMPDEST ISZERO PUSH2 0x36E JUMPI POP POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x366 SWAP5 CALLER GAS CALL PUSH2 0x360 PUSH2 0x3321 JUMP JUMPDEST POP PUSH2 0x3351 JUMP JUMPDEST ADD DUP9 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 SWAP4 SWAP3 ISZERO PUSH2 0x3EF JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3B6 JUMPI JUMPDEST POP PUSH2 0x366 JUMP JUMPDEST PUSH2 0x3D6 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI JUMPDEST PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3309 JUMP JUMPDEST POP CODESIZE PUSH2 0x3B0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP5 POP SWAP3 SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x49F JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x48B JUMPI SWAP2 DUP12 SWAP2 PUSH2 0x42E SWAP5 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE CALLER SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x38D9 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x470 JUMPI POP PUSH2 0x366 JUMP JUMPDEST PUSH2 0x3D6 SWAP1 RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x34B7 JUMP JUMPDEST PUSH1 0x24 DUP13 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH1 0x20 DUP14 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 PUSH2 0x504 DUP9 DUP11 PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x591 JUMPI PUSH2 0x575 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0x561 JUMPI SWAP2 PUSH2 0x549 SWAP5 SWAP4 SWAP2 DUP14 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x470 JUMPI POP PUSH2 0x366 JUMP JUMPDEST PUSH1 0x24 DUP14 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x58C SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x342 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x5D8 JUMPI JUMPDEST DUP2 PUSH2 0x5BD PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x5CE SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x321 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x622 JUMPI JUMPDEST DUP2 PUSH2 0x60B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x61C SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x2B7 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5FE JUMP JUMPDEST DUP3 PUSH2 0x2B9 JUMP JUMPDEST POP PUSH2 0x63B DUP7 CALLER PUSH2 0x3772 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x663 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x66B PUSH2 0x37F3 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x708 PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x72E PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7D7 JUMPI PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 SWAP3 PUSH2 0x7B4 SWAP3 PUSH2 0x7BA JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x7D2 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH2 0x806 PUSH2 0x30B0 JUMP JUMPDEST SWAP3 DUP3 PUSH2 0x810 PUSH2 0x30CB JUMP JUMPDEST SWAP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x130B JUMPI PUSH1 0x40 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x130B JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F7 JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1024 JUMPI DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1024 JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1028 JUMPI DUP3 PUSH1 0x4 DUP3 ADD CALLDATALOAD SWAP2 PUSH2 0x907 DUP4 PUSH2 0x3179 JUMP JUMPDEST SWAP3 PUSH2 0x915 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3141 JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x1028 JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH32 0xF94F657C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x7D7 JUMPI DUP5 SWAP1 PUSH2 0x12B7 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND CALLER SUB PUSH2 0x1273 JUMPI DUP2 MLOAD SWAP2 PUSH1 0x4 DUP4 LT ISZERO SWAP3 DUP4 PUSH2 0x125F JUMPI PUSH1 0x8 SLOAD SWAP4 DUP6 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1253 JUMPI PUSH1 0x8 DUP9 MSTORE DUP3 PUSH1 0xFF DUP3 PUSH1 0x5 SHR PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SLOAD PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR AND SWAP1 PUSH2 0x123F JUMPI PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x123F JUMPI DUP5 EQ PUSH2 0xA20 JUMPI PUSH1 0x1 ADD PUSH2 0x9C5 JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 POP PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x11FB JUMPI DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI ISZERO PUSH2 0x102C JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x1 EQ PUSH2 0xB5D JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x2 EQ PUSH2 0xABB JUMPI JUMPDEST PUSH2 0xAA4 SWAP1 PUSH2 0xAB5 PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x20 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 MLOAD PUSH2 0x30E1 JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x306F JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP2 MLOAD SWAP1 DUP2 MLOAD DUP3 ADD SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0xB45 JUMPI PUSH2 0xAD9 PUSH1 0x20 DUP3 ADD PUSH2 0x33E7 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x5D4 JUMPI PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB34 PUSH2 0xB3B SWAP4 PUSH1 0x20 PUSH2 0xAB5 SWAP8 DUP2 PUSH2 0xAA4 SWAP12 ADD SWAP3 ADD ADD PUSH2 0x3531 JUMP JUMPDEST SWAP2 AND PUSH2 0x390B JUMP JUMPDEST SWAP4 POP POP SWAP1 POP PUSH2 0xA66 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 SWAP2 DUP3 MLOAD SWAP2 DUP3 MLOAD DUP4 ADD PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x1028 JUMPI PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1024 JUMPI PUSH1 0x40 PUSH2 0xBA7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 DUP1 PUSH2 0xBAE SWAP6 SWAP10 SWAP8 SWAP10 ADD SWAP2 DUP8 ADD ADD PUSH2 0x3531 JUMP JUMPDEST SWAP4 ADD PUSH2 0x33E7 JUMP JUMPDEST AND DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0xBC7 PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x60 SWAP5 PUSH1 0x40 SWAP3 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP4 EQ SWAP2 DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1016 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC02 DUP3 DUP6 PUSH2 0x3216 JUMP JUMPDEST MLOAD AND PUSH2 0xC0D DUP2 PUSH2 0x35E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xC21 DUP13 DUP5 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP4 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP1 ISZERO PUSH2 0x1006 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFBC JUMPI DUP13 SWAP2 PUSH2 0xFCD JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCA9 DUP7 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFBC JUMPI DUP13 SWAP2 PUSH2 0xF7F JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD13 DUP7 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP2 DUP10 SUB PUSH2 0xD2C JUMPI POP POP POP POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0xBE7 JUMP JUMPDEST ISZERO PUSH2 0xDE0 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xDCC JUMPI SWAP2 DUP10 SWAP2 PUSH2 0xD63 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x38D9 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0xDC1 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xDA7 JUMPI JUMPDEST POP PUSH2 0xD26 JUMP JUMPDEST PUSH2 0xDBA SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 DUP7 ISZERO PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP16 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH2 0xEA8 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xE94 JUMPI SWAP2 PUSH2 0xE7B SWAP4 SWAP2 DUP12 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xDC1 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xDA7 JUMPI POP PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x24 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xEBF SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP16 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH2 0xF63 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xE94 JUMPI SWAP2 PUSH2 0xE7B SWAP4 SWAP2 DUP12 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST PUSH2 0xF7A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0xF2E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xFB4 JUMPI JUMPDEST DUP2 PUSH2 0xF99 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFB0 JUMPI PUSH2 0xFAA SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0xD00 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF8C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0xD02 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xFFE JUMPI JUMPDEST DUP2 PUSH2 0xFE7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFB0 JUMPI PUSH2 0xFF8 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0xC96 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xFDA JUMP JUMPDEST DUP2 PUSH2 0xC98 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 PUSH2 0xD26 JUMP JUMPDEST POP SWAP6 SWAP5 SWAP7 POP POP POP POP POP PUSH2 0xA53 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x1041 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x34B7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x7 SLOAD SUB PUSH2 0x11B7 JUMPI DUP4 SWAP2 DUP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x1077 JUMPI PUSH2 0x106F PUSH1 0x1 SWAP2 PUSH2 0x1068 DUP7 DUP7 PUSH2 0x3216 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x3893 JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x104F JUMP JUMPDEST PUSH2 0x2710 SWAP2 SWAP5 SWAP4 POP SUB PUSH2 0x1173 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x115F JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x115F JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x1101 JUMPI JUMPDEST POP PUSH1 0x20 ADD PUSH1 0x6 DUP6 MSTORE DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x10CD JUMPI POP POP POP PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SSTORE ADD PUSH2 0x10BE JUMP JUMPDEST PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP3 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x1154 JUMPI POP PUSH2 0x10B4 JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726174696F2073756D000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C656E677468000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E206E6F7420616C6C6F7765640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST POP SWAP3 SWAP4 SWAP5 POP POP POP PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920656467657220697320616C6C6F7765640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x12EF JUMPI JUMPDEST DUP2 PUSH2 0x12D1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1024 JUMPI PUSH2 0x12EA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x33E7 JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x1329 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x1331 PUSH2 0x37F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x1405 JUMPI PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x12F7 JUMPI SWAP1 PUSH2 0x1378 DUP3 PUSH1 0x1 PUSH2 0x1397 SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x31AD JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13BE DUP2 PUSH1 0x1 PUSH2 0x13D8 SWAP4 ADD PUSH1 0x6 SSTORE PUSH2 0x31DE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206578697374730000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1485 PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x339C JUMP JUMPDEST PUSH2 0x1490 DUP2 CALLVALUE EQ PUSH2 0x346C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x7 DUP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x1550 JUMPI PUSH2 0x154C DUP6 PUSH2 0x1538 DUP2 DUP8 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3104 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1521 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x1596 PUSH2 0x158C PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x367B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x15C1 DUP2 ISZERO ISZERO PUSH2 0x322A JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x15ED PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x15FC DUP3 ISZERO ISZERO PUSH2 0x3275 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x18D8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1649 DUP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x1662 DUP9 PUSH2 0x22F DUP9 PUSH2 0x22A DUP6 PUSH2 0x35E1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1670 DUP8 DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x18D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x1899 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16CF DUP5 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x1860 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1709 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP1 DUP1 PUSH2 0x1858 JUMPI JUMPDEST ISZERO PUSH2 0x1739 JUMPI POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x1731 SWAP5 CALLER GAS CALL PUSH2 0x360 PUSH2 0x3321 JUMP JUMPDEST ADD DUP7 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0x179E JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1780 JUMPI JUMPDEST POP PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x1797 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0x177A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP5 POP SWAP1 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP15 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH2 0x183C JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xDCC JUMPI SWAP1 DUP10 SWAP2 PUSH2 0x180F PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB DUP2 DUP4 DUP8 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1829 JUMPI POP PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x1797 SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x1853 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x17DF JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1891 JUMPI JUMPDEST DUP2 PUSH2 0x187A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x188B SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x16F7 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x186D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x18CA JUMPI JUMPDEST DUP2 PUSH2 0x18B3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x18C4 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x16BC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x18A6 JUMP JUMPDEST DUP3 PUSH2 0x16BE JUMP JUMPDEST POP PUSH2 0x63B DUP5 CALLER PUSH2 0x3772 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x4 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x19E6 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x19D2 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x19AB JUMPI POP PUSH1 0x1 EQ PUSH2 0x194E JUMPI JUMPDEST PUSH2 0x154C DUP5 PUSH2 0x193A DUP2 DUP7 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x306F JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1991 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x193A DUP3 PUSH2 0x192A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1978 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x193A SWAP2 POP DUP4 SWAP1 POP PUSH2 0x192A JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x190D JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP1 CALLER SUB PUSH2 0x1C31 JUMPI PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1C1D JUMPI PUSH2 0x1BD9 JUMPI PUSH1 0xB SLOAD CALLVALUE LT PUSH2 0x1B95 JUMPI PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x78D1C86D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1B8A JUMPI DUP3 SWAP1 PUSH2 0x1B4A JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND DUP3 EXTCODESIZE ISZERO PUSH2 0x130B JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH32 0x2302440800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1B3D JUMPI PUSH2 0x1B2F JUMPI DUP1 RETURN JUMPDEST PUSH2 0x1B38 SWAP2 PUSH2 0x3141 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B82 JUMPI JUMPDEST DUP2 PUSH2 0x1B64 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x130B JUMPI PUSH2 0x1B7D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x33E7 JUMP JUMPDEST PUSH2 0x1ACC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420666F726B20636F737400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973616C6C6F77656400000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F727920697320616C6C6F776564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH2 0x1C8E PUSH2 0x37F3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D04 PUSH2 0x30B0 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D36 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x1D3E PUSH2 0x37F3 JUMP JUMPDEST AND DUP1 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x1F5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1F50 JUMPI DUP4 SWAP2 PUSH2 0x1F1E JUMPI JUMPDEST POP PUSH2 0x1EDA JUMPI DUP2 JUMPDEST PUSH1 0x7 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x1ED4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1DA2 DUP5 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1DB8 JUMPI POP PUSH1 0x1 ADD PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1EAC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1DD8 PUSH2 0x1DE9 SWAP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x1378 DUP4 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x1EC0 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1DFF DUP2 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1EAC JUMPI SWAP1 PUSH2 0x1E41 PUSH2 0x1E34 PUSH2 0x1E5A SWAP4 PUSH2 0x31DE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x31DE JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x1E98 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1E70 DUP2 PUSH2 0x31DE JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x6 SSTORE DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST POP POP POP DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D7A65726F2062616C616E636500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1F48 JUMPI JUMPDEST DUP2 PUSH2 0x1F39 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1028 JUMPI MLOAD CODESIZE PUSH2 0x1D7E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1FB7 PUSH2 0x37F3 JUMP JUMPDEST PUSH2 0x1FC2 DUP2 CALLVALUE EQ PUSH2 0x346C JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1FEE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x339C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1F50 JUMPI DUP4 SWAP2 PUSH2 0x2120 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL DUP1 ISZERO PUSH2 0x1F50 JUMPI DUP4 SWAP1 PUSH2 0x20EC JUMPI JUMPDEST PUSH2 0x20A3 SWAP2 POP PUSH2 0x209D PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x33FB JUMP JUMPDEST CALLER PUSH2 0x3835 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2118 JUMPI JUMPDEST DUP2 PUSH2 0x2106 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1028 JUMPI PUSH2 0x20A3 SWAP1 MLOAD PUSH2 0x208A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x20F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x215D JUMPI JUMPDEST DUP2 PUSH2 0x213B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1028 JUMPI PUSH1 0x20 PUSH2 0x2156 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x33E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x203B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x212E JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x6 DUP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x21EE JUMPI PUSH2 0x154C DUP6 PUSH2 0x21E2 DUP2 DUP8 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3035 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x21CB JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x221E PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x2229 PUSH2 0x37F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x224B PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x339C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2390 JUMPI DUP6 SWAP4 PUSH2 0x23CF JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE DUP8 PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2390 JUMPI DUP6 SWAP4 PUSH2 0x239B JUMPI JUMPDEST POP PUSH2 0x22E4 PUSH1 0x5 SLOAD DUP5 LT ISZERO PUSH2 0x33FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP10 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2390 JUMPI PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 SWAP4 PUSH2 0x7B4 SWAP4 PUSH2 0x234F SWAP3 PUSH2 0x2373 JUMPI JUMPDEST POP CALLER PUSH2 0x3835 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x238B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x23C7 JUMPI JUMPDEST DUP2 PUSH2 0x23B7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB45 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x22D5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x23AA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x240C JUMPI JUMPDEST DUP2 PUSH2 0x23EA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB45 JUMPI PUSH1 0x20 PUSH2 0x2405 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x33E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2299 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x23DD JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2450 DUP2 ISZERO ISZERO PUSH2 0x322A JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x245F DUP3 ISZERO ISZERO PUSH2 0x3275 JUMP JUMPDEST DUP3 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x252D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x247D DUP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2496 DUP6 PUSH2 0x22F DUP7 PUSH2 0x22A DUP6 PUSH2 0x35E1 JUMP JUMPDEST SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x24D0 JUMPI POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x24C8 SWAP5 CALLER GAS CALL PUSH2 0x360 PUSH2 0x3321 JUMP JUMPDEST ADD DUP4 SWAP1 PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x2390 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x250F JUMPI JUMPDEST POP PUSH2 0x24C8 JUMP JUMPDEST PUSH2 0x2526 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0x2509 JUMP JUMPDEST POP PUSH2 0x63B DUP3 CALLER PUSH2 0x3772 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 DUP2 DUP4 PUSH1 0x8 DUP7 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 DUP7 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0x2A9C JUMPI PUSH2 0x269C SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x2A81 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A63 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A45 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A27 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A0A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29EC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29CE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29B0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2992 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2974 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2956 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2938 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x291A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28FC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28DE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28C0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28A2 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2884 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2866 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2848 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x282A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x280C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x27EE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x27D0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x27B2 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2794 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2776 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2758 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x273A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x271C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x26FE JUMPI JUMPDEST LT PUSH2 0x26E7 JUMPI JUMPDEST POP SWAP4 SWAP3 SWAP4 SUB DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x26C4 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 DUP1 DUP3 PUSH2 0x26D9 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x26B6 JUMP JUMPDEST SWAP1 PUSH2 0x26F7 DUP2 PUSH1 0x20 SWAP4 PUSH1 0xF8 SHR PUSH2 0x30E1 JUMP JUMPDEST ADD CODESIZE PUSH2 0x2691 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2714 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xF0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x268B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2732 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2683 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2750 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x267B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x276E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2673 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x278C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x266B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x27AA PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2663 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x27C8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x265B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x27E6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2653 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2804 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x264B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2822 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2643 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2840 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x263B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x285E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x98 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x287C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x90 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x262B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x289A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x88 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2623 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28B8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x80 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x261B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28D6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x78 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2613 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28F4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x70 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x260B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2912 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x68 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2603 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2930 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x60 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25FB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x294E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x58 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25F3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x296C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x50 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25EB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x298A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x48 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25E3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29A8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25DB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29C6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x38 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25D3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29E4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x30 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25CB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A02 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x28 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25C3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A1F PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 DUP6 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25BB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A3D PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x18 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25B3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A5B PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x10 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25AB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A79 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A94 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x259B JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 PUSH2 0x2D17 DUP8 SLOAD PUSH2 0x2ABA DUP4 PUSH1 0xFF DUP4 AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2ACC DUP7 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2ADF PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2AF2 PUSH1 0x60 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x18 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B04 PUSH1 0x80 DUP5 ADD PUSH1 0xFF DUP4 DUP10 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B17 PUSH1 0xA0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x28 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B2A PUSH1 0xC0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x30 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B3D PUSH1 0xE0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x38 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B51 PUSH2 0x100 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B65 PUSH2 0x120 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x48 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B79 PUSH2 0x140 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x50 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B8D PUSH2 0x160 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x58 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BA1 PUSH2 0x180 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x60 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BB5 PUSH2 0x1A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x68 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BC9 PUSH2 0x1C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x70 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BDD PUSH2 0x1E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x78 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BF1 PUSH2 0x200 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C05 PUSH2 0x220 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x88 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C19 PUSH2 0x240 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x90 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C2D PUSH2 0x260 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x98 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C41 PUSH2 0x280 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C55 PUSH2 0x2A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C69 PUSH2 0x2C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C7D PUSH2 0x2E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C91 PUSH2 0x300 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CA5 PUSH2 0x320 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CB9 PUSH2 0x340 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CCD PUSH2 0x360 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CE1 PUSH2 0x380 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CF5 PUSH2 0x3A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2D09 PUSH2 0x3C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xF0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x3E0 DUP4 ADD SWAP1 PUSH1 0xF8 SHR PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP5 ADD SWAP3 ADD DUP5 SWAP3 SWAP4 SWAP2 PUSH2 0x2583 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x2D3F PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x2D47 PUSH2 0x30CB JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 LT PUSH2 0x2D8C JUMPI JUMPDEST POP POP PUSH2 0x1596 SWAP4 POP PUSH2 0x367B JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x2DF2 JUMPI DUP1 ISZERO PUSH2 0x2DDF JUMPI CALLER ISZERO PUSH2 0x2DCC JUMPI PUSH1 0x40 DUP7 DUP7 SWAP3 PUSH2 0x1596 SWAP9 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 DUP7 DUP5 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x2E5E PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x2ED9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2EC6 JUMPI PUSH1 0x40 DUP3 SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x24 SWAP3 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2F9F JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x19D2 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x19AB JUMPI POP PUSH1 0x1 EQ PUSH2 0x2F42 JUMPI PUSH2 0x154C DUP5 PUSH2 0x193A DUP2 DUP7 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x2F85 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x193A DUP3 PUSH2 0x192A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x2F6C JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x2F16 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x7 SLOAD PUSH2 0x2FC6 DUP2 PUSH2 0x3195 JUMP JUMPDEST SWAP2 PUSH2 0x2FD4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3141 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x2FE3 DUP4 PUSH2 0x3195 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY JUMPDEST DUP2 DUP2 LT PUSH2 0x3000 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x154C DUP6 DUP3 PUSH2 0x3035 JUMP JUMPDEST DUP1 PUSH2 0x3024 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3017 PUSH1 0x1 SWAP5 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x35E1 JUMP JUMPDEST PUSH2 0x302E DUP3 DUP7 PUSH2 0x3216 JUMP JUMPDEST MSTORE ADD PUSH2 0x2FEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3059 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x304C JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x309B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x307A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30C6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30C6 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x30EE JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3122 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3115 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3163 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3163 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3163 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3231 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x327C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x32D3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x32F3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x30C6 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x30C6 JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x334C JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3332 DUP3 PUSH2 0x3179 JUMP JUMPDEST SWAP2 PUSH2 0x3340 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3141 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3358 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x33A3 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420737570706F72746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30C6 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x3402 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420616D6F756E7420696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7364000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3473 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x30C6 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x30C6 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x30C6 JUMPI DUP2 MLOAD PUSH2 0x34EB DUP2 PUSH2 0x3195 JUMP JUMPDEST SWAP3 PUSH2 0x34F9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3141 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x30C6 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3521 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3514 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x30C6 JUMPI DUP2 MLOAD PUSH2 0x3548 DUP2 PUSH2 0x3195 JUMP JUMPDEST SWAP3 PUSH2 0x3556 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3141 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x30C6 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x357E JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x358B DUP5 PUSH2 0x33E7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x3571 JUMP JUMPDEST ISZERO PUSH2 0x359D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x360E JUMPI POP POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x366F JUMPI DUP1 SWAP3 PUSH2 0x363E JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3667 JUMPI JUMPDEST DUP2 PUSH2 0x365A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x364D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3743 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x3714 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x36FA JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3743 JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x37DA JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND CALLER SUB PUSH2 0x3807 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3714 JUMPI PUSH2 0x3851 DUP2 PUSH1 0x2 SLOAD PUSH2 0x3893 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x32D3 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x38CE PUSH1 0x80 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP8 SWAP7 SWAP6 SWAP8 DUP5 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x3104 JUMP JUMPDEST SWAP6 AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3900 PUSH1 0x60 SWAP4 SWAP7 SWAP6 SWAP5 SWAP7 PUSH1 0x0 DUP5 MSTORE PUSH1 0x80 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x3104 JUMP JUMPDEST SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x3930 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP4 PUSH1 0x0 DUP6 ISZERO PUSH2 0x3D6D JUMPI POP SELFBALANCE JUMPDEST DUP1 ISZERO PUSH2 0x3D65 JUMPI DUP4 MLOAD SWAP2 SWAP5 SWAP2 PUSH2 0x3967 SWAP2 PUSH2 0x32E9 JUMP JUMPDEST SWAP5 PUSH1 0x60 SWAP4 PUSH1 0x40 SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3D5A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x398D DUP3 DUP5 PUSH2 0x3216 JUMP JUMPDEST MLOAD AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x39AA PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x39B8 DUP10 DUP5 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP4 MSTORE DUP7 CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY DUP6 ISZERO PUSH2 0x3D54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3D1B JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3A2A DUP6 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3D15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3CDC JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3AAD DUP7 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP9 SUB PUSH2 0x3AC3 JUMPI POP PUSH1 0x1 SWAP2 POP JUMPDEST ADD PUSH2 0x3972 JUMP JUMPDEST DUP6 ISZERO PUSH2 0x3B65 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x32D3 JUMPI PUSH2 0x3AFA SWAP3 PUSH1 0x0 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 DUP4 SWAP3 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x38D9 JUMP JUMPDEST SUB DUP2 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3B3E JUMPI JUMPDEST POP PUSH2 0x3ABD JUMP JUMPDEST PUSH2 0x3B52 SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0x3B38 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C2F JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP13 SWAP1 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP14 GAS CALL DUP1 ISZERO PUSH2 0x3B59 JUMPI PUSH2 0x3C13 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x32D3 JUMPI PUSH2 0x3BFB SWAP4 DUP13 PUSH1 0x0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3B3E JUMPI POP PUSH2 0x3ABD JUMP JUMPDEST PUSH2 0x3C2A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x3BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP13 SWAP1 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP14 GAS CALL DUP1 ISZERO PUSH2 0x3B59 JUMPI PUSH2 0x3CC0 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x32D3 JUMPI PUSH2 0x3BFB SWAP4 DUP13 PUSH1 0x0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST PUSH2 0x3CD7 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x3C8C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x3D0D JUMPI JUMPDEST DUP2 PUSH2 0x3CF5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP PUSH2 0x3D07 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x3A9A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3CE8 JUMP JUMPDEST DUP1 PUSH2 0x3A9C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x3D4C JUMPI JUMPDEST DUP2 PUSH2 0x3D34 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP PUSH2 0x3D46 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x3A17 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3D27 JUMP JUMPDEST DUP5 PUSH2 0x3A19 JUMP JUMPDEST POP POP POP POP POP POP POP SWAP1 POP JUMP JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x366F JUMPI DUP1 SWAP3 PUSH2 0x3D9E JUMPI JUMPDEST POP POP PUSH2 0x3953 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3DCB JUMPI JUMPDEST DUP2 PUSH2 0x3DBA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP MLOAD CODESIZE DUP1 PUSH2 0x3D97 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3DAD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY EXTCODEHASH BLOBBASEFEE ORIGIN CALL ADDRESS TIMESTAMP 0xB3 COINBASE MLOAD SWAP2 BASEFEE 0xA8 PUSH18 0x5900A9DB43FC2FFC692CB36FC3773C791BC9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xDE 0xEC 0xD7 BLOBHASH CALLDATASIZE 0x4E 0xF9 NOT ADDRESS 0xE7 PUSH22 0xF13A83B0812E157C064FCB7944D6508ED8B488216473 PUSH16 0x6C634300081C00330000000000000000 ",
              "sourceMap": "205:2306:8:-:0;;;;;;;;;;;;;-1:-1:-1;;205:2306:8;;;;-1:-1:-1;;;;;205:2306:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;205:2306:8;;-1:-1:-1;;;;;205:2306:8;;;-1:-1:-1;;;;;;205:2306:8;;;;;;;-1:-1:-1;205:2306:8;;;;;;;;;;;;;;;580:25;205:2306;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;205:2306:8;;;;;;-1:-1:-1;205:2306:8;;;;;-1:-1:-1;205:2306:8;;;;-1:-1:-1;;;;;205:2306:8;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_encode_array_address_dyn": {
                  "entryPoint": 2310,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_enum_ActionCall_dyn": {
                  "entryPoint": 2423,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 2371,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_enum_Visibility": {
                  "entryPoint": 2275,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "array_allocation_size_array_address_dyn": {
                  "entryPoint": 2251,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2195,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x64F079E1 EQ PUSH2 0x3EA JUMPI POP DUP1 PUSH4 0x78D1C86D EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x8403EF08 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x8B5350CC EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF5C8BA93 EQ PUSH2 0x94 JUMPI PUSH4 0xF94F657C EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0x3E646E062F05E01E1860EA53A6DC81E7E9162DE6 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x91 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x91 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x91 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x120 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x12E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x390 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x3A4 JUMPI POP POP POP PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x91 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x91 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x182 DUP4 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x190 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x390 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x394 JUMPI POP POP POP PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x91 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x91 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x91 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1F7 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP5 PUSH2 0x205 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x893 JUMP JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x24 PUSH1 0x20 DUP8 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x390 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x373 JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x4875 DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x35F JUMPI DUP3 SWAP2 PUSH2 0x2AC SWAP2 PUSH2 0x9BA DUP5 CODECOPY ADDRESS DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x26A PUSH1 0x40 DUP3 ADD DUP11 PUSH2 0x8E3 JUMP JUMPDEST DUP6 PUSH1 0x60 DUP3 ADD MSTORE DUP7 PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x29D PUSH2 0x28F PUSH2 0x100 DUP4 ADD DUP14 PUSH2 0x906 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE DUP12 PUSH2 0x943 JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP2 DUP4 SUB SWAP2 ADD MSTORE DUP8 PUSH2 0x977 JUMP JUMPDEST SUB SWAP1 DUP3 CREATE SWAP1 DUP2 ISZERO PUSH2 0x353 JUMPI POP SWAP4 PUSH2 0x318 SWAP4 PUSH1 0x20 SWAP8 SWAP4 PUSH2 0x348 SWAP4 PUSH2 0x331 PUSH2 0x326 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x7C752B9113B23F79161CC728CA055E06564FD3019BFC3663D04AD659CC708264 SWAP11 AND SWAP11 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP14 DUP12 MSTORE CALLER DUP16 DUP13 ADD MSTORE PUSH2 0x100 PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0x100 DUP12 ADD SWAP1 PUSH2 0x906 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x943 JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP9 ADD SWAP1 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x977 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x38C JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x222 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1AD JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x38C JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x14B JUMP JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x88F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 SWAP3 SUB PUSH2 0x633 JUMPI PUSH32 0x8E4E901800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x884 JUMPI DUP4 SWAP2 PUSH2 0x852 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH32 0xAA6CA80800000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP4 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x628 JUMPI DUP5 SWAP3 PUSH2 0x7AE JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x4EADCCA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP5 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI DUP6 SWAP2 PUSH2 0x70E JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH32 0x2494452D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP3 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x703 JUMPI DUP7 SWAP3 PUSH2 0x656 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP4 PUSH2 0x4875 SWAP4 DUP5 DUP7 ADD SWAP5 DUP7 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0x642 JUMPI SWAP3 PUSH2 0x563 PUSH2 0x57F SWAP6 SWAP4 PUSH2 0x571 SWAP4 DUP10 SWAP9 SWAP7 PUSH2 0x9BA DUP11 CODECOPY ADDRESS DUP8 MSTORE CALLER PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE DUP11 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x906 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x943 JUMP JUMPDEST SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x977 JUMP JUMPDEST SUB SWAP1 DUP4 CREATE DUP1 ISZERO PUSH2 0x637 JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8769B44900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 CALLVALUE DUP8 GAS CALL DUP1 ISZERO PUSH2 0x628 JUMPI SWAP2 PUSH1 0x20 SWAP5 PUSH1 0x60 SWAP3 PUSH32 0xD41CBC93F20EFDC0E7C08E245F3F4B52A335EFA799019F8E94B49BFF570B28B4 SWAP5 PUSH2 0x618 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 DUP6 DUP4 MSTORE AND DUP6 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP2 PUSH2 0x622 SWAP2 PUSH2 0x893 JUMP JUMPDEST CODESIZE PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x668 DUP2 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x6FB JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6FF JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x6FB JUMPI DUP2 MLOAD SWAP1 PUSH2 0x6A0 DUP3 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x6AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x6F7 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x6DA JUMPI POP POP POP SWAP1 CODESIZE PUSH2 0x500 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x6C9 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x71F DUP2 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x79F JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6FB JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x79F JUMPI DUP2 MLOAD PUSH2 0x756 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x764 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x6FF JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x78F JUMPI POP POP POP CODESIZE PUSH2 0x4C2 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x77F JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x7C0 DUP2 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x38C JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x79F JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x38C JUMPI DUP2 MLOAD SWAP1 PUSH2 0x7F8 DUP3 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x806 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x6FB JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x832 JUMPI POP POP POP SWAP1 CODESIZE PUSH2 0x485 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6FF JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x821 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x87C JUMPI JUMPDEST DUP2 PUSH2 0x86D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x633 JUMPI MLOAD CODESIZE PUSH2 0x447 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8B5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8B5 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x8F0 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x924 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x917 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x961 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x954 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x996 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP4 MLOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x20 DUP2 PUSH1 0x1 SWAP4 DUP3 SWAP4 MSTORE ADD SWAP5 ADD SWAP3 ADD SWAP1 PUSH2 0x989 JUMP INVALID PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x77D JUMPI PUSH2 0x4875 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x9DC JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH2 0x100 DUP3 DUP3 SUB SLT PUSH2 0x77D JUMPI PUSH2 0x34 DUP3 PUSH2 0x9FF JUMP JUMPDEST SWAP1 PUSH2 0x41 PUSH1 0x20 DUP5 ADD PUSH2 0x9FF JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MLOAD SWAP3 PUSH1 0x2 DUP5 LT ISZERO PUSH2 0x77D JUMPI PUSH1 0x60 DUP6 ADD MLOAD SWAP3 PUSH1 0x80 DUP7 ADD MLOAD SWAP6 PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI DUP2 ADD SWAP5 DUP3 PUSH1 0x1F DUP8 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP6 MLOAD SWAP1 PUSH2 0x89 DUP3 PUSH2 0xA13 JUMP JUMPDEST SWAP7 PUSH2 0x97 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x9DC JUMP JUMPDEST DUP3 DUP9 MSTORE PUSH1 0x20 DUP9 ADD PUSH1 0x20 DUP2 SWAP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP7 DUP4 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9C4 JUMPI POP POP POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI DUP4 ADD SWAP6 DUP5 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP7 MLOAD SWAP4 PUSH2 0xEC DUP6 PUSH2 0xA13 JUMP JUMPDEST SWAP8 PUSH2 0xFA PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x9DC JUMP JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x20 DUP10 ADD PUSH1 0x20 DUP2 SWAP8 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP9 DUP4 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH1 0xE0 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x77D JUMPI ADD SWAP6 DUP6 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP7 MLOAD SWAP7 PUSH2 0x14F DUP9 PUSH2 0xA13 JUMP JUMPDEST SWAP7 PUSH2 0x15D PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x9DC JUMP JUMPDEST DUP9 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP2 PUSH1 0x20 DUP4 SWAP11 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x99B JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x193 PUSH1 0x40 DUP3 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x26282A37B5B2B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B6 PUSH1 0x40 DUP4 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE PUSH2 0x4C5 PUSH1 0xF4 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x991 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8AF JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x942 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x8DA JUMPI PUSH1 0x0 SWAP3 PUSH2 0x8CF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8C5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8AF JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x855 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7ED JUMPI PUSH1 0x0 SWAP3 PUSH2 0x7E2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP9 MLOAD DUP9 MLOAD SUB PUSH2 0x796 JUMPI POP PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0xF5C8BA93 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x74B JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x5 SSTORE DUP6 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x7 SLOAD DUP3 PUSH1 0x7 SSTORE DUP1 DUP4 LT PUSH2 0x710 JUMPI JUMPDEST POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6F3 JUMPI POP POP DUP6 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x6B8 JUMPI JUMPDEST POP PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6A4 JUMPI POP POP SWAP2 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x8 SLOAD DUP3 PUSH1 0x8 SSTORE DUP1 DUP4 LT PUSH2 0x63D JUMPI JUMPDEST POP SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x5F0 JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x588 JUMPI JUMPDEST POP POP POP POP PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP5 JUMPDEST DUP3 MLOAD DUP7 LT ISZERO PUSH2 0x495 JUMPI PUSH2 0x43F DUP7 DUP5 PUSH2 0xA41 JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x47F JUMPI SWAP5 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x45F DUP3 DUP8 PUSH2 0xA41 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP5 PUSH2 0x42C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2710 DUP6 SWAP2 SUB PUSH2 0x54F JUMPI PUSH1 0xFF DUP1 NOT PUSH1 0xC SLOAD AND SWAP2 AND OR PUSH1 0xC SSTORE PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH2 0x3E09 SWAP1 DUP2 PUSH2 0xA6C DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x287 ADD MSTORE DUP2 DUP2 PUSH2 0x2F1 ADD MSTORE DUP2 DUP2 PUSH2 0x43A ADD MSTORE DUP2 DUP2 PUSH2 0x4AA ADD MSTORE DUP2 DUP2 PUSH2 0xC66 ADD MSTORE DUP2 DUP2 PUSH2 0xCD0 ADD MSTORE DUP2 DUP2 PUSH2 0xD6F ADD MSTORE DUP2 DUP2 PUSH2 0xDFE ADD MSTORE DUP2 DUP2 PUSH2 0xEE6 ADD MSTORE DUP2 DUP2 PUSH2 0x1603 ADD MSTORE DUP2 DUP2 PUSH2 0x39E6 ADD MSTORE DUP2 DUP2 PUSH2 0x3A69 ADD MSTORE DUP2 DUP2 PUSH2 0x3B07 ADD MSTORE DUP2 DUP2 PUSH2 0x3B81 ADD MSTORE PUSH2 0x3C46 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x852 ADD MSTORE DUP2 DUP2 PUSH2 0x970 ADD MSTORE DUP2 DUP2 PUSH2 0x1A4B ADD MSTORE DUP2 DUP2 PUSH2 0x200B ADD MSTORE PUSH2 0x2269 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420726174696F2073756D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5A4 JUMPI POP POP POP ADD SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x421 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 DUP6 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5D0 PUSH1 0x20 SWAP2 DUP5 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x58F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x609 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x40C JUMP JUMPDEST SWAP6 SWAP1 DUP2 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x634 PUSH1 0x20 SWAP2 DUP10 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP3 ADD SWAP7 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x66B SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP2 DUP8 AND DUP1 PUSH2 0x671 JUMPI JUMPDEST POP ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x0 NOT DUP6 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x65F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE PUSH2 0x6ED SWAP1 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x3AE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 ADD SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 MSTORE PUSH2 0x745 SWAP1 PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x364 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x782 JUMPI JUMPDEST DUP2 PUSH2 0x766 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9DC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x77D JUMPI PUSH2 0x777 SWAP1 PUSH2 0x9FF JUMP JUMPDEST CODESIZE PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x759 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D69736D61746368656420617272617973 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x83D JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x824 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x28D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x816 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH2 0x89F SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x8A5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x260 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x24C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x92A JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x911 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x229 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x903 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH2 0x98B SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x8A5 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x1FC JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x77D JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x17B JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x118 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x9D1 DUP5 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x68E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x77D JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x68E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xA35 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA2A JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x113E08 EQ PUSH2 0x2FA9 JUMPI DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x1A0E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2EEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E44 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E26 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D25 JUMPI DUP1 PUSH4 0x2494452D EQ PUSH2 0x2538 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2430 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2414 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x2204 JUMPI DUP1 PUSH4 0x4EADCCA8 EQ PUSH2 0x2183 JUMPI DUP1 PUSH4 0x531BCDB3 EQ PUSH2 0x2165 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x1F9F JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0x1D14 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1CDD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C75 JUMPI DUP1 PUSH4 0x8769B449 EQ PUSH2 0x1A35 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A0E JUMPI DUP1 PUSH4 0x8E4E9018 EQ PUSH2 0x19F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18E3 JUMPI DUP1 PUSH4 0xA216AA06 EQ PUSH2 0x15A1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x156F JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x14D9 JUMPI DUP1 PUSH4 0xAB83F98A EQ PUSH2 0x1449 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x130F JUMPI DUP1 PUSH4 0xB317650B EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x832 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7E2 JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x641 JUMPI PUSH4 0xF9C4D3DB EQ PUSH2 0x17B JUMPI POP PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x194 PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1A2 DUP2 ISZERO ISZERO PUSH2 0x322A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1C5 PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH2 0x1D4 DUP5 ISZERO ISZERO PUSH2 0x3275 JUMP JUMPDEST PUSH1 0x40 SWAP3 PUSH1 0x60 SWAP2 SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 DUP8 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x630 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x211 DUP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x234 DUP11 PUSH2 0x22F DUP11 PUSH2 0x22A DUP6 PUSH2 0x35E1 JUMP JUMPDEST PUSH2 0x32C0 JUMP JUMPDEST PUSH2 0x32E9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x242 DUP10 DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP11 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x5F1 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2CA DUP5 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x5A3 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x334 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP3 DUP8 EQ DUP1 DUP1 PUSH2 0x59C JUMPI JUMPDEST ISZERO PUSH2 0x36E JUMPI POP POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x366 SWAP5 CALLER GAS CALL PUSH2 0x360 PUSH2 0x3321 JUMP JUMPDEST POP PUSH2 0x3351 JUMP JUMPDEST ADD DUP9 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 SWAP4 SWAP3 ISZERO PUSH2 0x3EF JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3B6 JUMPI JUMPDEST POP PUSH2 0x366 JUMP JUMPDEST PUSH2 0x3D6 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI JUMPDEST PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3309 JUMP JUMPDEST POP CODESIZE PUSH2 0x3B0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP5 POP SWAP3 SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x49F JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x48B JUMPI SWAP2 DUP12 SWAP2 PUSH2 0x42E SWAP5 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE CALLER SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x38D9 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x470 JUMPI POP PUSH2 0x366 JUMP JUMPDEST PUSH2 0x3D6 SWAP1 RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x34B7 JUMP JUMPDEST PUSH1 0x24 DUP13 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH1 0x20 DUP14 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 PUSH2 0x504 DUP9 DUP11 PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x591 JUMPI PUSH2 0x575 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0x561 JUMPI SWAP2 PUSH2 0x549 SWAP5 SWAP4 SWAP2 DUP14 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x470 JUMPI POP PUSH2 0x366 JUMP JUMPDEST PUSH1 0x24 DUP14 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x58C SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x342 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x5D8 JUMPI JUMPDEST DUP2 PUSH2 0x5BD PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x5CE SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x321 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x622 JUMPI JUMPDEST DUP2 PUSH2 0x60B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x61C SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x2B7 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5FE JUMP JUMPDEST DUP3 PUSH2 0x2B9 JUMP JUMPDEST POP PUSH2 0x63B DUP7 CALLER PUSH2 0x3772 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x663 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x66B PUSH2 0x37F3 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x708 PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x72E PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7D7 JUMPI PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 SWAP3 PUSH2 0x7B4 SWAP3 PUSH2 0x7BA JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x7D2 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH2 0x806 PUSH2 0x30B0 JUMP JUMPDEST SWAP3 DUP3 PUSH2 0x810 PUSH2 0x30CB JUMP JUMPDEST SWAP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x130B JUMPI PUSH1 0x40 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x130B JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F7 JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1024 JUMPI DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1024 JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1028 JUMPI DUP3 PUSH1 0x4 DUP3 ADD CALLDATALOAD SWAP2 PUSH2 0x907 DUP4 PUSH2 0x3179 JUMP JUMPDEST SWAP3 PUSH2 0x915 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3141 JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x1028 JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH32 0xF94F657C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x7D7 JUMPI DUP5 SWAP1 PUSH2 0x12B7 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND CALLER SUB PUSH2 0x1273 JUMPI DUP2 MLOAD SWAP2 PUSH1 0x4 DUP4 LT ISZERO SWAP3 DUP4 PUSH2 0x125F JUMPI PUSH1 0x8 SLOAD SWAP4 DUP6 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1253 JUMPI PUSH1 0x8 DUP9 MSTORE DUP3 PUSH1 0xFF DUP3 PUSH1 0x5 SHR PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SLOAD PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR AND SWAP1 PUSH2 0x123F JUMPI PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x123F JUMPI DUP5 EQ PUSH2 0xA20 JUMPI PUSH1 0x1 ADD PUSH2 0x9C5 JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 POP PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x11FB JUMPI DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI ISZERO PUSH2 0x102C JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x1 EQ PUSH2 0xB5D JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x2 EQ PUSH2 0xABB JUMPI JUMPDEST PUSH2 0xAA4 SWAP1 PUSH2 0xAB5 PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x20 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 MLOAD PUSH2 0x30E1 JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x306F JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP2 MLOAD SWAP1 DUP2 MLOAD DUP3 ADD SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0xB45 JUMPI PUSH2 0xAD9 PUSH1 0x20 DUP3 ADD PUSH2 0x33E7 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x5D4 JUMPI PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB34 PUSH2 0xB3B SWAP4 PUSH1 0x20 PUSH2 0xAB5 SWAP8 DUP2 PUSH2 0xAA4 SWAP12 ADD SWAP3 ADD ADD PUSH2 0x3531 JUMP JUMPDEST SWAP2 AND PUSH2 0x390B JUMP JUMPDEST SWAP4 POP POP SWAP1 POP PUSH2 0xA66 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 SWAP2 DUP3 MLOAD SWAP2 DUP3 MLOAD DUP4 ADD PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x1028 JUMPI PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1024 JUMPI PUSH1 0x40 PUSH2 0xBA7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 DUP1 PUSH2 0xBAE SWAP6 SWAP10 SWAP8 SWAP10 ADD SWAP2 DUP8 ADD ADD PUSH2 0x3531 JUMP JUMPDEST SWAP4 ADD PUSH2 0x33E7 JUMP JUMPDEST AND DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0xBC7 PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x60 SWAP5 PUSH1 0x40 SWAP3 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP4 EQ SWAP2 DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1016 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC02 DUP3 DUP6 PUSH2 0x3216 JUMP JUMPDEST MLOAD AND PUSH2 0xC0D DUP2 PUSH2 0x35E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xC21 DUP13 DUP5 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP4 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP1 ISZERO PUSH2 0x1006 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFBC JUMPI DUP13 SWAP2 PUSH2 0xFCD JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCA9 DUP7 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFBC JUMPI DUP13 SWAP2 PUSH2 0xF7F JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD13 DUP7 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP2 DUP10 SUB PUSH2 0xD2C JUMPI POP POP POP POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0xBE7 JUMP JUMPDEST ISZERO PUSH2 0xDE0 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xDCC JUMPI SWAP2 DUP10 SWAP2 PUSH2 0xD63 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x38D9 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0xDC1 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xDA7 JUMPI JUMPDEST POP PUSH2 0xD26 JUMP JUMPDEST PUSH2 0xDBA SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 DUP7 ISZERO PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP16 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH2 0xEA8 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xE94 JUMPI SWAP2 PUSH2 0xE7B SWAP4 SWAP2 DUP12 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xDC1 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xDA7 JUMPI POP PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x24 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xEBF SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP16 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH2 0xF63 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xE94 JUMPI SWAP2 PUSH2 0xE7B SWAP4 SWAP2 DUP12 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST PUSH2 0xF7A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0xF2E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xFB4 JUMPI JUMPDEST DUP2 PUSH2 0xF99 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFB0 JUMPI PUSH2 0xFAA SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0xD00 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF8C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0xD02 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xFFE JUMPI JUMPDEST DUP2 PUSH2 0xFE7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFB0 JUMPI PUSH2 0xFF8 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0xC96 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xFDA JUMP JUMPDEST DUP2 PUSH2 0xC98 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 PUSH2 0xD26 JUMP JUMPDEST POP SWAP6 SWAP5 SWAP7 POP POP POP POP POP PUSH2 0xA53 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x1041 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x34B7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x7 SLOAD SUB PUSH2 0x11B7 JUMPI DUP4 SWAP2 DUP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x1077 JUMPI PUSH2 0x106F PUSH1 0x1 SWAP2 PUSH2 0x1068 DUP7 DUP7 PUSH2 0x3216 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x3893 JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x104F JUMP JUMPDEST PUSH2 0x2710 SWAP2 SWAP5 SWAP4 POP SUB PUSH2 0x1173 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x115F JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x115F JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x1101 JUMPI JUMPDEST POP PUSH1 0x20 ADD PUSH1 0x6 DUP6 MSTORE DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x10CD JUMPI POP POP POP PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SSTORE ADD PUSH2 0x10BE JUMP JUMPDEST PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP3 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x1154 JUMPI POP PUSH2 0x10B4 JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726174696F2073756D000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C656E677468000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E206E6F7420616C6C6F7765640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST POP SWAP3 SWAP4 SWAP5 POP POP POP PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920656467657220697320616C6C6F7765640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x12EF JUMPI JUMPDEST DUP2 PUSH2 0x12D1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1024 JUMPI PUSH2 0x12EA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x33E7 JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x1329 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x1331 PUSH2 0x37F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x1405 JUMPI PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x12F7 JUMPI SWAP1 PUSH2 0x1378 DUP3 PUSH1 0x1 PUSH2 0x1397 SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x31AD JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13BE DUP2 PUSH1 0x1 PUSH2 0x13D8 SWAP4 ADD PUSH1 0x6 SSTORE PUSH2 0x31DE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206578697374730000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1485 PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x339C JUMP JUMPDEST PUSH2 0x1490 DUP2 CALLVALUE EQ PUSH2 0x346C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x7 DUP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x1550 JUMPI PUSH2 0x154C DUP6 PUSH2 0x1538 DUP2 DUP8 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3104 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1521 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x1596 PUSH2 0x158C PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x367B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x15C1 DUP2 ISZERO ISZERO PUSH2 0x322A JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x15ED PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x15FC DUP3 ISZERO ISZERO PUSH2 0x3275 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x18D8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1649 DUP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x1662 DUP9 PUSH2 0x22F DUP9 PUSH2 0x22A DUP6 PUSH2 0x35E1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1670 DUP8 DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x18D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x1899 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16CF DUP5 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x1860 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1709 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP1 DUP1 PUSH2 0x1858 JUMPI JUMPDEST ISZERO PUSH2 0x1739 JUMPI POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x1731 SWAP5 CALLER GAS CALL PUSH2 0x360 PUSH2 0x3321 JUMP JUMPDEST ADD DUP7 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0x179E JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1780 JUMPI JUMPDEST POP PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x1797 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0x177A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP5 POP SWAP1 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP15 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH2 0x183C JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xDCC JUMPI SWAP1 DUP10 SWAP2 PUSH2 0x180F PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB DUP2 DUP4 DUP8 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1829 JUMPI POP PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x1797 SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x1853 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x17DF JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1891 JUMPI JUMPDEST DUP2 PUSH2 0x187A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x188B SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x16F7 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x186D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x18CA JUMPI JUMPDEST DUP2 PUSH2 0x18B3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x18C4 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x16BC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x18A6 JUMP JUMPDEST DUP3 PUSH2 0x16BE JUMP JUMPDEST POP PUSH2 0x63B DUP5 CALLER PUSH2 0x3772 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x4 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x19E6 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x19D2 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x19AB JUMPI POP PUSH1 0x1 EQ PUSH2 0x194E JUMPI JUMPDEST PUSH2 0x154C DUP5 PUSH2 0x193A DUP2 DUP7 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x306F JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1991 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x193A DUP3 PUSH2 0x192A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1978 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x193A SWAP2 POP DUP4 SWAP1 POP PUSH2 0x192A JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x190D JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP1 CALLER SUB PUSH2 0x1C31 JUMPI PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1C1D JUMPI PUSH2 0x1BD9 JUMPI PUSH1 0xB SLOAD CALLVALUE LT PUSH2 0x1B95 JUMPI PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x78D1C86D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1B8A JUMPI DUP3 SWAP1 PUSH2 0x1B4A JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND DUP3 EXTCODESIZE ISZERO PUSH2 0x130B JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH32 0x2302440800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1B3D JUMPI PUSH2 0x1B2F JUMPI DUP1 RETURN JUMPDEST PUSH2 0x1B38 SWAP2 PUSH2 0x3141 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B82 JUMPI JUMPDEST DUP2 PUSH2 0x1B64 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x130B JUMPI PUSH2 0x1B7D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x33E7 JUMP JUMPDEST PUSH2 0x1ACC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420666F726B20636F737400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973616C6C6F77656400000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F727920697320616C6C6F776564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH2 0x1C8E PUSH2 0x37F3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D04 PUSH2 0x30B0 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D36 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x1D3E PUSH2 0x37F3 JUMP JUMPDEST AND DUP1 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x1F5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1F50 JUMPI DUP4 SWAP2 PUSH2 0x1F1E JUMPI JUMPDEST POP PUSH2 0x1EDA JUMPI DUP2 JUMPDEST PUSH1 0x7 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x1ED4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1DA2 DUP5 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1DB8 JUMPI POP PUSH1 0x1 ADD PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1EAC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1DD8 PUSH2 0x1DE9 SWAP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x1378 DUP4 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x1EC0 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1DFF DUP2 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1EAC JUMPI SWAP1 PUSH2 0x1E41 PUSH2 0x1E34 PUSH2 0x1E5A SWAP4 PUSH2 0x31DE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x31DE JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x1E98 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1E70 DUP2 PUSH2 0x31DE JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x6 SSTORE DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST POP POP POP DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D7A65726F2062616C616E636500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1F48 JUMPI JUMPDEST DUP2 PUSH2 0x1F39 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1028 JUMPI MLOAD CODESIZE PUSH2 0x1D7E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1FB7 PUSH2 0x37F3 JUMP JUMPDEST PUSH2 0x1FC2 DUP2 CALLVALUE EQ PUSH2 0x346C JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1FEE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x339C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1F50 JUMPI DUP4 SWAP2 PUSH2 0x2120 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL DUP1 ISZERO PUSH2 0x1F50 JUMPI DUP4 SWAP1 PUSH2 0x20EC JUMPI JUMPDEST PUSH2 0x20A3 SWAP2 POP PUSH2 0x209D PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x33FB JUMP JUMPDEST CALLER PUSH2 0x3835 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2118 JUMPI JUMPDEST DUP2 PUSH2 0x2106 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1028 JUMPI PUSH2 0x20A3 SWAP1 MLOAD PUSH2 0x208A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x20F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x215D JUMPI JUMPDEST DUP2 PUSH2 0x213B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1028 JUMPI PUSH1 0x20 PUSH2 0x2156 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x33E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x203B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x212E JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x6 DUP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x21EE JUMPI PUSH2 0x154C DUP6 PUSH2 0x21E2 DUP2 DUP8 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3035 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x21CB JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x221E PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x2229 PUSH2 0x37F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x224B PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x339C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2390 JUMPI DUP6 SWAP4 PUSH2 0x23CF JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE DUP8 PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2390 JUMPI DUP6 SWAP4 PUSH2 0x239B JUMPI JUMPDEST POP PUSH2 0x22E4 PUSH1 0x5 SLOAD DUP5 LT ISZERO PUSH2 0x33FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP10 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2390 JUMPI PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 SWAP4 PUSH2 0x7B4 SWAP4 PUSH2 0x234F SWAP3 PUSH2 0x2373 JUMPI JUMPDEST POP CALLER PUSH2 0x3835 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x238B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x23C7 JUMPI JUMPDEST DUP2 PUSH2 0x23B7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB45 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x22D5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x23AA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x240C JUMPI JUMPDEST DUP2 PUSH2 0x23EA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB45 JUMPI PUSH1 0x20 PUSH2 0x2405 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x33E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2299 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x23DD JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2450 DUP2 ISZERO ISZERO PUSH2 0x322A JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x245F DUP3 ISZERO ISZERO PUSH2 0x3275 JUMP JUMPDEST DUP3 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x252D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x247D DUP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2496 DUP6 PUSH2 0x22F DUP7 PUSH2 0x22A DUP6 PUSH2 0x35E1 JUMP JUMPDEST SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x24D0 JUMPI POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x24C8 SWAP5 CALLER GAS CALL PUSH2 0x360 PUSH2 0x3321 JUMP JUMPDEST ADD DUP4 SWAP1 PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x2390 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x250F JUMPI JUMPDEST POP PUSH2 0x24C8 JUMP JUMPDEST PUSH2 0x2526 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0x2509 JUMP JUMPDEST POP PUSH2 0x63B DUP3 CALLER PUSH2 0x3772 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 DUP2 DUP4 PUSH1 0x8 DUP7 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 DUP7 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0x2A9C JUMPI PUSH2 0x269C SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x2A81 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A63 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A45 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A27 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A0A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29EC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29CE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29B0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2992 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2974 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2956 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2938 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x291A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28FC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28DE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28C0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28A2 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2884 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2866 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2848 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x282A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x280C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x27EE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x27D0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x27B2 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2794 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2776 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2758 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x273A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x271C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x26FE JUMPI JUMPDEST LT PUSH2 0x26E7 JUMPI JUMPDEST POP SWAP4 SWAP3 SWAP4 SUB DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x26C4 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 DUP1 DUP3 PUSH2 0x26D9 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x26B6 JUMP JUMPDEST SWAP1 PUSH2 0x26F7 DUP2 PUSH1 0x20 SWAP4 PUSH1 0xF8 SHR PUSH2 0x30E1 JUMP JUMPDEST ADD CODESIZE PUSH2 0x2691 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2714 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xF0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x268B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2732 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2683 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2750 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x267B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x276E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2673 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x278C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x266B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x27AA PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2663 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x27C8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x265B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x27E6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2653 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2804 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x264B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2822 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2643 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2840 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x263B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x285E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x98 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x287C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x90 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x262B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x289A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x88 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2623 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28B8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x80 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x261B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28D6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x78 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2613 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28F4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x70 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x260B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2912 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x68 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2603 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2930 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x60 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25FB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x294E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x58 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25F3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x296C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x50 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25EB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x298A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x48 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25E3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29A8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25DB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29C6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x38 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25D3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29E4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x30 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25CB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A02 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x28 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25C3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A1F PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 DUP6 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25BB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A3D PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x18 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25B3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A5B PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x10 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25AB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A79 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A94 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x259B JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 PUSH2 0x2D17 DUP8 SLOAD PUSH2 0x2ABA DUP4 PUSH1 0xFF DUP4 AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2ACC DUP7 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2ADF PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2AF2 PUSH1 0x60 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x18 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B04 PUSH1 0x80 DUP5 ADD PUSH1 0xFF DUP4 DUP10 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B17 PUSH1 0xA0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x28 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B2A PUSH1 0xC0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x30 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B3D PUSH1 0xE0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x38 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B51 PUSH2 0x100 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B65 PUSH2 0x120 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x48 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B79 PUSH2 0x140 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x50 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B8D PUSH2 0x160 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x58 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BA1 PUSH2 0x180 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x60 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BB5 PUSH2 0x1A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x68 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BC9 PUSH2 0x1C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x70 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BDD PUSH2 0x1E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x78 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BF1 PUSH2 0x200 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C05 PUSH2 0x220 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x88 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C19 PUSH2 0x240 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x90 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C2D PUSH2 0x260 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x98 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C41 PUSH2 0x280 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C55 PUSH2 0x2A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C69 PUSH2 0x2C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C7D PUSH2 0x2E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C91 PUSH2 0x300 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CA5 PUSH2 0x320 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CB9 PUSH2 0x340 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CCD PUSH2 0x360 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CE1 PUSH2 0x380 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CF5 PUSH2 0x3A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2D09 PUSH2 0x3C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xF0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x3E0 DUP4 ADD SWAP1 PUSH1 0xF8 SHR PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP5 ADD SWAP3 ADD DUP5 SWAP3 SWAP4 SWAP2 PUSH2 0x2583 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x2D3F PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x2D47 PUSH2 0x30CB JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 LT PUSH2 0x2D8C JUMPI JUMPDEST POP POP PUSH2 0x1596 SWAP4 POP PUSH2 0x367B JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x2DF2 JUMPI DUP1 ISZERO PUSH2 0x2DDF JUMPI CALLER ISZERO PUSH2 0x2DCC JUMPI PUSH1 0x40 DUP7 DUP7 SWAP3 PUSH2 0x1596 SWAP9 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 DUP7 DUP5 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x2E5E PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x2ED9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2EC6 JUMPI PUSH1 0x40 DUP3 SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x24 SWAP3 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2F9F JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x19D2 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x19AB JUMPI POP PUSH1 0x1 EQ PUSH2 0x2F42 JUMPI PUSH2 0x154C DUP5 PUSH2 0x193A DUP2 DUP7 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x2F85 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x193A DUP3 PUSH2 0x192A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x2F6C JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x2F16 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x7 SLOAD PUSH2 0x2FC6 DUP2 PUSH2 0x3195 JUMP JUMPDEST SWAP2 PUSH2 0x2FD4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3141 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x2FE3 DUP4 PUSH2 0x3195 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY JUMPDEST DUP2 DUP2 LT PUSH2 0x3000 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x154C DUP6 DUP3 PUSH2 0x3035 JUMP JUMPDEST DUP1 PUSH2 0x3024 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3017 PUSH1 0x1 SWAP5 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x35E1 JUMP JUMPDEST PUSH2 0x302E DUP3 DUP7 PUSH2 0x3216 JUMP JUMPDEST MSTORE ADD PUSH2 0x2FEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3059 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x304C JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x309B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x307A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30C6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30C6 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x30EE JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3122 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3115 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3163 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3163 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3163 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3231 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x327C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x32D3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x32F3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x30C6 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x30C6 JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x334C JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3332 DUP3 PUSH2 0x3179 JUMP JUMPDEST SWAP2 PUSH2 0x3340 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3141 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3358 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x33A3 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420737570706F72746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30C6 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x3402 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420616D6F756E7420696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7364000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3473 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x30C6 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x30C6 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x30C6 JUMPI DUP2 MLOAD PUSH2 0x34EB DUP2 PUSH2 0x3195 JUMP JUMPDEST SWAP3 PUSH2 0x34F9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3141 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x30C6 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3521 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3514 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x30C6 JUMPI DUP2 MLOAD PUSH2 0x3548 DUP2 PUSH2 0x3195 JUMP JUMPDEST SWAP3 PUSH2 0x3556 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3141 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x30C6 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x357E JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x358B DUP5 PUSH2 0x33E7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x3571 JUMP JUMPDEST ISZERO PUSH2 0x359D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x360E JUMPI POP POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x366F JUMPI DUP1 SWAP3 PUSH2 0x363E JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3667 JUMPI JUMPDEST DUP2 PUSH2 0x365A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x364D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3743 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x3714 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x36FA JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3743 JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x37DA JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND CALLER SUB PUSH2 0x3807 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3714 JUMPI PUSH2 0x3851 DUP2 PUSH1 0x2 SLOAD PUSH2 0x3893 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x32D3 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x38CE PUSH1 0x80 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP8 SWAP7 SWAP6 SWAP8 DUP5 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x3104 JUMP JUMPDEST SWAP6 AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3900 PUSH1 0x60 SWAP4 SWAP7 SWAP6 SWAP5 SWAP7 PUSH1 0x0 DUP5 MSTORE PUSH1 0x80 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x3104 JUMP JUMPDEST SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x3930 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP4 PUSH1 0x0 DUP6 ISZERO PUSH2 0x3D6D JUMPI POP SELFBALANCE JUMPDEST DUP1 ISZERO PUSH2 0x3D65 JUMPI DUP4 MLOAD SWAP2 SWAP5 SWAP2 PUSH2 0x3967 SWAP2 PUSH2 0x32E9 JUMP JUMPDEST SWAP5 PUSH1 0x60 SWAP4 PUSH1 0x40 SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3D5A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x398D DUP3 DUP5 PUSH2 0x3216 JUMP JUMPDEST MLOAD AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x39AA PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x39B8 DUP10 DUP5 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP4 MSTORE DUP7 CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY DUP6 ISZERO PUSH2 0x3D54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3D1B JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3A2A DUP6 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3D15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3CDC JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3AAD DUP7 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP9 SUB PUSH2 0x3AC3 JUMPI POP PUSH1 0x1 SWAP2 POP JUMPDEST ADD PUSH2 0x3972 JUMP JUMPDEST DUP6 ISZERO PUSH2 0x3B65 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x32D3 JUMPI PUSH2 0x3AFA SWAP3 PUSH1 0x0 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 DUP4 SWAP3 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x38D9 JUMP JUMPDEST SUB DUP2 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3B3E JUMPI JUMPDEST POP PUSH2 0x3ABD JUMP JUMPDEST PUSH2 0x3B52 SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0x3B38 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C2F JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP13 SWAP1 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP14 GAS CALL DUP1 ISZERO PUSH2 0x3B59 JUMPI PUSH2 0x3C13 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x32D3 JUMPI PUSH2 0x3BFB SWAP4 DUP13 PUSH1 0x0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3B3E JUMPI POP PUSH2 0x3ABD JUMP JUMPDEST PUSH2 0x3C2A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x3BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP13 SWAP1 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP14 GAS CALL DUP1 ISZERO PUSH2 0x3B59 JUMPI PUSH2 0x3CC0 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x32D3 JUMPI PUSH2 0x3BFB SWAP4 DUP13 PUSH1 0x0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST PUSH2 0x3CD7 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x3C8C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x3D0D JUMPI JUMPDEST DUP2 PUSH2 0x3CF5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP PUSH2 0x3D07 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x3A9A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3CE8 JUMP JUMPDEST DUP1 PUSH2 0x3A9C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x3D4C JUMPI JUMPDEST DUP2 PUSH2 0x3D34 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP PUSH2 0x3D46 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x3A17 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3D27 JUMP JUMPDEST DUP5 PUSH2 0x3A19 JUMP JUMPDEST POP POP POP POP POP POP POP SWAP1 POP JUMP JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x366F JUMPI DUP1 SWAP3 PUSH2 0x3D9E JUMPI JUMPDEST POP POP PUSH2 0x3953 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3DCB JUMPI JUMPDEST DUP2 PUSH2 0x3DBA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP MLOAD CODESIZE DUP1 PUSH2 0x3D97 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3DAD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY EXTCODEHASH BLOBBASEFEE ORIGIN CALL ADDRESS TIMESTAMP 0xB3 COINBASE MLOAD SWAP2 BASEFEE 0xA8 PUSH18 0x5900A9DB43FC2FFC692CB36FC3773C791BC9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xDE 0xEC 0xD7 BLOBHASH CALLDATASIZE 0x4E 0xF9 NOT ADDRESS 0xE7 PUSH22 0xF13A83B0812E157C064FCB7944D6508ED8B488216473 PUSH16 0x6C634300081C00330000000000000000 ",
              "sourceMap": "205:2306:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:42;205:2306;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2275:11:8;205:2306;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2394:9:8;205:2306;;;;;;;;;;;;;;;-1:-1:-1;;205:2306:8;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;930:227;;;;;;;;205:2306;930:227;;;;;;;205:2306;930:227;;;;965:4;205:2306;;985:10;205:2306;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;930:227;;;;;;;;;205:2306;;;;;;;;;;;-1:-1:-1;;;;;1175:234:8;205:2306;;;;;;;;;;;985:10;205:2306;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;1175:234;;;205:2306;;;;;;930:227;205:2306;;;;;;;;;;930:227;205:2306;;-1:-1:-1;;;205:2306:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;205:2306:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;205:2306:8;;;;;;;;;;;;-1:-1:-1;205:2306:8;;-1:-1:-1;;205:2306:8;;;;;;;-1:-1:-1;;;;;205:2306:8;;;;;;;;1739:23;;205:2306;1739:23;205:2306;1739:23;;;;;;;;;;;;;205:2306;;;;1805:16;205:2306;1805:16;;;;205:2306;1805:16;;;;;;;;;;;;;205:2306;;;;;1836:20;;;;205:2306;1836:20;;;;;;;;;;;;;205:2306;;;;1871:24;205:2306;1871:24;;;;205:2306;1871:24;;;;;;;;;;;;;205:2306;;;;1620:286;;;;;;;;;;;;;;;;;205:2306;;1620:286;;205:2306;1620:286;;;;;;;1655:4;205:2306;;1675:10;205:2306;;;;1700:24;205:2306;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;1620:286;;;;;;;;1919:31;;;;;205:2306;;;1919:31;;1938:9;;205:2306;1938:9;;1919:31;;;;;;;;205:2306;1919:31;205:2306;1919:31;1968:51;1919:31;;;205:2306;;;-1:-1:-1;;;;;205:2306:8;;;;;;;;;;;1675:10;205:2306;;;;1968:51;205:2306;;;;;;1919:31;;;;;:::i;:::-;;;;;205:2306;;;;;;;;;1919:31;205:2306;;;1620:286;205:2306;;;;;;;;;1620:286;205:2306;;-1:-1:-1;;;205:2306:8;;;;;;1871:24;;;;;;;;;;;;;:::i;:::-;;;205:2306;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1871:24;;;;;;;205:2306;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1871:24;205:2306;;;;;;;;;1836:20;;;;;;;;;;;;:::i;:::-;;;205:2306;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:20;;;;;;205:2306;;;;;;;;;;;;;;;;;1836:20;205:2306;;;;;;;;;1805:16;;;;;;;;;;;;;:::i;:::-;;;205:2306;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1805:16;;;;;;;205:2306;;;-1:-1:-1;;;;;205:2306:8;;;;;;;;;;;;;;;;1739:23;;;205:2306;1739:23;;205:2306;1739:23;;;;;;205:2306;1739:23;;;:::i;:::-;;;205:2306;;;;;1739:23;;;;;;-1:-1:-1;1739:23:8;;;205:2306;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;205:2306:8;;;;;-1:-1:-1;205:2306:8;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;;;;205:2306:8;;;;;-1:-1:-1;205:2306:8;;;;;;;;;;;;;;;-1:-1:-1;205:2306:8;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;205:2306:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;205:2306:8;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;205:2306:8;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "createStrategy(address[],uint256[],uint8,uint256,uint256,uint8[])": "8403ef08",
              "edger()": "f94f657c",
              "forkStrategy(address)": "64f079e1",
              "getPriceOracleAddress()": "8b5350cc",
              "getRevenueAddress()": "78d1c86d",
              "getSwapRouterAddress()": "f5c8ba93"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revenue_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dataFeed_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapRouter_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"splitRatio\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"enum Enums.Visibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositUsdMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"forkCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"allowedActions\",\"type\":\"uint8[]\"}],\"name\":\"StrategyCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fork\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"forker\",\"type\":\"address\"}],\"name\":\"StrategyForked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"splitRatio\",\"type\":\"uint256[]\"},{\"internalType\":\"enum Enums.Visibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositUsdMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forkCost\",\"type\":\"uint256\"},{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"allowedActions\",\"type\":\"uint8[]\"}],\"name\":\"createStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"edger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"forkStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevenueAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/Factory.sol\":{\"keccak256\":\"0x2f207ab817bc4c680727777d2dc724c75f677d4eba7fa1598595da7330aaa05f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a8e1eb587396b47bd230eff90974b498d7e6881eb53f1e93ec1596e496280c4f\",\"dweb:/ipfs/QmSC8Q4xkTvhm2SRYz8YZRhFh66YGUjgzsmu2jwm68QM6G\"]},\"contracts/Strategy.sol\":{\"keccak256\":\"0x43d05e351ea33b6ee91d8d28183f04bbe9292f11caa46ef8e689cfbe217e2066\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://470643593f556f57329fdd67190276152ca0cf5a839c4a8f9034221293468ca4\",\"dweb:/ipfs/QmWsEnSjXv9NKa7QoUCXD4WRTZ4LSPU6jP2wAwahmZXjis\"]},\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0xdafda8f5f34be55f0f031adbe18eb4d11a8a6ea1ad2bcd3e67d0e76d11d9530f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a1298e140a1bf2cdc2b0f53c663fd71f010718822a547298435bf49b072693ef\",\"dweb:/ipfs/QmXzbUAgNmRWTtUNT6toQbrsXTS7hQonfDFATSdYRv6JR2\"]},\"contracts/interfaces/IMultiTokenPool.sol\":{\"keccak256\":\"0x82c1289792365bf675770f06d43816e00207385a368e1f004ee662582bb604bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e25dbe134fb5e13f032a5c04342d49d8d6634b32204264c4b1292903eb27b178\",\"dweb:/ipfs/QmXL6WvX7zAiSo2zHeDKJSagSRo4FB3F7DhXsppLw7kdDh\"]},\"contracts/interfaces/IPoolAdmin.sol\":{\"keccak256\":\"0x5531e78ca38f798dac44609d77e3addf1b8720966eea28b28e4e7bae9685d438\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d3f47b4ceebb0590d8454a0b35f4a5b8e0fa914294b4cb7826a5f35177a08af\",\"dweb:/ipfs/QmfWapy95rDTSjvzQkoCavk2AtUamemZvykNds4givHjar\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4252f4cc64140561f61a4d6ab1f39c540dd70099aa0f056ca0162b8683a78c95\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c644be7ada43bdc0faf1103004ad7a4bebf58f5f780e887ec14d9032b13efa59\",\"dweb:/ipfs/Qmc5Sdo5xjJEMJts7YzzUUboML46S4WEKmuSZBT8ZdZceC\"]},\"contracts/interfaces/IRevenue.sol\":{\"keccak256\":\"0xd5a46b604bec7d07fc9e71f4f6353f6e7111ec6ec943b6f3919ac9f3b76cbc7d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f588ebd6d301d2899f1a8cbcf3431ab77ee903745dcb674e6b6362da489e440e\",\"dweb:/ipfs/QmUR57AhBxPf4v8Wjmcs1v5PTTnAFvvtuH1SjDhvixENqY\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x2d3f17b9672e01c840221eeec835270f2a422452a748895c253776dc087520d7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://765b3f5dd0af55dd95ca0d821de87a42ab5009506e5b65b70b03f1e9cf547417\",\"dweb:/ipfs/QmdcVQDuwrezpLrdp4WmveJLUMa9X2WF9MKUoxGo4EG2W9\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0xa81354f3347bcca731e13bc230a4a2e68e34a1135df0295ca5513f9932a0c5d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2cab49119e9a7eb270f82e74d6b15df984c2feca48348fafde0dabdde138922e\",\"dweb:/ipfs/QmQWMZnjhv1HeBMLUtdqk6cDZe7sErkRw1kBK7ZxtH5swU\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]},\"contracts/lib/Params.sol\":{\"keccak256\":\"0xff8d2345a9a54bea3d7b8b85b10db04c88cd1ed7f945b140fc0479337095a498\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67c5fa1f1789abac9073988c1f1348cb66919b8816117e8cff43699006257a6f\",\"dweb:/ipfs/QmRME4psBXS6botgfdXwSsVW13izZ6arp2JNgC4XfcudY3\"]},\"contracts/lib/Types.sol\":{\"keccak256\":\"0xb9f0c879aa34501ba63fa88aab0713e10884f0f7cf9075a3188138ebe072dc54\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://940f96d0d58e31c3d740a380aa27d1a7215d5ad4e25d595782a99596c19cdb46\",\"dweb:/ipfs/QmcK7CtZ6CRyDNKMdbkWgcmahoXhZE7539WnDe5o9HtkUj\"]},\"contracts/pool/MultiTokenPool.sol\":{\"keccak256\":\"0x7d4a72c34f446d83009e3a71c41f4bf2e6ccf60546e65a1cf361cf8599a078f9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d1ccfe94665510565630bb3bf74f5b3ac522cbabf28d2f83e1a2348d5581ce89\",\"dweb:/ipfs/QmTQLQuraM9PVZeAqgitjugrk85MunMbLQBGeg9ogdh96n\"]},\"contracts/pool/PoolActions.sol\":{\"keccak256\":\"0x844bf7714d2b3f8149f4449353e5bd4984a8ab9ccc540de4fe05e793c7791a83\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8252c20420da40ce90707764e2c529937e3fcb0b706fe5a2506d453c71b0e878\",\"dweb:/ipfs/QmW4CMahzUiBWCchFpULkrUdgN3Q5ZYNWNhDcHPLDHfFUK\"]}},\"version\":1}"
        }
      },
      "contracts/Strategy.sol": {
        "Strategy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "factory_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "creator_",
                  "type": "address"
                },
                {
                  "internalType": "enum Enums.Visibility",
                  "name": "visibility_",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "depositUsdMin_",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "forkCost_",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "initialTokens_",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "initialSplitRatio_",
                  "type": "uint256[]"
                },
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "allowedActions_",
                  "type": "uint8[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum Enums.ActionCall",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Params.ExecuteCall",
                  "name": "call",
                  "type": "tuple"
                }
              ],
              "name": "ExecuteCalled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "lp",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "donor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensDonated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "lp",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "TokensWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                }
              ],
              "name": "addToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "creator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "depositETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "donate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "donateETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum Enums.ActionCall",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Params.ExecuteCall",
                  "name": "call",
                  "type": "tuple"
                }
              ],
              "name": "executeCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllowedActions",
              "outputs": [
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "",
                  "type": "uint8[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalances",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getDepositUsdMin",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getForkCost",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSplitRatio",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTokens",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "onFork",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "removeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawSingle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawSingleETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 2559,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_array_address_dyn": {
                  "entryPoint": 2579,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_address": {
                  "entryPoint": 2602,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 2524,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 2625,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_dynamic1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60c0806040523461077d57614875803803809161001c82856109dc565b833981016101008282031261077d57610034826109ff565b90610041602084016109ff565b91604084015192600284101561077d5760608501519260808601519560a081015160018060401b03811161077d5781019482601f8701121561077d5785519061008982610a13565b9661009760405198896109dc565b828852602088016020819460051b8301019186831161077d57602001905b8282106109c45750505060c08301516001600160401b03811161077d5783019584601f8801121561077d578651936100ec85610a13565b976100fa604051998a6109dc565b858952602089016020819760051b8301019188831161077d57602001905b8282106109b45750505060e0810151906001600160401b03821161077d57019585601f8801121561077d5786519661014f88610a13565b9661015d60405198896109dc565b88885260208801916020839a60051b82010191821161077d57602001915b81831061099b575050506040516101936040826109dc565b600781526626282a37b5b2b760c91b6020820152604051906101b66040836109dc565b600282526104c560f41b60208301528051906001600160401b03821161068e5760035490600182811c92168015610991575b60208310146108af5781601f849311610942575b50602090601f83116001146108da576000926108cf575b50508160011b916000199060031b1c1916176003555b8051906001600160401b03821161068e5760045490600182811c921680156108c5575b60208310146108af5781601f849311610855575b50602090601f83116001146107ed576000926107e2575b50508160011b916000199060031b1c1916176004555b6001600160a01b031680156107cc57600a80546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38851885103610796575060a081905260405163f5c8ba9360e01b815290602090829060049082906001600160a01b03165afa90811561078a5760009161074b575b506001600160a01b03166080526005558551906001600160401b03821161068e5768010000000000000000821161068e5760075482600755808310610710575b506007600052602060002060005b8381106106f35750508551929150506001600160401b03821161068e5768010000000000000000821161068e57600654826006558083106106b8575b506006600052602060002060005b8381106106a45750509151929150506001600160401b03821161068e5768010000000000000000821161068e576008548260085580831061063d575b5090600860005260206000208160051c9160005b8381106105f05750601f198116900380610588575b505050506000936000945b82518610156104955761043f8684610a41565b51810180911161047f57946001906001600160a01b0361045f8287610a41565b5116600052600960205260406000208260ff19825416179055019461042c565b634e487b7160e01b600052601160045260246000fd5b61271085910361054f5760ff8019600c5416911617600c55600b55604051613e099081610a6c8239608051818181610287015281816102f10152818161043a015281816104aa01528181610c6601528181610cd001528181610d6f01528181610dfe01528181610ee601528181611603015281816139e601528181613a6901528181613b0701528181613b810152613c46015260a0518181816108520152818161097001528181611a4b0152818161200b01526122690152f35b60405162461bcd60e51b8152602060048201526011602482015270496e76616c696420726174696f2073756d60781b6044820152606490fd5b9260009360005b8181106105a457505050015538808080610421565b909194855160048110156105da576105d0602091846001949060ff809160031b9316831b921b19161790565b960192910161058f565b634e487b7160e01b600052602160045260246000fd5b6000805b6020811061060957508382015560010161040c565b9590815160048110156105da57610634602091896001949060ff809160031b9316831b921b19161790565b920196016105f4565b61066b9060086000526020600020601f80860160051c82019281871680610671575b500160051c0190610a2a565b386103f8565b6000198501908154906000199060200360031b1c1690553861065f565b634e487b7160e01b600052604160045260246000fd5b6001906020845194019381840155016103bc565b60066000526106ed907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f908101908401610a2a565b386103ae565b82516001600160a01b031681830155602090920191600101610372565b6007600052610745907fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688908101908401610a2a565b38610364565b90506020813d602011610782575b81610766602093836109dc565b8101031261077d57610777906109ff565b38610324565b600080fd5b3d9150610759565b6040513d6000823e3d90fd5b62461bcd60e51b81526020600482015260116024820152704d69736d6174636865642061727261797360781b6044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b015190503880610277565b600460009081528281209350601f198516905b81811061083d5750908460019594939210610824575b505050811b0160045561028d565b015160001960f88460031b161c19169055388080610816565b92936020600181928786015181550195019301610800565b600460005261089f907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f850160051c810191602086106108a5575b601f0160051c0190610a2a565b38610260565b9091508190610892565b634e487b7160e01b600052602260045260246000fd5b91607f169161024c565b015190503880610213565b600360009081528281209350601f198516905b81811061092a5750908460019594939210610911575b505050811b01600355610229565b015160001960f88460031b161c19169055388080610903565b929360206001819287860151815501950193016108ed565b600360005261098b907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f850160051c810191602086106108a557601f0160051c0190610a2a565b386101fc565b91607f16916101e8565b8251600481101561077d5781526020928301920161017b565b8151815260209182019101610118565b602080916109d1846109ff565b8152019101906100b5565b601f909101601f19168101906001600160401b0382119082101761068e57604052565b51906001600160a01b038216820361077d57565b6001600160401b03811161068e5760051b60200190565b818110610a35575050565b60008155600101610a2a565b8051821015610a555760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c8062113e0814612fa957806302d05d3f14611a0e57806306fdde0314612eec578063095ea7b314612e4457806318160ddd14612e2657806323b872dd14612d255780632494452d146125385780632e1a7d4d14612430578063313ce5671461241457806347e7ef24146122045780634eadcca814612183578063531bcdb3146121655780635358fbda14611f9f5780635fa7b58414611d1457806370a0823114611cdd578063715018a614611c755780638769b44914611a355780638da5cb5b14611a0e5780638e4e9018146119f057806395d89b41146118e3578063a216aa06146115a1578063a9059cbb1461156f578063aa6ca808146114d9578063ab83f98a14611449578063af81c5b91461130f578063b317650b14610876578063c45a015514610832578063dd62ed3e146107e2578063e69d849d146106ee578063f2fde38b146106415763f9c4d3db1461017b575061000e565b3461063e57604036600319011261063e576101946130b0565b6024356101a281151561322a565b6001600160a01b0382169081845260096020526101c560ff604086205416613596565b600254926101d4841515613275565b6040926060919073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81149087805b600754811015610630576001600160a01b03610211826131ad565b90549060031b1c166102348a61022f8a61022a856135e1565b6132c0565b6132e9565b906040516102428982613141565b600281528a36602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8214801561062a576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105e05787916105f1575b505b6001600160a01b036102ca846131f9565b9116905287156105eb576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105e05787916105a3575b505b6001600160a01b0361033484613206565b91169052828714808061059c575b1561036e575050505082808060019561036694335af1610360613321565b50613351565b0188906101f6565b929392156103ef57505060405163a9059cbb60e01b815233600482015260248101919091529260209184916044918391905af19182156103e4576001926103b6575b50610366565b6103d69060203d81116103dd575b6103ce8183613141565b810190613309565b50386103b0565b503d6103c4565b6040513d8c823e3d90fd5b939450929091901561049f5750600142019182421161048b57918b9161042e9493604051809681948293637ff36ab560e01b84523390600485016138d9565b03916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19182156103e4576001926104705750610366565b6103d6903d808d833e6104838183613141565b8101906134b7565b60248c634e487b7160e01b81526011600452fd5b906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169160208d6040519283809263095ea7b360e01b825281610504888a60048401602090939291936001600160a01b0360408201951681520152565b03925af1801561059157610575575b50600142019283421161056157916105499493918d8094604051978895869485936338ed173960e01b85523391600486016138a0565b03925af19182156103e4576001926104705750610366565b60248d634e487b7160e01b81526011600452fd5b61058c9060203d81116103dd576103ce8183613141565b610513565b6040513d8f823e3d90fd5b5088610342565b90506020813d82116105d8575b816105bd60209383613141565b810103126105d4576105ce906133e7565b38610321565b8680fd5b3d91506105b0565b6040513d89823e3d90fd5b88610323565b90506020813d8211610622575b8161060b60209383613141565b810103126105d45761061c906133e7565b386102b7565b3d91506105fe565b826102b9565b5061063b8633613772565b80f35b80fd5b503461063e57602036600319011261063e576001600160a01b036106636130b0565b61066b6137f3565b1680156106c2576001600160a01b03600a548273ffffffffffffffffffffffffffffffffffffffff19821617600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b6024827f1e4fbdf700000000000000000000000000000000000000000000000000000000815280600452fd5b503461063e57604036600319011261063e576107086130b0565b6024356001600160a01b03821690818452600960205261072e60ff604086205416613596565b6040516323b872dd60e01b815233600482015230602482015260448101829052916020908390606490829088905af19081156107d7577f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f74926107b4926107ba575b50604051918291339583602090939291936001600160a01b0360408201951681520152565b0390a280f35b6107d29060203d6020116103dd576103ce8183613141565b61078f565b6040513d86823e3d90fd5b503461063e57604036600319011261063e576001600160a01b0360406108066130b0565b92826108106130cb565b9416815260016020522091166000526020526020604060002054604051908152f35b503461063e578060031936011261063e5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461063e57602036600319011261063e5760043567ffffffffffffffff811161130b576040600319823603011261130b57604051906040820182811067ffffffffffffffff8211176112f7576040528060040135600481101561102457825260248101359067ffffffffffffffff8211611024570136602382011215611028578260048201359161090783613179565b926109156040519485613141565b808452366024838301011161102857806024602093018386013783010152602082019081526040517ff94f657c0000000000000000000000000000000000000000000000000000000081526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156107d75784906112b7575b6001600160a01b039150163303611273578151916004831015928361125f576008549385805b8681101561125357600888528260ff8260051c7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3015460f88460031b161c169061123f57600481101561123f578414610a20576001016109c5565b5050505090915060015b156111fb5780516004811015610b49571561102c575b80516004811015610b4957600114610b5d575b80516004811015610b4957600214610abb575b610aa490610ab57f2dbb4029cc94c05452861994b3d66ab5d4b3f2b45418116b370c7981f2eebb9093604051938493602085526020850190516130e1565b51604080840152606083019061306f565b0390a180f35b8151908151820191604081840312610b4557610ad9602082016133e7565b9360408201519167ffffffffffffffff83116105d4577f2dbb4029cc94c05452861994b3d66ab5d4b3f2b45418116b370c7981f2eebb90956001600160a01b03610b34610b3b936020610ab59781610aa49b01920101613531565b911661390b565b9350509050610a66565b8480fd5b602484634e487b7160e01b81526021600452fd5b9091825191825183016040848203126110285760208401519067ffffffffffffffff8211611024576040610ba76001600160a01b0393602080610bae959997990191870101613531565b93016133e7565b168083526009602052610bc760ff604085205416613596565b60609460409273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee831491855b8251811015611016576001600160a01b03610c028285613216565b5116610c0d816135e1565b801561100c5760405191610c218c84613141565b600283528836602085013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81148015611006576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610fbc578c91610fcd575b505b6001600160a01b03610ca9866131f9565b911690528715610fc7576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610fbc578c91610f7f575b505b6001600160a01b03610d1386613206565b91169052818903610d2c57505050506001905b01610be7565b15610de057506001420191824211610dcc57918991610d6393604051809581948293637ff36ab560e01b84523090600485016138d9565b03916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af18015610dc1579060019291610da7575b50610d26565b610dba903d808b833e6104838183613141565b5038610da1565b6040513d8a823e3d90fd5b60248a634e487b7160e01b81526011600452fd5b908615610ecf5760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482018190526024820183905292602090829060449082908f905af18015610ec457610ea8575b506001420192834211610e945791610e7b93918b8094604051968795869485936318cbafe560e01b85523091600486016138a0565b03925af18015610dc1579060019291610da75750610d26565b60248b634e487b7160e01b81526011600452fd5b610ebf9060203d81116103dd576103ce8183613141565b610e46565b6040513d8d823e3d90fd5b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482018190526024820183905292602090829060449082908f905af18015610ec457610f63575b506001420192834211610e945791610e7b93918b8094604051968795869485936338ed173960e01b85523091600486016138a0565b610f7a9060203d81116103dd576103ce8183613141565b610f2e565b90506020813d8211610fb4575b81610f9960209383613141565b81010312610fb057610faa906133e7565b38610d00565b8b80fd5b3d9150610f8c565b6040513d8e823e3d90fd5b88610d02565b90506020813d8211610ffe575b81610fe760209383613141565b81010312610fb057610ff8906133e7565b38610c96565b3d9150610fda565b81610c98565b5050600190610d26565b509594965050505050610a53565b8380fd5b8280fd5b906110418151602080825183010191016134b7565b8051600754036111b7578391825b82518410156110775761106f6001916110688686613216565b5190613893565b93019261104f565b61271091949350036111735780519067ffffffffffffffff821161115f5768010000000000000000821161115f5760065482600655808310611101575b5060200160068552845b8281106110cd57505050610a40565b60019060208351930192817ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0155016110be565b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01827ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f015b81811061115457506110b4565b868155600101611147565b602485634e487b7160e01b81526041600452fd5b606460405162461bcd60e51b815260206004820152601160248201527f496e76616c696420726174696f2073756d0000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964206c656e6774680000000000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601260248201527f416374696f6e206e6f7420616c6c6f77656400000000000000000000000000006044820152fd5b602489634e487b7160e01b81526021600452fd5b50929394505050610a2a565b602485634e487b7160e01b81526021600452fd5b606460405162461bcd60e51b815260206004820152601560248201527f4f6e6c7920656467657220697320616c6c6f77656400000000000000000000006044820152fd5b506020813d6020116112ef575b816112d160209383613141565b81010312611024576112ea6001600160a01b03916133e7565b61099f565b3d91506112c4565b602484634e487b7160e01b81526041600452fd5b5080fd5b503461063e57604036600319011261063e576113296130b0565b6113316137f3565b6001600160a01b03811690818352600960205260ff60408420541661140557600754680100000000000000008110156112f7579061137882600161139794016007556131ad565b9091906001600160a01b038084549260031b9316831b921b1916179055565b600654680100000000000000008110156113f1576113be8160016113d893016006556131de565b6024359082549060031b91821b91600019901b1916179055565b8152600960205260408120805460ff1916600117905580f35b602483634e487b7160e01b81526041600452fd5b606460405162461bcd60e51b815260206004820152600c60248201527f546f6b656e2065786973747300000000000000000000000000000000000000006044820152fd5b50602036600319011261063e5760043573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8252600960205261148560ff60408420541661339c565b61149081341461346c565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f7460403392a280f35b503461063e578060031936011261063e5760405180916020600754928381520191600782527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688915b8181106115505761154c8561153881870382613141565b604051918291602083526020830190613104565b0390f35b82546001600160a01b0316845260209093019260019283019201611521565b503461063e57604036600319011261063e5761159661158c6130b0565b602435903361367b565b602060405160018152f35b503461063e57602036600319011261063e576004356115c181151561322a565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260096020526115ed60ff604084205416613596565b600254906115fc821515613275565b60409060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685805b6007548110156118d8576001600160a01b03611649826131ad565b90549060031b1c166116628861022f8861022a856135e1565b906040516116708782613141565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee821480156118d2576040516315ab88c960e31b81526020816004818b5afa9081156105e0578791611899575b505b6001600160a01b036116cf846131f9565b911690526040516315ab88c960e31b81526020816004818b5afa9081156105e0578791611860575b506001600160a01b0361170984613206565b911690528080611858575b156117395750505082808060019561173194335af1610360613321565b01869061162e565b9192911561179e575060405163a9059cbb60e01b815233600482015260248101919091529260209184916044918391905af1918215610dc157600192611780575b50611731565b6117979060203d81116103dd576103ce8183613141565b503861177a565b60405163095ea7b360e01b81526001600160a01b0387166004820152602481018390529094509091602090829060449082908e905af180156103e45761183c575b506001420192834211610dcc5790899161180f60405195869384936338ed173960e01b85523391600486016138a0565b038183875af1918215610dc1576001926118295750611731565b611797903d808b833e6104838183613141565b6118539060203d81116103dd576103ce8183613141565b6117df565b506001611714565b90506020813d8211611891575b8161187a60209383613141565b810103126105d45761188b906133e7565b386116f7565b3d915061186d565b90506020813d82116118ca575b816118b360209383613141565b810103126105d4576118c4906133e7565b386116bc565b3d91506118a6565b826116be565b5061063b8433613772565b503461063e578060031936011261063e576040519080600454908160011c916001811680156119e6575b6020841081146119d2578386529081156119ab575060011461194e575b61154c8461193a81860382613141565b60405191829160208352602083019061306f565b600481527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b8082106119915750909150810160200161193a8261192a565b919260018160209254838588010152019101909291611978565b60ff191660208087019190915292151560051b8501909201925061193a915083905061192a565b602483634e487b7160e01b81526022600452fd5b92607f169261190d565b503461063e578060031936011261063e576020600554604051908152f35b503461063e578060031936011261063e5760206001600160a01b03600a5416604051908152f35b508060031936011261063e576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016803303611c315760ff600c54166002811015611c1d57611bd957600b543410611b95576020600491604051928380927f78d1c86d0000000000000000000000000000000000000000000000000000000082525afa8015611b8a578290611b4a575b6001600160a01b03915016816001600160a01b03600a5416823b1561130b5781906024604051809581937f23024408000000000000000000000000000000000000000000000000000000008352600483015234905af18015611b3d57611b2f5780f35b611b3891613141565b388180f35b50604051903d90823e3d90fd5b506020813d602011611b82575b81611b6460209383613141565b8101031261130b57611b7d6001600160a01b03916133e7565b611acc565b3d9150611b57565b6040513d84823e3d90fd5b606460405162461bcd60e51b815260206004820152601660248201527f496e73756666696369656e7420666f726b20636f7374000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600a60248201527f446973616c6c6f776564000000000000000000000000000000000000000000006044820152fd5b602483634e487b7160e01b81526021600452fd5b606460405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920666163746f727920697320616c6c6f7765640000000000000000006044820152fd5b503461063e578060031936011261063e57611c8e6137f3565b806001600160a01b03600a5473ffffffffffffffffffffffffffffffffffffffff198116600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461063e57602036600319011261063e5760406020916001600160a01b03611d046130b0565b1681528083522054604051908152f35b503461063e57602036600319011261063e576001600160a01b03611d366130b0565b611d3e6137f3565b16808252600960205260ff60408320541615611f5b576040516370a0823160e01b8152306004820152602081602481855afa908115611f50578391611f1e575b50611eda57815b60075480821015611ed457826001600160a01b03611da2846131ad565b90549060031b1c1614611db85750600101611d85565b6000198101908111611eac576001600160a01b03611dd8611de9926131ad565b90549060031b1c16611378836131ad565b6007548015611ec05760001901611dff816131ad565b6001600160a01b0382549160031b1b191690556007556006546000198101908111611eac5790611e41611e34611e5a936131de565b90549060031b1c916131de565b90919082549060031b91821b91600019901b1916179055565b6006548015611e985760001901611e70816131de565b8154906000199060031b1b19169055600655815260096020526040812060ff19815416905580f35b602483634e487b7160e01b81526031600452fd5b602484634e487b7160e01b81526011600452fd5b602484634e487b7160e01b81526031600452fd5b50505080f35b606460405162461bcd60e51b815260206004820152601060248201527f4e6f6e2d7a65726f2062616c616e6365000000000000000000000000000000006044820152fd5b90506020813d602011611f48575b81611f3960209383613141565b81010312611028575138611d7e565b3d9150611f2c565b6040513d85823e3d90fd5b606460405162461bcd60e51b815260206004820152600f60248201527f546f6b656e206e6f7420666f756e6400000000000000000000000000000000006044820152fd5b50602036600319011261063e57600435611fb76137f3565b611fc281341461346c565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82526009602052611fee60ff60408420541661339c565b6040516322d4d43360e21b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115611f50578391612120575b5060206001600160a01b03916044604051809481936333fa33cb60e11b835287600484015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6024840152165afa8015611f505783906120ec575b6120a3915061209d6005548210156133fb565b33613835565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f49551760403392a280f35b506020813d602011612118575b8161210660209383613141565b81010312611028576120a3905161208a565b3d91506120f9565b90506020813d60201161215d575b8161213b60209383613141565b810103126110285760206121566001600160a01b03926133e7565b915061203b565b3d915061212e565b503461063e578060031936011261063e576020600b54604051908152f35b503461063e578060031936011261063e5760405180916020600654928381520191600682527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f915b8181106121ee5761154c856121e281870382613141565b60405191829182613035565b82548452602090930192600192830192016121cb565b503461063e57604036600319011261063e5761221e6130b0565b6024356122296137f3565b6001600160a01b038216808452600960205261224b60ff60408620541661339c565b604051916322d4d43360e21b83526020836004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9283156123905785936123cf575b5060206001600160a01b03936044604051809681936333fa33cb60e11b8352866004840152876024840152165afa92831561239057859361239b575b506122e46005548410156133fb565b6040516323b872dd60e01b815233600482015230602482015260448101829052916020908390606490829089905af18015612390577fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f495517936107b49361234f92612373575b5033613835565b604051918291339583602090939291936001600160a01b0360408201951681520152565b61238b9060203d6020116103dd576103ce8183613141565b612348565b6040513d87823e3d90fd5b9092506020813d6020116123c7575b816123b760209383613141565b81010312610b45575191386122d5565b3d91506123aa565b92506020833d60201161240c575b816123ea60209383613141565b81010312610b455760206124056001600160a01b03946133e7565b9350612299565b3d91506123dd565b503461063e578060031936011261063e57602060405160128152f35b503461063e57602036600319011261063e5760043561245081151561322a565b6002549061245f821515613275565b82805b60075481101561252d576001600160a01b0361247d826131ad565b90549060031b1c166124968561022f8661022a856135e1565b9073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036124d057508280806001956124c894335af1610360613321565b018390612462565b60405163a9059cbb60e01b81523360048201526024810192909252909260209184916044918391905af19182156123905760019261250f575b506124c8565b6125269060203d81116103dd576103ce8183613141565b5038612509565b5061063b8233613772565b503461063e578060031936011261063e576040518060206008549283815201918183600886527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee39286905b80601f830110612a9c5761269c945491818110612a81575b818110612a63575b818110612a45575b818110612a27575b818110612a0a575b8181106129ec575b8181106129ce575b8181106129b0575b818110612992575b818110612974575b818110612956575b818110612938575b81811061291a575b8181106128fc575b8181106128de575b8181106128c0575b8181106128a2575b818110612884575b818110612866575b818110612848575b81811061282a575b81811061280c575b8181106127ee575b8181106127d0575b8181106127b2575b818110612794575b818110612776575b818110612758575b81811061273a575b81811061271c575b8181106126fe575b106126e7575b509392930383613141565b604051928392602084019060208552518091526040840192915b8181106126c4575050500390f35b91935091602080826126d960019488516130e1565b0194019101918493926126b6565b906126f78160209360f81c6130e1565b0138612691565b9260208161271460019360ff8760f01c166130e1565b01930161268b565b9260208161273260019360ff8760e81c166130e1565b019301612683565b9260208161275060019360ff8760e01c166130e1565b01930161267b565b9260208161276e60019360ff8760d81c166130e1565b019301612673565b9260208161278c60019360ff8760d01c166130e1565b01930161266b565b926020816127aa60019360ff8760c81c166130e1565b019301612663565b926020816127c860019360ff8760c01c166130e1565b01930161265b565b926020816127e660019360ff8760b81c166130e1565b019301612653565b9260208161280460019360ff8760b01c166130e1565b01930161264b565b9260208161282260019360ff8760a81c166130e1565b019301612643565b9260208161284060019360ff8760a01c166130e1565b01930161263b565b9260208161285e60019360ff8760981c166130e1565b019301612633565b9260208161287c60019360ff8760901c166130e1565b01930161262b565b9260208161289a60019360ff8760881c166130e1565b019301612623565b926020816128b860019360ff8760801c166130e1565b01930161261b565b926020816128d660019360ff8760781c166130e1565b019301612613565b926020816128f460019360ff8760701c166130e1565b01930161260b565b9260208161291260019360ff8760681c166130e1565b019301612603565b9260208161293060019360ff8760601c166130e1565b0193016125fb565b9260208161294e60019360ff8760581c166130e1565b0193016125f3565b9260208161296c60019360ff8760501c166130e1565b0193016125eb565b9260208161298a60019360ff8760481c166130e1565b0193016125e3565b926020816129a860019360ff8760401c166130e1565b0193016125db565b926020816129c660019360ff8760381c166130e1565b0193016125d3565b926020816129e460019360ff8760301c166130e1565b0193016125cb565b92602081612a0260019360ff8760281c166130e1565b0193016125c3565b92602081612a1f60019360ff87851c166130e1565b0193016125bb565b92602081612a3d60019360ff8760181c166130e1565b0193016125b3565b92602081612a5b60019360ff8760101c166130e1565b0193016125ab565b92602081612a7960019360ff8760081c166130e1565b0193016125a3565b92602081612a9460019360ff87166130e1565b01930161259b565b916020919350610400600191612d178754612aba8360ff83166130e1565b612acc86840160ff8360081c166130e1565b612adf6040840160ff8360101c166130e1565b612af26060840160ff8360181c166130e1565b612b046080840160ff83891c166130e1565b612b1760a0840160ff8360281c166130e1565b612b2a60c0840160ff8360301c166130e1565b612b3d60e0840160ff8360381c166130e1565b612b51610100840160ff8360401c166130e1565b612b65610120840160ff8360481c166130e1565b612b79610140840160ff8360501c166130e1565b612b8d610160840160ff8360581c166130e1565b612ba1610180840160ff8360601c166130e1565b612bb56101a0840160ff8360681c166130e1565b612bc96101c0840160ff8360701c166130e1565b612bdd6101e0840160ff8360781c166130e1565b612bf1610200840160ff8360801c166130e1565b612c05610220840160ff8360881c166130e1565b612c19610240840160ff8360901c166130e1565b612c2d610260840160ff8360981c166130e1565b612c41610280840160ff8360a01c166130e1565b612c556102a0840160ff8360a81c166130e1565b612c696102c0840160ff8360b01c166130e1565b612c7d6102e0840160ff8360b81c166130e1565b612c91610300840160ff8360c01c166130e1565b612ca5610320840160ff8360c81c166130e1565b612cb9610340840160ff8360d01c166130e1565b612ccd610360840160ff8360d81c166130e1565b612ce1610380840160ff8360e01c166130e1565b612cf56103a0840160ff8360e81c166130e1565b612d096103c0840160ff8360f01c166130e1565b6103e083019060f81c6130e1565b019401920184929391612583565b503461063e57606036600319011261063e57612d3f6130b0565b612d476130cb565b604435916001600160a01b0381168085526001602052604085206001600160a01b03331686526020526040852054906000198210612d8c575b5050611596935061367b565b848210612df2578015612ddf573315612dcc576040868692611596985260016020528181206001600160a01b033316825260205220910390553880612d80565b602486634a1406b160e11b815280600452fd5b60248663e602df0560e01b815280600452fd5b60648686847ffb8f41b200000000000000000000000000000000000000000000000000000000835233600452602452604452fd5b503461063e578060031936011261063e576020600254604051908152f35b503461063e57604036600319011261063e57612e5e6130b0565b602435903315612ed9576001600160a01b0316918215612ec65760408291338152600160205281812085825260205220556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b80634a1406b160e11b6024925280600452fd5b60248363e602df0560e01b815280600452fd5b503461063e578060031936011261063e576040519080600354908160011c91600181168015612f9f575b6020841081146119d2578386529081156119ab5750600114612f425761154c8461193a81860382613141565b600381527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b808210612f855750909150810160200161193a8261192a565b919260018160209254838588010152019101909291612f6c565b92607f1692612f16565b503461063e578060031936011261063e57600754612fc681613195565b91612fd46040519384613141565b818352601f19612fe383613195565b013660208501375b818110613000576040518061154c8582613035565b806130246001600160a01b036130176001946131ad565b90549060031b1c166135e1565b61302e8286613216565b5201612feb565b602060408183019282815284518094520192019060005b8181106130595750505090565b825184526020938401939092019160010161304c565b919082519283825260005b84811061309b575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161307a565b600435906001600160a01b03821682036130c657565b600080fd5b602435906001600160a01b03821682036130c657565b9060048210156130ee5752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b8181106131225750505090565b82516001600160a01b0316845260209384019390920191600101613115565b90601f8019910116810190811067ffffffffffffffff82111761316357604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161316357601f01601f191660200190565b67ffffffffffffffff81116131635760051b60200190565b6007548110156131c857600760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6006548110156131c857600660005260206000200190600090565b8051156131c85760200190565b8051600110156131c85760400190565b80518210156131c85760209160051b010190565b1561323157565b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420616d6f756e740000000000000000000000000000000000006044820152fd5b1561327c57565b606460405162461bcd60e51b815260206004820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b818102929181159184041417156132d357565b634e487b7160e01b600052601160045260246000fd5b81156132f3570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126130c6575180151581036130c65790565b3d1561334c573d9061333282613179565b916133406040519384613141565b82523d6000602084013e565b606090565b1561335857565b606460405162461bcd60e51b815260206004820152601360248201527f455448207472616e73666572206661696c6564000000000000000000000000006044820152fd5b156133a357565b606460405162461bcd60e51b815260206004820152601160248201527f455448206e6f7420737570706f727465640000000000000000000000000000006044820152fd5b51906001600160a01b03821682036130c657565b1561340257565b608460405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e74206465706f73697420616d6f756e7420696e207560448201527f73640000000000000000000000000000000000000000000000000000000000006064820152fd5b1561347357565b606460405162461bcd60e51b815260206004820152601460248201527f496e636f72726563742045544820616d6f756e740000000000000000000000006044820152fd5b6020818303126130c65780519067ffffffffffffffff82116130c657019080601f830112156130c65781516134eb81613195565b926134f96040519485613141565b81845260208085019260051b8201019283116130c657602001905b8282106135215750505090565b8151815260209182019101613514565b9080601f830112156130c657815161354881613195565b926135566040519485613141565b81845260208085019260051b8201019283116130c657602001905b82821061357e5750505090565b6020809161358b846133e7565b815201910190613571565b1561359d57565b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420746f6b656e000000000000000000000000000000000000006044820152fd5b6000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee810361360e5750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa91821561366f57809261363e57505090565b9091506020823d602011613667575b8161365a60209383613141565b8101031261063e57505190565b3d915061364d565b604051903d90823e3d90fd5b6001600160a01b0316908115613743576001600160a01b03169182156137145760008281528060205260408120548281106136fa5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b03168015613743576000918183528260205260408320548181106137da57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b6001600160a01b03600a5416330361380757565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6001600160a01b03169081156137145761385181600254613893565b6002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009284845283825260408420818154019055604051908152a3565b919082018092116132d357565b906138ce6080936001600160a01b03929796959784526000602085015260a0604085015260a0840190613104565b951660608201520152565b6001600160a01b036139006060939695949660008452608060208501526080840190613104565b951660408201520152565b906001600160a01b03821680600052600960205261393060ff60406000205416613596565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81149360008515613d6d5750475b8015613d65578351919491613967916132e9565b946060936040929060005b8151811015613d5a576001600160a01b0361398d8284613216565b5116908160005260096020526139aa60ff60406000205416613596565b604051916139b88984613141565b60028352863660208501378515613d54576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115613b5957600091613d1b575b505b6001600160a01b03613a2a856131f9565b9116905273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8114908115613d15576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115613b5957600091613cdc575b505b6001600160a01b03613aad86613206565b911690528803613ac35750600191505b01613972565b8515613b65575060014201918242116132d357613afa926000916040519485928392637ff36ab560e01b84523090600485016138d9565b03818d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1918215613b5957600192613b3e575b50613abd565b613b52903d806000833e6104838183613141565b5038613b38565b6040513d6000823e3d90fd5b15613c2f5760405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201819052602482018c9052929060208160448160008d5af18015613b5957613c13575b50600142018042116132d357613bfb938c60008094604051978895869485936318cbafe560e01b85523091600486016138a0565b03925af1918215613b5957600192613b3e5750613abd565b613c2a9060203d81116103dd576103ce8183613141565b613bc7565b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201819052602482018c9052929060208160448160008d5af18015613b5957613cc0575b50600142018042116132d357613bfb938c60008094604051978895869485936338ed173960e01b85523091600486016138a0565b613cd79060203d81116103dd576103ce8183613141565b613c8c565b906020823d8211613d0d575b81613cf560209383613141565b8101031261063e5750613d07906133e7565b38613a9a565b3d9150613ce8565b80613a9c565b906020823d8211613d4c575b81613d3460209383613141565b8101031261063e5750613d46906133e7565b38613a17565b3d9150613d27565b84613a19565b505050505050509050565b509350505050565b6040516370a0823160e01b8152306004820152602081602481875afa91821561366f578092613d9e575b5050613953565b9091506020823d602011613dcb575b81613dba60209383613141565b8101031261063e5750513880613d97565b3d9150613dad56fea26469706673582212203c3f4a32f13042b341519148a8715900a9db43fc2ffc692cb36fc3773c791bc964736f6c634300081c0033",
              "opcodes": "PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x77D JUMPI PUSH2 0x4875 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x9DC JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH2 0x100 DUP3 DUP3 SUB SLT PUSH2 0x77D JUMPI PUSH2 0x34 DUP3 PUSH2 0x9FF JUMP JUMPDEST SWAP1 PUSH2 0x41 PUSH1 0x20 DUP5 ADD PUSH2 0x9FF JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MLOAD SWAP3 PUSH1 0x2 DUP5 LT ISZERO PUSH2 0x77D JUMPI PUSH1 0x60 DUP6 ADD MLOAD SWAP3 PUSH1 0x80 DUP7 ADD MLOAD SWAP6 PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI DUP2 ADD SWAP5 DUP3 PUSH1 0x1F DUP8 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP6 MLOAD SWAP1 PUSH2 0x89 DUP3 PUSH2 0xA13 JUMP JUMPDEST SWAP7 PUSH2 0x97 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x9DC JUMP JUMPDEST DUP3 DUP9 MSTORE PUSH1 0x20 DUP9 ADD PUSH1 0x20 DUP2 SWAP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP7 DUP4 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9C4 JUMPI POP POP POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI DUP4 ADD SWAP6 DUP5 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP7 MLOAD SWAP4 PUSH2 0xEC DUP6 PUSH2 0xA13 JUMP JUMPDEST SWAP8 PUSH2 0xFA PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x9DC JUMP JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x20 DUP10 ADD PUSH1 0x20 DUP2 SWAP8 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP9 DUP4 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH1 0xE0 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x77D JUMPI ADD SWAP6 DUP6 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP7 MLOAD SWAP7 PUSH2 0x14F DUP9 PUSH2 0xA13 JUMP JUMPDEST SWAP7 PUSH2 0x15D PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x9DC JUMP JUMPDEST DUP9 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP2 PUSH1 0x20 DUP4 SWAP11 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x99B JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x193 PUSH1 0x40 DUP3 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x26282A37B5B2B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B6 PUSH1 0x40 DUP4 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE PUSH2 0x4C5 PUSH1 0xF4 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x991 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8AF JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x942 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x8DA JUMPI PUSH1 0x0 SWAP3 PUSH2 0x8CF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8C5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8AF JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x855 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7ED JUMPI PUSH1 0x0 SWAP3 PUSH2 0x7E2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP9 MLOAD DUP9 MLOAD SUB PUSH2 0x796 JUMPI POP PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0xF5C8BA93 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x74B JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x5 SSTORE DUP6 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x7 SLOAD DUP3 PUSH1 0x7 SSTORE DUP1 DUP4 LT PUSH2 0x710 JUMPI JUMPDEST POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6F3 JUMPI POP POP DUP6 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x6B8 JUMPI JUMPDEST POP PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6A4 JUMPI POP POP SWAP2 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x8 SLOAD DUP3 PUSH1 0x8 SSTORE DUP1 DUP4 LT PUSH2 0x63D JUMPI JUMPDEST POP SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x5F0 JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x588 JUMPI JUMPDEST POP POP POP POP PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP5 JUMPDEST DUP3 MLOAD DUP7 LT ISZERO PUSH2 0x495 JUMPI PUSH2 0x43F DUP7 DUP5 PUSH2 0xA41 JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x47F JUMPI SWAP5 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x45F DUP3 DUP8 PUSH2 0xA41 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP5 PUSH2 0x42C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2710 DUP6 SWAP2 SUB PUSH2 0x54F JUMPI PUSH1 0xFF DUP1 NOT PUSH1 0xC SLOAD AND SWAP2 AND OR PUSH1 0xC SSTORE PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH2 0x3E09 SWAP1 DUP2 PUSH2 0xA6C DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x287 ADD MSTORE DUP2 DUP2 PUSH2 0x2F1 ADD MSTORE DUP2 DUP2 PUSH2 0x43A ADD MSTORE DUP2 DUP2 PUSH2 0x4AA ADD MSTORE DUP2 DUP2 PUSH2 0xC66 ADD MSTORE DUP2 DUP2 PUSH2 0xCD0 ADD MSTORE DUP2 DUP2 PUSH2 0xD6F ADD MSTORE DUP2 DUP2 PUSH2 0xDFE ADD MSTORE DUP2 DUP2 PUSH2 0xEE6 ADD MSTORE DUP2 DUP2 PUSH2 0x1603 ADD MSTORE DUP2 DUP2 PUSH2 0x39E6 ADD MSTORE DUP2 DUP2 PUSH2 0x3A69 ADD MSTORE DUP2 DUP2 PUSH2 0x3B07 ADD MSTORE DUP2 DUP2 PUSH2 0x3B81 ADD MSTORE PUSH2 0x3C46 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x852 ADD MSTORE DUP2 DUP2 PUSH2 0x970 ADD MSTORE DUP2 DUP2 PUSH2 0x1A4B ADD MSTORE DUP2 DUP2 PUSH2 0x200B ADD MSTORE PUSH2 0x2269 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420726174696F2073756D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5A4 JUMPI POP POP POP ADD SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x421 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 DUP6 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5D0 PUSH1 0x20 SWAP2 DUP5 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x58F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x609 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x40C JUMP JUMPDEST SWAP6 SWAP1 DUP2 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x634 PUSH1 0x20 SWAP2 DUP10 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP3 ADD SWAP7 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x66B SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP2 DUP8 AND DUP1 PUSH2 0x671 JUMPI JUMPDEST POP ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x0 NOT DUP6 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x65F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE PUSH2 0x6ED SWAP1 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x3AE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 ADD SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 MSTORE PUSH2 0x745 SWAP1 PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x364 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x782 JUMPI JUMPDEST DUP2 PUSH2 0x766 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9DC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x77D JUMPI PUSH2 0x777 SWAP1 PUSH2 0x9FF JUMP JUMPDEST CODESIZE PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x759 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D69736D61746368656420617272617973 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x83D JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x824 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x28D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x816 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH2 0x89F SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x8A5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x260 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x24C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x92A JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x911 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x229 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x903 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH2 0x98B SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x8A5 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x1FC JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x77D JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x17B JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x118 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x9D1 DUP5 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x68E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x77D JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x68E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xA35 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA2A JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x113E08 EQ PUSH2 0x2FA9 JUMPI DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x1A0E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2EEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E44 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E26 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D25 JUMPI DUP1 PUSH4 0x2494452D EQ PUSH2 0x2538 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2430 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2414 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x2204 JUMPI DUP1 PUSH4 0x4EADCCA8 EQ PUSH2 0x2183 JUMPI DUP1 PUSH4 0x531BCDB3 EQ PUSH2 0x2165 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x1F9F JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0x1D14 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1CDD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C75 JUMPI DUP1 PUSH4 0x8769B449 EQ PUSH2 0x1A35 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A0E JUMPI DUP1 PUSH4 0x8E4E9018 EQ PUSH2 0x19F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18E3 JUMPI DUP1 PUSH4 0xA216AA06 EQ PUSH2 0x15A1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x156F JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x14D9 JUMPI DUP1 PUSH4 0xAB83F98A EQ PUSH2 0x1449 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x130F JUMPI DUP1 PUSH4 0xB317650B EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x832 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7E2 JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x641 JUMPI PUSH4 0xF9C4D3DB EQ PUSH2 0x17B JUMPI POP PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x194 PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1A2 DUP2 ISZERO ISZERO PUSH2 0x322A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1C5 PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH2 0x1D4 DUP5 ISZERO ISZERO PUSH2 0x3275 JUMP JUMPDEST PUSH1 0x40 SWAP3 PUSH1 0x60 SWAP2 SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 DUP8 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x630 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x211 DUP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x234 DUP11 PUSH2 0x22F DUP11 PUSH2 0x22A DUP6 PUSH2 0x35E1 JUMP JUMPDEST PUSH2 0x32C0 JUMP JUMPDEST PUSH2 0x32E9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x242 DUP10 DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP11 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x5F1 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2CA DUP5 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x5A3 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x334 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP3 DUP8 EQ DUP1 DUP1 PUSH2 0x59C JUMPI JUMPDEST ISZERO PUSH2 0x36E JUMPI POP POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x366 SWAP5 CALLER GAS CALL PUSH2 0x360 PUSH2 0x3321 JUMP JUMPDEST POP PUSH2 0x3351 JUMP JUMPDEST ADD DUP9 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 SWAP4 SWAP3 ISZERO PUSH2 0x3EF JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3B6 JUMPI JUMPDEST POP PUSH2 0x366 JUMP JUMPDEST PUSH2 0x3D6 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI JUMPDEST PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3309 JUMP JUMPDEST POP CODESIZE PUSH2 0x3B0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP5 POP SWAP3 SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x49F JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x48B JUMPI SWAP2 DUP12 SWAP2 PUSH2 0x42E SWAP5 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE CALLER SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x38D9 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x470 JUMPI POP PUSH2 0x366 JUMP JUMPDEST PUSH2 0x3D6 SWAP1 RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x34B7 JUMP JUMPDEST PUSH1 0x24 DUP13 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH1 0x20 DUP14 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 PUSH2 0x504 DUP9 DUP11 PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x591 JUMPI PUSH2 0x575 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0x561 JUMPI SWAP2 PUSH2 0x549 SWAP5 SWAP4 SWAP2 DUP14 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x470 JUMPI POP PUSH2 0x366 JUMP JUMPDEST PUSH1 0x24 DUP14 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x58C SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x342 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x5D8 JUMPI JUMPDEST DUP2 PUSH2 0x5BD PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x5CE SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x321 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x622 JUMPI JUMPDEST DUP2 PUSH2 0x60B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x61C SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x2B7 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5FE JUMP JUMPDEST DUP3 PUSH2 0x2B9 JUMP JUMPDEST POP PUSH2 0x63B DUP7 CALLER PUSH2 0x3772 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x663 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x66B PUSH2 0x37F3 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x708 PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x72E PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7D7 JUMPI PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 SWAP3 PUSH2 0x7B4 SWAP3 PUSH2 0x7BA JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x7D2 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH2 0x806 PUSH2 0x30B0 JUMP JUMPDEST SWAP3 DUP3 PUSH2 0x810 PUSH2 0x30CB JUMP JUMPDEST SWAP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x130B JUMPI PUSH1 0x40 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x130B JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F7 JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1024 JUMPI DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1024 JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1028 JUMPI DUP3 PUSH1 0x4 DUP3 ADD CALLDATALOAD SWAP2 PUSH2 0x907 DUP4 PUSH2 0x3179 JUMP JUMPDEST SWAP3 PUSH2 0x915 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3141 JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x1028 JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH32 0xF94F657C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x7D7 JUMPI DUP5 SWAP1 PUSH2 0x12B7 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND CALLER SUB PUSH2 0x1273 JUMPI DUP2 MLOAD SWAP2 PUSH1 0x4 DUP4 LT ISZERO SWAP3 DUP4 PUSH2 0x125F JUMPI PUSH1 0x8 SLOAD SWAP4 DUP6 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1253 JUMPI PUSH1 0x8 DUP9 MSTORE DUP3 PUSH1 0xFF DUP3 PUSH1 0x5 SHR PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SLOAD PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR AND SWAP1 PUSH2 0x123F JUMPI PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x123F JUMPI DUP5 EQ PUSH2 0xA20 JUMPI PUSH1 0x1 ADD PUSH2 0x9C5 JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 POP PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x11FB JUMPI DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI ISZERO PUSH2 0x102C JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x1 EQ PUSH2 0xB5D JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x2 EQ PUSH2 0xABB JUMPI JUMPDEST PUSH2 0xAA4 SWAP1 PUSH2 0xAB5 PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x20 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 MLOAD PUSH2 0x30E1 JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x306F JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP2 MLOAD SWAP1 DUP2 MLOAD DUP3 ADD SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0xB45 JUMPI PUSH2 0xAD9 PUSH1 0x20 DUP3 ADD PUSH2 0x33E7 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x5D4 JUMPI PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB34 PUSH2 0xB3B SWAP4 PUSH1 0x20 PUSH2 0xAB5 SWAP8 DUP2 PUSH2 0xAA4 SWAP12 ADD SWAP3 ADD ADD PUSH2 0x3531 JUMP JUMPDEST SWAP2 AND PUSH2 0x390B JUMP JUMPDEST SWAP4 POP POP SWAP1 POP PUSH2 0xA66 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 SWAP2 DUP3 MLOAD SWAP2 DUP3 MLOAD DUP4 ADD PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x1028 JUMPI PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1024 JUMPI PUSH1 0x40 PUSH2 0xBA7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 DUP1 PUSH2 0xBAE SWAP6 SWAP10 SWAP8 SWAP10 ADD SWAP2 DUP8 ADD ADD PUSH2 0x3531 JUMP JUMPDEST SWAP4 ADD PUSH2 0x33E7 JUMP JUMPDEST AND DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0xBC7 PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x60 SWAP5 PUSH1 0x40 SWAP3 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP4 EQ SWAP2 DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1016 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC02 DUP3 DUP6 PUSH2 0x3216 JUMP JUMPDEST MLOAD AND PUSH2 0xC0D DUP2 PUSH2 0x35E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xC21 DUP13 DUP5 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP4 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP1 ISZERO PUSH2 0x1006 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFBC JUMPI DUP13 SWAP2 PUSH2 0xFCD JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCA9 DUP7 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFBC JUMPI DUP13 SWAP2 PUSH2 0xF7F JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD13 DUP7 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP2 DUP10 SUB PUSH2 0xD2C JUMPI POP POP POP POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0xBE7 JUMP JUMPDEST ISZERO PUSH2 0xDE0 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xDCC JUMPI SWAP2 DUP10 SWAP2 PUSH2 0xD63 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x38D9 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0xDC1 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xDA7 JUMPI JUMPDEST POP PUSH2 0xD26 JUMP JUMPDEST PUSH2 0xDBA SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 DUP7 ISZERO PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP16 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH2 0xEA8 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xE94 JUMPI SWAP2 PUSH2 0xE7B SWAP4 SWAP2 DUP12 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xDC1 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xDA7 JUMPI POP PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x24 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xEBF SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP16 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH2 0xF63 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xE94 JUMPI SWAP2 PUSH2 0xE7B SWAP4 SWAP2 DUP12 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST PUSH2 0xF7A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0xF2E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xFB4 JUMPI JUMPDEST DUP2 PUSH2 0xF99 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFB0 JUMPI PUSH2 0xFAA SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0xD00 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF8C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0xD02 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xFFE JUMPI JUMPDEST DUP2 PUSH2 0xFE7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFB0 JUMPI PUSH2 0xFF8 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0xC96 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xFDA JUMP JUMPDEST DUP2 PUSH2 0xC98 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 PUSH2 0xD26 JUMP JUMPDEST POP SWAP6 SWAP5 SWAP7 POP POP POP POP POP PUSH2 0xA53 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x1041 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x34B7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x7 SLOAD SUB PUSH2 0x11B7 JUMPI DUP4 SWAP2 DUP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x1077 JUMPI PUSH2 0x106F PUSH1 0x1 SWAP2 PUSH2 0x1068 DUP7 DUP7 PUSH2 0x3216 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x3893 JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x104F JUMP JUMPDEST PUSH2 0x2710 SWAP2 SWAP5 SWAP4 POP SUB PUSH2 0x1173 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x115F JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x115F JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x1101 JUMPI JUMPDEST POP PUSH1 0x20 ADD PUSH1 0x6 DUP6 MSTORE DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x10CD JUMPI POP POP POP PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SSTORE ADD PUSH2 0x10BE JUMP JUMPDEST PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP3 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x1154 JUMPI POP PUSH2 0x10B4 JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726174696F2073756D000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C656E677468000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E206E6F7420616C6C6F7765640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST POP SWAP3 SWAP4 SWAP5 POP POP POP PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920656467657220697320616C6C6F7765640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x12EF JUMPI JUMPDEST DUP2 PUSH2 0x12D1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1024 JUMPI PUSH2 0x12EA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x33E7 JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x1329 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x1331 PUSH2 0x37F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x1405 JUMPI PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x12F7 JUMPI SWAP1 PUSH2 0x1378 DUP3 PUSH1 0x1 PUSH2 0x1397 SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x31AD JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13BE DUP2 PUSH1 0x1 PUSH2 0x13D8 SWAP4 ADD PUSH1 0x6 SSTORE PUSH2 0x31DE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206578697374730000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1485 PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x339C JUMP JUMPDEST PUSH2 0x1490 DUP2 CALLVALUE EQ PUSH2 0x346C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x7 DUP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x1550 JUMPI PUSH2 0x154C DUP6 PUSH2 0x1538 DUP2 DUP8 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3104 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1521 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x1596 PUSH2 0x158C PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x367B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x15C1 DUP2 ISZERO ISZERO PUSH2 0x322A JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x15ED PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x15FC DUP3 ISZERO ISZERO PUSH2 0x3275 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x18D8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1649 DUP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x1662 DUP9 PUSH2 0x22F DUP9 PUSH2 0x22A DUP6 PUSH2 0x35E1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1670 DUP8 DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x18D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x1899 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16CF DUP5 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x1860 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1709 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP1 DUP1 PUSH2 0x1858 JUMPI JUMPDEST ISZERO PUSH2 0x1739 JUMPI POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x1731 SWAP5 CALLER GAS CALL PUSH2 0x360 PUSH2 0x3321 JUMP JUMPDEST ADD DUP7 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0x179E JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1780 JUMPI JUMPDEST POP PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x1797 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0x177A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP5 POP SWAP1 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP15 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH2 0x183C JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xDCC JUMPI SWAP1 DUP10 SWAP2 PUSH2 0x180F PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB DUP2 DUP4 DUP8 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1829 JUMPI POP PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x1797 SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x1853 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x17DF JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1891 JUMPI JUMPDEST DUP2 PUSH2 0x187A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x188B SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x16F7 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x186D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x18CA JUMPI JUMPDEST DUP2 PUSH2 0x18B3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x18C4 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x16BC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x18A6 JUMP JUMPDEST DUP3 PUSH2 0x16BE JUMP JUMPDEST POP PUSH2 0x63B DUP5 CALLER PUSH2 0x3772 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x4 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x19E6 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x19D2 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x19AB JUMPI POP PUSH1 0x1 EQ PUSH2 0x194E JUMPI JUMPDEST PUSH2 0x154C DUP5 PUSH2 0x193A DUP2 DUP7 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x306F JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1991 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x193A DUP3 PUSH2 0x192A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1978 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x193A SWAP2 POP DUP4 SWAP1 POP PUSH2 0x192A JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x190D JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP1 CALLER SUB PUSH2 0x1C31 JUMPI PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1C1D JUMPI PUSH2 0x1BD9 JUMPI PUSH1 0xB SLOAD CALLVALUE LT PUSH2 0x1B95 JUMPI PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x78D1C86D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1B8A JUMPI DUP3 SWAP1 PUSH2 0x1B4A JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND DUP3 EXTCODESIZE ISZERO PUSH2 0x130B JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH32 0x2302440800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1B3D JUMPI PUSH2 0x1B2F JUMPI DUP1 RETURN JUMPDEST PUSH2 0x1B38 SWAP2 PUSH2 0x3141 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B82 JUMPI JUMPDEST DUP2 PUSH2 0x1B64 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x130B JUMPI PUSH2 0x1B7D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x33E7 JUMP JUMPDEST PUSH2 0x1ACC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420666F726B20636F737400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973616C6C6F77656400000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F727920697320616C6C6F776564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH2 0x1C8E PUSH2 0x37F3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D04 PUSH2 0x30B0 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D36 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x1D3E PUSH2 0x37F3 JUMP JUMPDEST AND DUP1 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x1F5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1F50 JUMPI DUP4 SWAP2 PUSH2 0x1F1E JUMPI JUMPDEST POP PUSH2 0x1EDA JUMPI DUP2 JUMPDEST PUSH1 0x7 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x1ED4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1DA2 DUP5 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1DB8 JUMPI POP PUSH1 0x1 ADD PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1EAC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1DD8 PUSH2 0x1DE9 SWAP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x1378 DUP4 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x1EC0 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1DFF DUP2 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1EAC JUMPI SWAP1 PUSH2 0x1E41 PUSH2 0x1E34 PUSH2 0x1E5A SWAP4 PUSH2 0x31DE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x31DE JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x1E98 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1E70 DUP2 PUSH2 0x31DE JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x6 SSTORE DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST POP POP POP DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D7A65726F2062616C616E636500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1F48 JUMPI JUMPDEST DUP2 PUSH2 0x1F39 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1028 JUMPI MLOAD CODESIZE PUSH2 0x1D7E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1FB7 PUSH2 0x37F3 JUMP JUMPDEST PUSH2 0x1FC2 DUP2 CALLVALUE EQ PUSH2 0x346C JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1FEE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x339C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1F50 JUMPI DUP4 SWAP2 PUSH2 0x2120 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL DUP1 ISZERO PUSH2 0x1F50 JUMPI DUP4 SWAP1 PUSH2 0x20EC JUMPI JUMPDEST PUSH2 0x20A3 SWAP2 POP PUSH2 0x209D PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x33FB JUMP JUMPDEST CALLER PUSH2 0x3835 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2118 JUMPI JUMPDEST DUP2 PUSH2 0x2106 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1028 JUMPI PUSH2 0x20A3 SWAP1 MLOAD PUSH2 0x208A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x20F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x215D JUMPI JUMPDEST DUP2 PUSH2 0x213B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1028 JUMPI PUSH1 0x20 PUSH2 0x2156 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x33E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x203B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x212E JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x6 DUP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x21EE JUMPI PUSH2 0x154C DUP6 PUSH2 0x21E2 DUP2 DUP8 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3035 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x21CB JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x221E PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x2229 PUSH2 0x37F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x224B PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x339C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2390 JUMPI DUP6 SWAP4 PUSH2 0x23CF JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE DUP8 PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2390 JUMPI DUP6 SWAP4 PUSH2 0x239B JUMPI JUMPDEST POP PUSH2 0x22E4 PUSH1 0x5 SLOAD DUP5 LT ISZERO PUSH2 0x33FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP10 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2390 JUMPI PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 SWAP4 PUSH2 0x7B4 SWAP4 PUSH2 0x234F SWAP3 PUSH2 0x2373 JUMPI JUMPDEST POP CALLER PUSH2 0x3835 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x238B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x23C7 JUMPI JUMPDEST DUP2 PUSH2 0x23B7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB45 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x22D5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x23AA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x240C JUMPI JUMPDEST DUP2 PUSH2 0x23EA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB45 JUMPI PUSH1 0x20 PUSH2 0x2405 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x33E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2299 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x23DD JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2450 DUP2 ISZERO ISZERO PUSH2 0x322A JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x245F DUP3 ISZERO ISZERO PUSH2 0x3275 JUMP JUMPDEST DUP3 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x252D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x247D DUP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2496 DUP6 PUSH2 0x22F DUP7 PUSH2 0x22A DUP6 PUSH2 0x35E1 JUMP JUMPDEST SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x24D0 JUMPI POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x24C8 SWAP5 CALLER GAS CALL PUSH2 0x360 PUSH2 0x3321 JUMP JUMPDEST ADD DUP4 SWAP1 PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x2390 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x250F JUMPI JUMPDEST POP PUSH2 0x24C8 JUMP JUMPDEST PUSH2 0x2526 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0x2509 JUMP JUMPDEST POP PUSH2 0x63B DUP3 CALLER PUSH2 0x3772 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 DUP2 DUP4 PUSH1 0x8 DUP7 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 DUP7 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0x2A9C JUMPI PUSH2 0x269C SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x2A81 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A63 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A45 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A27 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A0A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29EC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29CE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29B0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2992 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2974 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2956 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2938 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x291A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28FC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28DE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28C0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28A2 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2884 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2866 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2848 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x282A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x280C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x27EE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x27D0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x27B2 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2794 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2776 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2758 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x273A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x271C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x26FE JUMPI JUMPDEST LT PUSH2 0x26E7 JUMPI JUMPDEST POP SWAP4 SWAP3 SWAP4 SUB DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x26C4 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 DUP1 DUP3 PUSH2 0x26D9 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x26B6 JUMP JUMPDEST SWAP1 PUSH2 0x26F7 DUP2 PUSH1 0x20 SWAP4 PUSH1 0xF8 SHR PUSH2 0x30E1 JUMP JUMPDEST ADD CODESIZE PUSH2 0x2691 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2714 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xF0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x268B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2732 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2683 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2750 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x267B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x276E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2673 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x278C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x266B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x27AA PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2663 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x27C8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x265B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x27E6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2653 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2804 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x264B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2822 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2643 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2840 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x263B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x285E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x98 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x287C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x90 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x262B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x289A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x88 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2623 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28B8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x80 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x261B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28D6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x78 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2613 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28F4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x70 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x260B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2912 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x68 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2603 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2930 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x60 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25FB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x294E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x58 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25F3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x296C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x50 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25EB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x298A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x48 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25E3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29A8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25DB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29C6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x38 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25D3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29E4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x30 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25CB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A02 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x28 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25C3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A1F PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 DUP6 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25BB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A3D PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x18 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25B3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A5B PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x10 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25AB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A79 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A94 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x259B JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 PUSH2 0x2D17 DUP8 SLOAD PUSH2 0x2ABA DUP4 PUSH1 0xFF DUP4 AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2ACC DUP7 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2ADF PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2AF2 PUSH1 0x60 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x18 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B04 PUSH1 0x80 DUP5 ADD PUSH1 0xFF DUP4 DUP10 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B17 PUSH1 0xA0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x28 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B2A PUSH1 0xC0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x30 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B3D PUSH1 0xE0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x38 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B51 PUSH2 0x100 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B65 PUSH2 0x120 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x48 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B79 PUSH2 0x140 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x50 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B8D PUSH2 0x160 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x58 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BA1 PUSH2 0x180 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x60 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BB5 PUSH2 0x1A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x68 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BC9 PUSH2 0x1C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x70 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BDD PUSH2 0x1E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x78 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BF1 PUSH2 0x200 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C05 PUSH2 0x220 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x88 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C19 PUSH2 0x240 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x90 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C2D PUSH2 0x260 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x98 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C41 PUSH2 0x280 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C55 PUSH2 0x2A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C69 PUSH2 0x2C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C7D PUSH2 0x2E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C91 PUSH2 0x300 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CA5 PUSH2 0x320 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CB9 PUSH2 0x340 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CCD PUSH2 0x360 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CE1 PUSH2 0x380 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CF5 PUSH2 0x3A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2D09 PUSH2 0x3C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xF0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x3E0 DUP4 ADD SWAP1 PUSH1 0xF8 SHR PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP5 ADD SWAP3 ADD DUP5 SWAP3 SWAP4 SWAP2 PUSH2 0x2583 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x2D3F PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x2D47 PUSH2 0x30CB JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 LT PUSH2 0x2D8C JUMPI JUMPDEST POP POP PUSH2 0x1596 SWAP4 POP PUSH2 0x367B JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x2DF2 JUMPI DUP1 ISZERO PUSH2 0x2DDF JUMPI CALLER ISZERO PUSH2 0x2DCC JUMPI PUSH1 0x40 DUP7 DUP7 SWAP3 PUSH2 0x1596 SWAP9 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 DUP7 DUP5 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x2E5E PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x2ED9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2EC6 JUMPI PUSH1 0x40 DUP3 SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x24 SWAP3 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2F9F JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x19D2 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x19AB JUMPI POP PUSH1 0x1 EQ PUSH2 0x2F42 JUMPI PUSH2 0x154C DUP5 PUSH2 0x193A DUP2 DUP7 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x2F85 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x193A DUP3 PUSH2 0x192A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x2F6C JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x2F16 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x7 SLOAD PUSH2 0x2FC6 DUP2 PUSH2 0x3195 JUMP JUMPDEST SWAP2 PUSH2 0x2FD4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3141 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x2FE3 DUP4 PUSH2 0x3195 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY JUMPDEST DUP2 DUP2 LT PUSH2 0x3000 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x154C DUP6 DUP3 PUSH2 0x3035 JUMP JUMPDEST DUP1 PUSH2 0x3024 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3017 PUSH1 0x1 SWAP5 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x35E1 JUMP JUMPDEST PUSH2 0x302E DUP3 DUP7 PUSH2 0x3216 JUMP JUMPDEST MSTORE ADD PUSH2 0x2FEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3059 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x304C JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x309B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x307A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30C6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30C6 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x30EE JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3122 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3115 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3163 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3163 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3163 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3231 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x327C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x32D3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x32F3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x30C6 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x30C6 JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x334C JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3332 DUP3 PUSH2 0x3179 JUMP JUMPDEST SWAP2 PUSH2 0x3340 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3141 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3358 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x33A3 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420737570706F72746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30C6 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x3402 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420616D6F756E7420696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7364000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3473 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x30C6 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x30C6 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x30C6 JUMPI DUP2 MLOAD PUSH2 0x34EB DUP2 PUSH2 0x3195 JUMP JUMPDEST SWAP3 PUSH2 0x34F9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3141 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x30C6 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3521 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3514 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x30C6 JUMPI DUP2 MLOAD PUSH2 0x3548 DUP2 PUSH2 0x3195 JUMP JUMPDEST SWAP3 PUSH2 0x3556 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3141 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x30C6 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x357E JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x358B DUP5 PUSH2 0x33E7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x3571 JUMP JUMPDEST ISZERO PUSH2 0x359D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x360E JUMPI POP POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x366F JUMPI DUP1 SWAP3 PUSH2 0x363E JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3667 JUMPI JUMPDEST DUP2 PUSH2 0x365A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x364D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3743 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x3714 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x36FA JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3743 JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x37DA JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND CALLER SUB PUSH2 0x3807 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3714 JUMPI PUSH2 0x3851 DUP2 PUSH1 0x2 SLOAD PUSH2 0x3893 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x32D3 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x38CE PUSH1 0x80 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP8 SWAP7 SWAP6 SWAP8 DUP5 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x3104 JUMP JUMPDEST SWAP6 AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3900 PUSH1 0x60 SWAP4 SWAP7 SWAP6 SWAP5 SWAP7 PUSH1 0x0 DUP5 MSTORE PUSH1 0x80 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x3104 JUMP JUMPDEST SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x3930 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP4 PUSH1 0x0 DUP6 ISZERO PUSH2 0x3D6D JUMPI POP SELFBALANCE JUMPDEST DUP1 ISZERO PUSH2 0x3D65 JUMPI DUP4 MLOAD SWAP2 SWAP5 SWAP2 PUSH2 0x3967 SWAP2 PUSH2 0x32E9 JUMP JUMPDEST SWAP5 PUSH1 0x60 SWAP4 PUSH1 0x40 SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3D5A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x398D DUP3 DUP5 PUSH2 0x3216 JUMP JUMPDEST MLOAD AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x39AA PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x39B8 DUP10 DUP5 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP4 MSTORE DUP7 CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY DUP6 ISZERO PUSH2 0x3D54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3D1B JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3A2A DUP6 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3D15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3CDC JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3AAD DUP7 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP9 SUB PUSH2 0x3AC3 JUMPI POP PUSH1 0x1 SWAP2 POP JUMPDEST ADD PUSH2 0x3972 JUMP JUMPDEST DUP6 ISZERO PUSH2 0x3B65 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x32D3 JUMPI PUSH2 0x3AFA SWAP3 PUSH1 0x0 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 DUP4 SWAP3 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x38D9 JUMP JUMPDEST SUB DUP2 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3B3E JUMPI JUMPDEST POP PUSH2 0x3ABD JUMP JUMPDEST PUSH2 0x3B52 SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0x3B38 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C2F JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP13 SWAP1 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP14 GAS CALL DUP1 ISZERO PUSH2 0x3B59 JUMPI PUSH2 0x3C13 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x32D3 JUMPI PUSH2 0x3BFB SWAP4 DUP13 PUSH1 0x0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3B3E JUMPI POP PUSH2 0x3ABD JUMP JUMPDEST PUSH2 0x3C2A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x3BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP13 SWAP1 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP14 GAS CALL DUP1 ISZERO PUSH2 0x3B59 JUMPI PUSH2 0x3CC0 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x32D3 JUMPI PUSH2 0x3BFB SWAP4 DUP13 PUSH1 0x0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST PUSH2 0x3CD7 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x3C8C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x3D0D JUMPI JUMPDEST DUP2 PUSH2 0x3CF5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP PUSH2 0x3D07 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x3A9A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3CE8 JUMP JUMPDEST DUP1 PUSH2 0x3A9C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x3D4C JUMPI JUMPDEST DUP2 PUSH2 0x3D34 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP PUSH2 0x3D46 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x3A17 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3D27 JUMP JUMPDEST DUP5 PUSH2 0x3A19 JUMP JUMPDEST POP POP POP POP POP POP POP SWAP1 POP JUMP JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x366F JUMPI DUP1 SWAP3 PUSH2 0x3D9E JUMPI JUMPDEST POP POP PUSH2 0x3953 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3DCB JUMPI JUMPDEST DUP2 PUSH2 0x3DBA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP MLOAD CODESIZE DUP1 PUSH2 0x3D97 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3DAD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY EXTCODEHASH BLOBBASEFEE ORIGIN CALL ADDRESS TIMESTAMP 0xB3 COINBASE MLOAD SWAP2 BASEFEE 0xA8 PUSH18 0x5900A9DB43FC2FFC692CB36FC3773C791BC9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "469:3362:9:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:3362:9;;;;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:3362:9;;;;;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;469:3362:9;;;;;;;-1:-1:-1;;;;;469:3362:9;;;;1667:13:2;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:9;;;;;;;;;;;;;1667:13:2;469:3362:9;;;;;1667:13:2;469:3362:9;;;;;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:9;;;;;;;;;;;;;1667:13:2;469:3362:9;;;;;;;;-1:-1:-1;;;;;469:3362:9;1273:26:0;;1269:95;;3004:6;469:3362:9;;-1:-1:-1;;;;;;469:3362:9;;;;;;;;;;;-1:-1:-1;;;;;469:3362:9;3052:40:0;-1:-1:-1;;3052:40:0;469:3362:9;;;;1058:50:20;469:3362:9;;-1:-1:-1;469:3362:9;1166:19:20;;;469:3362:9;;-1:-1:-1;;;1219:41:20;;469:3362:9;;;;;;;;;-1:-1:-1;;;;;469:3362:9;1219:41:20;;;;;;;-1:-1:-1;1219:41:20;;;469:3362:9;-1:-1:-1;;;;;;469:3362:9;;1271:44:20;469:3362:9;;;;;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:9;;-1:-1:-1;469:3362:9;-1:-1:-1;469:3362:9;;;;;;-1:-1:-1;;469:3362:9;;;;-1:-1:-1;;;;;;;469:3362:9;;;;;;;;;1417:32:20;469:3362:9;;1417:32:20;469:3362:9;;;;;;;;1417:32:20;-1:-1:-1;469:3362:9;;-1:-1:-1;469:3362:9;-1:-1:-1;469:3362:9;;;;;;-1:-1:-1;;469:3362:9;;;;-1:-1:-1;;;;;;;469:3362:9;;;;;;;;;1462:33:20;469:3362:9;;1462:33:20;469:3362:9;;;;;;;;;1462:33:20;-1:-1:-1;469:3362:9;;-1:-1:-1;469:3362:9;;;;;-1:-1:-1;469:3362:9;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;1508:22:20;;;;-1:-1:-1;1546:13:20;-1:-1:-1;1541:177:20;1592:3;469:3362:9;;1561:29:20;;;;;1626:21;;;;:::i;:::-;469:3362:9;;;;;;;;1612:35:20;469:3362:9;;-1:-1:-1;;;;;1681:17:20;469:3362:9;1681:17:20;;:::i;:::-;469:3362:9;;-1:-1:-1;469:3362:9;1662:18:20;469:3362:9;;;-1:-1:-1;469:3362:9;;;;;;;;;;;1546:13:20;;;469:3362:9;;;;-1:-1:-1;469:3362:9;;;;;-1:-1:-1;469:3362:9;1561:29:20;731:6:21;1561:29:20;;1738:21;731:6:21;;469:3362:9;;;1110:25;469:3362;;;;;1110:25;469:3362;1145:21;469:3362;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;731:6:21;469:3362:9;;-1:-1:-1;;;731:6:21;;469:3362:9;;731:6:21;;;;;;;469:3362:9;-1:-1:-1;;;469:3362:9;;;731:6:21;;;;469:3362:9;;-1:-1:-1;469:3362:9;-1:-1:-1;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:9;;;;;-1:-1:-1;469:3362:9;;-1:-1:-1;469:3362:9;;;;;;;-1:-1:-1;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:33:20;-1:-1:-1;469:3362:9;;-1:-1:-1;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1667:13:2;469:3362:9;;;;;;;;;;;;-1:-1:-1;469:3362:9;;;;;-1:-1:-1;469:3362:9;;;;;;;;;;;;;;;;;;1417:32:20;-1:-1:-1;469:3362:9;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:9;;;;;;;;;;;:::i;:::-;;;;1219:41:20;;;469:3362:9;1219:41:20;;469:3362:9;1219:41:20;;;;;;469:3362:9;1219:41:20;;;:::i;:::-;;;469:3362:9;;;;;;;:::i;:::-;1219:41:20;;;469:3362:9;-1:-1:-1;469:3362:9;;1219:41:20;;;-1:-1:-1;1219:41:20;;;469:3362:9;;;-1:-1:-1;469:3362:9;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;469:3362:9;;;-1:-1:-1;1322:31:0;469:3362:9;;;;-1:-1:-1;469:3362:9;;;;;;-1:-1:-1;469:3362:9;;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:2;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;469:3362:9;;;;;;;;-1:-1:-1;469:3362:9;;;;;-1:-1:-1;469:3362:9;;;;;;;;;;;;-1:-1:-1;469:3362:9;;;;;1667:13:2;-1:-1:-1;469:3362:9;;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:2;469:3362:9;;;;;;;;;;1667:13:2;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:2;-1:-1:-1;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;469:3362:9;;;;;;:::o;:::-;-1:-1:-1;;;;;469:3362:9;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 12464,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_30220": {
                  "entryPoint": 12491,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 13287,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_array_address_dyn_fromMemory": {
                  "entryPoint": 13617,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_array_uint256_dyn_fromMemory": {
                  "entryPoint": 13495,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 13065,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_array_address_dyn": {
                  "entryPoint": 12548,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 12341,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_enum_ActionCall": {
                  "entryPoint": 12513,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_rational_by_array_address_dyn_address_uint256": {
                  "entryPoint": 14553,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 12399,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_rational_by_array_address_dyn_address_uint256": {
                  "entryPoint": 14496,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "array_allocation_size_array_uint256_dyn": {
                  "entryPoint": 12693,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_bytes": {
                  "entryPoint": 12665,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 14483,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 13033,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 12992,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_returndata": {
                  "entryPoint": 13089,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 12609,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_burn": {
                  "entryPoint": 14194,
                  "id": 672,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 14323,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getBalance": {
                  "entryPoint": 13793,
                  "id": 3572,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_mint": {
                  "entryPoint": 14389,
                  "id": 639,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_swapToMany": {
                  "entryPoint": 14603,
                  "id": 3495,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 13947,
                  "id": 529,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 12822,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn_30245": {
                  "entryPoint": 12793,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn_30246": {
                  "entryPoint": 12806,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_2fd1": {
                  "entryPoint": 12842,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_379a": {
                  "entryPoint": 12917,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_5e70": {
                  "entryPoint": 13718,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_785c": {
                  "entryPoint": 13420,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_97c8": {
                  "entryPoint": 13307,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_9d30": {
                  "entryPoint": 13212,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c7c2": {
                  "entryPoint": 13137,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 12766,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "storage_array_index_access_address_dyn_30216": {
                  "entryPoint": 12717,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "update_storage_value_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "3095": [
                  {
                    "length": 32,
                    "start": 647
                  },
                  {
                    "length": 32,
                    "start": 753
                  },
                  {
                    "length": 32,
                    "start": 1082
                  },
                  {
                    "length": 32,
                    "start": 1194
                  },
                  {
                    "length": 32,
                    "start": 3174
                  },
                  {
                    "length": 32,
                    "start": 3280
                  },
                  {
                    "length": 32,
                    "start": 3439
                  },
                  {
                    "length": 32,
                    "start": 3582
                  },
                  {
                    "length": 32,
                    "start": 3814
                  },
                  {
                    "length": 32,
                    "start": 5635
                  },
                  {
                    "length": 32,
                    "start": 14822
                  },
                  {
                    "length": 32,
                    "start": 14953
                  },
                  {
                    "length": 32,
                    "start": 15111
                  },
                  {
                    "length": 32,
                    "start": 15233
                  },
                  {
                    "length": 32,
                    "start": 15430
                  }
                ],
                "3097": [
                  {
                    "length": 32,
                    "start": 2130
                  },
                  {
                    "length": 32,
                    "start": 2416
                  },
                  {
                    "length": 32,
                    "start": 6731
                  },
                  {
                    "length": 32,
                    "start": 8203
                  },
                  {
                    "length": 32,
                    "start": 8809
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c8062113e0814612fa957806302d05d3f14611a0e57806306fdde0314612eec578063095ea7b314612e4457806318160ddd14612e2657806323b872dd14612d255780632494452d146125385780632e1a7d4d14612430578063313ce5671461241457806347e7ef24146122045780634eadcca814612183578063531bcdb3146121655780635358fbda14611f9f5780635fa7b58414611d1457806370a0823114611cdd578063715018a614611c755780638769b44914611a355780638da5cb5b14611a0e5780638e4e9018146119f057806395d89b41146118e3578063a216aa06146115a1578063a9059cbb1461156f578063aa6ca808146114d9578063ab83f98a14611449578063af81c5b91461130f578063b317650b14610876578063c45a015514610832578063dd62ed3e146107e2578063e69d849d146106ee578063f2fde38b146106415763f9c4d3db1461017b575061000e565b3461063e57604036600319011261063e576101946130b0565b6024356101a281151561322a565b6001600160a01b0382169081845260096020526101c560ff604086205416613596565b600254926101d4841515613275565b6040926060919073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81149087805b600754811015610630576001600160a01b03610211826131ad565b90549060031b1c166102348a61022f8a61022a856135e1565b6132c0565b6132e9565b906040516102428982613141565b600281528a36602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8214801561062a576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105e05787916105f1575b505b6001600160a01b036102ca846131f9565b9116905287156105eb576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105e05787916105a3575b505b6001600160a01b0361033484613206565b91169052828714808061059c575b1561036e575050505082808060019561036694335af1610360613321565b50613351565b0188906101f6565b929392156103ef57505060405163a9059cbb60e01b815233600482015260248101919091529260209184916044918391905af19182156103e4576001926103b6575b50610366565b6103d69060203d81116103dd575b6103ce8183613141565b810190613309565b50386103b0565b503d6103c4565b6040513d8c823e3d90fd5b939450929091901561049f5750600142019182421161048b57918b9161042e9493604051809681948293637ff36ab560e01b84523390600485016138d9565b03916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19182156103e4576001926104705750610366565b6103d6903d808d833e6104838183613141565b8101906134b7565b60248c634e487b7160e01b81526011600452fd5b906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169160208d6040519283809263095ea7b360e01b825281610504888a60048401602090939291936001600160a01b0360408201951681520152565b03925af1801561059157610575575b50600142019283421161056157916105499493918d8094604051978895869485936338ed173960e01b85523391600486016138a0565b03925af19182156103e4576001926104705750610366565b60248d634e487b7160e01b81526011600452fd5b61058c9060203d81116103dd576103ce8183613141565b610513565b6040513d8f823e3d90fd5b5088610342565b90506020813d82116105d8575b816105bd60209383613141565b810103126105d4576105ce906133e7565b38610321565b8680fd5b3d91506105b0565b6040513d89823e3d90fd5b88610323565b90506020813d8211610622575b8161060b60209383613141565b810103126105d45761061c906133e7565b386102b7565b3d91506105fe565b826102b9565b5061063b8633613772565b80f35b80fd5b503461063e57602036600319011261063e576001600160a01b036106636130b0565b61066b6137f3565b1680156106c2576001600160a01b03600a548273ffffffffffffffffffffffffffffffffffffffff19821617600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b6024827f1e4fbdf700000000000000000000000000000000000000000000000000000000815280600452fd5b503461063e57604036600319011261063e576107086130b0565b6024356001600160a01b03821690818452600960205261072e60ff604086205416613596565b6040516323b872dd60e01b815233600482015230602482015260448101829052916020908390606490829088905af19081156107d7577f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f74926107b4926107ba575b50604051918291339583602090939291936001600160a01b0360408201951681520152565b0390a280f35b6107d29060203d6020116103dd576103ce8183613141565b61078f565b6040513d86823e3d90fd5b503461063e57604036600319011261063e576001600160a01b0360406108066130b0565b92826108106130cb565b9416815260016020522091166000526020526020604060002054604051908152f35b503461063e578060031936011261063e5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461063e57602036600319011261063e5760043567ffffffffffffffff811161130b576040600319823603011261130b57604051906040820182811067ffffffffffffffff8211176112f7576040528060040135600481101561102457825260248101359067ffffffffffffffff8211611024570136602382011215611028578260048201359161090783613179565b926109156040519485613141565b808452366024838301011161102857806024602093018386013783010152602082019081526040517ff94f657c0000000000000000000000000000000000000000000000000000000081526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156107d75784906112b7575b6001600160a01b039150163303611273578151916004831015928361125f576008549385805b8681101561125357600888528260ff8260051c7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3015460f88460031b161c169061123f57600481101561123f578414610a20576001016109c5565b5050505090915060015b156111fb5780516004811015610b49571561102c575b80516004811015610b4957600114610b5d575b80516004811015610b4957600214610abb575b610aa490610ab57f2dbb4029cc94c05452861994b3d66ab5d4b3f2b45418116b370c7981f2eebb9093604051938493602085526020850190516130e1565b51604080840152606083019061306f565b0390a180f35b8151908151820191604081840312610b4557610ad9602082016133e7565b9360408201519167ffffffffffffffff83116105d4577f2dbb4029cc94c05452861994b3d66ab5d4b3f2b45418116b370c7981f2eebb90956001600160a01b03610b34610b3b936020610ab59781610aa49b01920101613531565b911661390b565b9350509050610a66565b8480fd5b602484634e487b7160e01b81526021600452fd5b9091825191825183016040848203126110285760208401519067ffffffffffffffff8211611024576040610ba76001600160a01b0393602080610bae959997990191870101613531565b93016133e7565b168083526009602052610bc760ff604085205416613596565b60609460409273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee831491855b8251811015611016576001600160a01b03610c028285613216565b5116610c0d816135e1565b801561100c5760405191610c218c84613141565b600283528836602085013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81148015611006576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610fbc578c91610fcd575b505b6001600160a01b03610ca9866131f9565b911690528715610fc7576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610fbc578c91610f7f575b505b6001600160a01b03610d1386613206565b91169052818903610d2c57505050506001905b01610be7565b15610de057506001420191824211610dcc57918991610d6393604051809581948293637ff36ab560e01b84523090600485016138d9565b03916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af18015610dc1579060019291610da7575b50610d26565b610dba903d808b833e6104838183613141565b5038610da1565b6040513d8a823e3d90fd5b60248a634e487b7160e01b81526011600452fd5b908615610ecf5760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482018190526024820183905292602090829060449082908f905af18015610ec457610ea8575b506001420192834211610e945791610e7b93918b8094604051968795869485936318cbafe560e01b85523091600486016138a0565b03925af18015610dc1579060019291610da75750610d26565b60248b634e487b7160e01b81526011600452fd5b610ebf9060203d81116103dd576103ce8183613141565b610e46565b6040513d8d823e3d90fd5b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482018190526024820183905292602090829060449082908f905af18015610ec457610f63575b506001420192834211610e945791610e7b93918b8094604051968795869485936338ed173960e01b85523091600486016138a0565b610f7a9060203d81116103dd576103ce8183613141565b610f2e565b90506020813d8211610fb4575b81610f9960209383613141565b81010312610fb057610faa906133e7565b38610d00565b8b80fd5b3d9150610f8c565b6040513d8e823e3d90fd5b88610d02565b90506020813d8211610ffe575b81610fe760209383613141565b81010312610fb057610ff8906133e7565b38610c96565b3d9150610fda565b81610c98565b5050600190610d26565b509594965050505050610a53565b8380fd5b8280fd5b906110418151602080825183010191016134b7565b8051600754036111b7578391825b82518410156110775761106f6001916110688686613216565b5190613893565b93019261104f565b61271091949350036111735780519067ffffffffffffffff821161115f5768010000000000000000821161115f5760065482600655808310611101575b5060200160068552845b8281106110cd57505050610a40565b60019060208351930192817ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0155016110be565b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01827ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f015b81811061115457506110b4565b868155600101611147565b602485634e487b7160e01b81526041600452fd5b606460405162461bcd60e51b815260206004820152601160248201527f496e76616c696420726174696f2073756d0000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964206c656e6774680000000000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601260248201527f416374696f6e206e6f7420616c6c6f77656400000000000000000000000000006044820152fd5b602489634e487b7160e01b81526021600452fd5b50929394505050610a2a565b602485634e487b7160e01b81526021600452fd5b606460405162461bcd60e51b815260206004820152601560248201527f4f6e6c7920656467657220697320616c6c6f77656400000000000000000000006044820152fd5b506020813d6020116112ef575b816112d160209383613141565b81010312611024576112ea6001600160a01b03916133e7565b61099f565b3d91506112c4565b602484634e487b7160e01b81526041600452fd5b5080fd5b503461063e57604036600319011261063e576113296130b0565b6113316137f3565b6001600160a01b03811690818352600960205260ff60408420541661140557600754680100000000000000008110156112f7579061137882600161139794016007556131ad565b9091906001600160a01b038084549260031b9316831b921b1916179055565b600654680100000000000000008110156113f1576113be8160016113d893016006556131de565b6024359082549060031b91821b91600019901b1916179055565b8152600960205260408120805460ff1916600117905580f35b602483634e487b7160e01b81526041600452fd5b606460405162461bcd60e51b815260206004820152600c60248201527f546f6b656e2065786973747300000000000000000000000000000000000000006044820152fd5b50602036600319011261063e5760043573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8252600960205261148560ff60408420541661339c565b61149081341461346c565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f7460403392a280f35b503461063e578060031936011261063e5760405180916020600754928381520191600782527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688915b8181106115505761154c8561153881870382613141565b604051918291602083526020830190613104565b0390f35b82546001600160a01b0316845260209093019260019283019201611521565b503461063e57604036600319011261063e5761159661158c6130b0565b602435903361367b565b602060405160018152f35b503461063e57602036600319011261063e576004356115c181151561322a565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260096020526115ed60ff604084205416613596565b600254906115fc821515613275565b60409060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685805b6007548110156118d8576001600160a01b03611649826131ad565b90549060031b1c166116628861022f8861022a856135e1565b906040516116708782613141565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee821480156118d2576040516315ab88c960e31b81526020816004818b5afa9081156105e0578791611899575b505b6001600160a01b036116cf846131f9565b911690526040516315ab88c960e31b81526020816004818b5afa9081156105e0578791611860575b506001600160a01b0361170984613206565b911690528080611858575b156117395750505082808060019561173194335af1610360613321565b01869061162e565b9192911561179e575060405163a9059cbb60e01b815233600482015260248101919091529260209184916044918391905af1918215610dc157600192611780575b50611731565b6117979060203d81116103dd576103ce8183613141565b503861177a565b60405163095ea7b360e01b81526001600160a01b0387166004820152602481018390529094509091602090829060449082908e905af180156103e45761183c575b506001420192834211610dcc5790899161180f60405195869384936338ed173960e01b85523391600486016138a0565b038183875af1918215610dc1576001926118295750611731565b611797903d808b833e6104838183613141565b6118539060203d81116103dd576103ce8183613141565b6117df565b506001611714565b90506020813d8211611891575b8161187a60209383613141565b810103126105d45761188b906133e7565b386116f7565b3d915061186d565b90506020813d82116118ca575b816118b360209383613141565b810103126105d4576118c4906133e7565b386116bc565b3d91506118a6565b826116be565b5061063b8433613772565b503461063e578060031936011261063e576040519080600454908160011c916001811680156119e6575b6020841081146119d2578386529081156119ab575060011461194e575b61154c8461193a81860382613141565b60405191829160208352602083019061306f565b600481527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b8082106119915750909150810160200161193a8261192a565b919260018160209254838588010152019101909291611978565b60ff191660208087019190915292151560051b8501909201925061193a915083905061192a565b602483634e487b7160e01b81526022600452fd5b92607f169261190d565b503461063e578060031936011261063e576020600554604051908152f35b503461063e578060031936011261063e5760206001600160a01b03600a5416604051908152f35b508060031936011261063e576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016803303611c315760ff600c54166002811015611c1d57611bd957600b543410611b95576020600491604051928380927f78d1c86d0000000000000000000000000000000000000000000000000000000082525afa8015611b8a578290611b4a575b6001600160a01b03915016816001600160a01b03600a5416823b1561130b5781906024604051809581937f23024408000000000000000000000000000000000000000000000000000000008352600483015234905af18015611b3d57611b2f5780f35b611b3891613141565b388180f35b50604051903d90823e3d90fd5b506020813d602011611b82575b81611b6460209383613141565b8101031261130b57611b7d6001600160a01b03916133e7565b611acc565b3d9150611b57565b6040513d84823e3d90fd5b606460405162461bcd60e51b815260206004820152601660248201527f496e73756666696369656e7420666f726b20636f7374000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600a60248201527f446973616c6c6f776564000000000000000000000000000000000000000000006044820152fd5b602483634e487b7160e01b81526021600452fd5b606460405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920666163746f727920697320616c6c6f7765640000000000000000006044820152fd5b503461063e578060031936011261063e57611c8e6137f3565b806001600160a01b03600a5473ffffffffffffffffffffffffffffffffffffffff198116600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461063e57602036600319011261063e5760406020916001600160a01b03611d046130b0565b1681528083522054604051908152f35b503461063e57602036600319011261063e576001600160a01b03611d366130b0565b611d3e6137f3565b16808252600960205260ff60408320541615611f5b576040516370a0823160e01b8152306004820152602081602481855afa908115611f50578391611f1e575b50611eda57815b60075480821015611ed457826001600160a01b03611da2846131ad565b90549060031b1c1614611db85750600101611d85565b6000198101908111611eac576001600160a01b03611dd8611de9926131ad565b90549060031b1c16611378836131ad565b6007548015611ec05760001901611dff816131ad565b6001600160a01b0382549160031b1b191690556007556006546000198101908111611eac5790611e41611e34611e5a936131de565b90549060031b1c916131de565b90919082549060031b91821b91600019901b1916179055565b6006548015611e985760001901611e70816131de565b8154906000199060031b1b19169055600655815260096020526040812060ff19815416905580f35b602483634e487b7160e01b81526031600452fd5b602484634e487b7160e01b81526011600452fd5b602484634e487b7160e01b81526031600452fd5b50505080f35b606460405162461bcd60e51b815260206004820152601060248201527f4e6f6e2d7a65726f2062616c616e6365000000000000000000000000000000006044820152fd5b90506020813d602011611f48575b81611f3960209383613141565b81010312611028575138611d7e565b3d9150611f2c565b6040513d85823e3d90fd5b606460405162461bcd60e51b815260206004820152600f60248201527f546f6b656e206e6f7420666f756e6400000000000000000000000000000000006044820152fd5b50602036600319011261063e57600435611fb76137f3565b611fc281341461346c565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82526009602052611fee60ff60408420541661339c565b6040516322d4d43360e21b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115611f50578391612120575b5060206001600160a01b03916044604051809481936333fa33cb60e11b835287600484015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6024840152165afa8015611f505783906120ec575b6120a3915061209d6005548210156133fb565b33613835565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f49551760403392a280f35b506020813d602011612118575b8161210660209383613141565b81010312611028576120a3905161208a565b3d91506120f9565b90506020813d60201161215d575b8161213b60209383613141565b810103126110285760206121566001600160a01b03926133e7565b915061203b565b3d915061212e565b503461063e578060031936011261063e576020600b54604051908152f35b503461063e578060031936011261063e5760405180916020600654928381520191600682527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f915b8181106121ee5761154c856121e281870382613141565b60405191829182613035565b82548452602090930192600192830192016121cb565b503461063e57604036600319011261063e5761221e6130b0565b6024356122296137f3565b6001600160a01b038216808452600960205261224b60ff60408620541661339c565b604051916322d4d43360e21b83526020836004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9283156123905785936123cf575b5060206001600160a01b03936044604051809681936333fa33cb60e11b8352866004840152876024840152165afa92831561239057859361239b575b506122e46005548410156133fb565b6040516323b872dd60e01b815233600482015230602482015260448101829052916020908390606490829089905af18015612390577fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f495517936107b49361234f92612373575b5033613835565b604051918291339583602090939291936001600160a01b0360408201951681520152565b61238b9060203d6020116103dd576103ce8183613141565b612348565b6040513d87823e3d90fd5b9092506020813d6020116123c7575b816123b760209383613141565b81010312610b45575191386122d5565b3d91506123aa565b92506020833d60201161240c575b816123ea60209383613141565b81010312610b455760206124056001600160a01b03946133e7565b9350612299565b3d91506123dd565b503461063e578060031936011261063e57602060405160128152f35b503461063e57602036600319011261063e5760043561245081151561322a565b6002549061245f821515613275565b82805b60075481101561252d576001600160a01b0361247d826131ad565b90549060031b1c166124968561022f8661022a856135e1565b9073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036124d057508280806001956124c894335af1610360613321565b018390612462565b60405163a9059cbb60e01b81523360048201526024810192909252909260209184916044918391905af19182156123905760019261250f575b506124c8565b6125269060203d81116103dd576103ce8183613141565b5038612509565b5061063b8233613772565b503461063e578060031936011261063e576040518060206008549283815201918183600886527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee39286905b80601f830110612a9c5761269c945491818110612a81575b818110612a63575b818110612a45575b818110612a27575b818110612a0a575b8181106129ec575b8181106129ce575b8181106129b0575b818110612992575b818110612974575b818110612956575b818110612938575b81811061291a575b8181106128fc575b8181106128de575b8181106128c0575b8181106128a2575b818110612884575b818110612866575b818110612848575b81811061282a575b81811061280c575b8181106127ee575b8181106127d0575b8181106127b2575b818110612794575b818110612776575b818110612758575b81811061273a575b81811061271c575b8181106126fe575b106126e7575b509392930383613141565b604051928392602084019060208552518091526040840192915b8181106126c4575050500390f35b91935091602080826126d960019488516130e1565b0194019101918493926126b6565b906126f78160209360f81c6130e1565b0138612691565b9260208161271460019360ff8760f01c166130e1565b01930161268b565b9260208161273260019360ff8760e81c166130e1565b019301612683565b9260208161275060019360ff8760e01c166130e1565b01930161267b565b9260208161276e60019360ff8760d81c166130e1565b019301612673565b9260208161278c60019360ff8760d01c166130e1565b01930161266b565b926020816127aa60019360ff8760c81c166130e1565b019301612663565b926020816127c860019360ff8760c01c166130e1565b01930161265b565b926020816127e660019360ff8760b81c166130e1565b019301612653565b9260208161280460019360ff8760b01c166130e1565b01930161264b565b9260208161282260019360ff8760a81c166130e1565b019301612643565b9260208161284060019360ff8760a01c166130e1565b01930161263b565b9260208161285e60019360ff8760981c166130e1565b019301612633565b9260208161287c60019360ff8760901c166130e1565b01930161262b565b9260208161289a60019360ff8760881c166130e1565b019301612623565b926020816128b860019360ff8760801c166130e1565b01930161261b565b926020816128d660019360ff8760781c166130e1565b019301612613565b926020816128f460019360ff8760701c166130e1565b01930161260b565b9260208161291260019360ff8760681c166130e1565b019301612603565b9260208161293060019360ff8760601c166130e1565b0193016125fb565b9260208161294e60019360ff8760581c166130e1565b0193016125f3565b9260208161296c60019360ff8760501c166130e1565b0193016125eb565b9260208161298a60019360ff8760481c166130e1565b0193016125e3565b926020816129a860019360ff8760401c166130e1565b0193016125db565b926020816129c660019360ff8760381c166130e1565b0193016125d3565b926020816129e460019360ff8760301c166130e1565b0193016125cb565b92602081612a0260019360ff8760281c166130e1565b0193016125c3565b92602081612a1f60019360ff87851c166130e1565b0193016125bb565b92602081612a3d60019360ff8760181c166130e1565b0193016125b3565b92602081612a5b60019360ff8760101c166130e1565b0193016125ab565b92602081612a7960019360ff8760081c166130e1565b0193016125a3565b92602081612a9460019360ff87166130e1565b01930161259b565b916020919350610400600191612d178754612aba8360ff83166130e1565b612acc86840160ff8360081c166130e1565b612adf6040840160ff8360101c166130e1565b612af26060840160ff8360181c166130e1565b612b046080840160ff83891c166130e1565b612b1760a0840160ff8360281c166130e1565b612b2a60c0840160ff8360301c166130e1565b612b3d60e0840160ff8360381c166130e1565b612b51610100840160ff8360401c166130e1565b612b65610120840160ff8360481c166130e1565b612b79610140840160ff8360501c166130e1565b612b8d610160840160ff8360581c166130e1565b612ba1610180840160ff8360601c166130e1565b612bb56101a0840160ff8360681c166130e1565b612bc96101c0840160ff8360701c166130e1565b612bdd6101e0840160ff8360781c166130e1565b612bf1610200840160ff8360801c166130e1565b612c05610220840160ff8360881c166130e1565b612c19610240840160ff8360901c166130e1565b612c2d610260840160ff8360981c166130e1565b612c41610280840160ff8360a01c166130e1565b612c556102a0840160ff8360a81c166130e1565b612c696102c0840160ff8360b01c166130e1565b612c7d6102e0840160ff8360b81c166130e1565b612c91610300840160ff8360c01c166130e1565b612ca5610320840160ff8360c81c166130e1565b612cb9610340840160ff8360d01c166130e1565b612ccd610360840160ff8360d81c166130e1565b612ce1610380840160ff8360e01c166130e1565b612cf56103a0840160ff8360e81c166130e1565b612d096103c0840160ff8360f01c166130e1565b6103e083019060f81c6130e1565b019401920184929391612583565b503461063e57606036600319011261063e57612d3f6130b0565b612d476130cb565b604435916001600160a01b0381168085526001602052604085206001600160a01b03331686526020526040852054906000198210612d8c575b5050611596935061367b565b848210612df2578015612ddf573315612dcc576040868692611596985260016020528181206001600160a01b033316825260205220910390553880612d80565b602486634a1406b160e11b815280600452fd5b60248663e602df0560e01b815280600452fd5b60648686847ffb8f41b200000000000000000000000000000000000000000000000000000000835233600452602452604452fd5b503461063e578060031936011261063e576020600254604051908152f35b503461063e57604036600319011261063e57612e5e6130b0565b602435903315612ed9576001600160a01b0316918215612ec65760408291338152600160205281812085825260205220556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b80634a1406b160e11b6024925280600452fd5b60248363e602df0560e01b815280600452fd5b503461063e578060031936011261063e576040519080600354908160011c91600181168015612f9f575b6020841081146119d2578386529081156119ab5750600114612f425761154c8461193a81860382613141565b600381527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b808210612f855750909150810160200161193a8261192a565b919260018160209254838588010152019101909291612f6c565b92607f1692612f16565b503461063e578060031936011261063e57600754612fc681613195565b91612fd46040519384613141565b818352601f19612fe383613195565b013660208501375b818110613000576040518061154c8582613035565b806130246001600160a01b036130176001946131ad565b90549060031b1c166135e1565b61302e8286613216565b5201612feb565b602060408183019282815284518094520192019060005b8181106130595750505090565b825184526020938401939092019160010161304c565b919082519283825260005b84811061309b575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161307a565b600435906001600160a01b03821682036130c657565b600080fd5b602435906001600160a01b03821682036130c657565b9060048210156130ee5752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b8181106131225750505090565b82516001600160a01b0316845260209384019390920191600101613115565b90601f8019910116810190811067ffffffffffffffff82111761316357604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161316357601f01601f191660200190565b67ffffffffffffffff81116131635760051b60200190565b6007548110156131c857600760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6006548110156131c857600660005260206000200190600090565b8051156131c85760200190565b8051600110156131c85760400190565b80518210156131c85760209160051b010190565b1561323157565b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420616d6f756e740000000000000000000000000000000000006044820152fd5b1561327c57565b606460405162461bcd60e51b815260206004820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b818102929181159184041417156132d357565b634e487b7160e01b600052601160045260246000fd5b81156132f3570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126130c6575180151581036130c65790565b3d1561334c573d9061333282613179565b916133406040519384613141565b82523d6000602084013e565b606090565b1561335857565b606460405162461bcd60e51b815260206004820152601360248201527f455448207472616e73666572206661696c6564000000000000000000000000006044820152fd5b156133a357565b606460405162461bcd60e51b815260206004820152601160248201527f455448206e6f7420737570706f727465640000000000000000000000000000006044820152fd5b51906001600160a01b03821682036130c657565b1561340257565b608460405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e74206465706f73697420616d6f756e7420696e207560448201527f73640000000000000000000000000000000000000000000000000000000000006064820152fd5b1561347357565b606460405162461bcd60e51b815260206004820152601460248201527f496e636f72726563742045544820616d6f756e740000000000000000000000006044820152fd5b6020818303126130c65780519067ffffffffffffffff82116130c657019080601f830112156130c65781516134eb81613195565b926134f96040519485613141565b81845260208085019260051b8201019283116130c657602001905b8282106135215750505090565b8151815260209182019101613514565b9080601f830112156130c657815161354881613195565b926135566040519485613141565b81845260208085019260051b8201019283116130c657602001905b82821061357e5750505090565b6020809161358b846133e7565b815201910190613571565b1561359d57565b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420746f6b656e000000000000000000000000000000000000006044820152fd5b6000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee810361360e5750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa91821561366f57809261363e57505090565b9091506020823d602011613667575b8161365a60209383613141565b8101031261063e57505190565b3d915061364d565b604051903d90823e3d90fd5b6001600160a01b0316908115613743576001600160a01b03169182156137145760008281528060205260408120548281106136fa5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b03168015613743576000918183528260205260408320548181106137da57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b6001600160a01b03600a5416330361380757565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6001600160a01b03169081156137145761385181600254613893565b6002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009284845283825260408420818154019055604051908152a3565b919082018092116132d357565b906138ce6080936001600160a01b03929796959784526000602085015260a0604085015260a0840190613104565b951660608201520152565b6001600160a01b036139006060939695949660008452608060208501526080840190613104565b951660408201520152565b906001600160a01b03821680600052600960205261393060ff60406000205416613596565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81149360008515613d6d5750475b8015613d65578351919491613967916132e9565b946060936040929060005b8151811015613d5a576001600160a01b0361398d8284613216565b5116908160005260096020526139aa60ff60406000205416613596565b604051916139b88984613141565b60028352863660208501378515613d54576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115613b5957600091613d1b575b505b6001600160a01b03613a2a856131f9565b9116905273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8114908115613d15576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115613b5957600091613cdc575b505b6001600160a01b03613aad86613206565b911690528803613ac35750600191505b01613972565b8515613b65575060014201918242116132d357613afa926000916040519485928392637ff36ab560e01b84523090600485016138d9565b03818d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1918215613b5957600192613b3e575b50613abd565b613b52903d806000833e6104838183613141565b5038613b38565b6040513d6000823e3d90fd5b15613c2f5760405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201819052602482018c9052929060208160448160008d5af18015613b5957613c13575b50600142018042116132d357613bfb938c60008094604051978895869485936318cbafe560e01b85523091600486016138a0565b03925af1918215613b5957600192613b3e5750613abd565b613c2a9060203d81116103dd576103ce8183613141565b613bc7565b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201819052602482018c9052929060208160448160008d5af18015613b5957613cc0575b50600142018042116132d357613bfb938c60008094604051978895869485936338ed173960e01b85523091600486016138a0565b613cd79060203d81116103dd576103ce8183613141565b613c8c565b906020823d8211613d0d575b81613cf560209383613141565b8101031261063e5750613d07906133e7565b38613a9a565b3d9150613ce8565b80613a9c565b906020823d8211613d4c575b81613d3460209383613141565b8101031261063e5750613d46906133e7565b38613a17565b3d9150613d27565b84613a19565b505050505050509050565b509350505050565b6040516370a0823160e01b8152306004820152602081602481875afa91821561366f578092613d9e575b5050613953565b9091506020823d602011613dcb575b81613dba60209383613141565b8101031261063e5750513880613d97565b3d9150613dad56fea26469706673582212203c3f4a32f13042b341519148a8715900a9db43fc2ffc692cb36fc3773c791bc964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x113E08 EQ PUSH2 0x2FA9 JUMPI DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x1A0E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2EEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E44 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E26 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D25 JUMPI DUP1 PUSH4 0x2494452D EQ PUSH2 0x2538 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2430 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2414 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x2204 JUMPI DUP1 PUSH4 0x4EADCCA8 EQ PUSH2 0x2183 JUMPI DUP1 PUSH4 0x531BCDB3 EQ PUSH2 0x2165 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x1F9F JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0x1D14 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1CDD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C75 JUMPI DUP1 PUSH4 0x8769B449 EQ PUSH2 0x1A35 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A0E JUMPI DUP1 PUSH4 0x8E4E9018 EQ PUSH2 0x19F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18E3 JUMPI DUP1 PUSH4 0xA216AA06 EQ PUSH2 0x15A1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x156F JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x14D9 JUMPI DUP1 PUSH4 0xAB83F98A EQ PUSH2 0x1449 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x130F JUMPI DUP1 PUSH4 0xB317650B EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x832 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7E2 JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x641 JUMPI PUSH4 0xF9C4D3DB EQ PUSH2 0x17B JUMPI POP PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x194 PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1A2 DUP2 ISZERO ISZERO PUSH2 0x322A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1C5 PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH2 0x1D4 DUP5 ISZERO ISZERO PUSH2 0x3275 JUMP JUMPDEST PUSH1 0x40 SWAP3 PUSH1 0x60 SWAP2 SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 DUP8 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x630 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x211 DUP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x234 DUP11 PUSH2 0x22F DUP11 PUSH2 0x22A DUP6 PUSH2 0x35E1 JUMP JUMPDEST PUSH2 0x32C0 JUMP JUMPDEST PUSH2 0x32E9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x242 DUP10 DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP11 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x5F1 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2CA DUP5 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x5A3 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x334 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP3 DUP8 EQ DUP1 DUP1 PUSH2 0x59C JUMPI JUMPDEST ISZERO PUSH2 0x36E JUMPI POP POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x366 SWAP5 CALLER GAS CALL PUSH2 0x360 PUSH2 0x3321 JUMP JUMPDEST POP PUSH2 0x3351 JUMP JUMPDEST ADD DUP9 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 SWAP4 SWAP3 ISZERO PUSH2 0x3EF JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3B6 JUMPI JUMPDEST POP PUSH2 0x366 JUMP JUMPDEST PUSH2 0x3D6 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI JUMPDEST PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3309 JUMP JUMPDEST POP CODESIZE PUSH2 0x3B0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP5 POP SWAP3 SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x49F JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x48B JUMPI SWAP2 DUP12 SWAP2 PUSH2 0x42E SWAP5 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE CALLER SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x38D9 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x470 JUMPI POP PUSH2 0x366 JUMP JUMPDEST PUSH2 0x3D6 SWAP1 RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x34B7 JUMP JUMPDEST PUSH1 0x24 DUP13 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH1 0x20 DUP14 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 PUSH2 0x504 DUP9 DUP11 PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x591 JUMPI PUSH2 0x575 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0x561 JUMPI SWAP2 PUSH2 0x549 SWAP5 SWAP4 SWAP2 DUP14 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x470 JUMPI POP PUSH2 0x366 JUMP JUMPDEST PUSH1 0x24 DUP14 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x58C SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x342 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x5D8 JUMPI JUMPDEST DUP2 PUSH2 0x5BD PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x5CE SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x321 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x622 JUMPI JUMPDEST DUP2 PUSH2 0x60B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x61C SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x2B7 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5FE JUMP JUMPDEST DUP3 PUSH2 0x2B9 JUMP JUMPDEST POP PUSH2 0x63B DUP7 CALLER PUSH2 0x3772 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x663 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x66B PUSH2 0x37F3 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x708 PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x72E PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7D7 JUMPI PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 SWAP3 PUSH2 0x7B4 SWAP3 PUSH2 0x7BA JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x7D2 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH2 0x806 PUSH2 0x30B0 JUMP JUMPDEST SWAP3 DUP3 PUSH2 0x810 PUSH2 0x30CB JUMP JUMPDEST SWAP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x130B JUMPI PUSH1 0x40 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x130B JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F7 JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1024 JUMPI DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1024 JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1028 JUMPI DUP3 PUSH1 0x4 DUP3 ADD CALLDATALOAD SWAP2 PUSH2 0x907 DUP4 PUSH2 0x3179 JUMP JUMPDEST SWAP3 PUSH2 0x915 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3141 JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x1028 JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH32 0xF94F657C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x7D7 JUMPI DUP5 SWAP1 PUSH2 0x12B7 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND CALLER SUB PUSH2 0x1273 JUMPI DUP2 MLOAD SWAP2 PUSH1 0x4 DUP4 LT ISZERO SWAP3 DUP4 PUSH2 0x125F JUMPI PUSH1 0x8 SLOAD SWAP4 DUP6 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1253 JUMPI PUSH1 0x8 DUP9 MSTORE DUP3 PUSH1 0xFF DUP3 PUSH1 0x5 SHR PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SLOAD PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR AND SWAP1 PUSH2 0x123F JUMPI PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x123F JUMPI DUP5 EQ PUSH2 0xA20 JUMPI PUSH1 0x1 ADD PUSH2 0x9C5 JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 POP PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x11FB JUMPI DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI ISZERO PUSH2 0x102C JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x1 EQ PUSH2 0xB5D JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x2 EQ PUSH2 0xABB JUMPI JUMPDEST PUSH2 0xAA4 SWAP1 PUSH2 0xAB5 PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x20 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 MLOAD PUSH2 0x30E1 JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x306F JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP2 MLOAD SWAP1 DUP2 MLOAD DUP3 ADD SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0xB45 JUMPI PUSH2 0xAD9 PUSH1 0x20 DUP3 ADD PUSH2 0x33E7 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x5D4 JUMPI PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB34 PUSH2 0xB3B SWAP4 PUSH1 0x20 PUSH2 0xAB5 SWAP8 DUP2 PUSH2 0xAA4 SWAP12 ADD SWAP3 ADD ADD PUSH2 0x3531 JUMP JUMPDEST SWAP2 AND PUSH2 0x390B JUMP JUMPDEST SWAP4 POP POP SWAP1 POP PUSH2 0xA66 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 SWAP2 DUP3 MLOAD SWAP2 DUP3 MLOAD DUP4 ADD PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x1028 JUMPI PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1024 JUMPI PUSH1 0x40 PUSH2 0xBA7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 DUP1 PUSH2 0xBAE SWAP6 SWAP10 SWAP8 SWAP10 ADD SWAP2 DUP8 ADD ADD PUSH2 0x3531 JUMP JUMPDEST SWAP4 ADD PUSH2 0x33E7 JUMP JUMPDEST AND DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0xBC7 PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x60 SWAP5 PUSH1 0x40 SWAP3 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP4 EQ SWAP2 DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1016 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC02 DUP3 DUP6 PUSH2 0x3216 JUMP JUMPDEST MLOAD AND PUSH2 0xC0D DUP2 PUSH2 0x35E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xC21 DUP13 DUP5 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP4 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP1 ISZERO PUSH2 0x1006 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFBC JUMPI DUP13 SWAP2 PUSH2 0xFCD JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCA9 DUP7 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFBC JUMPI DUP13 SWAP2 PUSH2 0xF7F JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD13 DUP7 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP2 DUP10 SUB PUSH2 0xD2C JUMPI POP POP POP POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0xBE7 JUMP JUMPDEST ISZERO PUSH2 0xDE0 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xDCC JUMPI SWAP2 DUP10 SWAP2 PUSH2 0xD63 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x38D9 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0xDC1 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xDA7 JUMPI JUMPDEST POP PUSH2 0xD26 JUMP JUMPDEST PUSH2 0xDBA SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 DUP7 ISZERO PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP16 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH2 0xEA8 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xE94 JUMPI SWAP2 PUSH2 0xE7B SWAP4 SWAP2 DUP12 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xDC1 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xDA7 JUMPI POP PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x24 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xEBF SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP16 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH2 0xF63 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xE94 JUMPI SWAP2 PUSH2 0xE7B SWAP4 SWAP2 DUP12 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST PUSH2 0xF7A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0xF2E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xFB4 JUMPI JUMPDEST DUP2 PUSH2 0xF99 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFB0 JUMPI PUSH2 0xFAA SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0xD00 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF8C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0xD02 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xFFE JUMPI JUMPDEST DUP2 PUSH2 0xFE7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xFB0 JUMPI PUSH2 0xFF8 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0xC96 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xFDA JUMP JUMPDEST DUP2 PUSH2 0xC98 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 PUSH2 0xD26 JUMP JUMPDEST POP SWAP6 SWAP5 SWAP7 POP POP POP POP POP PUSH2 0xA53 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x1041 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x34B7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x7 SLOAD SUB PUSH2 0x11B7 JUMPI DUP4 SWAP2 DUP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x1077 JUMPI PUSH2 0x106F PUSH1 0x1 SWAP2 PUSH2 0x1068 DUP7 DUP7 PUSH2 0x3216 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x3893 JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x104F JUMP JUMPDEST PUSH2 0x2710 SWAP2 SWAP5 SWAP4 POP SUB PUSH2 0x1173 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x115F JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x115F JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x1101 JUMPI JUMPDEST POP PUSH1 0x20 ADD PUSH1 0x6 DUP6 MSTORE DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x10CD JUMPI POP POP POP PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SSTORE ADD PUSH2 0x10BE JUMP JUMPDEST PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP3 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x1154 JUMPI POP PUSH2 0x10B4 JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726174696F2073756D000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C656E677468000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E206E6F7420616C6C6F7765640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST POP SWAP3 SWAP4 SWAP5 POP POP POP PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920656467657220697320616C6C6F7765640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x12EF JUMPI JUMPDEST DUP2 PUSH2 0x12D1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1024 JUMPI PUSH2 0x12EA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x33E7 JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x1329 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x1331 PUSH2 0x37F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x1405 JUMPI PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x12F7 JUMPI SWAP1 PUSH2 0x1378 DUP3 PUSH1 0x1 PUSH2 0x1397 SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x31AD JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13BE DUP2 PUSH1 0x1 PUSH2 0x13D8 SWAP4 ADD PUSH1 0x6 SSTORE PUSH2 0x31DE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206578697374730000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1485 PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x339C JUMP JUMPDEST PUSH2 0x1490 DUP2 CALLVALUE EQ PUSH2 0x346C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x7 DUP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x1550 JUMPI PUSH2 0x154C DUP6 PUSH2 0x1538 DUP2 DUP8 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3104 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1521 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x1596 PUSH2 0x158C PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x367B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x15C1 DUP2 ISZERO ISZERO PUSH2 0x322A JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x15ED PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x15FC DUP3 ISZERO ISZERO PUSH2 0x3275 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x18D8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1649 DUP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x1662 DUP9 PUSH2 0x22F DUP9 PUSH2 0x22A DUP6 PUSH2 0x35E1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1670 DUP8 DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x18D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x1899 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16CF DUP5 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5E0 JUMPI DUP8 SWAP2 PUSH2 0x1860 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1709 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP1 DUP1 PUSH2 0x1858 JUMPI JUMPDEST ISZERO PUSH2 0x1739 JUMPI POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x1731 SWAP5 CALLER GAS CALL PUSH2 0x360 PUSH2 0x3321 JUMP JUMPDEST ADD DUP7 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0x179E JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1780 JUMPI JUMPDEST POP PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x1797 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0x177A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP5 POP SWAP1 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP15 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH2 0x183C JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xDCC JUMPI SWAP1 DUP10 SWAP2 PUSH2 0x180F PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB DUP2 DUP4 DUP8 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1829 JUMPI POP PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x1797 SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x1853 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x17DF JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1891 JUMPI JUMPDEST DUP2 PUSH2 0x187A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x188B SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x16F7 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x186D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x18CA JUMPI JUMPDEST DUP2 PUSH2 0x18B3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D4 JUMPI PUSH2 0x18C4 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x16BC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x18A6 JUMP JUMPDEST DUP3 PUSH2 0x16BE JUMP JUMPDEST POP PUSH2 0x63B DUP5 CALLER PUSH2 0x3772 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x4 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x19E6 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x19D2 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x19AB JUMPI POP PUSH1 0x1 EQ PUSH2 0x194E JUMPI JUMPDEST PUSH2 0x154C DUP5 PUSH2 0x193A DUP2 DUP7 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x306F JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1991 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x193A DUP3 PUSH2 0x192A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1978 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x193A SWAP2 POP DUP4 SWAP1 POP PUSH2 0x192A JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x190D JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP1 CALLER SUB PUSH2 0x1C31 JUMPI PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1C1D JUMPI PUSH2 0x1BD9 JUMPI PUSH1 0xB SLOAD CALLVALUE LT PUSH2 0x1B95 JUMPI PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x78D1C86D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1B8A JUMPI DUP3 SWAP1 PUSH2 0x1B4A JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND DUP3 EXTCODESIZE ISZERO PUSH2 0x130B JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH32 0x2302440800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1B3D JUMPI PUSH2 0x1B2F JUMPI DUP1 RETURN JUMPDEST PUSH2 0x1B38 SWAP2 PUSH2 0x3141 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B82 JUMPI JUMPDEST DUP2 PUSH2 0x1B64 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x130B JUMPI PUSH2 0x1B7D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x33E7 JUMP JUMPDEST PUSH2 0x1ACC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420666F726B20636F737400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973616C6C6F77656400000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F727920697320616C6C6F776564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH2 0x1C8E PUSH2 0x37F3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D04 PUSH2 0x30B0 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D36 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x1D3E PUSH2 0x37F3 JUMP JUMPDEST AND DUP1 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x1F5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1F50 JUMPI DUP4 SWAP2 PUSH2 0x1F1E JUMPI JUMPDEST POP PUSH2 0x1EDA JUMPI DUP2 JUMPDEST PUSH1 0x7 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x1ED4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1DA2 DUP5 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1DB8 JUMPI POP PUSH1 0x1 ADD PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1EAC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1DD8 PUSH2 0x1DE9 SWAP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x1378 DUP4 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x1EC0 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1DFF DUP2 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1EAC JUMPI SWAP1 PUSH2 0x1E41 PUSH2 0x1E34 PUSH2 0x1E5A SWAP4 PUSH2 0x31DE JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x31DE JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x1E98 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1E70 DUP2 PUSH2 0x31DE JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x6 SSTORE DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST POP POP POP DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D7A65726F2062616C616E636500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1F48 JUMPI JUMPDEST DUP2 PUSH2 0x1F39 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1028 JUMPI MLOAD CODESIZE PUSH2 0x1D7E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1FB7 PUSH2 0x37F3 JUMP JUMPDEST PUSH2 0x1FC2 DUP2 CALLVALUE EQ PUSH2 0x346C JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1FEE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x339C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1F50 JUMPI DUP4 SWAP2 PUSH2 0x2120 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL DUP1 ISZERO PUSH2 0x1F50 JUMPI DUP4 SWAP1 PUSH2 0x20EC JUMPI JUMPDEST PUSH2 0x20A3 SWAP2 POP PUSH2 0x209D PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x33FB JUMP JUMPDEST CALLER PUSH2 0x3835 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2118 JUMPI JUMPDEST DUP2 PUSH2 0x2106 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1028 JUMPI PUSH2 0x20A3 SWAP1 MLOAD PUSH2 0x208A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x20F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x215D JUMPI JUMPDEST DUP2 PUSH2 0x213B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1028 JUMPI PUSH1 0x20 PUSH2 0x2156 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x33E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x203B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x212E JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x6 DUP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x21EE JUMPI PUSH2 0x154C DUP6 PUSH2 0x21E2 DUP2 DUP8 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3035 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x21CB JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x221E PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x2229 PUSH2 0x37F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x224B PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x339C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2390 JUMPI DUP6 SWAP4 PUSH2 0x23CF JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE DUP8 PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2390 JUMPI DUP6 SWAP4 PUSH2 0x239B JUMPI JUMPDEST POP PUSH2 0x22E4 PUSH1 0x5 SLOAD DUP5 LT ISZERO PUSH2 0x33FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP10 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2390 JUMPI PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 SWAP4 PUSH2 0x7B4 SWAP4 PUSH2 0x234F SWAP3 PUSH2 0x2373 JUMPI JUMPDEST POP CALLER PUSH2 0x3835 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x238B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x23C7 JUMPI JUMPDEST DUP2 PUSH2 0x23B7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB45 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x22D5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x23AA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x240C JUMPI JUMPDEST DUP2 PUSH2 0x23EA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB45 JUMPI PUSH1 0x20 PUSH2 0x2405 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x33E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2299 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x23DD JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2450 DUP2 ISZERO ISZERO PUSH2 0x322A JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x245F DUP3 ISZERO ISZERO PUSH2 0x3275 JUMP JUMPDEST DUP3 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x252D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x247D DUP3 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2496 DUP6 PUSH2 0x22F DUP7 PUSH2 0x22A DUP6 PUSH2 0x35E1 JUMP JUMPDEST SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x24D0 JUMPI POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x24C8 SWAP5 CALLER GAS CALL PUSH2 0x360 PUSH2 0x3321 JUMP JUMPDEST ADD DUP4 SWAP1 PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x2390 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x250F JUMPI JUMPDEST POP PUSH2 0x24C8 JUMP JUMPDEST PUSH2 0x2526 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0x2509 JUMP JUMPDEST POP PUSH2 0x63B DUP3 CALLER PUSH2 0x3772 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 DUP2 DUP4 PUSH1 0x8 DUP7 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 DUP7 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0x2A9C JUMPI PUSH2 0x269C SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x2A81 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A63 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A45 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A27 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A0A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29EC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29CE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29B0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2992 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2974 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2956 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2938 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x291A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28FC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28DE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28C0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28A2 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2884 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2866 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2848 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x282A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x280C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x27EE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x27D0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x27B2 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2794 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2776 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2758 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x273A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x271C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x26FE JUMPI JUMPDEST LT PUSH2 0x26E7 JUMPI JUMPDEST POP SWAP4 SWAP3 SWAP4 SUB DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x26C4 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 DUP1 DUP3 PUSH2 0x26D9 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x26B6 JUMP JUMPDEST SWAP1 PUSH2 0x26F7 DUP2 PUSH1 0x20 SWAP4 PUSH1 0xF8 SHR PUSH2 0x30E1 JUMP JUMPDEST ADD CODESIZE PUSH2 0x2691 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2714 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xF0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x268B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2732 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2683 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2750 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x267B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x276E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2673 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x278C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x266B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x27AA PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2663 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x27C8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x265B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x27E6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2653 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2804 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x264B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2822 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2643 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2840 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x263B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x285E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x98 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x287C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x90 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x262B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x289A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x88 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2623 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28B8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x80 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x261B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28D6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x78 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2613 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28F4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x70 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x260B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2912 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x68 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2603 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2930 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x60 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25FB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x294E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x58 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25F3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x296C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x50 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25EB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x298A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x48 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25E3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29A8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25DB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29C6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x38 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25D3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29E4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x30 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25CB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A02 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x28 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25C3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A1F PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 DUP6 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25BB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A3D PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x18 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25B3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A5B PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x10 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25AB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A79 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A94 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 AND PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x259B JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 PUSH2 0x2D17 DUP8 SLOAD PUSH2 0x2ABA DUP4 PUSH1 0xFF DUP4 AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2ACC DUP7 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2ADF PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2AF2 PUSH1 0x60 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x18 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B04 PUSH1 0x80 DUP5 ADD PUSH1 0xFF DUP4 DUP10 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B17 PUSH1 0xA0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x28 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B2A PUSH1 0xC0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x30 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B3D PUSH1 0xE0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x38 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B51 PUSH2 0x100 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B65 PUSH2 0x120 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x48 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B79 PUSH2 0x140 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x50 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2B8D PUSH2 0x160 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x58 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BA1 PUSH2 0x180 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x60 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BB5 PUSH2 0x1A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x68 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BC9 PUSH2 0x1C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x70 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BDD PUSH2 0x1E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x78 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2BF1 PUSH2 0x200 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C05 PUSH2 0x220 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x88 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C19 PUSH2 0x240 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x90 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C2D PUSH2 0x260 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x98 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C41 PUSH2 0x280 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C55 PUSH2 0x2A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C69 PUSH2 0x2C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C7D PUSH2 0x2E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2C91 PUSH2 0x300 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CA5 PUSH2 0x320 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CB9 PUSH2 0x340 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CCD PUSH2 0x360 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CE1 PUSH2 0x380 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2CF5 PUSH2 0x3A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE8 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x2D09 PUSH2 0x3C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xF0 SHR AND PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x3E0 DUP4 ADD SWAP1 PUSH1 0xF8 SHR PUSH2 0x30E1 JUMP JUMPDEST ADD SWAP5 ADD SWAP3 ADD DUP5 SWAP3 SWAP4 SWAP2 PUSH2 0x2583 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x2D3F PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x2D47 PUSH2 0x30CB JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 LT PUSH2 0x2D8C JUMPI JUMPDEST POP POP PUSH2 0x1596 SWAP4 POP PUSH2 0x367B JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x2DF2 JUMPI DUP1 ISZERO PUSH2 0x2DDF JUMPI CALLER ISZERO PUSH2 0x2DCC JUMPI PUSH1 0x40 DUP7 DUP7 SWAP3 PUSH2 0x1596 SWAP9 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 DUP7 DUP5 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63E JUMPI PUSH2 0x2E5E PUSH2 0x30B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x2ED9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2EC6 JUMPI PUSH1 0x40 DUP3 SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x24 SWAP3 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2F9F JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x19D2 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x19AB JUMPI POP PUSH1 0x1 EQ PUSH2 0x2F42 JUMPI PUSH2 0x154C DUP5 PUSH2 0x193A DUP2 DUP7 SUB DUP3 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x2F85 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x193A DUP3 PUSH2 0x192A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x2F6C JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x2F16 JUMP JUMPDEST POP CALLVALUE PUSH2 0x63E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63E JUMPI PUSH1 0x7 SLOAD PUSH2 0x2FC6 DUP2 PUSH2 0x3195 JUMP JUMPDEST SWAP2 PUSH2 0x2FD4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3141 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x2FE3 DUP4 PUSH2 0x3195 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY JUMPDEST DUP2 DUP2 LT PUSH2 0x3000 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x154C DUP6 DUP3 PUSH2 0x3035 JUMP JUMPDEST DUP1 PUSH2 0x3024 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3017 PUSH1 0x1 SWAP5 PUSH2 0x31AD JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x35E1 JUMP JUMPDEST PUSH2 0x302E DUP3 DUP7 PUSH2 0x3216 JUMP JUMPDEST MSTORE ADD PUSH2 0x2FEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3059 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x304C JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x309B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x307A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30C6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30C6 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x30EE JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3122 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3115 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3163 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3163 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3163 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3231 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x327C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x32D3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x32F3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x30C6 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x30C6 JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x334C JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3332 DUP3 PUSH2 0x3179 JUMP JUMPDEST SWAP2 PUSH2 0x3340 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3141 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3358 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x33A3 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420737570706F72746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30C6 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x3402 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420616D6F756E7420696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7364000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3473 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x30C6 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x30C6 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x30C6 JUMPI DUP2 MLOAD PUSH2 0x34EB DUP2 PUSH2 0x3195 JUMP JUMPDEST SWAP3 PUSH2 0x34F9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3141 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x30C6 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3521 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3514 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x30C6 JUMPI DUP2 MLOAD PUSH2 0x3548 DUP2 PUSH2 0x3195 JUMP JUMPDEST SWAP3 PUSH2 0x3556 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3141 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x30C6 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x357E JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x358B DUP5 PUSH2 0x33E7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x3571 JUMP JUMPDEST ISZERO PUSH2 0x359D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x360E JUMPI POP POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x366F JUMPI DUP1 SWAP3 PUSH2 0x363E JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3667 JUMPI JUMPDEST DUP2 PUSH2 0x365A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x364D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3743 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x3714 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x36FA JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3743 JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x37DA JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND CALLER SUB PUSH2 0x3807 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3714 JUMPI PUSH2 0x3851 DUP2 PUSH1 0x2 SLOAD PUSH2 0x3893 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x32D3 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x38CE PUSH1 0x80 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP8 SWAP7 SWAP6 SWAP8 DUP5 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x3104 JUMP JUMPDEST SWAP6 AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3900 PUSH1 0x60 SWAP4 SWAP7 SWAP6 SWAP5 SWAP7 PUSH1 0x0 DUP5 MSTORE PUSH1 0x80 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x3104 JUMP JUMPDEST SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x3930 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP4 PUSH1 0x0 DUP6 ISZERO PUSH2 0x3D6D JUMPI POP SELFBALANCE JUMPDEST DUP1 ISZERO PUSH2 0x3D65 JUMPI DUP4 MLOAD SWAP2 SWAP5 SWAP2 PUSH2 0x3967 SWAP2 PUSH2 0x32E9 JUMP JUMPDEST SWAP5 PUSH1 0x60 SWAP4 PUSH1 0x40 SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3D5A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x398D DUP3 DUP5 PUSH2 0x3216 JUMP JUMPDEST MLOAD AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x39AA PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x39B8 DUP10 DUP5 PUSH2 0x3141 JUMP JUMPDEST PUSH1 0x2 DUP4 MSTORE DUP7 CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY DUP6 ISZERO PUSH2 0x3D54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3D1B JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3A2A DUP6 PUSH2 0x31F9 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3D15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3CDC JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3AAD DUP7 PUSH2 0x3206 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP9 SUB PUSH2 0x3AC3 JUMPI POP PUSH1 0x1 SWAP2 POP JUMPDEST ADD PUSH2 0x3972 JUMP JUMPDEST DUP6 ISZERO PUSH2 0x3B65 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x32D3 JUMPI PUSH2 0x3AFA SWAP3 PUSH1 0x0 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 DUP4 SWAP3 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x38D9 JUMP JUMPDEST SUB DUP2 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3B3E JUMPI JUMPDEST POP PUSH2 0x3ABD JUMP JUMPDEST PUSH2 0x3B52 SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x483 DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST POP CODESIZE PUSH2 0x3B38 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C2F JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP13 SWAP1 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP14 GAS CALL DUP1 ISZERO PUSH2 0x3B59 JUMPI PUSH2 0x3C13 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x32D3 JUMPI PUSH2 0x3BFB SWAP4 DUP13 PUSH1 0x0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3B59 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3B3E JUMPI POP PUSH2 0x3ABD JUMP JUMPDEST PUSH2 0x3C2A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x3BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP13 SWAP1 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP14 GAS CALL DUP1 ISZERO PUSH2 0x3B59 JUMPI PUSH2 0x3CC0 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x32D3 JUMPI PUSH2 0x3BFB SWAP4 DUP13 PUSH1 0x0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x38A0 JUMP JUMPDEST PUSH2 0x3CD7 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3DD JUMPI PUSH2 0x3CE DUP2 DUP4 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x3C8C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x3D0D JUMPI JUMPDEST DUP2 PUSH2 0x3CF5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP PUSH2 0x3D07 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x3A9A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3CE8 JUMP JUMPDEST DUP1 PUSH2 0x3A9C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x3D4C JUMPI JUMPDEST DUP2 PUSH2 0x3D34 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP PUSH2 0x3D46 SWAP1 PUSH2 0x33E7 JUMP JUMPDEST CODESIZE PUSH2 0x3A17 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3D27 JUMP JUMPDEST DUP5 PUSH2 0x3A19 JUMP JUMPDEST POP POP POP POP POP POP POP SWAP1 POP JUMP JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x366F JUMPI DUP1 SWAP3 PUSH2 0x3D9E JUMPI JUMPDEST POP POP PUSH2 0x3953 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3DCB JUMPI JUMPDEST DUP2 PUSH2 0x3DBA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3141 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x63E JUMPI POP MLOAD CODESIZE DUP1 PUSH2 0x3D97 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3DAD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY EXTCODEHASH BLOBBASEFEE ORIGIN CALL ADDRESS TIMESTAMP 0xB3 COINBASE MLOAD SWAP2 BASEFEE 0xA8 PUSH18 0x5900A9DB43FC2FFC692CB36FC3773C791BC9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "469:3362:9:-:0;;;;;;;;;-1:-1:-1;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;;;:::i;:::-;;;4459:39:20;4467:12;;;4459:39;:::i;:::-;-1:-1:-1;;;;;469:3362:9;;;;;;4517:18:20;469:3362:9;;4509:54:20;469:3362:9;;;;;;4509:54:20;:::i;:::-;2927:12:2;469:3362:9;4630:15:20;4622:40;4630:15;;;4622:40;:::i;:::-;469:3362:9;;;;;774:42:21;5024:22:20;;;4680:13;;4725:3;4699:17;469:3362:9;4695:28:20;;;;;-1:-1:-1;;;;;4763:20:20;;;:::i;:::-;469:3362:9;;;;;;;4817:46:20;4818:19;:30;:19;;;;:::i;:::-;:30;:::i;:::-;4817:46;:::i;:::-;469:3362:9;;;;;;;:::i;:::-;2927:12:2;469:3362:9;;;;;;;;774:42:21;4947:21:20;;:52;;;;469:3362:9;;-1:-1:-1;;;4971:18:20;;469:3362:9;4971:11:20;469:3362:9;4971:11:20;-1:-1:-1;;;;;4971:11:20;469:3362:9;4971:18:20;;;;;;;;;;;4947:52;;;-1:-1:-1;;;;;4937:62:20;;;:::i;:::-;469:3362:9;;;;5024:54:20;;;;469:3362:9;;-1:-1:-1;;;5049:18:20;;469:3362:9;5049:11:20;469:3362:9;5049:11:20;-1:-1:-1;;;;;5049:11:20;469:3362:9;5049:18:20;;;;;;;;;;;5024:54;;;-1:-1:-1;;;;;5014:64:20;;;:::i;:::-;469:3362:9;;;;5099:19:20;;;;;:45;;5024:54;5095:988;;;5193:10;;;;;;;5019:1;5193:10;5291:40;5193:10;;5185:85;;;;:::i;:::-;;5291:40;:::i;:::-;469:3362:9;4680:13:20;;;;5095:988;5353:730;;;;;;-1:-1:-1;;469:3362:9;;-1:-1:-1;;;5397:46:20;;5422:10;469:3362:9;5397:46:20;;469:3362:9;774:42:21;;;469:3362:9;;;;;;;;;774:42:21;;469:3362:9;;;5397:46:20;;;;;;;5019:1;5397:46;;;5353:730;;5095:988;;5397:46;;;469:3362:9;5397:46:20;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;469:3362:9;;774:42:21;469:3362:9;;774:42:21;;;;5353:730:20;5465:618;;-1:-1:-1;5465:618:20;;;;;;;5684:15;5019:1;5684:15;469:3362:9;5684:15:20;;;469:3362:9;;;;;;5511:211:20;469:3362:9;;;;5511:211:20;;;;;;-1:-1:-1;;;5511:211:20;;5651:10;5511:211;469:3362:9;5511:211:20;;;:::i;:::-;;:11;-1:-1:-1;;;;;5511:11:20;469:3362:9;5511:211:20;;;;;;;5019:1;5511:211;;;5465:618;5095:988;;5511:211;;;;;;;;;;;;:::i;:::-;;;;;:::i;469:3362:9:-;;;-1:-1:-1;;;469:3362:9;;;;;;5465:618:20;5795:11;-1:-1:-1;;;;;5795:11:20;469:3362:9;;;;;;5763:55:20;;;;-1:-1:-1;;;5763:55:20;;;;;;469:3362:9;5763:55:20;;774:42:21;;;;;;-1:-1:-1;;;;;774:42:21;;;469:3362:9;;;;774:42:21;469:3362:9;774:42:21;5763:55:20;;;;;;;;;;;5465:618;6029:15;5019:1;6029:15;469:3362:9;6029:15:20;;;469:3362:9;;;;5839:228:20;469:3362:9;;;;;;;;5839:228:20;;;;;;;-1:-1:-1;;;5839:228:20;;5996:10;5839:228;469:3362:9;5839:228:20;;;:::i;:::-;;;;;;;;;;5019:1;5839:228;;;5465:618;5095:988;;469:3362:9;;;-1:-1:-1;;;469:3362:9;;;;;;5763:55:20;;;469:3362:9;5763:55:20;;;;;;;;;:::i;:::-;;;;469:3362:9;;774:42:21;469:3362:9;;774:42:21;;;;5099:45:20;;;;;5049:18;;;469:3362:9;5049:18:20;;;;;;;;;469:3362:9;5049:18:20;;;:::i;:::-;;;469:3362:9;;;;;;;:::i;:::-;5049:18:20;;;469:3362:9;;;;5049:18:20;;;-1:-1:-1;5049:18:20;;;469:3362:9;;774:42:21;469:3362:9;;774:42:21;;;;5024:54:20;;;;4971:18;;;469:3362:9;4971:18:20;;;;;;;;;469:3362:9;4971:18:20;;;:::i;:::-;;;469:3362:9;;;;;;;:::i;:::-;4971:18:20;;;;;;-1:-1:-1;4971:18:20;;4947:52;;;;4695:28;;6124:8;4695:28;6112:10;6124:8;:::i;:::-;469:3362:9;;;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;-1:-1:-1;;;;;469:3362:9;;:::i;:::-;1500:62:0;;:::i;:::-;469:3362:9;2627:22:0;;2623:91;;-1:-1:-1;;;;;3004:6:0;469:3362:9;;-1:-1:-1;;469:3362:9;;;3004:6:0;469:3362:9;;3052:40:0;;;;469:3362:9;;2623:91:0;469:3362:9;2672:31:0;;;;469:3362:9;;;2672:31:0;469:3362:9;;;;;;;-1:-1:-1;;469:3362:9;;;;;;:::i;:::-;;;-1:-1:-1;;;;;469:3362:9;;;;;;6233:18:20;469:3362:9;;6225:51:20;469:3362:9;;;;;;6225:51:20;:::i;:::-;469:3362:9;;-1:-1:-1;;;6287:61:20;;6314:10;469:3362:9;6287:61:20;;469:3362:9;6334:4:20;469:3362:9;;;;;;;;;;;;;;;;;;;6334:4:20;;6287:61;;;;;;;6366:40;6287:61;6366:40;6287:61;;;469:3362:9;;;;6314:10:20;;;;6366:40;;774:42:21;;;;;;-1:-1:-1;;;;;774:42:21;;;469:3362:9;;;;774:42:21;469:3362:9;774:42:21;6366:40:20;;;;469:3362:9;;6287:61:20;;;469:3362:9;6287:61:20;469:3362:9;6287:61:20;;;;;;;:::i;:::-;;;;469:3362:9;;774:42:21;469:3362:9;;774:42:21;;;;469:3362:9;;;;;;;-1:-1:-1;;469:3362:9;;;;-1:-1:-1;;;;;469:3362:9;;;:::i;:::-;;;;;:::i;:::-;;;;;3657:11:2;469:3362:9;;;3657:27:2;469:3362:9;-1:-1:-1;469:3362:9;;;;;-1:-1:-1;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3274:8:9;469:3362;;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;774:42:21;3738:26:9;;469:3362;3747:8;469:3362;3747:8;-1:-1:-1;;;;;3747:8:9;469:3362;3738:26;;;;;;;;;;469:3362;-1:-1:-1;;;;;469:3362:9;;;3724:10;:40;469:3362;;;;;;;;;;;;;2771:15;469:3362;;2724:15;;2795:3;2767:26;;;;;;2771:15;469:3362;;;;;;;;;;;;;;;;;;;;;;;;;;2818:28;;2814:104;;469:3362;;2755:10;;2814:104;2866:14;;;;;;;469:3362;2750:178;469:3362;;;;;;;;;;;1678:48;1674:183;;2750:178;469:3362;;;;;;;;;1871:44;1867:266;;2750:178;469:3362;;;;;;;;2162:27;2147:42;2143:262;;2750:178;469:3362;;;2420:19;469:3362;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2420:19;;;469:3362;;2143:262;2281:9;;469:3362;;;2253:89;;469:3362;;;;;;;;;;2253:89;;469:3362;:::i;:::-;;;;;;;;;;;;2420:19;2253:89;-1:-1:-1;;;;;469:3362:9;2384:9;2253:89;469:3362;;2253:89;;469:3362;2253:89;;469:3362;;;;:::i;:::-;;;2384:9;:::i;:::-;2143:262;;;;;;;469:3362;;;;;;;-1:-1:-1;;;469:3362:9;;;;;;1867:266;2007:9;;;;469:3362;;;1979:89;;469:3362;;;;;;;;1979:89;;469:3362;;;;;;;;;-1:-1:-1;;;;;1979:89:9;469:3362;1979:89;469:3362;1979:89;;;;;469:3362;;;;;:::i;:::-;;;;:::i;:::-;;;;;983:18:21;469:3362:9;;975:54:21;469:3362:9;;;;;;975:54:21;:::i;:::-;469:3362:9;;;;774:42:21;1390:22;;;1047:13;1083:3;469:3362:9;;1062:19:21;;;;;-1:-1:-1;;;;;1121:11:21;;;;:::i;:::-;469:3362:9;;1166:19:21;;;:::i;:::-;1206:13;;1202:27;;469:3362:9;;;;;;;:::i;:::-;1284:1:21;469:3362:9;;;;;;;;774:42:21;1313:21;;:52;;;;469:3362:9;;-1:-1:-1;;;1337:18:21;;469:3362:9;1337:11:21;469:3362:9;1337:11:21;-1:-1:-1;;;;;1337:11:21;469:3362:9;1337:18:21;;;;;;;;;;;1313:52;;;-1:-1:-1;;;;;1303:62:21;;;:::i;:::-;469:3362:9;;;;1390:54:21;;;;469:3362:9;;-1:-1:-1;;;1415:18:21;;469:3362:9;1415:11:21;469:3362:9;1415:11:21;-1:-1:-1;;;;;1415:11:21;469:3362:9;1415:18:21;;;;;;;;;;;1390:54;;;-1:-1:-1;;;;;1380:64:21;;;:::i;:::-;469:3362:9;;;;1465:19:21;;;;;1505:8;;;;469:3362:9;1505:8:21;1047:13;469:3362:9;1047:13:21;;1461:1071;1535:997;;;1757:15;469:3362:9;1757:15:21;469:3362:9;1757:15:21;;;469:3362:9;;;;;;1581:214:21;469:3362:9;;;1581:214:21;;;;;;-1:-1:-1;;;1581:214:21;;1729:4;1581:214;469:3362:9;1581:214:21;;;:::i;:::-;;:11;-1:-1:-1;;;;;1581:11:21;469:3362:9;1581:214:21;;;;;;;469:3362:9;1581:214:21;;;;1535:997;;1083:3;;1581:214;;;;;;;;;;;;:::i;:::-;;;;;;469:3362:9;;774:42:21;469:3362:9;;774:42:21;;;;469:3362:9;;;-1:-1:-1;;;469:3362:9;;;;;;1535:997:21;1817:715;;;;;469:3362:9;;-1:-1:-1;;;1864:55:21;;-1:-1:-1;;;;;1896:11:21;469:3362:9;;1864:55:21;;469:3362:9;;;774:42:21;;;469:3362:9;;;;;;;;774:42:21;;469:3362:9;;;;1864:55:21;;;;;;;;1817:715;2130:15;469:3362:9;2130:15:21;469:3362:9;2130:15:21;;;469:3362:9;;;;1940:228:21;469:3362:9;;;;;;;1940:228:21;;;;;;;-1:-1:-1;;;1940:228:21;;2102:4;1940:228;469:3362:9;1940:228:21;;;:::i;:::-;;;;;;;;;;469:3362:9;1940:228:21;;;;1817:715;1083:3;;469:3362:9;;;-1:-1:-1;;;469:3362:9;;;;;;1864:55:21;;;469:3362:9;1864:55:21;;;;;;;;;:::i;:::-;;;;469:3362:9;;774:42:21;469:3362:9;;774:42:21;;;;1817:715;469:3362:9;;-1:-1:-1;;;2209:55:21;;-1:-1:-1;;;;;2241:11:21;469:3362:9;;2209:55:21;;469:3362:9;;;774:42:21;;;469:3362:9;;;;;;;;774:42:21;;469:3362:9;;;;2209:55:21;;;;;;;;1817:715;2478:15;469:3362:9;2478:15:21;469:3362:9;2478:15:21;;;469:3362:9;;;;2285:231:21;469:3362:9;;;;;;;2285:231:21;;;;;;;-1:-1:-1;;;2285:231:21;;2450:4;2285:231;469:3362:9;2285:231:21;;;:::i;2209:55::-;;;469:3362:9;2209:55:21;;;;;;;;;:::i;:::-;;;1415:18;;;469:3362:9;1415:18:21;;;;;;;;;469:3362:9;1415:18:21;;;:::i;:::-;;;469:3362:9;;;;;;;:::i;:::-;1415:18:21;;;469:3362:9;;;;1415:18:21;;;-1:-1:-1;1415:18:21;;;469:3362:9;;774:42:21;469:3362:9;;774:42:21;;;;1390:54;;;;1337:18;;;469:3362:9;1337:18:21;;;;;;;;;469:3362:9;1337:18:21;;;:::i;:::-;;;469:3362:9;;;;;;;:::i;:::-;1337:18:21;;;;;;-1:-1:-1;1337:18:21;;1313:52;;;;1202:27;1221:8;;469:3362:9;1221:8:21;;;1062:19;;;;;;;;;;1867:266:9;;469:3362;;;;;;;;1674:183;1778:9;1767:34;1778:9;;469:3362;;;;1767:34;;;;;;:::i;:::-;469:3362;;4552:17:21;469:3362:9;4532:44:21;469:3362:9;;4608:22:21;;;4683:3;469:3362:9;;4661:20:21;;;;;4703:26;469:3362:9;4717:12:21;;;;;:::i;:::-;469:3362:9;4703:26:21;;:::i;:::-;4683:3;469:3362:9;4646:13:21;;;4661:20;731:6;4661:20;;;;4761:21;731:6;;469:3362:9;;731:6:21;469:3362:9;731:6:21;;;;;;;;;4817:23;469:3362:9;731:6:21;4817:23;731:6;;;;;;4641:100;469:3362:9;;;4817:23:21;469:3362:9;;731:6:21;;;;;;;1674:183:9;;;;;731:6:21;469:3362:9;;;;;731:6:21;;;;469:3362:9;731:6:21;;;;;;469:3362:9;731:6:21;;469:3362:9;731:6:21;;;;;;;;;;;469:3362:9;;;;731:6:21;;;;469:3362:9;;-1:-1:-1;;;469:3362:9;;;;;;731:6:21;;469:3362:9;;-1:-1:-1;;;731:6:21;;469:3362:9;;731:6:21;;;;469:3362:9;731:6:21;;469:3362:9;731:6:21;469:3362:9;;;731:6:21;;469:3362:9;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:3362:9;;;;;;2767:26;;;;;;;;;;469:3362;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;3738:26;;469:3362;3738:26;;469:3362;3738:26;;;;;;469:3362;3738:26;;;:::i;:::-;;;469:3362;;;;;-1:-1:-1;;;;;469:3362:9;;:::i;:::-;3738:26;;;;;-1:-1:-1;3738:26:9;;469:3362;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;469:3362:9;;;;;;8129:18:20;469:3362:9;;;;;;;;;;8184:17:20;469:3362:9;;;;;;;;;;;;;;8184:17:20;469:3362:9;;:::i;:::-;;;;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;;;;;;;;;;8224:11:20;469:3362:9;;;;;;;;;;;;;8224:11:20;469:3362:9;;:::i;:::-;;;;;;;;;;;;10599:17:2;;;469:3362:9;;;;;;;;;;;8129:18:20;469:3362:9;;;;;;;-1:-1:-1;;469:3362:9;;;;;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:9;;-1:-1:-1;;469:3362:9;;;;;;774:42:21;469:3362:9;;6502:18:20;469:3362:9;;6494:60:20;469:3362:9;;;;;;6494:60:20;:::i;:::-;6565:52;6573:9;;:19;6565:52;:::i;:::-;469:3362:9;;;774:42:21;469:3362:9;;;774:42:21;;469:3362:9;6635:45:20;469:3362:9;6649:10:20;6635:45;;469:3362:9;;;;;;;;;;;;;;;;;;;;7003:17:20;469:3362:9;;;;;;;7003:17:20;469:3362:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;3459:5:2;469:3362:9;;:::i;:::-;;;735:10:5;;3459:5:2;:::i;:::-;469:3362:9;;;;;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;;;4459:39:20;4467:12;;;4459:39;:::i;:::-;774:42:21;469:3362:9;;4517:18:20;469:3362:9;;4509:54:20;469:3362:9;;;;;;4509:54:20;:::i;:::-;2927:12:2;469:3362:9;4630:15:20;4622:40;4630:15;;;4622:40;:::i;:::-;469:3362:9;;;5049:11:20;-1:-1:-1;;;;;469:3362:9;4680:13:20;;4725:3;4699:17;469:3362:9;4695:28:20;;;;;-1:-1:-1;;;;;4763:20:20;;;:::i;:::-;469:3362:9;;;;;;;4817:46:20;4818:19;:30;:19;;;;:::i;4817:46::-;469:3362:9;;;;;;;:::i;:::-;2927:12:2;469:3362:9;;;;;;;;774:42:21;4947:21:20;;:52;;;;469:3362:9;;-1:-1:-1;;;4971:18:20;;469:3362:9;4971:18:20;469:3362:9;4971:18:20;;;;;;;;;;;;;4947:52;;;-1:-1:-1;;;;;4937:62:20;;;:::i;:::-;469:3362:9;;;;;;-1:-1:-1;;;5049:18:20;;469:3362:9;5049:18:20;469:3362:9;5049:18:20;;;;;;;;;;;;;4947:52;5024:54;-1:-1:-1;;;;;5014:64:20;;;:::i;:::-;469:3362:9;;;;5099:45:20;;;;4947:52;5095:988;;;5193:10;;;;;;5019:1;5193:10;5291:40;5193:10;;5185:85;;;;:::i;5291:40::-;469:3362:9;4680:13:20;;;;5095:988;5353:730;;;;;;-1:-1:-1;469:3362:9;;-1:-1:-1;;;5397:46:20;;5422:10;469:3362:9;5397:46:20;;469:3362:9;774:42:21;;;469:3362:9;;;;;;;;;774:42:21;;469:3362:9;;;5397:46:20;;;;;;;5019:1;5397:46;;;5353:730;;5095:988;;5397:46;;;469:3362:9;5397:46:20;;;;;;;;;:::i;:::-;;;;;5353:730;469:3362:9;;-1:-1:-1;;;5763:55:20;;-1:-1:-1;;;;;469:3362:9;;;5763:55:20;;469:3362:9;774:42:21;;;469:3362:9;;;5465:618:20;;-1:-1:-1;469:3362:9;;;;;;774:42:21;;469:3362:9;;5763:55:20;;;;;;;;;;5353:730;6029:15;5019:1;6029:15;469:3362:9;6029:15:20;;;469:3362:9;;;;;;5839:228:20;469:3362:9;;5839:228:20;;;;;-1:-1:-1;;;5839:228:20;;5996:10;5839:228;469:3362:9;5839:228:20;;;:::i;:::-;;;;;;;;;;;;5019:1;5839:228;;;5353:730;5095:988;;5839:228;;;;;;;;;;;;:::i;5763:55::-;;;469:3362:9;5763:55:20;;;;;;;;;:::i;:::-;;;5099:45;;5019:1;5099:45;;5049:18;;;469:3362:9;5049:18:20;;;;;;;;;469:3362:9;5049:18:20;;;:::i;:::-;;;469:3362:9;;;;;;;:::i;:::-;5049:18:20;;;;;;-1:-1:-1;5049:18:20;;4971;;;469:3362:9;4971:18:20;;;;;;;;;469:3362:9;4971:18:20;;;:::i;:::-;;;469:3362:9;;;;;;;:::i;:::-;4971:18:20;;;;;;-1:-1:-1;4971:18:20;;4947:52;;;;4695:28;;6124:8;4695:28;6112:10;6124:8;:::i;469:3362:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;469:3362:9;;;;;;;-1:-1:-1;469:3362:9;;-1:-1:-1;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:9;;-1:-1:-1;469:3362:9;;-1:-1:-1;469:3362:9;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;7636:14:20;469:3362:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1710:6:0;469:3362:9;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3612:8:9;469:3362;3598:10;;:22;469:3362;;;1252:11;469:3362;;;;;;;;;;1323:9;469:3362;1336:9;-1:-1:-1;469:3362:9;;1392:38;469:3362;;;;1392:38;;;;774:42:21;1392:38:9;;;;;;;;;;;;469:3362;-1:-1:-1;;;;;469:3362:9;;;;-1:-1:-1;;;;;1710:6:0;469:3362:9;;1383:102;;;;;469:3362;;1383:102;469:3362;;1383:102;;;;774:42:21;1383:102:9;;469:3362;1383:102;;469:3362;1336:9;1383:102;;;;;;;;;469:3362;;1383:102;;;;:::i;:::-;;;469:3362;;1383:102;469:3362;;;774:42:21;;;;;;;;1392:38:9;;;;;;;;;;;;;;;;:::i;:::-;;;469:3362;;;;;-1:-1:-1;;;;;469:3362:9;;:::i;:::-;1392:38;;;;;-1:-1:-1;1392:38:9;;;469:3362;;774:42:21;469:3362:9;;774:42:21;;;;469:3362:9;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;469:3362:9;-1:-1:-1;;;;;3004:6:0;469:3362:9;-1:-1:-1;;469:3362:9;;3004:6:0;469:3362:9;;3052:40:0;;;;469:3362:9;;;;;;;;;-1:-1:-1;;469:3362:9;;;;;;;-1:-1:-1;;;;;469:3362:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;-1:-1:-1;;;;;469:3362:9;;:::i;:::-;1500:62:0;;:::i;:::-;469:3362:9;;;;8391:18:20;469:3362:9;;;;;;;;;;;;;-1:-1:-1;;;8469:38:20;;8501:4;469:3362:9;8469:38:20;;469:3362:9;;8469:38:20;;;;;;;;;;;;;;;469:3362:9;8469:43:20;469:3362:9;;8574:13:20;8619:3;8593:17;469:3362:9;8589:28:20;;;;;;8643:20;-1:-1:-1;;;;;8643:20:20;;;:::i;:::-;469:3362:9;;;;;;;8643:29:20;8639:405;;8619:3;469:3362:9;;8574:13:20;;8639:405;-1:-1:-1;;469:3362:9;;;;;;;-1:-1:-1;;;;;8716:87:20;8693:110;8716:87;;:::i;:::-;469:3362:9;;;;;;;8693:20:20;;;:::i;:110::-;8593:17;469:3362:9;;;;;-1:-1:-1;;469:3362:9;;;;:::i;:::-;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;8593:17:20;469:3362:9;8881:11:20;469:3362:9;10599:17:2;;469:3362:9;;;;;;;8881:35:20;8864:14;8881:35;8864:52;8881:35;;:::i;:::-;469:3362:9;;;;;;8864:14:20;;:::i;:::-;:52;469:3362:9;;;;;;;;;;10599:17:2;;;469:3362:9;;;;;;;;8864:52:20;8881:11;469:3362:9;;;;;-1:-1:-1;;469:3362:9;;;;:::i;:::-;;;10599:17:2;;;469:3362:9;;;;;;;;8881:11:20;469:3362:9;;;8391:18:20;469:3362:9;;;;;;;;;;;;;;;8469:38:20;469:3362:9;-1:-1:-1;;;469:3362:9;;;;;;;8469:38:20;469:3362:9;-1:-1:-1;;;469:3362:9;;;;;;;8469:38:20;469:3362:9;-1:-1:-1;;;469:3362:9;;;;;;8589:28:20;;;;469:3362:9;;;;;;-1:-1:-1;;;469:3362:9;;;;;;;;8469:38:20;469:3362:9;;;;;;;;;8469:38:20;;;469:3362:9;8469:38:20;;469:3362:9;8469:38:20;;;;;;469:3362:9;8469:38:20;;;:::i;:::-;;;469:3362:9;;;;;8469:38:20;;;;;;-1:-1:-1;8469:38:20;;;469:3362:9;;774:42:21;469:3362:9;;774:42:21;;;;469:3362:9;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:9;;-1:-1:-1;;469:3362:9;;;;;;1500:62:0;;:::i;:::-;2729:52:20;2737:9;;:19;2729:52;:::i;:::-;774:42:21;469:3362:9;;2800:18:20;469:3362:9;;2792:60:20;469:3362:9;;;;;;2792:60:20;:::i;:::-;469:3362:9;;-1:-1:-1;;;2887:42:20;;469:3362:9;2896:8:20;469:3362:9;2896:8:20;-1:-1:-1;;;;;2896:8:20;469:3362:9;2887:42:20;;;;;;;;;;;469:3362:9;;;-1:-1:-1;;;;;469:3362:9;2962:100:20;469:3362:9;;2962:100:20;;;;-1:-1:-1;;;2962:100:20;;;469:3362:9;2962:100:20;;469:3362:9;774:42:21;469:3362:9;;;;;2962:100:20;;;;;;;;;;469:3362:9;3217:9:20;469:3362:9;;3075:111:20;3110:14;469:3362:9;3097:27:20;;;3075:111;:::i;:::-;3205:10;3217:9;:::i;:::-;469:3362:9;;;774:42:21;469:3362:9;;;774:42:21;;469:3362:9;3245:47:20;469:3362:9;3205:10:20;3245:47;;469:3362:9;;2962:100:20;;469:3362:9;2962:100:20;;469:3362:9;2962:100:20;;;;;;469:3362:9;2962:100:20;;;:::i;:::-;;;469:3362:9;;;;3217:9:20;469:3362:9;;2962:100:20;;;;;-1:-1:-1;2962:100:20;;2887:42;;;469:3362:9;2887:42:20;;469:3362:9;2887:42:20;;;;;;469:3362:9;2887:42:20;;;:::i;:::-;;;469:3362:9;;;;;;-1:-1:-1;;;;;469:3362:9;;:::i;:::-;2887:42:20;;;;;;;-1:-1:-1;2887:42:20;;469:3362:9;;;;;;;;;;;;;;3376:9;469:3362;;;;;;;;;;;;;;;;;;;;;;;;;7522:11:20;469:3362:9;;;;;;;7522:11:20;469:3362:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;;;:::i;:::-;;;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;469:3362:9;;;;;2081:18:20;469:3362:9;;2073:55:20;469:3362:9;;;;;;2073:55:20;:::i;:::-;469:3362:9;;2163:42:20;-1:-1:-1;;;2163:42:20;;469:3362:9;2172:8:20;469:3362:9;2172:8:20;-1:-1:-1;;;;;2172:8:20;469:3362:9;2163:42:20;;;;;;;;;;;469:3362:9;;;-1:-1:-1;;;;;469:3362:9;2236:95:20;469:3362:9;;2236:95:20;;;;-1:-1:-1;;;2236:95:20;;;469:3362:9;2236:95:20;;469:3362:9;;;;;;;2236:95:20;;;;;;;;;;;469:3362:9;;2344:111:20;2379:14;469:3362:9;2366:27:20;;;2344:111;:::i;:::-;469:3362:9;;-1:-1:-1;;;2468:61:20;;2495:10;469:3362:9;2468:61:20;;469:3362:9;2515:4:20;469:3362:9;;;;;;;;;;;;;;;;;;;2515:4:20;;2468:61;;;;;;2588:42;2468:61;2588:42;2468:61;2560:9;2468:61;;;469:3362:9;2495:10:20;;2560:9;:::i;:::-;469:3362:9;;2495:10:20;;;;2588:42;;774::21;;;;;;-1:-1:-1;;;;;774:42:21;;;469:3362:9;;;;774:42:21;469:3362:9;774:42:21;2468:61:20;;;469:3362:9;2468:61:20;469:3362:9;2468:61:20;;;;;;;:::i;:::-;;;;469:3362:9;;774:42:21;469:3362:9;;774:42:21;;;;2236:95:20;;;;469:3362:9;2236:95:20;;469:3362:9;2236:95:20;;;;;;469:3362:9;2236:95:20;;;:::i;:::-;;;469:3362:9;;;;;2236:95:20;;;;;;;-1:-1:-1;2236:95:20;;2163:42;;;469:3362:9;2163:42:20;;469:3362:9;2163:42:20;;;;;;469:3362:9;2163:42:20;;;:::i;:::-;;;469:3362:9;;;;;;-1:-1:-1;;;;;469:3362:9;;:::i;:::-;2163:42:20;;;;;;;-1:-1:-1;2163:42:20;;469:3362:9;;;;;;;;;;;;;;;;2780:2:2;469:3362:9;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;;;3373:39:20;3381:12;;;3373:39;:::i;:::-;2927:12:2;469:3362:9;3479:15:20;3471:40;3479:15;;;3471:40;:::i;:::-;3529:13;;3574:3;3548:17;469:3362:9;3544:28:20;;;;;-1:-1:-1;;;;;3613:20:20;;;:::i;:::-;469:3362:9;;;;;;;3668:47:20;3669:20;:31;:20;;;;:::i;3668:47::-;3736:22;774:42:21;3736:22:20;;774:42:21;;3807:10:20;;;;469:3362:9;3807:10:20;3906:40;3807:10;;3799:86;;;;:::i;3906:40::-;469:3362:9;3529:13:20;;;;3732:319;469:3362:9;;-1:-1:-1;;;3987:48:20;;4013:10;469:3362:9;3987:48:20;;469:3362:9;774:42:21;;;469:3362:9;;;;;;;;;;774:42:21;;469:3362:9;;;3987:48:20;;;;;;;469:3362:9;3987:48:20;;;3732:319;;;;3987:48;;;469:3362:9;3987:48:20;;;;;;;;;:::i;:::-;;;;;3544:28;;4092:8;3544:28;4080:10;4092:8;:::i;469:3362:9:-;;;;;;;;;;;;;;;;;7813:15:20;469:3362:9;;;;;;;;;7813:15:20;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;7813:15:20;469:3362:9;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;7813:15:20;469:3362:9;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;;-1:-1:-1;;;;;735:10:5;469:3362:9;;;;;;;;;10599:17:2;;;10580:36;;10576:309;;469:3362:9;4986:5:2;;;;;;:::i;10576:309::-;10636:24;;;10632:130;;9813:19;;9809:89;;735:10:5;9911:21:2;9907:90;;469:3362:9;;;;4986:5:2;469:3362:9;;;;;;;;-1:-1:-1;;;;;735:10:5;469:3362:9;;;;;;;;;;10576:309:2;;;;9907:90;469:3362:9;9955:31:2;-1:-1:-1;;;9955:31:2;;469:3362:9;;;9955:31:2;9809:89;469:3362:9;9855:32:2;-1:-1:-1;;;9855:32:2;;469:3362:9;;;9855:32:2;10632:130;469:3362:9;10687:60:2;;;;;;735:10:5;469:3362:9;;;;;;10687:60:2;469:3362:9;;;;;;;;;;;;;;2927:12:2;469:3362:9;;;;;;;;;;;;;;-1:-1:-1;;469:3362:9;;;;;;:::i;:::-;;;735:10:5;;9813:19:2;9809:89;;-1:-1:-1;;;;;469:3362:9;9911:21:2;;;9907:90;;469:3362:9;735:10:5;;;469:3362:9;;;;;;;;;;;;;;;;;;;;10085:31:2;469:3362:9;735:10:5;10085:31:2;;469:3362:9;;;;;;;9907:90:2;9955:31;-1:-1:-1;;;469:3362:9;9955:31:2;;469:3362:9;;;9955:31:2;9809:89;469:3362:9;9855:32:2;-1:-1:-1;;;9855:32:2;;469:3362:9;;;9855:32:2;469:3362:9;;;;;;;;;;;;;;;;;1856:5:2;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1856:5:2;469:3362:9;;;;;-1:-1:-1;469:3362:9;;;;;;;-1:-1:-1;469:3362:9;;-1:-1:-1;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7224:17:20;469:3362:9;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;469:3362:9;;;:::i;:::-;;;;;;;7280:28:20;;;;;;469:3362:9;;;;;;;:::i;7310:3:20:-;7355:20;7344:32;-1:-1:-1;;;;;7355:20:20;469:3362:9;7355:20:20;;:::i;:::-;469:3362:9;;;;;;;7344:32:20;:::i;:::-;7330:46;;;;:::i;:::-;469:3362:9;;7265:13:20;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;469:3362:9;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;469:3362:9;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;;;;469:3362:9;;;;;-1:-1:-1;469:3362:9;;;;;;;;;;;;;;;-1:-1:-1;469:3362:9;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;469:3362:9;;;;;-1:-1:-1;469:3362:9;;;;;;;;;-1:-1:-1;;469:3362:9;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;7224:17:20;469:3362:9;;;;;;7224:17:20;-1:-1:-1;469:3362:9;;-1:-1:-1;469:3362:9;;;-1:-1:-1;469:3362:9;:::o;:::-;-1:-1:-1;;;469:3362:9;;;;;;;;;8881:11:20;469:3362:9;;;;;;8881:11:20;-1:-1:-1;469:3362:9;;-1:-1:-1;469:3362:9;;;-1:-1:-1;469:3362:9;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;469:3362:9;;;;;;;;774:42:21;;;;;;;;;;469:3362:9;;;774:42:21;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;469:3362:9;;;;;;;:::i;:::-;774:42:21;;;-1:-1:-1;774:42:21;;;;:::o;:::-;469:3362:9;774:42:21;:::o;:::-;;;;:::o;:::-;;469:3362:9;;-1:-1:-1;;;774:42:21;;;;;;;;;;;469:3362:9;774:42:21;469:3362:9;;;774:42:21;;469:3362:9;;;;:::o;:::-;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;469:3362:9;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;469:3362:9;;;;;;;;;;;;;;;;;;4856:224:21;-1:-1:-1;;;;;;;469:3362:9;774:42:21;4954:19;;774:42;;4993:21;;;4856:224;:::o;4954:118::-;469:3362:9;5034:38:21;469:3362:9;;;5034:38:21;;;;-1:-1:-1;;;5034:38:21;;5066:4;5034:38;;;469:3362:9;5034:38:21;;;;;;;;;;;4954:118;;4856:224;:::o;5034:38::-;;;;469:3362:9;5034:38:21;;469:3362:9;5034:38:21;;;;;;469:3362:9;5034:38:21;;;:::i;:::-;;;469:3362:9;;;;;;4856:224:21;:::o;5034:38::-;;;-1:-1:-1;5034:38:21;;;469:3362:9;;774:42:21;;;;;;;;5393:300:2;-1:-1:-1;;;;;469:3362:9;5476:18:2;;;5472:86;;-1:-1:-1;;;;;469:3362:9;5571:16:2;;;5567:86;;5492:1;469:3362:9;;;;;;;;;;6340:19:2;;;6336:115;;469:3362:9;;;;7083:25:2;469:3362:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:25:2;5393:300::o;6336:115::-;469:3362:9;6386:50:2;-1:-1:-1;;;6386:50:2;;;;;469:3362:9;;;;;6386:50:2;5567:86;5610:32;5492:1;5610:32;5492:1;5610:32;469:3362:9;;5492:1:2;5610:32;5472:86;5517:30;5492:1;5517:30;5492:1;5517:30;469:3362:9;;5492:1:2;5517:30;7984:206;-1:-1:-1;;;;;469:3362:9;8054:21:2;;8050:89;;8073:1;469:3362:9;;;;;;;;;;;6340:19:2;;;6336:115;;469:3362:9;7083:25:2;469:3362:9;;;;;;;;;;;;;;;6810:21:2;469:3362:9;;6810:21:2;469:3362:9;;;;;;7083:25:2;7984:206::o;6336:115::-;6386:50;;-1:-1:-1;;;469:3362:9;6386:50:2;;;469:3362:9;;;;;6386:50:2;1796:162:0;-1:-1:-1;;;;;1710:6:0;469:3362:9;;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;-1:-1:-1;1901:40:0;735:10:5;1901:40:0;469:3362:9;;-1:-1:-1;1901:40:0;7458:208:2;-1:-1:-1;;;;;469:3362:9;7528:21:2;;;7524:91;;6233:21;469:3362:9;6233:21:2;469:3362:9;6233:21:2;:::i;:::-;;469:3362:9;7083:25:2;469:3362:9;7547:1:2;469:3362:9;;;;;;;;;;;;;;;;;;;;;7083:25:2;7458:208::o;469:3362:9:-;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;469:3362:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;2558:1883:21:-;;-1:-1:-1;;;;;469:3362:9;;;-1:-1:-1;469:3362:9;2652:18:21;469:3362:9;;2644:53:21;469:3362:9;;-1:-1:-1;469:3362:9;;;2644:53:21;:::i;:::-;774:42;2730:21;;;-1:-1:-1;2730:114:21;;;;2767:21;;2730:114;2861:14;;2857:27;;469:3362:9;;;;;2916:28:21;;;:::i;:::-;2963:13;469:3362:9;;;;;-1:-1:-1;3000:3:21;469:3362:9;;2978:20:21;;;;;-1:-1:-1;;;;;3039:12:21;;;;:::i;:::-;469:3362:9;;;;-1:-1:-1;469:3362:9;2652:18:21;469:3362:9;;3066:54:21;469:3362:9;;-1:-1:-1;469:3362:9;;;3066:54:21;:::i;:::-;469:3362:9;;;;;;;:::i;:::-;3175:1:21;469:3362:9;;;;;;;;3204:52:21;;;;469:3362:9;;-1:-1:-1;;;3228:18:21;;469:3362:9;3228:11:21;:18;:11;-1:-1:-1;;;;;3228:11:21;469:3362:9;3228:18:21;;;;;;;-1:-1:-1;3228:18:21;;;3204:52;;;-1:-1:-1;;;;;3194:62:21;;;:::i;:::-;469:3362:9;;;;774:42:21;3281:22;;;:54;;;;469:3362:9;;-1:-1:-1;;;3306:18:21;;469:3362:9;3306:11:21;:18;:11;-1:-1:-1;;;;;3306:11:21;469:3362:9;3306:18:21;;;;;;;-1:-1:-1;3306:18:21;;;3281:54;;;-1:-1:-1;;;;;3271:64:21;;;:::i;:::-;469:3362:9;;;;3356:19:21;;;;3396:8;3276:1;3396:8;;2963:13;469:3362:9;2963:13:21;;3352:1071;3426:997;;;;3648:15;3276:1;3648:15;469:3362:9;3648:15:21;;;469:3362:9;;;3472:214:21;469:3362:9;-1:-1:-1;469:3362:9;;;3472:214:21;;;;;-1:-1:-1;;;3472:214:21;;3620:4;3472:214;;;;;:::i;:::-;;:11;;-1:-1:-1;;;;;3472:11:21;469:3362:9;3472:214:21;;;;;;;3276:1;3472:214;;;3426:997;;3000:3;;3472:214;;;;;-1:-1:-1;3472:214:21;;;;;;:::i;:::-;;;;;;469:3362:9;;774:42:21;-1:-1:-1;774:42:21;;;;;3426:997;3708:715;;;469:3362:9;;-1:-1:-1;;;3755:55:21;;-1:-1:-1;;;;;3787:11:21;469:3362:9;3755:55:21;;;469:3362:9;;;774:42:21;;;469:3362:9;;;;;;;774:42:21;469:3362:9;-1:-1:-1;3755:55:21;;;;;;;;;3708:715;4021:15;3276:1;4021:15;469:3362:9;4021:15:21;;469:3362:9;;;3831:228:21;469:3362:9;;-1:-1:-1;469:3362:9;;;;3831:228:21;;;;;;;-1:-1:-1;;;3831:228:21;;3993:4;3831:228;3755:55;3831:228;;;:::i;:::-;;;;;;;;;;3276:1;3831:228;;;3708:715;3000:3;;3755:55;;;469:3362:9;3755:55:21;;;;;;;;;:::i;:::-;;;3708:715;469:3362:9;;-1:-1:-1;;;4100:55:21;;-1:-1:-1;;;;;4132:11:21;469:3362:9;4100:55:21;;;469:3362:9;;;774:42:21;;;469:3362:9;;;;;;;774:42:21;469:3362:9;-1:-1:-1;4100:55:21;;;;;;;;;3708:715;4369:15;3276:1;4369:15;469:3362:9;4369:15:21;;469:3362:9;;;4176:231:21;469:3362:9;;-1:-1:-1;469:3362:9;;;;4176:231:21;;;;;;;-1:-1:-1;;;4176:231:21;;4341:4;4176:231;4100:55;4176:231;;;:::i;4100:55::-;;;469:3362:9;4100:55:21;;;;;;;;;:::i;:::-;;;3306:18;;469:3362:9;3306:18:21;;;;;;;;;469:3362:9;3306:18:21;;;:::i;:::-;;;469:3362:9;;;;;;;;:::i;:::-;3306:18:21;;;;;;-1:-1:-1;3306:18:21;;3281:54;;;;3228:18;;469:3362:9;3228:18:21;;;;;;;;;469:3362:9;3228:18:21;;;:::i;:::-;;;469:3362:9;;;;;;;;:::i;:::-;3228:18:21;;;;;;-1:-1:-1;3228:18:21;;3204:52;;;;2978:20;;;;;;;;;;2558:1883::o;2857:27::-;2877:7;;;;;;:::o;2730:114::-;469:3362:9;;-1:-1:-1;;;2804:40:21;;2838:4;2804:40;;;469:3362:9;;2804:40:21;;;;;;;;;;;;;;;2730:114;;;;;2804:40;;;;469:3362:9;2804:40:21;;469:3362:9;2804:40:21;;;;;;469:3362:9;2804:40:21;;;:::i;:::-;;;469:3362:9;;;;;;2804:40:21;;;;;;;-1:-1:-1;2804:40:21;"
            },
            "methodIdentifiers": {
              "addToken(address,uint256)": "af81c5b9",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "creator()": "02d05d3f",
              "decimals()": "313ce567",
              "deposit(address,uint256)": "47e7ef24",
              "depositETH(uint256)": "5358fbda",
              "donate(address,uint256)": "e69d849d",
              "donateETH(uint256)": "ab83f98a",
              "executeCall((uint8,bytes))": "b317650b",
              "factory()": "c45a0155",
              "getAllowedActions()": "2494452d",
              "getBalances()": "00113e08",
              "getDepositUsdMin()": "8e4e9018",
              "getForkCost()": "531bcdb3",
              "getSplitRatio()": "4eadcca8",
              "getTokens()": "aa6ca808",
              "name()": "06fdde03",
              "onFork()": "8769b449",
              "owner()": "8da5cb5b",
              "removeToken(address)": "5fa7b584",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "withdraw(uint256)": "2e1a7d4d",
              "withdrawSingle(address,uint256)": "f9c4d3db",
              "withdrawSingleETH(uint256)": "a216aa06"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"},{\"internalType\":\"enum Enums.Visibility\",\"name\":\"visibility_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositUsdMin_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forkCost_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"initialTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"initialSplitRatio_\",\"type\":\"uint256[]\"},{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"allowedActions_\",\"type\":\"uint8[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"enum Enums.ActionCall\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Params.ExecuteCall\",\"name\":\"call\",\"type\":\"tuple\"}],\"name\":\"ExecuteCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDonated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donateETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum Enums.ActionCall\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Params.ExecuteCall\",\"name\":\"call\",\"type\":\"tuple\"}],\"name\":\"executeCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedActions\",\"outputs\":[{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositUsdMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getForkCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSplitRatio\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onFork\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSingle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSingleETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Strategy.sol\":\"Strategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/Strategy.sol\":{\"keccak256\":\"0x43d05e351ea33b6ee91d8d28183f04bbe9292f11caa46ef8e689cfbe217e2066\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://470643593f556f57329fdd67190276152ca0cf5a839c4a8f9034221293468ca4\",\"dweb:/ipfs/QmWsEnSjXv9NKa7QoUCXD4WRTZ4LSPU6jP2wAwahmZXjis\"]},\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0xdafda8f5f34be55f0f031adbe18eb4d11a8a6ea1ad2bcd3e67d0e76d11d9530f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a1298e140a1bf2cdc2b0f53c663fd71f010718822a547298435bf49b072693ef\",\"dweb:/ipfs/QmXzbUAgNmRWTtUNT6toQbrsXTS7hQonfDFATSdYRv6JR2\"]},\"contracts/interfaces/IMultiTokenPool.sol\":{\"keccak256\":\"0x82c1289792365bf675770f06d43816e00207385a368e1f004ee662582bb604bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e25dbe134fb5e13f032a5c04342d49d8d6634b32204264c4b1292903eb27b178\",\"dweb:/ipfs/QmXL6WvX7zAiSo2zHeDKJSagSRo4FB3F7DhXsppLw7kdDh\"]},\"contracts/interfaces/IPoolAdmin.sol\":{\"keccak256\":\"0x5531e78ca38f798dac44609d77e3addf1b8720966eea28b28e4e7bae9685d438\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d3f47b4ceebb0590d8454a0b35f4a5b8e0fa914294b4cb7826a5f35177a08af\",\"dweb:/ipfs/QmfWapy95rDTSjvzQkoCavk2AtUamemZvykNds4givHjar\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4252f4cc64140561f61a4d6ab1f39c540dd70099aa0f056ca0162b8683a78c95\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c644be7ada43bdc0faf1103004ad7a4bebf58f5f780e887ec14d9032b13efa59\",\"dweb:/ipfs/Qmc5Sdo5xjJEMJts7YzzUUboML46S4WEKmuSZBT8ZdZceC\"]},\"contracts/interfaces/IRevenue.sol\":{\"keccak256\":\"0xd5a46b604bec7d07fc9e71f4f6353f6e7111ec6ec943b6f3919ac9f3b76cbc7d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f588ebd6d301d2899f1a8cbcf3431ab77ee903745dcb674e6b6362da489e440e\",\"dweb:/ipfs/QmUR57AhBxPf4v8Wjmcs1v5PTTnAFvvtuH1SjDhvixENqY\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x2d3f17b9672e01c840221eeec835270f2a422452a748895c253776dc087520d7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://765b3f5dd0af55dd95ca0d821de87a42ab5009506e5b65b70b03f1e9cf547417\",\"dweb:/ipfs/QmdcVQDuwrezpLrdp4WmveJLUMa9X2WF9MKUoxGo4EG2W9\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0xa81354f3347bcca731e13bc230a4a2e68e34a1135df0295ca5513f9932a0c5d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2cab49119e9a7eb270f82e74d6b15df984c2feca48348fafde0dabdde138922e\",\"dweb:/ipfs/QmQWMZnjhv1HeBMLUtdqk6cDZe7sErkRw1kBK7ZxtH5swU\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]},\"contracts/lib/Params.sol\":{\"keccak256\":\"0xff8d2345a9a54bea3d7b8b85b10db04c88cd1ed7f945b140fc0479337095a498\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67c5fa1f1789abac9073988c1f1348cb66919b8816117e8cff43699006257a6f\",\"dweb:/ipfs/QmRME4psBXS6botgfdXwSsVW13izZ6arp2JNgC4XfcudY3\"]},\"contracts/lib/Types.sol\":{\"keccak256\":\"0xb9f0c879aa34501ba63fa88aab0713e10884f0f7cf9075a3188138ebe072dc54\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://940f96d0d58e31c3d740a380aa27d1a7215d5ad4e25d595782a99596c19cdb46\",\"dweb:/ipfs/QmcK7CtZ6CRyDNKMdbkWgcmahoXhZE7539WnDe5o9HtkUj\"]},\"contracts/pool/MultiTokenPool.sol\":{\"keccak256\":\"0x7d4a72c34f446d83009e3a71c41f4bf2e6ccf60546e65a1cf361cf8599a078f9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d1ccfe94665510565630bb3bf74f5b3ac522cbabf28d2f83e1a2348d5581ce89\",\"dweb:/ipfs/QmTQLQuraM9PVZeAqgitjugrk85MunMbLQBGeg9ogdh96n\"]},\"contracts/pool/PoolActions.sol\":{\"keccak256\":\"0x844bf7714d2b3f8149f4449353e5bd4984a8ab9ccc540de4fe05e793c7791a83\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8252c20420da40ce90707764e2c529937e3fcb0b706fe5a2506d453c71b0e878\",\"dweb:/ipfs/QmW4CMahzUiBWCchFpULkrUdgN3Q5ZYNWNhDcHPLDHfFUK\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IFactory.sol": {
        "IFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "splitRatio",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "enum Enums.Visibility",
                  "name": "visibility",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "depositUsdMin",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "forkCost",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "allowedActions",
                  "type": "uint8[]"
                }
              ],
              "name": "StrategyCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "fork",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "forker",
                  "type": "address"
                }
              ],
              "name": "StrategyForked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "splitRatio",
                  "type": "uint256[]"
                },
                {
                  "internalType": "enum Enums.Visibility",
                  "name": "visibility",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "depositUsdMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "forkCost",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "allowedActions",
                  "type": "uint8[]"
                }
              ],
              "name": "createStrategy",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "edger",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                }
              ],
              "name": "forkStrategy",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPriceOracleAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRevenueAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSwapRouterAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createStrategy(address[],uint256[],uint8,uint256,uint256,uint8[])": "8403ef08",
              "edger()": "f94f657c",
              "forkStrategy(address)": "64f079e1",
              "getPriceOracleAddress()": "8b5350cc",
              "getRevenueAddress()": "78d1c86d",
              "getSwapRouterAddress()": "f5c8ba93"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"splitRatio\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"enum Enums.Visibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositUsdMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"forkCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"allowedActions\",\"type\":\"uint8[]\"}],\"name\":\"StrategyCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fork\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"forker\",\"type\":\"address\"}],\"name\":\"StrategyForked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"splitRatio\",\"type\":\"uint256[]\"},{\"internalType\":\"enum Enums.Visibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositUsdMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forkCost\",\"type\":\"uint256\"},{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"allowedActions\",\"type\":\"uint8[]\"}],\"name\":\"createStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"edger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"forkStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevenueAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFactory.sol\":\"IFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0xdafda8f5f34be55f0f031adbe18eb4d11a8a6ea1ad2bcd3e67d0e76d11d9530f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a1298e140a1bf2cdc2b0f53c663fd71f010718822a547298435bf49b072693ef\",\"dweb:/ipfs/QmXzbUAgNmRWTtUNT6toQbrsXTS7hQonfDFATSdYRv6JR2\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IMultiTokenPool.sol": {
        "IMultiTokenPool": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "lp",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "donor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensDonated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "lp",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "TokensWithdrawn",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                }
              ],
              "name": "addToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "depositETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "donate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "donateETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllowedActions",
              "outputs": [
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "",
                  "type": "uint8[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalances",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getDepositUsdMin",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSplitRatio",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTokens",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "removeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawSingle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawSingleETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addToken(address,uint256)": "af81c5b9",
              "deposit(address,uint256)": "47e7ef24",
              "depositETH(uint256)": "5358fbda",
              "donate(address,uint256)": "e69d849d",
              "donateETH(uint256)": "ab83f98a",
              "getAllowedActions()": "2494452d",
              "getBalances()": "00113e08",
              "getDepositUsdMin()": "8e4e9018",
              "getSplitRatio()": "4eadcca8",
              "getTokens()": "aa6ca808",
              "removeToken(address)": "5fa7b584",
              "withdraw(uint256)": "2e1a7d4d",
              "withdrawSingle(address,uint256)": "f9c4d3db",
              "withdrawSingleETH(uint256)": "a216aa06"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDonated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donateETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedActions\",\"outputs\":[{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositUsdMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSplitRatio\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSingle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSingleETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMultiTokenPool.sol\":\"IMultiTokenPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMultiTokenPool.sol\":{\"keccak256\":\"0x82c1289792365bf675770f06d43816e00207385a368e1f004ee662582bb604bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e25dbe134fb5e13f032a5c04342d49d8d6634b32204264c4b1292903eb27b178\",\"dweb:/ipfs/QmXL6WvX7zAiSo2zHeDKJSagSRo4FB3F7DhXsppLw7kdDh\"]},\"contracts/interfaces/IPoolAdmin.sol\":{\"keccak256\":\"0x5531e78ca38f798dac44609d77e3addf1b8720966eea28b28e4e7bae9685d438\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d3f47b4ceebb0590d8454a0b35f4a5b8e0fa914294b4cb7826a5f35177a08af\",\"dweb:/ipfs/QmfWapy95rDTSjvzQkoCavk2AtUamemZvykNds4givHjar\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IPoolAdmin.sol": {
        "IPoolAdmin": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                }
              ],
              "name": "addToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "removeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addToken(address,uint256)": "af81c5b9",
              "removeToken(address)": "5fa7b584"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPoolAdmin.sol\":\"IPoolAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IPoolAdmin.sol\":{\"keccak256\":\"0x5531e78ca38f798dac44609d77e3addf1b8720966eea28b28e4e7bae9685d438\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d3f47b4ceebb0590d8454a0b35f4a5b8e0fa914294b4cb7826a5f35177a08af\",\"dweb:/ipfs/QmfWapy95rDTSjvzQkoCavk2AtUamemZvykNds4givHjar\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IPriceOracle.sol": {
        "IPriceOracle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                }
              ],
              "name": "getAmountOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                }
              ],
              "name": "getAmountOutInUsd",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amountIns",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "tokenIns",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                }
              ],
              "name": "getAmountsOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amountIns",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "tokenIns",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsOutInUsd",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getAmountOut(uint256,address,address)": "5e1e6325",
              "getAmountOutInUsd(uint256,address)": "67f46796",
              "getAmountsOut(uint256[],address[],address)": "9e99c826",
              "getAmountsOutInUsd(uint256[],address[])": "04eb30c6"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"}],\"name\":\"getAmountOutInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountIns\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenIns\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountIns\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenIns\",\"type\":\"address[]\"}],\"name\":\"getAmountsOutInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceOracle.sol\":\"IPriceOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4252f4cc64140561f61a4d6ab1f39c540dd70099aa0f056ca0162b8683a78c95\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c644be7ada43bdc0faf1103004ad7a4bebf58f5f780e887ec14d9032b13efa59\",\"dweb:/ipfs/Qmc5Sdo5xjJEMJts7YzzUUboML46S4WEKmuSZBT8ZdZceC\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IRevenue.sol": {
        "IRevenue": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Funded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawn",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "claimed",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "unClaimed",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Types.Revenue",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "fund",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "balanceOf(address)": "70a08231",
              "fund(address)": "23024408",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unClaimed\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.Revenue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRevenue.sol\":\"IRevenue\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IRevenue.sol\":{\"keccak256\":\"0xd5a46b604bec7d07fc9e71f4f6353f6e7111ec6ec943b6f3919ac9f3b76cbc7d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f588ebd6d301d2899f1a8cbcf3431ab77ee903745dcb674e6b6362da489e440e\",\"dweb:/ipfs/QmUR57AhBxPf4v8Wjmcs1v5PTTnAFvvtuH1SjDhvixENqY\"]},\"contracts/lib/Types.sol\":{\"keccak256\":\"0xb9f0c879aa34501ba63fa88aab0713e10884f0f7cf9075a3188138ebe072dc54\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://940f96d0d58e31c3d740a380aa27d1a7215d5ad4e25d595782a99596c19cdb46\",\"dweb:/ipfs/QmcK7CtZ6CRyDNKMdbkWgcmahoXhZE7539WnDe5o9HtkUj\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IStrategy.sol": {
        "IStrategy": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum Enums.ActionCall",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Params.ExecuteCall",
                  "name": "call",
                  "type": "tuple"
                }
              ],
              "name": "ExecuteCalled",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "creator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum Enums.ActionCall",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Params.ExecuteCall",
                  "name": "call",
                  "type": "tuple"
                }
              ],
              "name": "executeCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getForkCost",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "onFork",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "creator()": "02d05d3f",
              "executeCall((uint8,bytes))": "b317650b",
              "factory()": "c45a0155",
              "getForkCost()": "531bcdb3",
              "onFork()": "8769b449"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"enum Enums.ActionCall\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Params.ExecuteCall\",\"name\":\"call\",\"type\":\"tuple\"}],\"name\":\"ExecuteCalled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum Enums.ActionCall\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Params.ExecuteCall\",\"name\":\"call\",\"type\":\"tuple\"}],\"name\":\"executeCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getForkCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onFork\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStrategy.sol\":\"IStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x2d3f17b9672e01c840221eeec835270f2a422452a748895c253776dc087520d7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://765b3f5dd0af55dd95ca0d821de87a42ab5009506e5b65b70b03f1e9cf547417\",\"dweb:/ipfs/QmdcVQDuwrezpLrdp4WmveJLUMa9X2WF9MKUoxGo4EG2W9\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]},\"contracts/lib/Params.sol\":{\"keccak256\":\"0xff8d2345a9a54bea3d7b8b85b10db04c88cd1ed7f945b140fc0479337095a498\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67c5fa1f1789abac9073988c1f1348cb66919b8816117e8cff43699006257a6f\",\"dweb:/ipfs/QmRME4psBXS6botgfdXwSsVW13izZ6arp2JNgC4XfcudY3\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IWETH.sol": {
        "IWETH": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0xa81354f3347bcca731e13bc230a4a2e68e34a1135df0295ca5513f9932a0c5d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2cab49119e9a7eb270f82e74d6b15df984c2feca48348fafde0dabdde138922e\",\"dweb:/ipfs/QmQWMZnjhv1HeBMLUtdqk6cDZe7sErkRw1kBK7ZxtH5swU\"]}},\"version\":1}"
        }
      },
      "contracts/lib/Enums.sol": {
        "Enums": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c2f9abdb70b56f4538fa167690a0f366f17e8a25002f14a04ff767212d625f5364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xF9 0xAB 0xDB PUSH17 0xB56F4538FA167690A0F366F17E8A25002F EQ LOG0 0x4F 0xF7 PUSH8 0x212D625F5364736F PUSH13 0x634300081C0033000000000000 ",
              "sourceMap": "68:277:17:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220c2f9abdb70b56f4538fa167690a0f366f17e8a25002f14a04ff767212d625f5364736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xF9 0xAB 0xDB PUSH17 0xB56F4538FA167690A0F366F17E8A25002F EQ LOG0 0x4F 0xF7 PUSH8 0x212D625F5364736F PUSH13 0x634300081C0033000000000000 ",
              "sourceMap": "68:277:17:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/Enums.sol\":\"Enums\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]}},\"version\":1}"
        }
      },
      "contracts/lib/Params.sol": {
        "Params": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122096d65520c0dfb13c00375be0c9dc62b49ae5c1cc33aa194dca15ec1f38cba87a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xD6 SSTORE KECCAK256 0xC0 0xDF 0xB1 EXTCODECOPY STOP CALLDATACOPY JUMPDEST 0xE0 0xC9 0xDC PUSH3 0xB49AE5 0xC1 0xCC CALLER 0xAA NOT 0x4D 0xCA ISZERO 0xEC 0x1F CODESIZE 0xCB 0xA8 PUSH27 0x64736F6C634300081C003300000000000000000000000000000000 ",
              "sourceMap": "106:107:18:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea264697066735822122096d65520c0dfb13c00375be0c9dc62b49ae5c1cc33aa194dca15ec1f38cba87a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xD6 SSTORE KECCAK256 0xC0 0xDF 0xB1 EXTCODECOPY STOP CALLDATACOPY JUMPDEST 0xE0 0xC9 0xDC PUSH3 0xB49AE5 0xC1 0xCC CALLER 0xAA NOT 0x4D 0xCA ISZERO 0xEC 0x1F CODESIZE 0xCB 0xA8 PUSH27 0x64736F6C634300081C003300000000000000000000000000000000 ",
              "sourceMap": "106:107:18:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/Params.sol\":\"Params\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]},\"contracts/lib/Params.sol\":{\"keccak256\":\"0xff8d2345a9a54bea3d7b8b85b10db04c88cd1ed7f945b140fc0479337095a498\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67c5fa1f1789abac9073988c1f1348cb66919b8816117e8cff43699006257a6f\",\"dweb:/ipfs/QmRME4psBXS6botgfdXwSsVW13izZ6arp2JNgC4XfcudY3\"]}},\"version\":1}"
        }
      },
      "contracts/lib/Types.sol": {
        "Types": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e8f477f32b3c8ff4c72ef8d9d9407def5e92e6f76e1b9999cef0613f1f3830e664736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 DELEGATECALL PUSH24 0xF32B3C8FF4C72EF8D9D9407DEF5E92E6F76E1B9999CEF061 EXTCODEHASH 0x1F CODESIZE ADDRESS 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "68:101:19:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220e8f477f32b3c8ff4c72ef8d9d9407def5e92e6f76e1b9999cef0613f1f3830e664736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 DELEGATECALL PUSH24 0xF32B3C8FF4C72EF8D9D9407DEF5E92E6F76E1B9999CEF061 EXTCODEHASH 0x1F CODESIZE ADDRESS 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "68:101:19:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/Types.sol\":\"Types\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/lib/Types.sol\":{\"keccak256\":\"0xb9f0c879aa34501ba63fa88aab0713e10884f0f7cf9075a3188138ebe072dc54\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://940f96d0d58e31c3d740a380aa27d1a7215d5ad4e25d595782a99596c19cdb46\",\"dweb:/ipfs/QmcK7CtZ6CRyDNKMdbkWgcmahoXhZE7539WnDe5o9HtkUj\"]}},\"version\":1}"
        }
      },
      "contracts/pool/MultiTokenPool.sol": {
        "MultiTokenPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "factory_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "creator_",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "depositUsdMin_",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "initialTokens_",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "initialSplitRatio_",
                  "type": "uint256[]"
                },
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "allowedActions_",
                  "type": "uint8[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "lp",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "donor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensDonated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "lp",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "TokensWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                }
              ],
              "name": "addToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "depositETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "donate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "donateETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllowedActions",
              "outputs": [
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "",
                  "type": "uint8[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalances",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getDepositUsdMin",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSplitRatio",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTokens",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "removeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawSingle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawSingleETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 2427,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_array_address_dyn": {
                  "entryPoint": 2447,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_address": {
                  "entryPoint": 2470,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 2392,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 2493,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_dynamic1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60c080604052346106f95761349a803803809161001c8285610958565b8339810160c0828203126106f9576100338261097b565b906100406020840161097b565b90604084015193606081015160018060401b0381116106f95781019482601f870112156106f9578551906100738261098f565b966100816040519889610958565b828852602088016020819460051b830101918683116106f957602001905b8282106109405750505060808301516001600160401b0381116106f95783019584601f880112156106f9578651936100d68561098f565b976100e4604051998a610958565b858952602089016020819760051b830101918883116106f957602001905b8282106109305750505060a0810151906001600160401b0382116106f957019585601f880112156106f9578651966101398861098f565b966101476040519889610958565b88885260208801916020839a60051b8201019182116106f957602001915b8183106109175750505060405161017d604082610958565b600781526626282a37b5b2b760c91b6020820152604051906101a0604083610958565b600282526104c560f41b60208301528051906001600160401b03821161060a5760035490600182811c9216801561090d575b602083101461082b5781601f8493116108be575b50602090601f83116001146108565760009261084b575b50508160011b916000199060031b1c1916176003555b8051906001600160401b03821161060a5760045490600182811c92168015610841575b602083101461082b5781601f8493116107d1575b50602090601f83116001146107695760009261075e575b50508160011b916000199060031b1c1916176004555b6001600160a01b0316801561074857600a80546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38851885103610712575060a081905260405163f5c8ba9360e01b815290602090829060049082906001600160a01b03165afa908115610706576000916106c7575b506001600160a01b03166080526005558551906001600160401b03821161060a5768010000000000000000821161060a576007548260075580831061068c575b506007600052602060002060005b83811061066f5750508551929150506001600160401b03821161060a5768010000000000000000821161060a5760065482600655808310610634575b506006600052602060002060005b8381106106205750509151929150506001600160401b03821161060a5768010000000000000000821161060a57600854826008558083106105b9575b5090600860005260206000208160051c9160005b83811061056c5750601f198116900380610504575b505050506000916000925b825184101561047f5761042984846109bd565b51810180911161046957926001906001600160a01b0361044982856109bd565b5116600052600960205260406000208260ff198254161790550192610416565b634e487b7160e01b600052601160045260246000fd5b612710036104cb57604051612ab290816109e8823960805181818161024b015281816102b60152818161042c015281816104ab0152610aee015260a0518181816112cd01526114ed0152f35b60405162461bcd60e51b8152602060048201526011602482015270496e76616c696420726174696f2073756d60781b6044820152606490fd5b9260009360005b8181106105205750505001553880808061040b565b909194855160048110156105565761054c602091846001949060ff809160031b9316831b921b19161790565b960192910161050b565b634e487b7160e01b600052602160045260246000fd5b6000805b602081106105855750838201556001016103f6565b959081516004811015610556576105b0602091896001949060ff809160031b9316831b921b19161790565b92019601610570565b6105e79060086000526020600020601f80860160051c820192818716806105ed575b500160051c01906109a6565b386103e2565b6000198501908154906000199060200360031b1c169055386105db565b634e487b7160e01b600052604160045260246000fd5b6001906020845194019381840155016103a6565b6006600052610669907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9081019084016109a6565b38610398565b82516001600160a01b03168183015560209092019160010161035c565b60076000526106c1907fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889081019084016109a6565b3861034e565b90506020813d6020116106fe575b816106e260209383610958565b810103126106f9576106f39061097b565b3861030e565b600080fd5b3d91506106d5565b6040513d6000823e3d90fd5b62461bcd60e51b81526020600482015260116024820152704d69736d6174636865642061727261797360781b6044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b015190503880610261565b600460009081528281209350601f198516905b8181106107b957509084600195949392106107a0575b505050811b01600455610277565b015160001960f88460031b161c19169055388080610792565b9293602060018192878601518155019501930161077c565b600460005261081b907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f850160051c81019160208610610821575b601f0160051c01906109a6565b3861024a565b909150819061080e565b634e487b7160e01b600052602260045260246000fd5b91607f1691610236565b0151905038806101fd565b600360009081528281209350601f198516905b8181106108a6575090846001959493921061088d575b505050811b01600355610213565b015160001960f88460031b161c1916905538808061087f565b92936020600181928786015181550195019301610869565b6003600052610907907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f850160051c8101916020861061082157601f0160051c01906109a6565b386101e6565b91607f16916101d2565b825160048110156106f957815260209283019201610165565b8151815260209182019101610102565b6020809161094d8461097b565b81520191019061009f565b601f909101601f19168101906001600160401b0382119082101761060a57604052565b51906001600160a01b03821682036106f957565b6001600160401b03811161060a5760051b60200190565b8181106109b1575050565b600081556001016109a6565b80518210156109d15760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8062113e081461221f57806306fdde0314612160578063095ea7b3146120da57806318160ddd146120bc57806323b872dd14611f7b5780632494452d1461178a5780632e1a7d4d14611685578063313ce5671461166957806347e7ef24146114875780634eadcca8146114045780635358fbda146112445780635fa7b58414610fe957806370a0823114610faf578063715018a614610f475780638da5cb5b14610f205780638e4e901814610f0257806395d89b4114610dfe578063a216aa0614610a72578063a9059cbb14610a41578063aa6ca808146109a9578063ab83f98a14610919578063af81c5b9146107da578063dd62ed3e14610782578063e69d849d14610698578063f2fde38b146105e95763f9c4d3db0361000e57346105e45760403660031901126105e45761015661234f565b6024359061016582151561247e565b6001600160a01b03811680600052600960205261018960ff60406000205416612710565b600254916101988315156124c9565b6040916060919073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81149060005b6007548110156105da576001600160a01b036101d582612415565b90549060031b1c16906101f9886101f48b6101ef8661275b565b612514565b612527565b60405161020688826123db565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee841480156105d4576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a9576000916105b6575b505b6001600160a01b0361028f84612461565b9116905286156105b0576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a957600091610582575b505b6001600160a01b036102fa8461246e565b91169052848614808061057b575b156103345750505060019250600080808061032e94335af161032861255f565b5061259f565b016101ba565b156103b557505060405163a9059cbb60e01b8152336004820152602481019190915291602090839060449082906000905af19182156103a95760019261037b575b5061032e565b61039b9060203d81116103a2575b61039381836123db565b810190612547565b5038610375565b503d610389565b6040513d6000823e3d90fd5b909390156104945750600142019283421161047e57600091610414916040518096819482937f7ff36ab500000000000000000000000000000000000000000000000000000000845287600485015260806024850152608484019061239e565b90336044840152606483015203916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19182156103a957600192610462575061032e565b61039b903d806000833e61047681836123db565b810190612a02565b634e487b7160e01b600052601160045260246000fd5b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820181905260248201849052949291602090829060449082906000905af180156103a95761055f575b50600142019384421161047e576000928361053b93604051978895869485936338ed173960e01b8552600485015284602485015260a0604485015260a484019061239e565b90336064840152608483015203925af19182156103a957600192610462575061032e565b6105769060203d81116103a25761039381836123db565b6104f6565b5087610308565b6105a3915060203d81116105a9575b61059b81836123db565b810190612635565b386102e7565b503d610591565b876102e9565b6105ce915060203d81116105a95761059b81836123db565b3861027c565b8461027e565b61001988336128e0565b600080fd5b346105e45760203660031901126105e4576001600160a01b0361060a61234f565b610612612961565b168015610669576001600160a01b03600a548273ffffffffffffffffffffffffffffffffffffffff19821617600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b346105e45760403660031901126105e4576106b161234f565b6024356001600160a01b038216908160005260096020526106d960ff60406000205416612710565b6040516323b872dd60e01b81523360048201523060248201526044810182905291602090839060649082906000905af19081156103a9577f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f749261076092610765575b50604051918291339583602090939291936001600160a01b0360408201951681520152565b0390a2005b61077d9060203d6020116103a25761039381836123db565b61073b565b346105e45760403660031901126105e45761079b61234f565b6001600160a01b036107ab612365565b911660005260016020526001600160a01b03604060002091166000526020526020604060002054604051908152f35b346105e45760403660031901126105e4576107f361234f565b6107fb612961565b6001600160a01b0381169081600052600960205260ff604060002054166108d55760075490680100000000000000008210156108bf576108448260016108639401600755612415565b9091906001600160a01b038084549260031b9316831b921b1916179055565b600654680100000000000000008110156108bf5761088a8160016108a49301600655612446565b6024359082549060031b91821b91600019901b1916179055565b6000908152600960205260409020805460ff19166001179055005b634e487b7160e01b600052604160045260246000fd5b606460405162461bcd60e51b815260206004820152600c60248201527f546f6b656e2065786973747300000000000000000000000000000000000000006044820152fd5b60203660031901126105e45760043573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee600052600960205261095660ff604060002054166125ea565b6109618134146126c5565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f7460403392a2005b346105e45760003660031901126105e45760405180602060075491828152019060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889060005b818110610a2257610a1e85610a0a818703826123db565b60405191829160208352602083019061239e565b0390f35b82546001600160a01b03168452602090930192600192830192016109f3565b346105e45760403660031901126105e457610a67610a5d61234f565b60243590336127e9565b602060405160018152f35b346105e45760203660031901126105e457600435610a9181151561247e565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60005260096020527ea206b70d87cacff7a19f3d98e0957b781c25fb4ae954252c87bcf40626174254610adb9060ff16612710565b600254610ae98115156124c9565b6040917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316606060005b600754811015610df4576001600160a01b03610b3682612415565b90549060031b1c16610b4f866101f4876101ef8561275b565b90604051610b5d85826123db565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82148015610dee576040516315ab88c960e31b81526020816004818b5afa9081156103a957600091610dd0575b505b6001600160a01b03610bbd84612461565b9116905260006040516315ab88c960e31b81526020816004818c5afa918215610dc45791610da6575b506001600160a01b03610bf88461246e565b911690528080610d9e575b15610c285750505090610c226000808080600196335af161032861255f565b01610b1b565b91929115610c90575060405163a9059cbb60e01b815233600482015260248101919091529190602090839060449082906000905af19182156103a957600192610c72575b50610c22565b610c899060203d81116103a25761039381836123db565b5087610c6c565b60405163095ea7b360e01b81526001600160a01b0387166004820152602481018390526000939192916020908290604490829088905af18015610d9357610d77575b5060014201804211610d6357918391610d139360405194859384936338ed173960e01b8552600485015285602485015260a0604485015260a484019061239e565b903360648401526084830152038183895af18015610d5857906001939291610d3d575b5050610c22565b610d50913d8091833e61047681836123db565b508780610d36565b6040513d84823e3d90fd5b602484634e487b7160e01b81526011600452fd5b610d8e9060203d81116103a25761039381836123db565b610cd2565b6040513d86823e3d90fd5b506001610c03565b610dbe915060203d81116105a95761059b81836123db565b8b610be6565b604051903d90823e3d90fd5b610de8915060203d81116105a95761059b81836123db565b8b610baa565b82610bac565b61001984336128e0565b346105e45760003660031901126105e45760405160006004548060011c90600181168015610ef8575b602083108114610ee457828552908115610ec05750600114610e60575b610a1e83610e54818503826123db565b60405191829182612306565b91905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b916000905b808210610ea657509091508101602001610e54610e44565b919260018160209254838588010152019101909291610e8e565b60ff191660208086019190915291151560051b84019091019150610e549050610e44565b602484634e487b7160e01b81526022600452fd5b91607f1691610e27565b346105e45760003660031901126105e4576020600554604051908152f35b346105e45760003660031901126105e45760206001600160a01b03600a5416604051908152f35b346105e45760003660031901126105e457610f60612961565b60006001600160a01b03600a5473ffffffffffffffffffffffffffffffffffffffff198116600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346105e45760203660031901126105e4576001600160a01b03610fd061234f565b1660005260006020526020604060002054604051908152f35b346105e45760203660031901126105e4576001600160a01b0361100a61234f565b611012612961565b1680600052600960205260ff6040600020541615611200576040516370a0823160e01b8152306004820152602081602481855afa9081156103a9576000916111ce575b5061118a5760005b6007548082101561001957826001600160a01b0361107a84612415565b90549060031b1c1614611090575060010161105d565b600019810190811161047e576001600160a01b036110b06110c192612415565b90549060031b1c1661084483612415565b600754801561117457600019016110d781612415565b6001600160a01b0382549160031b1b1916905560075560065490600019820191821161047e5761111961110c61113293612446565b90549060031b1c91612446565b90919082549060031b91821b91600019901b1916179055565b6006548015611174576000190161114881612446565b8154906000199060031b1b191690556006556000526009602052604060002060ff198154169055600080f35b634e487b7160e01b600052603160045260246000fd5b606460405162461bcd60e51b815260206004820152601060248201527f4e6f6e2d7a65726f2062616c616e6365000000000000000000000000000000006044820152fd5b90506020813d6020116111f8575b816111e9602093836123db565b810103126105e4575182611055565b3d91506111dc565b606460405162461bcd60e51b815260206004820152600f60248201527f546f6b656e206e6f7420666f756e6400000000000000000000000000000000006044820152fd5b60203660031901126105e45760043561125b612961565b6112668134146126c5565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60005260096020527ea206b70d87cacff7a19f3d98e0957b781c25fb4ae954252c87bcf406261742546112b09060ff166125ea565b6040516322d4d43360e21b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a9576001600160a01b03916020916000916113e7575b506044604051809481936333fa33cb60e11b835287600484015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6024840152165afa80156103a9576000906113b0575b6113689150611362600554821015612654565b336129a3565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f49551760403392a2005b6020823d6020116113df575b816113c9602093836123db565b810103126113dc5750611368905161134f565b80fd5b3d91506113bc565b6113fe9150823d84116105a95761059b81836123db565b8461130a565b346105e45760003660031901126105e45760405180602060065491828152019060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9060005b81811061147157610a1e85611465818703826123db565b604051918291826122cc565b825484526020909301926001928301920161144e565b346105e45760403660031901126105e4576114a061234f565b6024356114ab612961565b6001600160a01b0382168060005260096020526114cf60ff604060002054166125ea565b604051916322d4d43360e21b83526020836004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9283156103a9576001600160a01b039360209160009161164c575b506044604051809681936333fa33cb60e11b8352866004840152876024840152165afa9283156103a957600093611618575b5061156b600554841015612654565b6040516323b872dd60e01b81523360048201523060248201526044810182905291602090839060649082906000905af180156103a9577fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f49551793610760936115d7926115fb575b50336129a3565b604051918291339583602090939291936001600160a01b0360408201951681520152565b6116139060203d6020116103a25761039381836123db565b6115d0565b90926020823d602011611644575b81611633602093836123db565b810103126113dc575051918461155c565b3d9150611626565b6116639150823d84116105a95761059b81836123db565b8661152a565b346105e45760003660031901126105e457602060405160128152f35b346105e45760203660031901126105e4576004356116a481151561247e565b6002546116b28115156124c9565b60005b600754811015611780576001600160a01b036116d082612415565b90549060031b1c16906116ea836101f4866101ef8661275b565b9173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8103611723575061171d6000808080600196335af161032861255f565b016116b5565b60405163a9059cbb60e01b81523360048201526024810193909352602090839060449082906000905af19182156103a957600192611762575b5061171d565b6117799060203d81116103a25761039381836123db565b508461175c565b61001983336128e0565b346105e45760003660031901126105e457604051806020600854918281520190828260086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3926000905b80601f830110611cf2576118f0945491818110611cd7575b818110611cb9575b818110611c9b575b818110611c7d575b818110611c60575b818110611c42575b818110611c24575b818110611c06575b818110611be8575b818110611bca575b818110611bac575b818110611b8e575b818110611b70575b818110611b52575b818110611b34575b818110611b16575b818110611af8575b818110611ada575b818110611abc575b818110611a9e575b818110611a80575b818110611a62575b818110611a44575b818110611a26575b818110611a08575b8181106119ea575b8181106119cc575b8181106119ae575b818110611990575b818110611972575b818110611954575b1061193d575b5093929303826123db565b6040519182916020830190602084525180915260408301919060005b81811061191a575050500390f35b919350916020808261192f600194885161237b565b01940191019184939261190c565b9061194d8160209360f81c61237b565b01856118e5565b9260208161196a60019360ff8760f01c1661237b565b0193016118df565b9260208161198860019360ff8760e81c1661237b565b0193016118d7565b926020816119a660019360ff8760e01c1661237b565b0193016118cf565b926020816119c460019360ff8760d81c1661237b565b0193016118c7565b926020816119e260019360ff8760d01c1661237b565b0193016118bf565b92602081611a0060019360ff8760c81c1661237b565b0193016118b7565b92602081611a1e60019360ff8760c01c1661237b565b0193016118af565b92602081611a3c60019360ff8760b81c1661237b565b0193016118a7565b92602081611a5a60019360ff8760b01c1661237b565b01930161189f565b92602081611a7860019360ff8760a81c1661237b565b019301611897565b92602081611a9660019360ff8760a01c1661237b565b01930161188f565b92602081611ab460019360ff8760981c1661237b565b019301611887565b92602081611ad260019360ff8760901c1661237b565b01930161187f565b92602081611af060019360ff8760881c1661237b565b019301611877565b92602081611b0e60019360ff8760801c1661237b565b01930161186f565b92602081611b2c60019360ff8760781c1661237b565b019301611867565b92602081611b4a60019360ff8760701c1661237b565b01930161185f565b92602081611b6860019360ff8760681c1661237b565b019301611857565b92602081611b8660019360ff8760601c1661237b565b01930161184f565b92602081611ba460019360ff8760581c1661237b565b019301611847565b92602081611bc260019360ff8760501c1661237b565b01930161183f565b92602081611be060019360ff8760481c1661237b565b019301611837565b92602081611bfe60019360ff8760401c1661237b565b01930161182f565b92602081611c1c60019360ff8760381c1661237b565b019301611827565b92602081611c3a60019360ff8760301c1661237b565b01930161181f565b92602081611c5860019360ff8760281c1661237b565b019301611817565b92602081611c7560019360ff87851c1661237b565b01930161180f565b92602081611c9360019360ff8760181c1661237b565b019301611807565b92602081611cb160019360ff8760101c1661237b565b0193016117ff565b92602081611ccf60019360ff8760081c1661237b565b0193016117f7565b92602081611cea60019360ff871661237b565b0193016117ef565b916020919350610400600191611f6d8754611d108360ff831661237b565b611d2286840160ff8360081c1661237b565b611d356040840160ff8360101c1661237b565b611d486060840160ff8360181c1661237b565b611d5a6080840160ff83891c1661237b565b611d6d60a0840160ff8360281c1661237b565b611d8060c0840160ff8360301c1661237b565b611d9360e0840160ff8360381c1661237b565b611da7610100840160ff8360401c1661237b565b611dbb610120840160ff8360481c1661237b565b611dcf610140840160ff8360501c1661237b565b611de3610160840160ff8360581c1661237b565b611df7610180840160ff8360601c1661237b565b611e0b6101a0840160ff8360681c1661237b565b611e1f6101c0840160ff8360701c1661237b565b611e336101e0840160ff8360781c1661237b565b611e47610200840160ff8360801c1661237b565b611e5b610220840160ff8360881c1661237b565b611e6f610240840160ff8360901c1661237b565b611e83610260840160ff8360981c1661237b565b611e97610280840160ff8360a01c1661237b565b611eab6102a0840160ff8360a81c1661237b565b611ebf6102c0840160ff8360b01c1661237b565b611ed36102e0840160ff8360b81c1661237b565b611ee7610300840160ff8360c01c1661237b565b611efb610320840160ff8360c81c1661237b565b611f0f610340840160ff8360d01c1661237b565b611f23610360840160ff8360d81c1661237b565b611f37610380840160ff8360e01c1661237b565b611f4b6103a0840160ff8360e81c1661237b565b611f5f6103c0840160ff8360f01c1661237b565b6103e083019060f81c61237b565b0194019201859293916117d7565b346105e45760603660031901126105e457611f9461234f565b611f9c612365565b604435906001600160a01b0383169283600052600160205260406000206001600160a01b0333166000526020526040600020546000198110611fe4575b50610a6793506127e9565b83811061208657841561205757331561202857610a6794600052600160205260406000206001600160a01b0333166000526020528360406000209103905584611fd9565b7f94280d6200000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7fe602df0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b83907ffb8f41b2000000000000000000000000000000000000000000000000000000006000523360045260245260445260646000fd5b346105e45760003660031901126105e4576020600254604051908152f35b346105e45760403660031901126105e4576120f361234f565b602435903315612057576001600160a01b031690811561202857336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346105e45760003660031901126105e45760405160006003548060011c90600181168015612215575b602083108114610ee457828552908115610ec057506001146121b557610a1e83610e54818503826123db565b91905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b916000905b8082106121fb57509091508101602001610e54610e44565b9192600181602092548385880101520191019092916121e3565b91607f1691612189565b346105e45760003660031901126105e45760075461223c816123fd565b9061224a60405192836123db565b808252601f19612259826123fd565b0136602084013760005b8181106122785760405180610a1e85826122cc565b6122996001600160a01b0361228c83612415565b90549060031b1c1661275b565b600084518310156122b85750600582901b840160200152600101612263565b80634e487b7160e01b602492526032600452fd5b602060408183019282815284518094520192019060005b8181106122f05750505090565b82518452602093840193909201916001016122e3565b91909160208152825180602083015260005b818110612339575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201612318565b600435906001600160a01b03821682036105e457565b602435906001600160a01b03821682036105e457565b9060048210156123885752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b8181106123bc5750505090565b82516001600160a01b03168452602093840193909201916001016123af565b90601f8019910116810190811067ffffffffffffffff8211176108bf57604052565b67ffffffffffffffff81116108bf5760051b60200190565b60075481101561243057600760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60065481101561243057600660005260206000200190600090565b8051156124305760200190565b8051600110156124305760400190565b1561248557565b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420616d6f756e740000000000000000000000000000000000006044820152fd5b156124d057565b606460405162461bcd60e51b815260206004820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b8181029291811591840414171561047e57565b8115612531570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126105e4575180151581036105e45790565b3d1561259a573d9067ffffffffffffffff82116108bf576040519161258e601f8201601f1916602001846123db565b82523d6000602084013e565b606090565b156125a657565b606460405162461bcd60e51b815260206004820152601360248201527f455448207472616e73666572206661696c6564000000000000000000000000006044820152fd5b156125f157565b606460405162461bcd60e51b815260206004820152601160248201527f455448206e6f7420737570706f727465640000000000000000000000000000006044820152fd5b908160209103126105e457516001600160a01b03811681036105e45790565b1561265b57565b608460405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e74206465706f73697420616d6f756e7420696e207560448201527f73640000000000000000000000000000000000000000000000000000000000006064820152fd5b156126cc57565b606460405162461bcd60e51b815260206004820152601460248201527f496e636f72726563742045544820616d6f756e740000000000000000000000006044820152fd5b1561271757565b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420746f6b656e000000000000000000000000000000000000006044820152fd5b6000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036127885750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa918215610dc45780926127b857505090565b9091506020823d6020116127e1575b816127d4602093836123db565b810103126113dc57505190565b3d91506127c7565b6001600160a01b03169081156128b1576001600160a01b03169182156128825760008281528060205260408120548281106128685791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b031680156128b15760009181835282602052604083205481811061294857817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b6001600160a01b03600a5416330361297557565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6001600160a01b03169081156128825760025481810180911161047e576002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009284845283825260408420818154019055604051908152a3565b6020818303126105e45780519067ffffffffffffffff82116105e457019080601f830112156105e4578151612a36816123fd565b92612a4460405194856123db565b81845260208085019260051b8201019283116105e457602001905b828210612a6c5750505090565b8151815260209182019101612a5f56fea264697066735822122031d0c480ad55cb6da7b822f3700924b4f4d57b98d4f42411e86ebf7fb028a25764736f6c634300081c0033",
              "opcodes": "PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x6F9 JUMPI PUSH2 0x349A DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x958 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xC0 DUP3 DUP3 SUB SLT PUSH2 0x6F9 JUMPI PUSH2 0x33 DUP3 PUSH2 0x97B JUMP JUMPDEST SWAP1 PUSH2 0x40 PUSH1 0x20 DUP5 ADD PUSH2 0x97B JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6F9 JUMPI DUP2 ADD SWAP5 DUP3 PUSH1 0x1F DUP8 ADD SLT ISZERO PUSH2 0x6F9 JUMPI DUP6 MLOAD SWAP1 PUSH2 0x73 DUP3 PUSH2 0x98F JUMP JUMPDEST SWAP7 PUSH2 0x81 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x958 JUMP JUMPDEST DUP3 DUP9 MSTORE PUSH1 0x20 DUP9 ADD PUSH1 0x20 DUP2 SWAP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP7 DUP4 GT PUSH2 0x6F9 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x940 JUMPI POP POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6F9 JUMPI DUP4 ADD SWAP6 DUP5 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x6F9 JUMPI DUP7 MLOAD SWAP4 PUSH2 0xD6 DUP6 PUSH2 0x98F JUMP JUMPDEST SWAP8 PUSH2 0xE4 PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x958 JUMP JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x20 DUP10 ADD PUSH1 0x20 DUP2 SWAP8 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP9 DUP4 GT PUSH2 0x6F9 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x930 JUMPI POP POP POP PUSH1 0xA0 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x6F9 JUMPI ADD SWAP6 DUP6 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x6F9 JUMPI DUP7 MLOAD SWAP7 PUSH2 0x139 DUP9 PUSH2 0x98F JUMP JUMPDEST SWAP7 PUSH2 0x147 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x958 JUMP JUMPDEST DUP9 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP2 PUSH1 0x20 DUP4 SWAP11 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x6F9 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x917 JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x17D PUSH1 0x40 DUP3 PUSH2 0x958 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x26282A37B5B2B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1A0 PUSH1 0x40 DUP4 PUSH2 0x958 JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE PUSH2 0x4C5 PUSH1 0xF4 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x60A JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x90D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x82B JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x8BE JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x856 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x84B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x60A JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x841 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x82B JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x7D1 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x769 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x75E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP9 MLOAD DUP9 MLOAD SUB PUSH2 0x712 JUMPI POP PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0xF5C8BA93 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x6C7 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x5 SSTORE DUP6 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x60A JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x60A JUMPI PUSH1 0x7 SLOAD DUP3 PUSH1 0x7 SSTORE DUP1 DUP4 LT PUSH2 0x68C JUMPI JUMPDEST POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x66F JUMPI POP POP DUP6 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x60A JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x60A JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x634 JUMPI JUMPDEST POP PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x620 JUMPI POP POP SWAP2 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x60A JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x60A JUMPI PUSH1 0x8 SLOAD DUP3 PUSH1 0x8 SSTORE DUP1 DUP4 LT PUSH2 0x5B9 JUMPI JUMPDEST POP SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x56C JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x504 JUMPI JUMPDEST POP POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x47F JUMPI PUSH2 0x429 DUP5 DUP5 PUSH2 0x9BD JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x469 JUMPI SWAP3 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x449 DUP3 DUP6 PUSH2 0x9BD JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP3 PUSH2 0x416 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH2 0x2AB2 SWAP1 DUP2 PUSH2 0x9E8 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x24B ADD MSTORE DUP2 DUP2 PUSH2 0x2B6 ADD MSTORE DUP2 DUP2 PUSH2 0x42C ADD MSTORE DUP2 DUP2 PUSH2 0x4AB ADD MSTORE PUSH2 0xAEE ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x12CD ADD MSTORE PUSH2 0x14ED ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420726174696F2073756D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x520 JUMPI POP POP POP ADD SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x40B JUMP JUMPDEST SWAP1 SWAP2 SWAP5 DUP6 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x556 JUMPI PUSH2 0x54C PUSH1 0x20 SWAP2 DUP5 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x50B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x585 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x3F6 JUMP JUMPDEST SWAP6 SWAP1 DUP2 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x556 JUMPI PUSH2 0x5B0 PUSH1 0x20 SWAP2 DUP10 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP3 ADD SWAP7 ADD PUSH2 0x570 JUMP JUMPDEST PUSH2 0x5E7 SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP2 DUP8 AND DUP1 PUSH2 0x5ED JUMPI JUMPDEST POP ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x9A6 JUMP JUMPDEST CODESIZE PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x0 NOT DUP6 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x5DB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE PUSH2 0x669 SWAP1 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0x9A6 JUMP JUMPDEST CODESIZE PUSH2 0x398 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 ADD SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x35C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 MSTORE PUSH2 0x6C1 SWAP1 PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0x9A6 JUMP JUMPDEST CODESIZE PUSH2 0x34E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6FE JUMPI JUMPDEST DUP2 PUSH2 0x6E2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x958 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F9 JUMPI PUSH2 0x6F3 SWAP1 PUSH2 0x97B JUMP JUMPDEST CODESIZE PUSH2 0x30E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D69736D61746368656420617272617973 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x7B9 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x7A0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x277 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x792 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH2 0x81B SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x821 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x9A6 JUMP JUMPDEST CODESIZE PUSH2 0x24A JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x236 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x8A6 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x88D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x213 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x87F JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x869 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH2 0x907 SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x821 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x9A6 JUMP JUMPDEST CODESIZE PUSH2 0x1E6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D2 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x6F9 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x165 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x102 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x94D DUP5 PUSH2 0x97B JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x9F JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x60A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6F9 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x60A JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x9B1 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x9A6 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x113E08 EQ PUSH2 0x221F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2160 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20DA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20BC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F7B JUMPI DUP1 PUSH4 0x2494452D EQ PUSH2 0x178A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1685 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1669 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x1487 JUMPI DUP1 PUSH4 0x4EADCCA8 EQ PUSH2 0x1404 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x1244 JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0xFE9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xFAF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF47 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF20 JUMPI DUP1 PUSH4 0x8E4E9018 EQ PUSH2 0xF02 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xDFE JUMPI DUP1 PUSH4 0xA216AA06 EQ PUSH2 0xA72 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xA41 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x9A9 JUMPI DUP1 PUSH4 0xAB83F98A EQ PUSH2 0x919 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x7DA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x782 JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x698 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E9 JUMPI PUSH4 0xF9C4D3DB SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x156 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x165 DUP3 ISZERO ISZERO PUSH2 0x247E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x189 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2710 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 PUSH2 0x198 DUP4 ISZERO ISZERO PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x60 SWAP2 SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D5 DUP3 PUSH2 0x2415 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 PUSH2 0x1F9 DUP9 PUSH2 0x1F4 DUP12 PUSH2 0x1EF DUP7 PUSH2 0x275B JUMP JUMPDEST PUSH2 0x2514 JUMP JUMPDEST PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 DUP9 DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP5 EQ DUP1 ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x5B6 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x28F DUP5 PUSH2 0x2461 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP7 ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x582 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2FA DUP5 PUSH2 0x246E JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP5 DUP7 EQ DUP1 DUP1 PUSH2 0x57B JUMPI JUMPDEST ISZERO PUSH2 0x334 JUMPI POP POP POP PUSH1 0x1 SWAP3 POP PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x32E SWAP5 CALLER GAS CALL PUSH2 0x328 PUSH2 0x255F JUMP JUMPDEST POP PUSH2 0x259F JUMP JUMPDEST ADD PUSH2 0x1BA JUMP JUMPDEST ISZERO PUSH2 0x3B5 JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x37B JUMPI JUMPDEST POP PUSH2 0x32E JUMP JUMPDEST PUSH2 0x39B SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3A2 JUMPI JUMPDEST PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2547 JUMP JUMPDEST POP CODESIZE PUSH2 0x375 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP4 SWAP1 ISZERO PUSH2 0x494 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0x47E JUMPI PUSH1 0x0 SWAP2 PUSH2 0x414 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH32 0x7FF36AB500000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP8 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD SWAP1 PUSH2 0x239E JUMP JUMPDEST SWAP1 CALLER PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD MSTORE SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x462 JUMPI POP PUSH2 0x32E JUMP JUMPDEST PUSH2 0x39B SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x476 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2A02 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP5 SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH2 0x55F JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP4 DUP5 TIMESTAMP GT PUSH2 0x47E JUMPI PUSH1 0x0 SWAP3 DUP4 PUSH2 0x53B SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP5 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD SWAP1 PUSH2 0x239E JUMP JUMPDEST SWAP1 CALLER PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x462 JUMPI POP PUSH2 0x32E JUMP JUMPDEST PUSH2 0x576 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3A2 JUMPI PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST POP DUP8 PUSH2 0x308 JUMP JUMPDEST PUSH2 0x5A3 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A9 JUMPI JUMPDEST PUSH2 0x59B DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2635 JUMP JUMPDEST CODESIZE PUSH2 0x2E7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x591 JUMP JUMPDEST DUP8 PUSH2 0x2E9 JUMP JUMPDEST PUSH2 0x5CE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A9 JUMPI PUSH2 0x59B DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST CODESIZE PUSH2 0x27C JUMP JUMPDEST DUP5 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x19 DUP9 CALLER PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x60A PUSH2 0x234F JUMP JUMPDEST PUSH2 0x612 PUSH2 0x2961 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x669 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x6B1 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x6D9 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3A9 JUMPI PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 SWAP3 PUSH2 0x760 SWAP3 PUSH2 0x765 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH2 0x77D SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3A2 JUMPI PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x79B PUSH2 0x234F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7AB PUSH2 0x2365 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x7F3 PUSH2 0x234F JUMP JUMPDEST PUSH2 0x7FB PUSH2 0x2961 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x8D5 JUMPI PUSH1 0x7 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x8BF JUMPI PUSH2 0x844 DUP3 PUSH1 0x1 PUSH2 0x863 SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x2415 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x8BF JUMPI PUSH2 0x88A DUP2 PUSH1 0x1 PUSH2 0x8A4 SWAP4 ADD PUSH1 0x6 SSTORE PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206578697374730000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x956 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x25EA JUMP JUMPDEST PUSH2 0x961 DUP2 CALLVALUE EQ PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA22 JUMPI PUSH2 0xA1E DUP6 PUSH2 0xA0A DUP2 DUP8 SUB DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x239E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x9F3 JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0xA67 PUSH2 0xA5D PUSH2 0x234F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x27E9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA91 DUP2 ISZERO ISZERO PUSH2 0x247E JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH31 0xA206B70D87CACFF7A19F3D98E0957B781C25FB4AE954252C87BCF406261742 SLOAD PUSH2 0xADB SWAP1 PUSH1 0xFF AND PUSH2 0x2710 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xAE9 DUP2 ISZERO ISZERO PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB36 DUP3 PUSH2 0x2415 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0xB4F DUP7 PUSH2 0x1F4 DUP8 PUSH2 0x1EF DUP6 PUSH2 0x275B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0xB5D DUP6 DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0xDEE JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDD0 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBBD DUP5 PUSH2 0x2461 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP13 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xDC4 JUMPI SWAP2 PUSH2 0xDA6 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBF8 DUP5 PUSH2 0x246E JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP1 DUP1 PUSH2 0xD9E JUMPI JUMPDEST ISZERO PUSH2 0xC28 JUMPI POP POP POP SWAP1 PUSH2 0xC22 PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 SWAP7 CALLER GAS CALL PUSH2 0x328 PUSH2 0x255F JUMP JUMPDEST ADD PUSH2 0xB1B JUMP JUMPDEST SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0xC90 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 SWAP3 PUSH2 0xC72 JUMPI JUMPDEST POP PUSH2 0xC22 JUMP JUMPDEST PUSH2 0xC89 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3A2 JUMPI PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST POP DUP8 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD77 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0xD63 JUMPI SWAP2 DUP4 SWAP2 PUSH2 0xD13 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP6 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD SWAP1 PUSH2 0x239E JUMP JUMPDEST SWAP1 CALLER PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB DUP2 DUP4 DUP10 GAS CALL DUP1 ISZERO PUSH2 0xD58 JUMPI SWAP1 PUSH1 0x1 SWAP4 SWAP3 SWAP2 PUSH2 0xD3D JUMPI JUMPDEST POP POP PUSH2 0xC22 JUMP JUMPDEST PUSH2 0xD50 SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x476 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST POP DUP8 DUP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xD8E SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3A2 JUMPI PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0xDBE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A9 JUMPI PUSH2 0x59B DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP12 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xDE8 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A9 JUMPI PUSH2 0x59B DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP12 PUSH2 0xBAA JUMP JUMPDEST DUP3 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x19 DUP5 CALLER PUSH2 0x28E0 JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xEF8 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0xEE4 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xEC0 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE60 JUMPI JUMPDEST PUSH2 0xA1E DUP4 PUSH2 0xE54 DUP2 DUP6 SUB DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2306 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xEA6 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xE54 PUSH2 0xE44 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xE54 SWAP1 POP PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xE27 JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0xF60 PUSH2 0x2961 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xFD0 PUSH2 0x234F JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100A PUSH2 0x234F JUMP JUMPDEST PUSH2 0x1012 PUSH2 0x2961 JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1200 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x11CE JUMPI JUMPDEST POP PUSH2 0x118A JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x19 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x107A DUP5 PUSH2 0x2415 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1090 JUMPI POP PUSH1 0x1 ADD PUSH2 0x105D JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x47E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x10B0 PUSH2 0x10C1 SWAP3 PUSH2 0x2415 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x844 DUP4 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x10D7 DUP2 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x47E JUMPI PUSH2 0x1119 PUSH2 0x110C PUSH2 0x1132 SWAP4 PUSH2 0x2446 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x2446 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1148 DUP2 PUSH2 0x2446 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x6 SSTORE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D7A65726F2062616C616E636500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11F8 JUMPI JUMPDEST DUP2 PUSH2 0x11E9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5E4 JUMPI MLOAD DUP3 PUSH2 0x1055 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x125B PUSH2 0x2961 JUMP JUMPDEST PUSH2 0x1266 DUP2 CALLVALUE EQ PUSH2 0x26C5 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH31 0xA206B70D87CACFF7A19F3D98E0957B781C25FB4AE954252C87BCF406261742 SLOAD PUSH2 0x12B0 SWAP1 PUSH1 0xFF AND PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x13E7 JUMPI JUMPDEST POP PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x13B0 JUMPI JUMPDEST PUSH2 0x1368 SWAP2 POP PUSH2 0x1362 PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x2654 JUMP JUMPDEST CALLER PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13DF JUMPI JUMPDEST DUP2 PUSH2 0x13C9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13DC JUMPI POP PUSH2 0x1368 SWAP1 MLOAD PUSH2 0x134F JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x13BC JUMP JUMPDEST PUSH2 0x13FE SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x5A9 JUMPI PUSH2 0x59B DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP5 PUSH2 0x130A JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1471 JUMPI PUSH2 0xA1E DUP6 PUSH2 0x1465 DUP2 DUP8 SUB DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x22CC JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x144E JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x14A0 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x14AB PUSH2 0x2961 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x14CF PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x164C JUMPI JUMPDEST POP PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE DUP8 PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x1618 JUMPI JUMPDEST POP PUSH2 0x156B PUSH1 0x5 SLOAD DUP5 LT ISZERO PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 SWAP4 PUSH2 0x760 SWAP4 PUSH2 0x15D7 SWAP3 PUSH2 0x15FB JUMPI JUMPDEST POP CALLER PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x1613 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3A2 JUMPI PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST PUSH2 0x15D0 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1644 JUMPI JUMPDEST DUP2 PUSH2 0x1633 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13DC JUMPI POP MLOAD SWAP2 DUP5 PUSH2 0x155C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x1663 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x5A9 JUMPI PUSH2 0x59B DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP7 PUSH2 0x152A JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x16A4 DUP2 ISZERO ISZERO PUSH2 0x247E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x16B2 DUP2 ISZERO ISZERO PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1780 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16D0 DUP3 PUSH2 0x2415 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 PUSH2 0x16EA DUP4 PUSH2 0x1F4 DUP7 PUSH2 0x1EF DUP7 PUSH2 0x275B JUMP JUMPDEST SWAP2 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x1723 JUMPI POP PUSH2 0x171D PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 SWAP7 CALLER GAS CALL PUSH2 0x328 PUSH2 0x255F JUMP JUMPDEST ADD PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1762 JUMPI JUMPDEST POP PUSH2 0x171D JUMP JUMPDEST PUSH2 0x1779 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3A2 JUMPI PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST POP DUP5 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x19 DUP4 CALLER PUSH2 0x28E0 JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP3 DUP3 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0x1CF2 JUMPI PUSH2 0x18F0 SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x1CD7 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1CB9 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C9B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C7D JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C60 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C42 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C24 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C06 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1BE8 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1BCA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1BAC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B8E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B70 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B52 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B34 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B16 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1AF8 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1ADA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1ABC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A9E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A80 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A62 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A44 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A26 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A08 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x19EA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x19CC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x19AE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1990 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1972 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1954 JUMPI JUMPDEST LT PUSH2 0x193D JUMPI JUMPDEST POP SWAP4 SWAP3 SWAP4 SUB DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x191A JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 DUP1 DUP3 PUSH2 0x192F PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x237B JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 PUSH2 0x194D DUP2 PUSH1 0x20 SWAP4 PUSH1 0xF8 SHR PUSH2 0x237B JUMP JUMPDEST ADD DUP6 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x196A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xF0 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18DF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1988 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE8 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18D7 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19A6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE0 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19C4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD8 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18C7 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19E2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD0 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18BF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A00 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC8 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18B7 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A1E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC0 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18AF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A3C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB8 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18A7 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A5A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB0 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x189F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A78 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA8 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1897 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A96 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x188F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1AB4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x98 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1887 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1AD2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x90 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x187F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1AF0 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x88 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1877 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B0E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x80 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x186F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B2C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x78 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1867 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B4A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x70 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x185F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B68 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x68 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B86 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x60 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x184F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BA4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x58 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1847 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BC2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x50 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x183F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BE0 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x48 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1837 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BFE PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x182F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C1C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x38 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C3A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x30 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x181F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C58 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x28 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C75 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 DUP6 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x180F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C93 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x18 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1807 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1CB1 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x10 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x17FF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1CCF PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x17F7 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1CEA PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x17EF JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 PUSH2 0x1F6D DUP8 SLOAD PUSH2 0x1D10 DUP4 PUSH1 0xFF DUP4 AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D22 DUP7 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D35 PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D48 PUSH1 0x60 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x18 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D5A PUSH1 0x80 DUP5 ADD PUSH1 0xFF DUP4 DUP10 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D6D PUSH1 0xA0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x28 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D80 PUSH1 0xC0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x30 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D93 PUSH1 0xE0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x38 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1DA7 PUSH2 0x100 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1DBB PUSH2 0x120 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x48 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1DCF PUSH2 0x140 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x50 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1DE3 PUSH2 0x160 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x58 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1DF7 PUSH2 0x180 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x60 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E0B PUSH2 0x1A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x68 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E1F PUSH2 0x1C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x70 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E33 PUSH2 0x1E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x78 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E47 PUSH2 0x200 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E5B PUSH2 0x220 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x88 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E6F PUSH2 0x240 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x90 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E83 PUSH2 0x260 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x98 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E97 PUSH2 0x280 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1EAB PUSH2 0x2A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1EBF PUSH2 0x2C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB0 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1ED3 PUSH2 0x2E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB8 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1EE7 PUSH2 0x300 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1EFB PUSH2 0x320 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC8 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1F0F PUSH2 0x340 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD0 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1F23 PUSH2 0x360 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1F37 PUSH2 0x380 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE0 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1F4B PUSH2 0x3A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE8 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1F5F PUSH2 0x3C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xF0 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x3E0 DUP4 ADD SWAP1 PUSH1 0xF8 SHR PUSH2 0x237B JUMP JUMPDEST ADD SWAP5 ADD SWAP3 ADD DUP6 SWAP3 SWAP4 SWAP2 PUSH2 0x17D7 JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x1F94 PUSH2 0x234F JUMP JUMPDEST PUSH2 0x1F9C PUSH2 0x2365 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT PUSH2 0x1FE4 JUMPI JUMPDEST POP PUSH2 0xA67 SWAP4 POP PUSH2 0x27E9 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x2086 JUMPI DUP5 ISZERO PUSH2 0x2057 JUMPI CALLER ISZERO PUSH2 0x2028 JUMPI PUSH2 0xA67 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x1FD9 JUMP JUMPDEST PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x20F3 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x2057 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2028 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2215 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0xEE4 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xEC0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x21B5 JUMPI PUSH2 0xA1E DUP4 PUSH2 0xE54 DUP2 DUP6 SUB DUP3 PUSH2 0x23DB JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x21FB JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xE54 PUSH2 0xE44 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x21E3 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2189 JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x7 SLOAD PUSH2 0x223C DUP2 PUSH2 0x23FD JUMP JUMPDEST SWAP1 PUSH2 0x224A PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x2259 DUP3 PUSH2 0x23FD JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2278 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xA1E DUP6 DUP3 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0x2299 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x228C DUP4 PUSH2 0x2415 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x275B JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD DUP4 LT ISZERO PUSH2 0x22B8 JUMPI POP PUSH1 0x5 DUP3 SWAP1 SHL DUP5 ADD PUSH1 0x20 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2263 JUMP JUMPDEST DUP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x24 SWAP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x22F0 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x22E3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2339 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x2318 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E4 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E4 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x2388 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x23BC JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8BF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8BF JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2430 JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2430 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2430 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x2430 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2485 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x24D0 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x47E JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2531 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5E4 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x5E4 JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x259A JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x258E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x23DB JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x25A6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x25F1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420737570706F72746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5E4 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5E4 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x265B JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420616D6F756E7420696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7364000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x26CC JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2717 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x2788 JUMPI POP POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xDC4 JUMPI DUP1 SWAP3 PUSH2 0x27B8 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x27E1 JUMPI JUMPDEST DUP2 PUSH2 0x27D4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13DC JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x27C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x28B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2882 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x2868 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x28B1 JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x2948 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND CALLER SUB PUSH2 0x2975 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2882 JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x47E JUMPI PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x5E4 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x5E4 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x5E4 JUMPI DUP2 MLOAD PUSH2 0x2A36 DUP2 PUSH2 0x23FD JUMP JUMPDEST SWAP3 PUSH2 0x2A44 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x23DB JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x5E4 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A6C JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2A5F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xD0 0xC4 DUP1 0xAD SSTORE 0xCB PUSH14 0xA7B822F3700924B4F4D57B98D4F4 0x24 GT 0xE8 PUSH15 0xBF7FB028A25764736F6C634300081C STOP CALLER ",
              "sourceMap": "659:8406:20:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;659:8406:20;;;;-1:-1:-1;;;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;659:8406:20;;;;;-1:-1:-1;;;;;659:8406:20;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;659:8406:20;;;;;;;-1:-1:-1;;;;;659:8406:20;;;;1667:13:2;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:20;;;;;;;;;;;;;1667:13:2;659:8406:20;;;;;1667:13:2;659:8406:20;;;;;-1:-1:-1;;;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:20;;;;;;;;;;;;;1667:13:2;659:8406:20;;;;;;;;-1:-1:-1;;;;;659:8406:20;1273:26:0;;1269:95;;3004:6;659:8406:20;;-1:-1:-1;;;;;;659:8406:20;;;;;;;;;;;-1:-1:-1;;;;;659:8406:20;3052:40:0;-1:-1:-1;;3052:40:0;659:8406:20;;;;1058:50;659:8406;;-1:-1:-1;659:8406:20;1166:19;;;659:8406;;-1:-1:-1;;;1219:41:20;;659:8406;;;;;;;;;-1:-1:-1;;;;;659:8406:20;1219:41;;;;;;;-1:-1:-1;1219:41:20;;;659:8406;-1:-1:-1;;;;;;659:8406:20;;1271:44;659:8406;;;;;-1:-1:-1;;;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:20;;-1:-1:-1;659:8406:20;-1:-1:-1;659:8406:20;;;;;;-1:-1:-1;;659:8406:20;;;;-1:-1:-1;;;;;;;659:8406:20;;;;;;;;;1417:32;659:8406;;1417:32;659:8406;;;;;;;;1417:32;-1:-1:-1;659:8406:20;;-1:-1:-1;659:8406:20;-1:-1:-1;659:8406:20;;;;;;-1:-1:-1;;659:8406:20;;;;-1:-1:-1;;;;;;;659:8406:20;;;;;;;;;1462:33;659:8406;;1462:33;659:8406;;;;;;;;;1462:33;-1:-1:-1;659:8406:20;;-1:-1:-1;659:8406:20;;;;;-1:-1:-1;659:8406:20;;;;;;-1:-1:-1;;;659:8406:20;;;;;;;;1508:22;;;;-1:-1:-1;1546:13:20;-1:-1:-1;1541:177:20;1592:3;659:8406;;1561:29;;;;;1626:21;;;;:::i;:::-;659:8406;;;;;;;;1612:35;659:8406;;-1:-1:-1;;;;;1681:17:20;659:8406;1681:17;;:::i;:::-;659:8406;;-1:-1:-1;659:8406:20;1662:18;659:8406;;;-1:-1:-1;659:8406:20;;;;;;;;;;;1546:13;;;659:8406;;;;-1:-1:-1;659:8406:20;;;;;-1:-1:-1;659:8406:20;1561:29;731:6:21;1738:21:20;731:6:21;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;731:6:21;659:8406:20;;-1:-1:-1;;;731:6:21;;659:8406:20;;731:6:21;;;;;;;659:8406:20;-1:-1:-1;;;659:8406:20;;;731:6:21;;;;659:8406:20;;-1:-1:-1;659:8406:20;-1:-1:-1;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:20;;;;;-1:-1:-1;659:8406:20;;-1:-1:-1;659:8406:20;;;;;;;-1:-1:-1;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:33;-1:-1:-1;659:8406:20;;-1:-1:-1;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1667:13:2;659:8406:20;;;;;;;;;;;;-1:-1:-1;659:8406:20;;;;;-1:-1:-1;659:8406:20;;;;;;;;;;;;;;;;;;1417:32;-1:-1:-1;659:8406:20;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;659:8406:20;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:20;;;;;;;;;;;:::i;:::-;;;;1219:41;;;659:8406;1219:41;;659:8406;1219:41;;;;;;659:8406;1219:41;;;:::i;:::-;;;659:8406;;;;;;;:::i;:::-;1219:41;;;659:8406;-1:-1:-1;659:8406:20;;1219:41;;;-1:-1:-1;1219:41:20;;;659:8406;;;-1:-1:-1;659:8406:20;;;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;-1:-1:-1;;;659:8406:20;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;659:8406:20;;;-1:-1:-1;1322:31:0;659:8406:20;;;;-1:-1:-1;659:8406:20;;;;;;-1:-1:-1;659:8406:20;;;;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:2;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;659:8406:20;;;;;;;;-1:-1:-1;659:8406:20;;;;;-1:-1:-1;659:8406:20;;;;;;;;;;;;-1:-1:-1;659:8406:20;;;;;1667:13:2;-1:-1:-1;659:8406:20;;;;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:2;659:8406:20;;;;;;;;;;1667:13:2;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:2;-1:-1:-1;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;-1:-1:-1;;;;;659:8406:20;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;659:8406:20;;;;;;:::o;:::-;-1:-1:-1;;;;;659:8406:20;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 9039,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_18658": {
                  "entryPoint": 9061,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 9781,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_array_uint256_dyn_fromMemory": {
                  "entryPoint": 10754,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 9543,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_array_address_dyn": {
                  "entryPoint": 9118,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 8908,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_enum_ActionCall": {
                  "entryPoint": 9083,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 8966,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_allocation_size_array_uint256_dyn": {
                  "entryPoint": 9213,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 9511,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 9492,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_returndata": {
                  "entryPoint": 9567,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 9179,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_burn": {
                  "entryPoint": 10464,
                  "id": 672,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 10593,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getBalance": {
                  "entryPoint": 10075,
                  "id": 3572,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_mint": {
                  "entryPoint": 10659,
                  "id": 639,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 10217,
                  "id": 529,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 9326,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn_18764": {
                  "entryPoint": 9313,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_2fd1": {
                  "entryPoint": 9342,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_379a": {
                  "entryPoint": 9417,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_5e70": {
                  "entryPoint": 10000,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_785c": {
                  "entryPoint": 9925,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_97c8": {
                  "entryPoint": 9812,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_9d30": {
                  "entryPoint": 9706,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c7c2": {
                  "entryPoint": 9631,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 9237,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "storage_array_index_access_address_dyn_18668": {
                  "entryPoint": 9286,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "update_storage_value_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "3095": [
                  {
                    "length": 32,
                    "start": 587
                  },
                  {
                    "length": 32,
                    "start": 694
                  },
                  {
                    "length": 32,
                    "start": 1068
                  },
                  {
                    "length": 32,
                    "start": 1195
                  },
                  {
                    "length": 32,
                    "start": 2798
                  }
                ],
                "3097": [
                  {
                    "length": 32,
                    "start": 4813
                  },
                  {
                    "length": 32,
                    "start": 5357
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8062113e081461221f57806306fdde0314612160578063095ea7b3146120da57806318160ddd146120bc57806323b872dd14611f7b5780632494452d1461178a5780632e1a7d4d14611685578063313ce5671461166957806347e7ef24146114875780634eadcca8146114045780635358fbda146112445780635fa7b58414610fe957806370a0823114610faf578063715018a614610f475780638da5cb5b14610f205780638e4e901814610f0257806395d89b4114610dfe578063a216aa0614610a72578063a9059cbb14610a41578063aa6ca808146109a9578063ab83f98a14610919578063af81c5b9146107da578063dd62ed3e14610782578063e69d849d14610698578063f2fde38b146105e95763f9c4d3db0361000e57346105e45760403660031901126105e45761015661234f565b6024359061016582151561247e565b6001600160a01b03811680600052600960205261018960ff60406000205416612710565b600254916101988315156124c9565b6040916060919073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81149060005b6007548110156105da576001600160a01b036101d582612415565b90549060031b1c16906101f9886101f48b6101ef8661275b565b612514565b612527565b60405161020688826123db565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee841480156105d4576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a9576000916105b6575b505b6001600160a01b0361028f84612461565b9116905286156105b0576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a957600091610582575b505b6001600160a01b036102fa8461246e565b91169052848614808061057b575b156103345750505060019250600080808061032e94335af161032861255f565b5061259f565b016101ba565b156103b557505060405163a9059cbb60e01b8152336004820152602481019190915291602090839060449082906000905af19182156103a95760019261037b575b5061032e565b61039b9060203d81116103a2575b61039381836123db565b810190612547565b5038610375565b503d610389565b6040513d6000823e3d90fd5b909390156104945750600142019283421161047e57600091610414916040518096819482937f7ff36ab500000000000000000000000000000000000000000000000000000000845287600485015260806024850152608484019061239e565b90336044840152606483015203916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19182156103a957600192610462575061032e565b61039b903d806000833e61047681836123db565b810190612a02565b634e487b7160e01b600052601160045260246000fd5b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820181905260248201849052949291602090829060449082906000905af180156103a95761055f575b50600142019384421161047e576000928361053b93604051978895869485936338ed173960e01b8552600485015284602485015260a0604485015260a484019061239e565b90336064840152608483015203925af19182156103a957600192610462575061032e565b6105769060203d81116103a25761039381836123db565b6104f6565b5087610308565b6105a3915060203d81116105a9575b61059b81836123db565b810190612635565b386102e7565b503d610591565b876102e9565b6105ce915060203d81116105a95761059b81836123db565b3861027c565b8461027e565b61001988336128e0565b600080fd5b346105e45760203660031901126105e4576001600160a01b0361060a61234f565b610612612961565b168015610669576001600160a01b03600a548273ffffffffffffffffffffffffffffffffffffffff19821617600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b346105e45760403660031901126105e4576106b161234f565b6024356001600160a01b038216908160005260096020526106d960ff60406000205416612710565b6040516323b872dd60e01b81523360048201523060248201526044810182905291602090839060649082906000905af19081156103a9577f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f749261076092610765575b50604051918291339583602090939291936001600160a01b0360408201951681520152565b0390a2005b61077d9060203d6020116103a25761039381836123db565b61073b565b346105e45760403660031901126105e45761079b61234f565b6001600160a01b036107ab612365565b911660005260016020526001600160a01b03604060002091166000526020526020604060002054604051908152f35b346105e45760403660031901126105e4576107f361234f565b6107fb612961565b6001600160a01b0381169081600052600960205260ff604060002054166108d55760075490680100000000000000008210156108bf576108448260016108639401600755612415565b9091906001600160a01b038084549260031b9316831b921b1916179055565b600654680100000000000000008110156108bf5761088a8160016108a49301600655612446565b6024359082549060031b91821b91600019901b1916179055565b6000908152600960205260409020805460ff19166001179055005b634e487b7160e01b600052604160045260246000fd5b606460405162461bcd60e51b815260206004820152600c60248201527f546f6b656e2065786973747300000000000000000000000000000000000000006044820152fd5b60203660031901126105e45760043573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee600052600960205261095660ff604060002054166125ea565b6109618134146126c5565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f7460403392a2005b346105e45760003660031901126105e45760405180602060075491828152019060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889060005b818110610a2257610a1e85610a0a818703826123db565b60405191829160208352602083019061239e565b0390f35b82546001600160a01b03168452602090930192600192830192016109f3565b346105e45760403660031901126105e457610a67610a5d61234f565b60243590336127e9565b602060405160018152f35b346105e45760203660031901126105e457600435610a9181151561247e565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60005260096020527ea206b70d87cacff7a19f3d98e0957b781c25fb4ae954252c87bcf40626174254610adb9060ff16612710565b600254610ae98115156124c9565b6040917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316606060005b600754811015610df4576001600160a01b03610b3682612415565b90549060031b1c16610b4f866101f4876101ef8561275b565b90604051610b5d85826123db565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82148015610dee576040516315ab88c960e31b81526020816004818b5afa9081156103a957600091610dd0575b505b6001600160a01b03610bbd84612461565b9116905260006040516315ab88c960e31b81526020816004818c5afa918215610dc45791610da6575b506001600160a01b03610bf88461246e565b911690528080610d9e575b15610c285750505090610c226000808080600196335af161032861255f565b01610b1b565b91929115610c90575060405163a9059cbb60e01b815233600482015260248101919091529190602090839060449082906000905af19182156103a957600192610c72575b50610c22565b610c899060203d81116103a25761039381836123db565b5087610c6c565b60405163095ea7b360e01b81526001600160a01b0387166004820152602481018390526000939192916020908290604490829088905af18015610d9357610d77575b5060014201804211610d6357918391610d139360405194859384936338ed173960e01b8552600485015285602485015260a0604485015260a484019061239e565b903360648401526084830152038183895af18015610d5857906001939291610d3d575b5050610c22565b610d50913d8091833e61047681836123db565b508780610d36565b6040513d84823e3d90fd5b602484634e487b7160e01b81526011600452fd5b610d8e9060203d81116103a25761039381836123db565b610cd2565b6040513d86823e3d90fd5b506001610c03565b610dbe915060203d81116105a95761059b81836123db565b8b610be6565b604051903d90823e3d90fd5b610de8915060203d81116105a95761059b81836123db565b8b610baa565b82610bac565b61001984336128e0565b346105e45760003660031901126105e45760405160006004548060011c90600181168015610ef8575b602083108114610ee457828552908115610ec05750600114610e60575b610a1e83610e54818503826123db565b60405191829182612306565b91905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b916000905b808210610ea657509091508101602001610e54610e44565b919260018160209254838588010152019101909291610e8e565b60ff191660208086019190915291151560051b84019091019150610e549050610e44565b602484634e487b7160e01b81526022600452fd5b91607f1691610e27565b346105e45760003660031901126105e4576020600554604051908152f35b346105e45760003660031901126105e45760206001600160a01b03600a5416604051908152f35b346105e45760003660031901126105e457610f60612961565b60006001600160a01b03600a5473ffffffffffffffffffffffffffffffffffffffff198116600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346105e45760203660031901126105e4576001600160a01b03610fd061234f565b1660005260006020526020604060002054604051908152f35b346105e45760203660031901126105e4576001600160a01b0361100a61234f565b611012612961565b1680600052600960205260ff6040600020541615611200576040516370a0823160e01b8152306004820152602081602481855afa9081156103a9576000916111ce575b5061118a5760005b6007548082101561001957826001600160a01b0361107a84612415565b90549060031b1c1614611090575060010161105d565b600019810190811161047e576001600160a01b036110b06110c192612415565b90549060031b1c1661084483612415565b600754801561117457600019016110d781612415565b6001600160a01b0382549160031b1b1916905560075560065490600019820191821161047e5761111961110c61113293612446565b90549060031b1c91612446565b90919082549060031b91821b91600019901b1916179055565b6006548015611174576000190161114881612446565b8154906000199060031b1b191690556006556000526009602052604060002060ff198154169055600080f35b634e487b7160e01b600052603160045260246000fd5b606460405162461bcd60e51b815260206004820152601060248201527f4e6f6e2d7a65726f2062616c616e6365000000000000000000000000000000006044820152fd5b90506020813d6020116111f8575b816111e9602093836123db565b810103126105e4575182611055565b3d91506111dc565b606460405162461bcd60e51b815260206004820152600f60248201527f546f6b656e206e6f7420666f756e6400000000000000000000000000000000006044820152fd5b60203660031901126105e45760043561125b612961565b6112668134146126c5565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60005260096020527ea206b70d87cacff7a19f3d98e0957b781c25fb4ae954252c87bcf406261742546112b09060ff166125ea565b6040516322d4d43360e21b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a9576001600160a01b03916020916000916113e7575b506044604051809481936333fa33cb60e11b835287600484015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6024840152165afa80156103a9576000906113b0575b6113689150611362600554821015612654565b336129a3565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f49551760403392a2005b6020823d6020116113df575b816113c9602093836123db565b810103126113dc5750611368905161134f565b80fd5b3d91506113bc565b6113fe9150823d84116105a95761059b81836123db565b8461130a565b346105e45760003660031901126105e45760405180602060065491828152019060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9060005b81811061147157610a1e85611465818703826123db565b604051918291826122cc565b825484526020909301926001928301920161144e565b346105e45760403660031901126105e4576114a061234f565b6024356114ab612961565b6001600160a01b0382168060005260096020526114cf60ff604060002054166125ea565b604051916322d4d43360e21b83526020836004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9283156103a9576001600160a01b039360209160009161164c575b506044604051809681936333fa33cb60e11b8352866004840152876024840152165afa9283156103a957600093611618575b5061156b600554841015612654565b6040516323b872dd60e01b81523360048201523060248201526044810182905291602090839060649082906000905af180156103a9577fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f49551793610760936115d7926115fb575b50336129a3565b604051918291339583602090939291936001600160a01b0360408201951681520152565b6116139060203d6020116103a25761039381836123db565b6115d0565b90926020823d602011611644575b81611633602093836123db565b810103126113dc575051918461155c565b3d9150611626565b6116639150823d84116105a95761059b81836123db565b8661152a565b346105e45760003660031901126105e457602060405160128152f35b346105e45760203660031901126105e4576004356116a481151561247e565b6002546116b28115156124c9565b60005b600754811015611780576001600160a01b036116d082612415565b90549060031b1c16906116ea836101f4866101ef8661275b565b9173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8103611723575061171d6000808080600196335af161032861255f565b016116b5565b60405163a9059cbb60e01b81523360048201526024810193909352602090839060449082906000905af19182156103a957600192611762575b5061171d565b6117799060203d81116103a25761039381836123db565b508461175c565b61001983336128e0565b346105e45760003660031901126105e457604051806020600854918281520190828260086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3926000905b80601f830110611cf2576118f0945491818110611cd7575b818110611cb9575b818110611c9b575b818110611c7d575b818110611c60575b818110611c42575b818110611c24575b818110611c06575b818110611be8575b818110611bca575b818110611bac575b818110611b8e575b818110611b70575b818110611b52575b818110611b34575b818110611b16575b818110611af8575b818110611ada575b818110611abc575b818110611a9e575b818110611a80575b818110611a62575b818110611a44575b818110611a26575b818110611a08575b8181106119ea575b8181106119cc575b8181106119ae575b818110611990575b818110611972575b818110611954575b1061193d575b5093929303826123db565b6040519182916020830190602084525180915260408301919060005b81811061191a575050500390f35b919350916020808261192f600194885161237b565b01940191019184939261190c565b9061194d8160209360f81c61237b565b01856118e5565b9260208161196a60019360ff8760f01c1661237b565b0193016118df565b9260208161198860019360ff8760e81c1661237b565b0193016118d7565b926020816119a660019360ff8760e01c1661237b565b0193016118cf565b926020816119c460019360ff8760d81c1661237b565b0193016118c7565b926020816119e260019360ff8760d01c1661237b565b0193016118bf565b92602081611a0060019360ff8760c81c1661237b565b0193016118b7565b92602081611a1e60019360ff8760c01c1661237b565b0193016118af565b92602081611a3c60019360ff8760b81c1661237b565b0193016118a7565b92602081611a5a60019360ff8760b01c1661237b565b01930161189f565b92602081611a7860019360ff8760a81c1661237b565b019301611897565b92602081611a9660019360ff8760a01c1661237b565b01930161188f565b92602081611ab460019360ff8760981c1661237b565b019301611887565b92602081611ad260019360ff8760901c1661237b565b01930161187f565b92602081611af060019360ff8760881c1661237b565b019301611877565b92602081611b0e60019360ff8760801c1661237b565b01930161186f565b92602081611b2c60019360ff8760781c1661237b565b019301611867565b92602081611b4a60019360ff8760701c1661237b565b01930161185f565b92602081611b6860019360ff8760681c1661237b565b019301611857565b92602081611b8660019360ff8760601c1661237b565b01930161184f565b92602081611ba460019360ff8760581c1661237b565b019301611847565b92602081611bc260019360ff8760501c1661237b565b01930161183f565b92602081611be060019360ff8760481c1661237b565b019301611837565b92602081611bfe60019360ff8760401c1661237b565b01930161182f565b92602081611c1c60019360ff8760381c1661237b565b019301611827565b92602081611c3a60019360ff8760301c1661237b565b01930161181f565b92602081611c5860019360ff8760281c1661237b565b019301611817565b92602081611c7560019360ff87851c1661237b565b01930161180f565b92602081611c9360019360ff8760181c1661237b565b019301611807565b92602081611cb160019360ff8760101c1661237b565b0193016117ff565b92602081611ccf60019360ff8760081c1661237b565b0193016117f7565b92602081611cea60019360ff871661237b565b0193016117ef565b916020919350610400600191611f6d8754611d108360ff831661237b565b611d2286840160ff8360081c1661237b565b611d356040840160ff8360101c1661237b565b611d486060840160ff8360181c1661237b565b611d5a6080840160ff83891c1661237b565b611d6d60a0840160ff8360281c1661237b565b611d8060c0840160ff8360301c1661237b565b611d9360e0840160ff8360381c1661237b565b611da7610100840160ff8360401c1661237b565b611dbb610120840160ff8360481c1661237b565b611dcf610140840160ff8360501c1661237b565b611de3610160840160ff8360581c1661237b565b611df7610180840160ff8360601c1661237b565b611e0b6101a0840160ff8360681c1661237b565b611e1f6101c0840160ff8360701c1661237b565b611e336101e0840160ff8360781c1661237b565b611e47610200840160ff8360801c1661237b565b611e5b610220840160ff8360881c1661237b565b611e6f610240840160ff8360901c1661237b565b611e83610260840160ff8360981c1661237b565b611e97610280840160ff8360a01c1661237b565b611eab6102a0840160ff8360a81c1661237b565b611ebf6102c0840160ff8360b01c1661237b565b611ed36102e0840160ff8360b81c1661237b565b611ee7610300840160ff8360c01c1661237b565b611efb610320840160ff8360c81c1661237b565b611f0f610340840160ff8360d01c1661237b565b611f23610360840160ff8360d81c1661237b565b611f37610380840160ff8360e01c1661237b565b611f4b6103a0840160ff8360e81c1661237b565b611f5f6103c0840160ff8360f01c1661237b565b6103e083019060f81c61237b565b0194019201859293916117d7565b346105e45760603660031901126105e457611f9461234f565b611f9c612365565b604435906001600160a01b0383169283600052600160205260406000206001600160a01b0333166000526020526040600020546000198110611fe4575b50610a6793506127e9565b83811061208657841561205757331561202857610a6794600052600160205260406000206001600160a01b0333166000526020528360406000209103905584611fd9565b7f94280d6200000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7fe602df0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b83907ffb8f41b2000000000000000000000000000000000000000000000000000000006000523360045260245260445260646000fd5b346105e45760003660031901126105e4576020600254604051908152f35b346105e45760403660031901126105e4576120f361234f565b602435903315612057576001600160a01b031690811561202857336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346105e45760003660031901126105e45760405160006003548060011c90600181168015612215575b602083108114610ee457828552908115610ec057506001146121b557610a1e83610e54818503826123db565b91905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b916000905b8082106121fb57509091508101602001610e54610e44565b9192600181602092548385880101520191019092916121e3565b91607f1691612189565b346105e45760003660031901126105e45760075461223c816123fd565b9061224a60405192836123db565b808252601f19612259826123fd565b0136602084013760005b8181106122785760405180610a1e85826122cc565b6122996001600160a01b0361228c83612415565b90549060031b1c1661275b565b600084518310156122b85750600582901b840160200152600101612263565b80634e487b7160e01b602492526032600452fd5b602060408183019282815284518094520192019060005b8181106122f05750505090565b82518452602093840193909201916001016122e3565b91909160208152825180602083015260005b818110612339575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201612318565b600435906001600160a01b03821682036105e457565b602435906001600160a01b03821682036105e457565b9060048210156123885752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b8181106123bc5750505090565b82516001600160a01b03168452602093840193909201916001016123af565b90601f8019910116810190811067ffffffffffffffff8211176108bf57604052565b67ffffffffffffffff81116108bf5760051b60200190565b60075481101561243057600760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60065481101561243057600660005260206000200190600090565b8051156124305760200190565b8051600110156124305760400190565b1561248557565b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420616d6f756e740000000000000000000000000000000000006044820152fd5b156124d057565b606460405162461bcd60e51b815260206004820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b8181029291811591840414171561047e57565b8115612531570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126105e4575180151581036105e45790565b3d1561259a573d9067ffffffffffffffff82116108bf576040519161258e601f8201601f1916602001846123db565b82523d6000602084013e565b606090565b156125a657565b606460405162461bcd60e51b815260206004820152601360248201527f455448207472616e73666572206661696c6564000000000000000000000000006044820152fd5b156125f157565b606460405162461bcd60e51b815260206004820152601160248201527f455448206e6f7420737570706f727465640000000000000000000000000000006044820152fd5b908160209103126105e457516001600160a01b03811681036105e45790565b1561265b57565b608460405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e74206465706f73697420616d6f756e7420696e207560448201527f73640000000000000000000000000000000000000000000000000000000000006064820152fd5b156126cc57565b606460405162461bcd60e51b815260206004820152601460248201527f496e636f72726563742045544820616d6f756e740000000000000000000000006044820152fd5b1561271757565b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420746f6b656e000000000000000000000000000000000000006044820152fd5b6000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036127885750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa918215610dc45780926127b857505090565b9091506020823d6020116127e1575b816127d4602093836123db565b810103126113dc57505190565b3d91506127c7565b6001600160a01b03169081156128b1576001600160a01b03169182156128825760008281528060205260408120548281106128685791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b031680156128b15760009181835282602052604083205481811061294857817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b6001600160a01b03600a5416330361297557565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6001600160a01b03169081156128825760025481810180911161047e576002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009284845283825260408420818154019055604051908152a3565b6020818303126105e45780519067ffffffffffffffff82116105e457019080601f830112156105e4578151612a36816123fd565b92612a4460405194856123db565b81845260208085019260051b8201019283116105e457602001905b828210612a6c5750505090565b8151815260209182019101612a5f56fea264697066735822122031d0c480ad55cb6da7b822f3700924b4f4d57b98d4f42411e86ebf7fb028a25764736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x113E08 EQ PUSH2 0x221F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2160 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20DA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20BC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F7B JUMPI DUP1 PUSH4 0x2494452D EQ PUSH2 0x178A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1685 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1669 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x1487 JUMPI DUP1 PUSH4 0x4EADCCA8 EQ PUSH2 0x1404 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x1244 JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0xFE9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xFAF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF47 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF20 JUMPI DUP1 PUSH4 0x8E4E9018 EQ PUSH2 0xF02 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xDFE JUMPI DUP1 PUSH4 0xA216AA06 EQ PUSH2 0xA72 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xA41 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x9A9 JUMPI DUP1 PUSH4 0xAB83F98A EQ PUSH2 0x919 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x7DA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x782 JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x698 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E9 JUMPI PUSH4 0xF9C4D3DB SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x156 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x165 DUP3 ISZERO ISZERO PUSH2 0x247E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x189 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2710 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 PUSH2 0x198 DUP4 ISZERO ISZERO PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x60 SWAP2 SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D5 DUP3 PUSH2 0x2415 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 PUSH2 0x1F9 DUP9 PUSH2 0x1F4 DUP12 PUSH2 0x1EF DUP7 PUSH2 0x275B JUMP JUMPDEST PUSH2 0x2514 JUMP JUMPDEST PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 DUP9 DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP5 EQ DUP1 ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x5B6 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x28F DUP5 PUSH2 0x2461 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP7 ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x582 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2FA DUP5 PUSH2 0x246E JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP5 DUP7 EQ DUP1 DUP1 PUSH2 0x57B JUMPI JUMPDEST ISZERO PUSH2 0x334 JUMPI POP POP POP PUSH1 0x1 SWAP3 POP PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x32E SWAP5 CALLER GAS CALL PUSH2 0x328 PUSH2 0x255F JUMP JUMPDEST POP PUSH2 0x259F JUMP JUMPDEST ADD PUSH2 0x1BA JUMP JUMPDEST ISZERO PUSH2 0x3B5 JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x37B JUMPI JUMPDEST POP PUSH2 0x32E JUMP JUMPDEST PUSH2 0x39B SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3A2 JUMPI JUMPDEST PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2547 JUMP JUMPDEST POP CODESIZE PUSH2 0x375 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP4 SWAP1 ISZERO PUSH2 0x494 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0x47E JUMPI PUSH1 0x0 SWAP2 PUSH2 0x414 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH32 0x7FF36AB500000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP8 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD SWAP1 PUSH2 0x239E JUMP JUMPDEST SWAP1 CALLER PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD MSTORE SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x462 JUMPI POP PUSH2 0x32E JUMP JUMPDEST PUSH2 0x39B SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x476 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2A02 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP5 SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH2 0x55F JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP4 DUP5 TIMESTAMP GT PUSH2 0x47E JUMPI PUSH1 0x0 SWAP3 DUP4 PUSH2 0x53B SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP5 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD SWAP1 PUSH2 0x239E JUMP JUMPDEST SWAP1 CALLER PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x462 JUMPI POP PUSH2 0x32E JUMP JUMPDEST PUSH2 0x576 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3A2 JUMPI PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST POP DUP8 PUSH2 0x308 JUMP JUMPDEST PUSH2 0x5A3 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A9 JUMPI JUMPDEST PUSH2 0x59B DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2635 JUMP JUMPDEST CODESIZE PUSH2 0x2E7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x591 JUMP JUMPDEST DUP8 PUSH2 0x2E9 JUMP JUMPDEST PUSH2 0x5CE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A9 JUMPI PUSH2 0x59B DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST CODESIZE PUSH2 0x27C JUMP JUMPDEST DUP5 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x19 DUP9 CALLER PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x60A PUSH2 0x234F JUMP JUMPDEST PUSH2 0x612 PUSH2 0x2961 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x669 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x6B1 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x6D9 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3A9 JUMPI PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 SWAP3 PUSH2 0x760 SWAP3 PUSH2 0x765 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH2 0x77D SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3A2 JUMPI PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x79B PUSH2 0x234F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7AB PUSH2 0x2365 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x7F3 PUSH2 0x234F JUMP JUMPDEST PUSH2 0x7FB PUSH2 0x2961 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x8D5 JUMPI PUSH1 0x7 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x8BF JUMPI PUSH2 0x844 DUP3 PUSH1 0x1 PUSH2 0x863 SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x2415 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x8BF JUMPI PUSH2 0x88A DUP2 PUSH1 0x1 PUSH2 0x8A4 SWAP4 ADD PUSH1 0x6 SSTORE PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206578697374730000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x956 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x25EA JUMP JUMPDEST PUSH2 0x961 DUP2 CALLVALUE EQ PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA22 JUMPI PUSH2 0xA1E DUP6 PUSH2 0xA0A DUP2 DUP8 SUB DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x239E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x9F3 JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0xA67 PUSH2 0xA5D PUSH2 0x234F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x27E9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA91 DUP2 ISZERO ISZERO PUSH2 0x247E JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH31 0xA206B70D87CACFF7A19F3D98E0957B781C25FB4AE954252C87BCF406261742 SLOAD PUSH2 0xADB SWAP1 PUSH1 0xFF AND PUSH2 0x2710 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xAE9 DUP2 ISZERO ISZERO PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB36 DUP3 PUSH2 0x2415 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0xB4F DUP7 PUSH2 0x1F4 DUP8 PUSH2 0x1EF DUP6 PUSH2 0x275B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0xB5D DUP6 DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0xDEE JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDD0 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBBD DUP5 PUSH2 0x2461 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP13 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xDC4 JUMPI SWAP2 PUSH2 0xDA6 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBF8 DUP5 PUSH2 0x246E JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP1 DUP1 PUSH2 0xD9E JUMPI JUMPDEST ISZERO PUSH2 0xC28 JUMPI POP POP POP SWAP1 PUSH2 0xC22 PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 SWAP7 CALLER GAS CALL PUSH2 0x328 PUSH2 0x255F JUMP JUMPDEST ADD PUSH2 0xB1B JUMP JUMPDEST SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0xC90 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 SWAP3 PUSH2 0xC72 JUMPI JUMPDEST POP PUSH2 0xC22 JUMP JUMPDEST PUSH2 0xC89 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3A2 JUMPI PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST POP DUP8 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD77 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0xD63 JUMPI SWAP2 DUP4 SWAP2 PUSH2 0xD13 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP6 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD SWAP1 PUSH2 0x239E JUMP JUMPDEST SWAP1 CALLER PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB DUP2 DUP4 DUP10 GAS CALL DUP1 ISZERO PUSH2 0xD58 JUMPI SWAP1 PUSH1 0x1 SWAP4 SWAP3 SWAP2 PUSH2 0xD3D JUMPI JUMPDEST POP POP PUSH2 0xC22 JUMP JUMPDEST PUSH2 0xD50 SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x476 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST POP DUP8 DUP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xD8E SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3A2 JUMPI PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0xDBE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A9 JUMPI PUSH2 0x59B DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP12 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xDE8 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A9 JUMPI PUSH2 0x59B DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP12 PUSH2 0xBAA JUMP JUMPDEST DUP3 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x19 DUP5 CALLER PUSH2 0x28E0 JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xEF8 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0xEE4 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xEC0 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE60 JUMPI JUMPDEST PUSH2 0xA1E DUP4 PUSH2 0xE54 DUP2 DUP6 SUB DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2306 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xEA6 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xE54 PUSH2 0xE44 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xE54 SWAP1 POP PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xE27 JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0xF60 PUSH2 0x2961 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xFD0 PUSH2 0x234F JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100A PUSH2 0x234F JUMP JUMPDEST PUSH2 0x1012 PUSH2 0x2961 JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1200 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x11CE JUMPI JUMPDEST POP PUSH2 0x118A JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x19 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x107A DUP5 PUSH2 0x2415 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1090 JUMPI POP PUSH1 0x1 ADD PUSH2 0x105D JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x47E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x10B0 PUSH2 0x10C1 SWAP3 PUSH2 0x2415 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x844 DUP4 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x10D7 DUP2 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x47E JUMPI PUSH2 0x1119 PUSH2 0x110C PUSH2 0x1132 SWAP4 PUSH2 0x2446 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x2446 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1148 DUP2 PUSH2 0x2446 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x6 SSTORE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D7A65726F2062616C616E636500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11F8 JUMPI JUMPDEST DUP2 PUSH2 0x11E9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5E4 JUMPI MLOAD DUP3 PUSH2 0x1055 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x125B PUSH2 0x2961 JUMP JUMPDEST PUSH2 0x1266 DUP2 CALLVALUE EQ PUSH2 0x26C5 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH31 0xA206B70D87CACFF7A19F3D98E0957B781C25FB4AE954252C87BCF406261742 SLOAD PUSH2 0x12B0 SWAP1 PUSH1 0xFF AND PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x13E7 JUMPI JUMPDEST POP PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x13B0 JUMPI JUMPDEST PUSH2 0x1368 SWAP2 POP PUSH2 0x1362 PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x2654 JUMP JUMPDEST CALLER PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13DF JUMPI JUMPDEST DUP2 PUSH2 0x13C9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13DC JUMPI POP PUSH2 0x1368 SWAP1 MLOAD PUSH2 0x134F JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x13BC JUMP JUMPDEST PUSH2 0x13FE SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x5A9 JUMPI PUSH2 0x59B DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP5 PUSH2 0x130A JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1471 JUMPI PUSH2 0xA1E DUP6 PUSH2 0x1465 DUP2 DUP8 SUB DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x22CC JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x144E JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x14A0 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x14AB PUSH2 0x2961 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x14CF PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x164C JUMPI JUMPDEST POP PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE DUP8 PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x1618 JUMPI JUMPDEST POP PUSH2 0x156B PUSH1 0x5 SLOAD DUP5 LT ISZERO PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 SWAP4 PUSH2 0x760 SWAP4 PUSH2 0x15D7 SWAP3 PUSH2 0x15FB JUMPI JUMPDEST POP CALLER PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x1613 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3A2 JUMPI PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST PUSH2 0x15D0 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1644 JUMPI JUMPDEST DUP2 PUSH2 0x1633 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13DC JUMPI POP MLOAD SWAP2 DUP5 PUSH2 0x155C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x1663 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x5A9 JUMPI PUSH2 0x59B DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP7 PUSH2 0x152A JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x16A4 DUP2 ISZERO ISZERO PUSH2 0x247E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x16B2 DUP2 ISZERO ISZERO PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1780 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16D0 DUP3 PUSH2 0x2415 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 PUSH2 0x16EA DUP4 PUSH2 0x1F4 DUP7 PUSH2 0x1EF DUP7 PUSH2 0x275B JUMP JUMPDEST SWAP2 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x1723 JUMPI POP PUSH2 0x171D PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 SWAP7 CALLER GAS CALL PUSH2 0x328 PUSH2 0x255F JUMP JUMPDEST ADD PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1762 JUMPI JUMPDEST POP PUSH2 0x171D JUMP JUMPDEST PUSH2 0x1779 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3A2 JUMPI PUSH2 0x393 DUP2 DUP4 PUSH2 0x23DB JUMP JUMPDEST POP DUP5 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x19 DUP4 CALLER PUSH2 0x28E0 JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP3 DUP3 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0x1CF2 JUMPI PUSH2 0x18F0 SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x1CD7 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1CB9 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C9B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C7D JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C60 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C42 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C24 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C06 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1BE8 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1BCA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1BAC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B8E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B70 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B52 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B34 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B16 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1AF8 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1ADA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1ABC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A9E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A80 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A62 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A44 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A26 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A08 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x19EA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x19CC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x19AE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1990 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1972 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1954 JUMPI JUMPDEST LT PUSH2 0x193D JUMPI JUMPDEST POP SWAP4 SWAP3 SWAP4 SUB DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x191A JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 DUP1 DUP3 PUSH2 0x192F PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x237B JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 PUSH2 0x194D DUP2 PUSH1 0x20 SWAP4 PUSH1 0xF8 SHR PUSH2 0x237B JUMP JUMPDEST ADD DUP6 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x196A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xF0 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18DF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1988 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE8 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18D7 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19A6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE0 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19C4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD8 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18C7 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19E2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD0 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18BF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A00 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC8 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18B7 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A1E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC0 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18AF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A3C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB8 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18A7 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A5A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB0 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x189F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A78 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA8 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1897 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A96 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x188F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1AB4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x98 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1887 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1AD2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x90 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x187F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1AF0 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x88 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1877 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B0E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x80 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x186F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B2C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x78 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1867 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B4A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x70 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x185F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B68 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x68 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B86 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x60 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x184F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BA4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x58 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1847 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BC2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x50 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x183F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BE0 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x48 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1837 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BFE PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x182F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C1C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x38 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C3A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x30 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x181F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C58 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x28 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C75 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 DUP6 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x180F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C93 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x18 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1807 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1CB1 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x10 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x17FF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1CCF PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x17F7 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1CEA PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 AND PUSH2 0x237B JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x17EF JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 PUSH2 0x1F6D DUP8 SLOAD PUSH2 0x1D10 DUP4 PUSH1 0xFF DUP4 AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D22 DUP7 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D35 PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D48 PUSH1 0x60 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x18 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D5A PUSH1 0x80 DUP5 ADD PUSH1 0xFF DUP4 DUP10 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D6D PUSH1 0xA0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x28 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D80 PUSH1 0xC0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x30 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1D93 PUSH1 0xE0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x38 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1DA7 PUSH2 0x100 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1DBB PUSH2 0x120 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x48 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1DCF PUSH2 0x140 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x50 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1DE3 PUSH2 0x160 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x58 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1DF7 PUSH2 0x180 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x60 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E0B PUSH2 0x1A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x68 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E1F PUSH2 0x1C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x70 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E33 PUSH2 0x1E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x78 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E47 PUSH2 0x200 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E5B PUSH2 0x220 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x88 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E6F PUSH2 0x240 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x90 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E83 PUSH2 0x260 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x98 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1E97 PUSH2 0x280 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1EAB PUSH2 0x2A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1EBF PUSH2 0x2C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB0 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1ED3 PUSH2 0x2E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB8 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1EE7 PUSH2 0x300 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1EFB PUSH2 0x320 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC8 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1F0F PUSH2 0x340 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD0 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1F23 PUSH2 0x360 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1F37 PUSH2 0x380 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE0 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1F4B PUSH2 0x3A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE8 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1F5F PUSH2 0x3C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xF0 SHR AND PUSH2 0x237B JUMP JUMPDEST PUSH2 0x3E0 DUP4 ADD SWAP1 PUSH1 0xF8 SHR PUSH2 0x237B JUMP JUMPDEST ADD SWAP5 ADD SWAP3 ADD DUP6 SWAP3 SWAP4 SWAP2 PUSH2 0x17D7 JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x1F94 PUSH2 0x234F JUMP JUMPDEST PUSH2 0x1F9C PUSH2 0x2365 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT PUSH2 0x1FE4 JUMPI JUMPDEST POP PUSH2 0xA67 SWAP4 POP PUSH2 0x27E9 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x2086 JUMPI DUP5 ISZERO PUSH2 0x2057 JUMPI CALLER ISZERO PUSH2 0x2028 JUMPI PUSH2 0xA67 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x1FD9 JUMP JUMPDEST PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH2 0x20F3 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x2057 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2028 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2215 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0xEE4 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xEC0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x21B5 JUMPI PUSH2 0xA1E DUP4 PUSH2 0xE54 DUP2 DUP6 SUB DUP3 PUSH2 0x23DB JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x21FB JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xE54 PUSH2 0xE44 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x21E3 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2189 JUMP JUMPDEST CALLVALUE PUSH2 0x5E4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E4 JUMPI PUSH1 0x7 SLOAD PUSH2 0x223C DUP2 PUSH2 0x23FD JUMP JUMPDEST SWAP1 PUSH2 0x224A PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x2259 DUP3 PUSH2 0x23FD JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2278 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xA1E DUP6 DUP3 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0x2299 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x228C DUP4 PUSH2 0x2415 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x275B JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD DUP4 LT ISZERO PUSH2 0x22B8 JUMPI POP PUSH1 0x5 DUP3 SWAP1 SHL DUP5 ADD PUSH1 0x20 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2263 JUMP JUMPDEST DUP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x24 SWAP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x22F0 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x22E3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2339 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x2318 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E4 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E4 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x2388 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x23BC JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8BF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8BF JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2430 JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2430 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2430 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x2430 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2485 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x24D0 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x47E JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2531 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5E4 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x5E4 JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x259A JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x258E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x23DB JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x25A6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x25F1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420737570706F72746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5E4 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5E4 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x265B JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420616D6F756E7420696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7364000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x26CC JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2717 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x2788 JUMPI POP POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xDC4 JUMPI DUP1 SWAP3 PUSH2 0x27B8 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x27E1 JUMPI JUMPDEST DUP2 PUSH2 0x27D4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23DB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13DC JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x27C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x28B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2882 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x2868 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x28B1 JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x2948 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND CALLER SUB PUSH2 0x2975 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2882 JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x47E JUMPI PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x5E4 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x5E4 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x5E4 JUMPI DUP2 MLOAD PUSH2 0x2A36 DUP2 PUSH2 0x23FD JUMP JUMPDEST SWAP3 PUSH2 0x2A44 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x23DB JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x5E4 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A6C JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2A5F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xD0 0xC4 DUP1 0xAD SSTORE 0xCB PUSH14 0xA7B822F3700924B4F4D57B98D4F4 0x24 GT 0xE8 PUSH15 0xBF7FB028A25764736F6C634300081C STOP CALLER ",
              "sourceMap": "659:8406:20:-:0;;;;;;;;;-1:-1:-1;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;;:::i;:::-;;;4467:12;4459:39;4467:12;;;4459:39;:::i;:::-;-1:-1:-1;;;;;659:8406:20;;;;;4517:18;659:8406;;4509:54;659:8406;;;;;;4509:54;:::i;:::-;2927:12:2;659:8406:20;4630:15;4622:40;4630:15;;;4622:40;:::i;:::-;659:8406;;;;;774:42:21;5024:22:20;;;659:8406;4725:3;4699:17;659:8406;4695:28;;;;;-1:-1:-1;;;;;4763:20:20;;;:::i;:::-;659:8406;;;;;;;4818:19;4817:46;4818:19;:30;:19;;;;:::i;:::-;:30;:::i;:::-;4817:46;:::i;:::-;659:8406;;;;;;:::i;:::-;2927:12:2;659:8406:20;;;;;;;;774:42:21;4947:21:20;;:52;;;;659:8406;;-1:-1:-1;;;4971:18:20;;659:8406;4971:11;659:8406;4971:11;-1:-1:-1;;;;;4971:11:20;659:8406;4971:18;;;;;;;659:8406;4971:18;;;4947:52;;;-1:-1:-1;;;;;4937:62:20;;;:::i;:::-;659:8406;;;;5024:54;;;;659:8406;;-1:-1:-1;;;5049:18:20;;659:8406;5049:11;659:8406;5049:11;-1:-1:-1;;;;;5049:11:20;659:8406;5049:18;;;;;;;659:8406;5049:18;;;5024:54;;;-1:-1:-1;;;;;5014:64:20;;;:::i;:::-;659:8406;;;;5099:19;;;;;:45;;5024:54;5095:988;;;5193:10;;;5019:1;5193:10;;659:8406;5193:10;;;5291:40;5193:10;;5185:85;;;;:::i;:::-;;5291:40;:::i;:::-;659:8406;4680:13;;5095:988;5353:730;;;-1:-1:-1;;659:8406:20;;-1:-1:-1;;;5397:46:20;;5422:10;659:8406;5397:46;;659:8406;774:42:21;;;659:8406:20;;;;;;;;;774:42:21;;659:8406:20;;-1:-1:-1;;5397:46:20;;;;;;;5019:1;5397:46;;;5353:730;;5095:988;;5397:46;;;659:8406;5397:46;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;659:8406;;774:42:21;659:8406:20;774:42:21;;;;;5353:730:20;5465:618;;;;;;5684:15;5019:1;5684:15;659:8406;5684:15;;;659:8406;;;;;;;;;5511:211;;;;;;774:42:21;5511:211:20;;;659:8406;5511:211;;659:8406;;;;;;;;;;;:::i;:::-;5651:10;;659:8406;;;;;;;;5511:211;:11;-1:-1:-1;;;;;5511:11:20;659:8406;5511:211;;;;;;;5019:1;5511:211;;;5465:618;5095:988;;5511:211;;;;;659:8406;5511:211;;;;;;:::i;:::-;;;;;:::i;659:8406::-;-1:-1:-1;;;659:8406:20;;;;;;;;5465:618;659:8406;;-1:-1:-1;;;5763:55:20;;-1:-1:-1;;;;;5795:11:20;659:8406;;5763:55;;659:8406;;;774:42:21;;;659:8406:20;;;;;;;;;;774:42:21;;659:8406:20;;-1:-1:-1;;5763:55:20;;;;;;;;5465:618;6029:15;5019:1;6029:15;659:8406;6029:15;;;659:8406;;;;;;;;;;5839:228;;;;;;;-1:-1:-1;;;5839:228:20;;659:8406;5839:228;;659:8406;;;;;;;;;;;;;;;;:::i;:::-;5996:10;;659:8406;;;;;;;;5839:228;;;;;;;;;5019:1;5839:228;;;5465:618;5095:988;;5763:55;;;659:8406;5763:55;;;;;;;;;:::i;:::-;;;5099:45;;;;;5049:18;;;;659:8406;5049:18;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;5024:54;;;;4971:18;;;;659:8406;4971:18;;;;;;;;;:::i;:::-;;;;4947:52;;;;4695:28;6124:8;4695:28;6112:10;6124:8;:::i;659:8406::-;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;-1:-1:-1;;;;;659:8406:20;;:::i;:::-;1500:62:0;;:::i;:::-;659:8406:20;2627:22:0;;2623:91;;-1:-1:-1;;;;;3004:6:0;659:8406:20;;-1:-1:-1;;659:8406:20;;;3004:6:0;659:8406:20;;3052:40:0;659:8406:20;3052:40:0;;659:8406:20;2623:91:0;2672:31;659:8406:20;2672:31:0;659:8406:20;;;;;2672:31:0;659:8406:20;;;;;;-1:-1:-1;;659:8406:20;;;;;;:::i;:::-;;;-1:-1:-1;;;;;659:8406:20;;;;;;6233:18;659:8406;;6225:51;659:8406;;;;;;6225:51;:::i;:::-;659:8406;;-1:-1:-1;;;6287:61:20;;6314:10;659:8406;6287:61;;659:8406;6334:4;659:8406;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6287:61:20;;;;;;;6366:40;6287:61;6366:40;6287:61;;;659:8406;;;;6314:10;;;;6366:40;;774:42:21;;;;;;-1:-1:-1;;;;;774:42:21;;;659:8406:20;;;;774:42:21;659:8406:20;774:42:21;6366:40:20;;;;659:8406;6287:61;;;659:8406;6287:61;659:8406;6287:61;;;;;;;:::i;:::-;;;659:8406;;;;;;-1:-1:-1;;659:8406:20;;;;;;:::i;:::-;-1:-1:-1;;;;;659:8406:20;;:::i;:::-;;;;;3657:11:2;659:8406:20;;-1:-1:-1;;;;;659:8406:20;;;3657:27:2;659:8406:20;-1:-1:-1;659:8406:20;;;;;-1:-1:-1;659:8406:20;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;659:8406:20;;;;;;8129:18;659:8406;;;;;;;;;;8184:17;659:8406;;;;;;;;;;;;;;8184:17;659:8406;;:::i;:::-;;;;-1:-1:-1;;;;;659:8406:20;;;;;;;;;;;;;;;;;;;8224:11;659:8406;;;;;;;;;;;;;8224:11;659:8406;;:::i;:::-;;;;;;;;;;;;10599:17:2;;;659:8406:20;;;;;;;;;;;;;8129:18;659:8406;;;;;;;-1:-1:-1;;659:8406:20;;;;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;;774:42:21;659:8406:20;;6502:18;659:8406;;6494:60;659:8406;;;;;;6494:60;:::i;:::-;6565:52;6573:9;;:19;6565:52;:::i;:::-;659:8406;;;774:42:21;659:8406:20;;;774:42:21;;659:8406:20;6635:45;659:8406;6649:10;6635:45;;659:8406;;;;;;;-1:-1:-1;;659:8406:20;;;;;;;;7003:17;659:8406;;;;;;;7003:17;659:8406;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;3459:5:2;659:8406:20;;:::i;:::-;;;735:10:5;;3459:5:2;:::i;:::-;659:8406:20;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;;4459:39;4467:12;;;4459:39;:::i;:::-;774:42:21;659:8406:20;;4517:18;659:8406;;;;4509:54;;659:8406;;4509:54;:::i;:::-;2927:12:2;659:8406:20;4622:40;4630:15;;;4622:40;:::i;:::-;659:8406;;5049:11;-1:-1:-1;;;;;659:8406:20;;;4725:3;4699:17;659:8406;4695:28;;;;;-1:-1:-1;;;;;4763:20:20;;;:::i;:::-;659:8406;;;;;;;4817:46;4818:19;:30;:19;;;;:::i;4817:46::-;659:8406;;;;;;;:::i;:::-;2927:12:2;659:8406:20;;;;;;;;774:42:21;4947:21:20;;:52;;;;659:8406;;-1:-1:-1;;;4971:18:20;;659:8406;4971:18;659:8406;4971:18;;;;;;;;;659:8406;4971:18;;;4947:52;;;-1:-1:-1;;;;;4937:62:20;;;:::i;:::-;659:8406;;;;;;;-1:-1:-1;;;5049:18:20;;659:8406;5049:18;659:8406;5049:18;;;;;;;;;;;;4947:52;5024:54;-1:-1:-1;;;;;5014:64:20;;;:::i;:::-;659:8406;;;;5099:45;;;;4947:52;5095:988;;;5193:10;;;;5291:40;659:8406;5193:10;;;5019:1;5193:10;;5185:85;;;;:::i;5291:40::-;659:8406;4680:13;;5095:988;5353:730;;;;;;-1:-1:-1;659:8406:20;;-1:-1:-1;;;5397:46:20;;5422:10;659:8406;5397:46;;659:8406;774:42:21;;;659:8406:20;;;;;;;;;;774:42:21;;659:8406:20;;-1:-1:-1;;5397:46:20;;;;;;;5019:1;5397:46;;;5353:730;;5095:988;;5397:46;;;659:8406;5397:46;;;;;;;;;:::i;:::-;;;;;5353:730;659:8406;;-1:-1:-1;;;5763:55:20;;-1:-1:-1;;;;;659:8406:20;;;5763:55;;659:8406;774:42:21;;;659:8406:20;;;-1:-1:-1;;5465:618:20;;659:8406;;;;;774:42:21;;659:8406:20;;-1:-1:-1;;5763:55:20;;;;;;;;5353:730;6029:15;5019:1;6029:15;659:8406;6029:15;;659:8406;;;;;;;;;;5839:228;;;;;-1:-1:-1;;;5839:228:20;;659:8406;5839:228;;659:8406;;;;;;;;;;;;;;;;:::i;:::-;5996:10;;659:8406;;;;;;;;5839:228;;;;;;;;;;;5019:1;5839:228;;;;;5353:730;;;5095:988;;5839:228;;;;;;;;;;;;:::i;:::-;;;;;;;659:8406;;774:42:21;659:8406:20;;774:42:21;;;;659:8406:20;;;-1:-1:-1;;;659:8406:20;;;;;;5763:55;;;659:8406;5763:55;;;;;;;;;:::i;:::-;;;;659:8406;;774:42:21;659:8406:20;;774:42:21;;;;5099:45:20;;5019:1;5099:45;;5049:18;;;;659:8406;5049:18;;;;;;;;;:::i;:::-;;;;;659:8406;;774:42:21;;;;;;;;4971:18:20;;;;659:8406;4971:18;;;;;;;;;:::i;:::-;;;;4947:52;;;;4695:28;6124:8;4695:28;6112:10;6124:8;:::i;659:8406::-;;;;;;-1:-1:-1;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:20;;-1:-1:-1;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:20;;-1:-1:-1;659:8406:20;;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;7636:14;659:8406;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;-1:-1:-1;;;;;1710:6:0;659:8406:20;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;1500:62:0;;:::i;:::-;659:8406:20;-1:-1:-1;;;;;3004:6:0;659:8406:20;-1:-1:-1;;659:8406:20;;3004:6:0;659:8406:20;;3052:40:0;;;;659:8406:20;;;;;;;-1:-1:-1;;659:8406:20;;;;-1:-1:-1;;;;;659:8406:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;-1:-1:-1;;;;;659:8406:20;;:::i;:::-;1500:62:0;;:::i;:::-;659:8406:20;;;;8391:18;659:8406;;;;;;;;;;;;;-1:-1:-1;;;8469:38:20;;8501:4;659:8406;8469:38;;659:8406;;8469:38;;;;;;;;;;;659:8406;8469:38;;;659:8406;8469:43;659:8406;;;8619:3;8593:17;659:8406;8589:28;;;;;;8643:20;-1:-1:-1;;;;;8643:20:20;;;:::i;:::-;659:8406;;;;;;;8643:29;8639:405;;8619:3;659:8406;;8574:13;;8639:405;-1:-1:-1;;659:8406:20;;;;;;;-1:-1:-1;;;;;8716:87:20;8693:110;8716:87;;:::i;:::-;659:8406;;;;;;;8693:20;;;:::i;:110::-;8593:17;659:8406;;;;;-1:-1:-1;;659:8406:20;;;;:::i;:::-;-1:-1:-1;;;;;659:8406:20;;;;;;;;;;8593:17;659:8406;8881:11;659:8406;10599:17:2;;;659:8406:20;;;;;;;8864:14;8881:35;8864:52;8881:35;;:::i;:::-;659:8406;;;;;;8864:14;;:::i;:::-;:52;659:8406;;;;;;;;;;10599:17:2;;;659:8406:20;;;;;;;;8864:52;8881:11;659:8406;;;;;-1:-1:-1;;659:8406:20;;;;:::i;:::-;;;10599:17:2;;;659:8406:20;;;;;;;;8881:11;659:8406;;;8391:18;659:8406;;;;;;;;;;;;;;;;-1:-1:-1;;;659:8406:20;;;;;8469:38;659:8406;;;;;;-1:-1:-1;;;659:8406:20;;;;;;;;8469:38;659:8406;;;;;;;;;8469:38;;;659:8406;8469:38;;659:8406;8469:38;;;;;;659:8406;8469:38;;;:::i;:::-;;;659:8406;;;;;8469:38;;;;;;-1:-1:-1;8469:38:20;;659:8406;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;;1500:62:0;;:::i;:::-;2729:52:20;2737:9;;:19;2729:52;:::i;:::-;774:42:21;659:8406:20;;2800:18;659:8406;;;;2792:60;;659:8406;;2792:60;:::i;:::-;659:8406;;-1:-1:-1;;;2887:42:20;;659:8406;2896:8;659:8406;2896:8;-1:-1:-1;;;;;2896:8:20;659:8406;2887:42;;;;;;;-1:-1:-1;;;;;2887:42:20;659:8406;2887:42;659:8406;2887:42;;;659:8406;;2962:100;659:8406;;2962:100;;;;-1:-1:-1;;;2962:100:20;;;659:8406;2962:100;;659:8406;774:42:21;659:8406:20;;;;;2962:100;;;;;;659:8406;2962:100;;;659:8406;3217:9;659:8406;;3075:111;3110:14;659:8406;3097:27;;;3075:111;:::i;:::-;3205:10;3217:9;:::i;:::-;659:8406;;;774:42:21;659:8406:20;;;774:42:21;;659:8406:20;3245:47;659:8406;3205:10;3245:47;;659:8406;2962:100;659:8406;2962:100;;659:8406;2962:100;;;;;;659:8406;2962:100;;;:::i;:::-;;;659:8406;;;;;3217:9;659:8406;;2962:100;;659:8406;;;2962:100;;;-1:-1:-1;2962:100:20;;2887:42;;;;;;;;;;;;;;:::i;:::-;;;;659:8406;;;;;;-1:-1:-1;;659:8406:20;;;;;;;;7522:11;659:8406;;;;;;;7522:11;659:8406;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;;:::i;:::-;;;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;659:8406:20;;;;;2081:18;659:8406;;2073:55;659:8406;;;;;;2073:55;:::i;:::-;659:8406;;2163:42;-1:-1:-1;;;2163:42:20;;659:8406;2172:8;659:8406;2172:8;-1:-1:-1;;;;;2172:8:20;659:8406;2163:42;;;;;;;-1:-1:-1;;;;;2163:42:20;659:8406;2163:42;659:8406;2163:42;;;659:8406;;2236:95;659:8406;;2236:95;;;;-1:-1:-1;;;2236:95:20;;;659:8406;2236:95;;659:8406;;;;;;;2236:95;;;;;;;659:8406;2236:95;;;659:8406;;2344:111;2379:14;659:8406;2366:27;;;2344:111;:::i;:::-;659:8406;;-1:-1:-1;;;2468:61:20;;2495:10;659:8406;2468:61;;659:8406;2515:4;659:8406;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2468:61:20;;;;;;2588:42;2468:61;2588:42;2468:61;2560:9;2468:61;;;659:8406;2495:10;;2560:9;:::i;:::-;659:8406;;2495:10;;;;2588:42;;774::21;;;;;;-1:-1:-1;;;;;774:42:21;;;659:8406:20;;;;774:42:21;659:8406:20;774:42:21;2468:61:20;;;659:8406;2468:61;659:8406;2468:61;;;;;;;:::i;:::-;;;2236:95;;;659:8406;2236:95;;659:8406;2236:95;;;;;;659:8406;2236:95;;;:::i;:::-;;;659:8406;;;;;;2236:95;;;;;;;-1:-1:-1;2236:95:20;;2163:42;;;;;;;;;;;;;;:::i;:::-;;;;659:8406;;;;;;-1:-1:-1;;659:8406:20;;;;;;;2780:2:2;659:8406:20;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;;3373:39;3381:12;;;3373:39;:::i;:::-;2927:12:2;659:8406:20;3471:40;3479:15;;;3471:40;:::i;:::-;659:8406;3574:3;3548:17;659:8406;3544:28;;;;;-1:-1:-1;;;;;3613:20:20;;;:::i;:::-;659:8406;;;;;;;3669:20;3668:47;3669:20;:31;:20;;;;:::i;3668:47::-;3736:22;774:42:21;3736:22:20;;774:42:21;;3807:10:20;3906:40;659:8406;3807:10;;;659:8406;3807:10;;3799:86;;;;:::i;3906:40::-;659:8406;3529:13;;3732:319;659:8406;;-1:-1:-1;;;3987:48:20;;4013:10;659:8406;3987:48;;659:8406;774:42:21;;;659:8406:20;;;;;;;;774:42:21;;659:8406:20;;-1:-1:-1;;3987:48:20;;;;;;;659:8406;3987:48;;;3732:319;;;;3987:48;;;659:8406;3987:48;;;;;;;;;:::i;:::-;;;;;3544:28;4092:8;3544:28;4080:10;4092:8;:::i;659:8406::-;;;;;;-1:-1:-1;;659:8406:20;;;;;;;;7813:15;659:8406;;;;;;;;;7813:15;659:8406;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;7813:15;659:8406;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;7813:15;659:8406;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;659:8406:20;;;;;;;;;;;;-1:-1:-1;;;;;735:10:5;659:8406:20;-1:-1:-1;659:8406:20;;;;-1:-1:-1;659:8406:20;;10599:17:2;;10580:36;;10576:309;;659:8406:20;4986:5:2;;;;;:::i;10576:309::-;10636:24;;;10632:130;;9813:19;;9809:89;;735:10:5;9911:21:2;9907:90;;4986:5;659:8406:20;;;;;;;;;-1:-1:-1;;;;;735:10:5;659:8406:20;-1:-1:-1;659:8406:20;;;;;-1:-1:-1;659:8406:20;;;;;10576:309:2;;;9907:90;9955:31;659:8406:20;9955:31:2;659:8406:20;;;;;9955:31:2;9809:89;9855:32;659:8406:20;9855:32:2;659:8406:20;;;;;9855:32:2;10632:130;10687:60;;;659:8406:20;10687:60:2;735:10:5;659:8406:20;;;;;;;;10687:60:2;659:8406:20;;;;;;-1:-1:-1;;659:8406:20;;;;;2927:12:2;659:8406:20;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;;:::i;:::-;;;735:10:5;;9813:19:2;9809:89;;-1:-1:-1;;;;;659:8406:20;9911:21:2;;;9907:90;;735:10:5;659:8406:20;;;;;;;;;-1:-1:-1;659:8406:20;;;;;-1:-1:-1;659:8406:20;;;;;;;10085:31:2;659:8406:20;735:10:5;10085:31:2;;659:8406:20;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;;;;1856:5:2;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1856:5:2;659:8406:20;;;;;;;;;;;;-1:-1:-1;659:8406:20;;-1:-1:-1;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:20;;;;7224:17;659:8406;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;659:8406:20;;;:::i;:::-;;;;;;;;7280:28;;;;;;659:8406;;;;;;;:::i;7310:3::-;7344:32;-1:-1:-1;;;;;7355:20:20;;;:::i;:::-;659:8406;;;;;;;7344:32;:::i;:::-;659:8406;;;;;;;;-1:-1:-1;659:8406:20;;;;;;;;;;;7265:13;;659:8406;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;659:8406:20;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;659:8406:20;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;;;;659:8406:20;;;;;-1:-1:-1;659:8406:20;;;;;;;;;;;;;;;-1:-1:-1;659:8406:20;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;7224:17;659:8406;;;;;;7224:17;-1:-1:-1;659:8406:20;;-1:-1:-1;659:8406:20;;;-1:-1:-1;659:8406:20;:::o;:::-;-1:-1:-1;;;659:8406:20;;;;;;;;;8881:11;659:8406;;;;;;8881:11;-1:-1:-1;659:8406:20;;-1:-1:-1;659:8406:20;;;-1:-1:-1;659:8406:20;:::o;:::-;;;;;;;;;:::o;:::-;;;5019:1;659:8406;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;-1:-1:-1;;;659:8406:20;;;;;;;;774:42:21;;;;;;;;;;659:8406:20;;;774:42:21;;;;;:::o;:::-;;;;;;;;;;;;659:8406:20;;;;;;;-1:-1:-1;;659:8406:20;774:42:21;;659:8406:20;;:::i;:::-;774:42:21;;;-1:-1:-1;774:42:21;;;;:::o;:::-;659:8406:20;774:42:21;:::o;:::-;;;;:::o;:::-;;659:8406:20;;-1:-1:-1;;;774:42:21;;;;;;;;;;;659:8406:20;774:42:21;659:8406:20;;;774:42:21;;659:8406:20;;;;:::o;:::-;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;659:8406:20;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;659:8406:20;;;;;;;;;;;;;;;;;;4856:224:21;-1:-1:-1;;;;;;;659:8406:20;774:42:21;4954:19;;774:42;;4993:21;;;4856:224;:::o;4954:118::-;659:8406:20;5034:38:21;659:8406:20;;;5034:38:21;;;;-1:-1:-1;;;5034:38:21;;5066:4;5034:38;;;659:8406:20;5034:38:21;;;;;;;;;;;4954:118;;4856:224;:::o;5034:38::-;;;;659:8406:20;5034:38:21;;659:8406:20;5034:38:21;;;;;;659:8406:20;5034:38:21;;;:::i;:::-;;;659:8406:20;;;;;;4856:224:21;:::o;5034:38::-;;;-1:-1:-1;5034:38:21;;5393:300:2;-1:-1:-1;;;;;659:8406:20;5476:18:2;;;5472:86;;-1:-1:-1;;;;;659:8406:20;5571:16:2;;;5567:86;;5492:1;659:8406:20;;;;;;;;;;6340:19:2;;;6336:115;;659:8406:20;;;;7083:25:2;659:8406:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:25:2;5393:300::o;6336:115::-;659:8406:20;6386:50:2;-1:-1:-1;;;6386:50:2;;;;;659:8406:20;;;;;6386:50:2;5567:86;5610:32;5492:1;5610:32;5492:1;5610:32;659:8406:20;;5492:1:2;5610:32;5472:86;5517:30;5492:1;5517:30;5492:1;5517:30;659:8406:20;;5492:1:2;5517:30;7984:206;-1:-1:-1;;;;;659:8406:20;8054:21:2;;8050:89;;8073:1;659:8406:20;;;;;;;;;;;6340:19:2;;;6336:115;;659:8406:20;7083:25:2;659:8406:20;;;;;;;;;;;;;;;6810:21:2;659:8406:20;;6810:21:2;659:8406:20;;;;;;7083:25:2;7984:206::o;6336:115::-;6386:50;;-1:-1:-1;;;659:8406:20;6386:50:2;;;659:8406:20;;;;;6386:50:2;1796:162:0;-1:-1:-1;;;;;1710:6:0;659:8406:20;;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;-1:-1:-1;1901:40:0;735:10:5;1901:40:0;659:8406:20;;-1:-1:-1;1901:40:0;7458:208:2;-1:-1:-1;;;;;659:8406:20;7528:21:2;;;7524:91;;6233:21;659:8406:20;;;;;;;;;6233:21:2;659:8406:20;7083:25:2;659:8406:20;7547:1:2;659:8406:20;;;;;;;;;;;;;;;;;;;;;7083:25:2;7458:208::o;659:8406:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "addToken(address,uint256)": "af81c5b9",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "deposit(address,uint256)": "47e7ef24",
              "depositETH(uint256)": "5358fbda",
              "donate(address,uint256)": "e69d849d",
              "donateETH(uint256)": "ab83f98a",
              "getAllowedActions()": "2494452d",
              "getBalances()": "00113e08",
              "getDepositUsdMin()": "8e4e9018",
              "getSplitRatio()": "4eadcca8",
              "getTokens()": "aa6ca808",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "removeToken(address)": "5fa7b584",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "withdraw(uint256)": "2e1a7d4d",
              "withdrawSingle(address,uint256)": "f9c4d3db",
              "withdrawSingleETH(uint256)": "a216aa06"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositUsdMin_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"initialTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"initialSplitRatio_\",\"type\":\"uint256[]\"},{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"allowedActions_\",\"type\":\"uint8[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDonated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donateETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedActions\",\"outputs\":[{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositUsdMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSplitRatio\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSingle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSingleETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pool/MultiTokenPool.sol\":\"MultiTokenPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0xdafda8f5f34be55f0f031adbe18eb4d11a8a6ea1ad2bcd3e67d0e76d11d9530f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a1298e140a1bf2cdc2b0f53c663fd71f010718822a547298435bf49b072693ef\",\"dweb:/ipfs/QmXzbUAgNmRWTtUNT6toQbrsXTS7hQonfDFATSdYRv6JR2\"]},\"contracts/interfaces/IMultiTokenPool.sol\":{\"keccak256\":\"0x82c1289792365bf675770f06d43816e00207385a368e1f004ee662582bb604bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e25dbe134fb5e13f032a5c04342d49d8d6634b32204264c4b1292903eb27b178\",\"dweb:/ipfs/QmXL6WvX7zAiSo2zHeDKJSagSRo4FB3F7DhXsppLw7kdDh\"]},\"contracts/interfaces/IPoolAdmin.sol\":{\"keccak256\":\"0x5531e78ca38f798dac44609d77e3addf1b8720966eea28b28e4e7bae9685d438\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d3f47b4ceebb0590d8454a0b35f4a5b8e0fa914294b4cb7826a5f35177a08af\",\"dweb:/ipfs/QmfWapy95rDTSjvzQkoCavk2AtUamemZvykNds4givHjar\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4252f4cc64140561f61a4d6ab1f39c540dd70099aa0f056ca0162b8683a78c95\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c644be7ada43bdc0faf1103004ad7a4bebf58f5f780e887ec14d9032b13efa59\",\"dweb:/ipfs/Qmc5Sdo5xjJEMJts7YzzUUboML46S4WEKmuSZBT8ZdZceC\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0xa81354f3347bcca731e13bc230a4a2e68e34a1135df0295ca5513f9932a0c5d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2cab49119e9a7eb270f82e74d6b15df984c2feca48348fafde0dabdde138922e\",\"dweb:/ipfs/QmQWMZnjhv1HeBMLUtdqk6cDZe7sErkRw1kBK7ZxtH5swU\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]},\"contracts/pool/MultiTokenPool.sol\":{\"keccak256\":\"0x7d4a72c34f446d83009e3a71c41f4bf2e6ccf60546e65a1cf361cf8599a078f9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d1ccfe94665510565630bb3bf74f5b3ac522cbabf28d2f83e1a2348d5581ce89\",\"dweb:/ipfs/QmTQLQuraM9PVZeAqgitjugrk85MunMbLQBGeg9ogdh96n\"]},\"contracts/pool/PoolActions.sol\":{\"keccak256\":\"0x844bf7714d2b3f8149f4449353e5bd4984a8ab9ccc540de4fe05e793c7791a83\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8252c20420da40ce90707764e2c529937e3fcb0b706fe5a2506d453c71b0e878\",\"dweb:/ipfs/QmW4CMahzUiBWCchFpULkrUdgN3Q5ZYNWNhDcHPLDHfFUK\"]}},\"version\":1}"
        }
      },
      "contracts/pool/PoolActions.sol": {
        "PoolActions": {
          "abi": [
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pool/PoolActions.sol\":\"PoolActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0xa81354f3347bcca731e13bc230a4a2e68e34a1135df0295ca5513f9932a0c5d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2cab49119e9a7eb270f82e74d6b15df984c2feca48348fafde0dabdde138922e\",\"dweb:/ipfs/QmQWMZnjhv1HeBMLUtdqk6cDZe7sErkRw1kBK7ZxtH5swU\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]},\"contracts/pool/PoolActions.sol\":{\"keccak256\":\"0x844bf7714d2b3f8149f4449353e5bd4984a8ab9ccc540de4fe05e793c7791a83\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8252c20420da40ce90707764e2c529937e3fcb0b706fe5a2506d453c71b0e878\",\"dweb:/ipfs/QmW4CMahzUiBWCchFpULkrUdgN3Q5ZYNWNhDcHPLDHfFUK\"]}},\"version\":1}"
        }
      }
    }
  }
}