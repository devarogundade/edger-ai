{
  "id": "bc55f1c985e775de1d8ba0ab102ef728",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
        "content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
      },
      "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
        "content": "pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
      },
      "contracts/Chainlink.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {IChainlink} from \"./interfaces/IChainlink.sol\";\r\n\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {AggregatorV3Interface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\r\n\r\ncontract Chainlink is IChainlink, Ownable {\r\n    mapping(address => address) _feeds;\r\n\r\n    constructor() Ownable(msg.sender) {}\r\n\r\n    function setFeed(address token, address feed) external onlyOwner {\r\n        _feeds[token] = feed;\r\n    }\r\n\r\n    function getPrice(\r\n        address token\r\n    ) external view override returns (uint256, uint80) {\r\n        AggregatorV3Interface agg = AggregatorV3Interface(_feeds[token]);\r\n\r\n        (, int256 answer, , , uint80 decimal) = agg.latestRoundData();\r\n\r\n        return (uint(answer), decimal);\r\n    }\r\n}\r\n"
      },
      "contracts/Factory.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"./lib/Enums.sol\";\r\nimport {Strategy} from \"./Strategy.sol\";\r\nimport {IFactory} from \"./interfaces/IFactory.sol\";\r\n\r\ncontract Factory is IFactory {\r\n    address internal _revenue;\r\n    address internal _dataFeed;\r\n    address internal _swapRouter;\r\n\r\n    address internal constant EDGER =\r\n        0x3E646e062F05e01e1860eA53a6DC81e7E9162DE6;\r\n\r\n    constructor(address revenue_, address dataFeed_, address swapRouter_) {\r\n        _revenue = revenue_;\r\n        _dataFeed = dataFeed_;\r\n        _swapRouter = swapRouter_;\r\n    }\r\n\r\n    function createStrategy(\r\n        address[] memory tokens,\r\n        uint256[] memory splitRatio,\r\n        Enums.Visibility visibility,\r\n        uint256 depositUsdMin,\r\n        uint256 forkCost,\r\n        Enums.ActionCall[] memory allowedActions\r\n    ) external returns (address) {\r\n        Strategy strategy = new Strategy(\r\n            address(this),\r\n            msg.sender,\r\n            visibility,\r\n            depositUsdMin,\r\n            forkCost,\r\n            tokens,\r\n            splitRatio,\r\n            allowedActions\r\n        );\r\n\r\n        emit StrategyCreated(\r\n            address(strategy),\r\n            msg.sender,\r\n            tokens,\r\n            splitRatio,\r\n            visibility,\r\n            depositUsdMin,\r\n            forkCost,\r\n            allowedActions\r\n        );\r\n\r\n        return address(strategy);\r\n    }\r\n\r\n    function forkStrategy(address strategy) external payable returns (address) {\r\n        Strategy base = Strategy(strategy);\r\n\r\n        Strategy fork = new Strategy(\r\n            address(this),\r\n            msg.sender,\r\n            Enums.Visibility.Private,\r\n            base.getDepositUsdMin(),\r\n            0, // forkCost\r\n            base.getTokens(),\r\n            base.getSplitRatio(),\r\n            base.getAllowedActions()\r\n        );\r\n\r\n        base.onFork{value: msg.value}();\r\n\r\n        emit StrategyForked(strategy, address(fork), msg.sender);\r\n\r\n        return address(strategy);\r\n    }\r\n\r\n    function getRevenueAddress() external view override returns (address) {\r\n        return _revenue;\r\n    }\r\n\r\n    function getSwapRouterAddress() external view override returns (address) {\r\n        return _swapRouter;\r\n    }\r\n\r\n    function getPriceOracleAddress() external view override returns (address) {\r\n        return _dataFeed;\r\n    }\r\n\r\n    function edger() external pure override returns (address) {\r\n        return EDGER;\r\n    }\r\n}\r\n"
      },
      "contracts/interfaces/IChainlink.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\ninterface IChainlink {\r\n    function getPrice(\r\n        address token\r\n    ) external view returns (uint256 price, uint80 decimal);\r\n}\r\n"
      },
      "contracts/interfaces/IFactory.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"../lib/Enums.sol\";\r\n\r\ninterface IFactory {\r\n    event StrategyCreated(\r\n        address strategy,\r\n        address creator,\r\n        address[] tokens,\r\n        uint256[] splitRatio,\r\n        Enums.Visibility visibility,\r\n        uint256 depositUsdMin,\r\n        uint256 forkCost,\r\n        Enums.ActionCall[] allowedActions\r\n    );\r\n\r\n    event StrategyForked(address base, address fork, address forker);\r\n\r\n    function createStrategy(\r\n        address[] memory tokens,\r\n        uint256[] memory splitRatio,\r\n        Enums.Visibility visibility,\r\n        uint256 depositUsdMin,\r\n        uint256 forkCost,\r\n        Enums.ActionCall[] memory allowedActions\r\n    ) external returns (address);\r\n\r\n    function forkStrategy(address strategy) external payable returns (address);\r\n\r\n    function getRevenueAddress() external view returns (address);\r\n\r\n    function getSwapRouterAddress() external view returns (address);\r\n\r\n    function getPriceOracleAddress() external view returns (address);\r\n\r\n    function edger() external view returns (address);\r\n}\r\n"
      },
      "contracts/interfaces/IMultiTokenPool.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"../lib/Enums.sol\";\r\nimport {IPoolAdmin} from \"./IPoolAdmin.sol\";\r\n\r\ninterface IMultiTokenPool is IPoolAdmin {\r\n    event TokensDeposited(address indexed lp, address token, uint256 amount);\r\n\r\n    event TokensWithdrawn(\r\n        address indexed lp,\r\n        address[] tokens,\r\n        uint256[] amounts\r\n    );\r\n\r\n    event TokensDonated(address indexed donor, address token, uint256 amount);\r\n\r\n    function deposit(address token, uint256 amount) external;\r\n\r\n    function depositETH(uint256 amount) external payable;\r\n\r\n    function withdraw(uint256 lpAmount) external;\r\n\r\n    function withdrawSingle(address tokenOut, uint256 lpAmount) external;\r\n\r\n    function withdrawSingleETH(uint256 lpAmount) external;\r\n\r\n    function donate(address token, uint256 amount) external;\r\n\r\n    function donateETH(uint256 amount) external payable;\r\n\r\n    function getTokens() external view returns (address[] memory);\r\n\r\n    function getBalances() external view returns (uint256[] memory);\r\n\r\n    function getSplitRatio() external view returns (uint256[] memory);\r\n\r\n    function getDepositUsdMin() external view returns (uint256);\r\n\r\n    function getAllowedActions()\r\n        external\r\n        view\r\n        returns (Enums.ActionCall[] memory);\r\n}\r\n"
      },
      "contracts/interfaces/IPoolAdmin.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\ninterface IPoolAdmin {\r\n    function addToken(address token, uint256 ratio) external;\r\n\r\n    function removeToken(address token) external;\r\n}\r\n"
      },
      "contracts/interfaces/IPriceOracle.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\ninterface IPriceOracle {\r\n    function getAmountOutInUsd(\r\n        uint256 amountIn,\r\n        address tokenIn\r\n    ) external view returns (uint256 amountOut);\r\n\r\n    function getAmountsOutInUsd(\r\n        uint256[] memory amountIns,\r\n        address[] memory tokenIns\r\n    ) external view returns (uint256 amountOut);\r\n\r\n    function getAmountOut(\r\n        uint256 amountIn,\r\n        address tokenIn,\r\n        address tokenOut\r\n    ) external view returns (uint256 amountOut);\r\n\r\n    function getAmountsOut(\r\n        uint256[] memory amountIns,\r\n        address[] memory tokenIns,\r\n        address tokenOut\r\n    ) external view returns (uint256 amountOut);\r\n}\r\n"
      },
      "contracts/interfaces/IRevenue.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Types} from \"../lib/Types.sol\";\r\n\r\ninterface IRevenue {\r\n    event Funded(address indexed user, uint256 amount);\r\n\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n\r\n    function fund(address to) external payable;\r\n\r\n    function withdraw(uint256 amount) external;\r\n\r\n    function balanceOf(\r\n        address user\r\n    ) external view returns (Types.Revenue memory);\r\n}\r\n"
      },
      "contracts/interfaces/IStrategy.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"../lib/Enums.sol\";\r\nimport {Params} from \"../lib/Params.sol\";\r\n\r\ninterface IStrategy {\r\n    event ExecuteCalled(Params.ExecuteCall call);\r\n\r\n    function onFork() external payable;\r\n\r\n    function executeCall(Params.ExecuteCall memory call) external;\r\n\r\n    function creator() external view returns (address);\r\n\r\n    function factory() external view returns (address);\r\n\r\n    function getForkCost() external view returns (uint256);\r\n}\r\n"
      },
      "contracts/interfaces/IWETH.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\ninterface IWETH {\r\n    function depositFor(address account) external payable returns (bool);\r\n\r\n    function withdrawTo(address account, uint256 value) external returns (bool);\r\n\r\n    function deposit() external payable;\r\n\r\n    function withdraw(uint value) external;\r\n}\r\n"
      },
      "contracts/lib/Enums.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nlibrary Enums {\r\n    enum Visibility {\r\n        Public,\r\n        Private\r\n    }\r\n\r\n    enum ActionCall {\r\n        AdjustSplitRatio,\r\n        SwapToSingle,\r\n        SwapToMany,\r\n        None\r\n        // SupplyToAave,\r\n        // BorrowFromAave,\r\n        // BridgeToken\r\n    }\r\n}\r\n"
      },
      "contracts/lib/Params.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"./Enums.sol\";\r\n\r\nlibrary Params {\r\n    struct ExecuteCall {\r\n        Enums.ActionCall action;\r\n        bytes data;\r\n    }\r\n}\r\n"
      },
      "contracts/lib/Types.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nlibrary Types {\r\n    struct Revenue {\r\n        uint256 claimed;\r\n        uint256 unClaimed;\r\n    }\r\n}\r\n"
      },
      "contracts/oracle/PriceOracle.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {IChainlink} from \"../interfaces/IChainlink.sol\";\r\nimport {IPriceOracle} from \"../interfaces/IPriceOracle.sol\";\r\n\r\ncontract PriceOracle is IPriceOracle {\r\n    IChainlink internal immutable _chainlink;\r\n\r\n    constructor(IChainlink chainlink) {\r\n        _chainlink = chainlink;\r\n    }\r\n\r\n    function getAmountOutInUsd(\r\n        uint256 amountIn,\r\n        address tokenIn\r\n    ) public view override returns (uint256 amountOut) {\r\n        (uint256 price, uint80 decimal) = _chainlink.getPrice(tokenIn);\r\n\r\n        amountOut = (price * amountIn) / (10 ** decimal);\r\n    }\r\n\r\n    function getAmountsOutInUsd(\r\n        uint256[] memory amountIns,\r\n        address[] memory tokenIns\r\n    ) public view override returns (uint256 amountOut) {\r\n        require(amountIns.length == tokenIns.length, \"Mismatched arrays\");\r\n        for (uint256 i = 0; i < amountIns.length; i++) {\r\n            amountOut += getAmountOutInUsd(amountIns[i], tokenIns[i]);\r\n        }\r\n    }\r\n\r\n    function getAmountOut(\r\n        uint256 amountIn,\r\n        address tokenIn,\r\n        address tokenOut\r\n    ) public view override returns (uint256 amountOut) {\r\n        if (tokenIn == tokenOut) return amountIn;\r\n\r\n        (uint256 basePrice, uint80 baseDecimal) = _chainlink.getPrice(tokenIn);\r\n        (uint256 quotePrice, uint80 quoteDecimal) = _chainlink.getPrice(\r\n            tokenOut\r\n        );\r\n\r\n        amountOut =\r\n            (basePrice * amountIn * (10 ** quoteDecimal)) /\r\n            (quotePrice * (10 ** baseDecimal));\r\n    }\r\n\r\n    function getAmountsOut(\r\n        uint256[] memory amountIns,\r\n        address[] memory tokenIns,\r\n        address tokenOut\r\n    ) public view override returns (uint256 amountOut) {\r\n        require(amountIns.length == tokenIns.length, \"Mismatched arrays\");\r\n        for (uint256 i = 0; i < amountIns.length; i++) {\r\n            amountOut += getAmountOut(amountIns[i], tokenIns[i], tokenOut);\r\n        }\r\n    }\r\n}\r\n"
      },
      "contracts/pool/MultiTokenPool.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"../lib/Enums.sol\";\r\nimport {IFactory} from \"../interfaces/IFactory.sol\";\r\nimport {IPriceOracle} from \"../interfaces/IPriceOracle.sol\";\r\nimport {IMultiTokenPool} from \"../interfaces/IMultiTokenPool.sol\";\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {IUniswapV2Router02} from \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\r\n\r\nimport {PoolActions} from \"./PoolActions.sol\";\r\n\r\ncontract MultiTokenPool is ERC20, PoolActions, IMultiTokenPool, Ownable {\r\n    constructor(\r\n        address factory_,\r\n        address creator_,\r\n        uint256 depositUsdMin_,\r\n        address[] memory initialTokens_,\r\n        uint256[] memory initialSplitRatio_,\r\n        Enums.ActionCall[] memory allowedActions_\r\n    ) ERC20(\"LPToken\", \"LP\") Ownable(creator_) {\r\n        require(\r\n            initialTokens_.length == initialSplitRatio_.length,\r\n            \"Mismatched arrays\"\r\n        );\r\n\r\n        _factory = factory_;\r\n\r\n        address swapRouter = IFactory(_factory).getSwapRouterAddress();\r\n        _swapRouter = IUniswapV2Router02(swapRouter);\r\n\r\n        _depositUsdMin = depositUsdMin_;\r\n\r\n        _underlyingTokens = initialTokens_;\r\n        _splitRatio = initialSplitRatio_;\r\n\r\n        _allowedActions = allowedActions_;\r\n\r\n        uint256 totalRatio = 0;\r\n        for (uint256 i = 0; i < initialSplitRatio_.length; i++) {\r\n            totalRatio += initialSplitRatio_[i];\r\n            _isUnderlyingToken[initialTokens_[i]] = true;\r\n        }\r\n\r\n        require(totalRatio == DIVISOR, \"Invalid ratio sum\");\r\n    }\r\n\r\n    ////////////////////////////////////////////////\r\n    //// POOL FUNCTIONS                         ////\r\n    ////////////////////////////////////////////////\r\n\r\n    function deposit(\r\n        address token,\r\n        uint256 amount\r\n    ) external override onlyOwner {\r\n        require(_isUnderlyingToken[token], \"ETH not supported\");\r\n\r\n        address priceOracle = IFactory(_factory).getPriceOracleAddress();\r\n        uint256 amountUsd = IPriceOracle(priceOracle).getAmountOutInUsd(\r\n            amount,\r\n            token\r\n        );\r\n\r\n        require(\r\n            amountUsd >= _depositUsdMin,\r\n            \"Insufficient deposit amount in usd\"\r\n        );\r\n\r\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\r\n\r\n        _mint(msg.sender, amountUsd);\r\n\r\n        emit TokensDeposited(msg.sender, token, amount);\r\n    }\r\n\r\n    function depositETH(uint256 amount) external payable override onlyOwner {\r\n        require(msg.value == amount, \"Incorrect ETH amount\");\r\n        require(_isUnderlyingToken[SONIC_COIN], \"ETH not supported\");\r\n\r\n        address priceOracle = IFactory(_factory).getPriceOracleAddress();\r\n\r\n        uint256 amountUsd = IPriceOracle(priceOracle).getAmountOutInUsd(\r\n            amount,\r\n            SONIC_COIN\r\n        );\r\n\r\n        require(\r\n            amountUsd >= _depositUsdMin,\r\n            \"Insufficient deposit amount in usd\"\r\n        );\r\n\r\n        _mint(msg.sender, amountUsd);\r\n\r\n        emit TokensDeposited(msg.sender, SONIC_COIN, amount);\r\n    }\r\n\r\n    function withdraw(uint256 lpAmount) external override {\r\n        require(lpAmount > 0, \"Invalid amount\");\r\n\r\n        uint256 totalSupply = totalSupply();\r\n        require(totalSupply > 0, \"No liquidity\");\r\n\r\n        for (uint256 i = 0; i < _underlyingTokens.length; i++) {\r\n            address tokenOut = _underlyingTokens[i];\r\n            uint256 amountOut = (getBalance(tokenOut) * lpAmount) / totalSupply;\r\n\r\n            if (tokenOut == SONIC_COIN) {\r\n                (bool _success, ) = payable(msg.sender).call{value: amountOut}(\r\n                    \"\"\r\n                );\r\n\r\n                require(_success, \"ETH transfer failed\");\r\n            } else {\r\n                IERC20(tokenOut).transfer(msg.sender, amountOut);\r\n            }\r\n        }\r\n\r\n        _burn(msg.sender, lpAmount);\r\n    }\r\n\r\n    function withdrawSingle(address token, uint256 lpAmount) external override {\r\n        _withdrawSingle(token, lpAmount);\r\n    }\r\n\r\n    function withdrawSingleETH(uint256 lpAmount) external override {\r\n        _withdrawSingle(SONIC_COIN, lpAmount);\r\n    }\r\n\r\n    function _withdrawSingle(address tokenOut, uint256 lpAmount) internal {\r\n        require(lpAmount > 0, \"Invalid amount\");\r\n        require(_isUnderlyingToken[tokenOut], \"Invalid token\");\r\n\r\n        uint256 totalSupply = totalSupply();\r\n        require(totalSupply > 0, \"No liquidity\");\r\n\r\n        for (uint256 i = 0; i < _underlyingTokens.length; i++) {\r\n            address tokenIn = _underlyingTokens[i];\r\n            uint256 amountIn = (getBalance(tokenIn) * lpAmount) / totalSupply;\r\n\r\n            address[] memory path = new address[](2);\r\n\r\n            path[0] = tokenIn == SONIC_COIN ? _swapRouter.WETH() : tokenIn;\r\n            path[1] = tokenOut == SONIC_COIN ? _swapRouter.WETH() : tokenOut;\r\n\r\n            if (tokenIn == tokenOut && tokenOut == SONIC_COIN) {\r\n                (bool _success, ) = payable(msg.sender).call{value: amountIn}(\r\n                    \"\"\r\n                );\r\n\r\n                require(_success, \"ETH transfer failed\");\r\n            } else if (tokenIn == tokenOut) {\r\n                IERC20(tokenIn).transfer(msg.sender, amountIn);\r\n            } else if (tokenIn == SONIC_COIN) {\r\n                _swapRouter.swapExactETHForTokens{value: amountIn}(\r\n                    0, // amountOutMin\r\n                    path,\r\n                    msg.sender,\r\n                    block.timestamp + 1\r\n                );\r\n            } else {\r\n                IERC20(tokenIn).approve(address(_swapRouter), amountIn);\r\n\r\n                _swapRouter.swapExactTokensForTokens(\r\n                    amountIn,\r\n                    0, // amountOutMin\r\n                    path,\r\n                    msg.sender,\r\n                    block.timestamp + 1\r\n                );\r\n            }\r\n        }\r\n\r\n        _burn(msg.sender, lpAmount);\r\n    }\r\n\r\n    function donate(address token, uint256 amount) external override {\r\n        require(_isUnderlyingToken[token], \"Invalid token\");\r\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\r\n\r\n        emit TokensDonated(msg.sender, token, amount);\r\n    }\r\n\r\n    function donateETH(uint256 amount) external payable override {\r\n        require(_isUnderlyingToken[SONIC_COIN], \"ETH not supported\");\r\n        require(msg.value == amount, \"Incorrect ETH amount\");\r\n\r\n        emit TokensDonated(msg.sender, SONIC_COIN, amount);\r\n    }\r\n\r\n    ////////////////////////////////////////////////\r\n    //// VIEW FUNCTIONS                         ////\r\n    ////////////////////////////////////////////////\r\n\r\n    // Get the list of underlying tokens in the pool\r\n    function getTokens() external view override returns (address[] memory) {\r\n        return _underlyingTokens;\r\n    }\r\n\r\n    // Get the balances of all underlying tokens in the pool\r\n    function getBalances() external view override returns (uint256[] memory) {\r\n        uint256[] memory balances = new uint256[](_underlyingTokens.length);\r\n        for (uint256 i = 0; i < _underlyingTokens.length; i++) {\r\n            balances[i] = getBalance(_underlyingTokens[i]);\r\n        }\r\n        return balances;\r\n    }\r\n\r\n    function getSplitRatio() external view override returns (uint256[] memory) {\r\n        return _splitRatio;\r\n    }\r\n\r\n    function getDepositUsdMin() external view override returns (uint256) {\r\n        return _depositUsdMin;\r\n    }\r\n\r\n    function getAllowedActions()\r\n        external\r\n        view\r\n        override\r\n        returns (Enums.ActionCall[] memory)\r\n    {\r\n        return _allowedActions;\r\n    }\r\n\r\n    ////////////////////////////////////////////////\r\n    //// ADMIN FUNCTIONS                        ////\r\n    ////////////////////////////////////////////////\r\n\r\n    function addToken(\r\n        address token,\r\n        uint256 ratio\r\n    ) external override onlyOwner {\r\n        require(!_isUnderlyingToken[token], \"Token exists\");\r\n\r\n        _underlyingTokens.push(token);\r\n        _splitRatio.push(ratio);\r\n\r\n        _isUnderlyingToken[token] = true;\r\n    }\r\n\r\n    function removeToken(address token) external override onlyOwner {\r\n        require(_isUnderlyingToken[token], \"Token not found\");\r\n        require(\r\n            IERC20(token).balanceOf(address(this)) == 0,\r\n            \"Non-zero balance\"\r\n        );\r\n\r\n        for (uint256 i = 0; i < _underlyingTokens.length; i++) {\r\n            if (_underlyingTokens[i] == token) {\r\n                _underlyingTokens[i] = _underlyingTokens[\r\n                    _underlyingTokens.length - 1\r\n                ];\r\n                _underlyingTokens.pop();\r\n                _splitRatio[i] = _splitRatio[_splitRatio.length - 1];\r\n                _splitRatio.pop();\r\n                _isUnderlyingToken[token] = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n"
      },
      "contracts/pool/PoolActions.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Enums} from \"../lib/Enums.sol\";\r\nimport {IWETH} from \"../interfaces/IWETH.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {IUniswapV2Router02} from \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\r\n\r\nabstract contract PoolActions {\r\n    IUniswapV2Router02 internal immutable _swapRouter;\r\n    address internal immutable _factory;\r\n\r\n    uint256 internal _depositUsdMin;\r\n\r\n    uint256[] internal _splitRatio;\r\n    address[] internal _underlyingTokens;\r\n\r\n    Enums.ActionCall[] internal _allowedActions;\r\n\r\n    mapping(address => bool) internal _isUnderlyingToken;\r\n\r\n    uint256 constant DIVISOR = 10_000;\r\n    address constant SONIC_COIN = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n\r\n    function _swapToSingle(\r\n        address[] memory tokensIn,\r\n        address tokenOut\r\n    ) internal {\r\n        require(_isUnderlyingToken[tokenOut], \"Invalid token\");\r\n\r\n        for (uint256 i = 0; i < tokensIn.length; i++) {\r\n            address tokenIn = tokensIn[i];\r\n            uint256 amountIn = getBalance(tokenIn);\r\n\r\n            if (amountIn == 0) continue;\r\n\r\n            address[] memory path = new address[](2);\r\n\r\n            path[0] = tokenIn == SONIC_COIN ? _swapRouter.WETH() : tokenIn;\r\n            path[1] = tokenOut == SONIC_COIN ? _swapRouter.WETH() : tokenOut;\r\n\r\n            if (tokenIn == tokenOut) {\r\n                continue;\r\n            } else if (tokenIn == SONIC_COIN) {\r\n                _swapRouter.swapExactETHForTokens{value: amountIn}(\r\n                    0, // amountOutMin\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp + 1\r\n                );\r\n            } else {\r\n                IERC20(tokenIn).approve(address(_swapRouter), amountIn);\r\n\r\n                _swapRouter.swapExactTokensForTokens(\r\n                    amountIn,\r\n                    0, // amountOutMin\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp + 1\r\n                );\r\n            }\r\n        }\r\n\r\n        if (IERC20(_swapRouter.WETH()).balanceOf(address(this)) > 0) {\r\n            IWETH(_swapRouter.WETH()).withdraw(\r\n                IERC20(_swapRouter.WETH()).balanceOf(address(this))\r\n            );\r\n        }\r\n    }\r\n\r\n    function _swapToMany(address tokenIn, address[] memory tokensOut) internal {\r\n        require(_isUnderlyingToken[tokenIn], \"Invalid token\");\r\n\r\n        uint256 amountIns = tokenIn == SONIC_COIN\r\n            ? address(this).balance\r\n            : IERC20(tokenIn).balanceOf(address(this));\r\n\r\n        if (amountIns == 0) return;\r\n\r\n        uint256 amountIn = (amountIns / tokensOut.length);\r\n\r\n        for (uint256 i = 0; i < tokensOut.length; i++) {\r\n            address tokenOut = tokensOut[i];\r\n            require(_isUnderlyingToken[tokenOut], \"Invalid token\");\r\n\r\n            address[] memory path = new address[](2);\r\n\r\n            path[0] = tokenIn == SONIC_COIN ? _swapRouter.WETH() : tokenIn;\r\n            path[1] = tokenOut == SONIC_COIN ? _swapRouter.WETH() : tokenOut;\r\n\r\n            if (tokenIn == tokenOut) {\r\n                continue;\r\n            } else if (tokenIn == SONIC_COIN) {\r\n                _swapRouter.swapExactETHForTokens{value: amountIn}(\r\n                    0, // amountOutMin\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp + 1\r\n                );\r\n            } else {\r\n                IERC20(tokenIn).approve(address(_swapRouter), amountIn);\r\n\r\n                _swapRouter.swapExactTokensForTokens(\r\n                    amountIn,\r\n                    0, // amountOutMin\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp + 1\r\n                );\r\n            }\r\n        }\r\n\r\n        if (IERC20(_swapRouter.WETH()).balanceOf(address(this)) > 0) {\r\n            IWETH(_swapRouter.WETH()).withdraw(\r\n                IERC20(_swapRouter.WETH()).balanceOf(address(this))\r\n            );\r\n        }\r\n    }\r\n\r\n    function _adjustSplitRatio(uint256[] memory newRatios) internal {\r\n        require(newRatios.length == _underlyingTokens.length, \"Invalid length\");\r\n\r\n        uint256 totalRatio = 0;\r\n        for (uint256 i = 0; i < newRatios.length; i++) {\r\n            totalRatio += newRatios[i];\r\n        }\r\n\r\n        require(totalRatio == DIVISOR, \"Invalid ratio sum\");\r\n\r\n        _splitRatio = newRatios;\r\n    }\r\n\r\n    function getBalance(address token) internal view returns (uint256) {\r\n        return\r\n            token == SONIC_COIN\r\n                ? address(this).balance\r\n                : IERC20(token).balanceOf(address(this));\r\n    }\r\n}\r\n"
      },
      "contracts/Revenue.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport {Types} from \"./lib/Types.sol\";\r\nimport {IRevenue} from \"./interfaces/IRevenue.sol\";\r\n\r\ncontract Revenue is IRevenue {\r\n    mapping(address => Types.Revenue) private balances;\r\n\r\n    constructor() {}\r\n\r\n    function fund(address to) external payable override {\r\n        require(msg.value > 0, \"Must send some coin\");\r\n\r\n        balances[to].unClaimed += msg.value;\r\n\r\n        emit Funded(to, msg.value);\r\n    }\r\n\r\n    function withdraw(uint256 amount) external override {\r\n        require(\r\n            amount <= balances[msg.sender].unClaimed,\r\n            \"Insufficient balance\"\r\n        );\r\n\r\n        balances[msg.sender].unClaimed -= amount;\r\n        balances[msg.sender].claimed += amount;\r\n\r\n        payable(msg.sender).transfer(amount);\r\n\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n\r\n    function balanceOf(\r\n        address user\r\n    ) external view override returns (Types.Revenue memory) {\r\n        return balances[user];\r\n    }\r\n}\r\n"
      },
      "contracts/Strategy.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\nimport {Enums} from \"./lib/Enums.sol\";\nimport {Types} from \"./lib/Types.sol\";\nimport {Params} from \"./lib/Params.sol\";\nimport {IStrategy} from \"./interfaces/IStrategy.sol\";\nimport {MultiTokenPool} from \"./pool/MultiTokenPool.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IFactory} from \"./interfaces/IFactory.sol\";\nimport {IRevenue} from \"./interfaces/IRevenue.sol\";\n\ncontract Strategy is MultiTokenPool, IStrategy {\n    uint256 internal _forkCost;\n    Enums.Visibility internal _visibility;\n\n    constructor(\n        address factory_,\n        address creator_,\n        Enums.Visibility visibility_,\n        uint256 depositUsdMin_,\n        uint256 forkCost_,\n        address[] memory initialTokens_,\n        uint256[] memory initialSplitRatio_,\n        Enums.ActionCall[] memory allowedActions_\n    )\n        MultiTokenPool(\n            factory_,\n            creator_,\n            depositUsdMin_,\n            initialTokens_,\n            initialSplitRatio_,\n            allowedActions_\n        )\n    {\n        _visibility = visibility_;\n        _forkCost = forkCost_;\n    }\n\n    function onFork() external payable override onlyFactor {\n        require(_visibility == Enums.Visibility.Public, \"Disallowed\");\n        require(_forkCost <= msg.value, \"Insufficient fork cost\");\n\n        IRevenue(IFactory(_factory).getRevenueAddress()).fund{value: msg.value}(\n            owner()\n        );\n    }\n\n    function executeCall(\n        Params.ExecuteCall memory call\n    ) external override onlyEdger {\n        require(_isAllowedAction(call.action), \"Action not allowed\");\n\n        if (call.action == Enums.ActionCall.AdjustSplitRatio) {\n            uint256[] memory ratio = abi.decode(call.data, (uint256[]));\n\n            super._adjustSplitRatio(ratio);\n        }\n\n        if (call.action == Enums.ActionCall.SwapToSingle) {\n            (address[] memory tokensIn, address tokenOut) = abi.decode(\n                call.data,\n                (address[], address)\n            );\n\n            super._swapToSingle(tokensIn, tokenOut);\n        }\n\n        if (call.action == Enums.ActionCall.SwapToMany) {\n            (address tokenIn, address[] memory tokensOut) = abi.decode(\n                call.data,\n                (address, address[])\n            );\n\n            super._swapToMany(tokenIn, tokensOut);\n        }\n\n        emit ExecuteCalled(call);\n    }\n\n    ////////////////////////////////////////////////\n    //// INTERNAL FUNCTIONS                     ////\n    ////////////////////////////////////////////////\n\n    function _isAllowedAction(\n        Enums.ActionCall action\n    ) internal view returns (bool allowed) {\n        allowed = false;\n\n        for (uint i = 0; i < _allowedActions.length; i++) {\n            if (_allowedActions[i] == action) {\n                allowed = true;\n                break;\n            }\n        }\n    }\n\n    ////////////////////////////////////////////////\n    //// VIEW FUNCTIONS                         ////\n    ////////////////////////////////////////////////\n\n    function creator() external view override returns (address) {\n        return owner();\n    }\n\n    function factory() external view override returns (address) {\n        return _factory;\n    }\n\n    function getForkCost() external view override returns (uint256) {\n        return _forkCost;\n    }\n\n    ////////////////////////////////////////////////\n    //// MODIFIERS                              ////\n    ////////////////////////////////////////////////\n\n    modifier onlyFactor() {\n        require(msg.sender == _factory, \"Only factory is allowed\");\n        _;\n    }\n\n    modifier onlyEdger() {\n        require(\n            msg.sender == IFactory(_factory).edger(),\n            \"Only edger is allowed\"\n        );\n        _;\n    }\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
          "exportedSymbols": {
            "AggregatorV3Interface": [
              45
            ]
          },
          "id": 46,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "AggregatorV3Interface",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 45,
              "linearizedBaseContracts": [
                45
              ],
              "name": "AggregatorV3Interface",
              "nameLocation": "120:21:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "313ce567",
                  "id": 6,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "155:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "163:2:0"
                  },
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 6,
                        "src": "189:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "189:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "188:7:0"
                  },
                  "scope": 45,
                  "src": "146:50:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7284e416",
                  "id": 11,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "description",
                  "nameLocation": "209:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "220:2:0"
                  },
                  "returnParameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "246:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "246:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "245:15:0"
                  },
                  "scope": 45,
                  "src": "200:61:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "54fd4d50",
                  "id": 16,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "version",
                  "nameLocation": "274:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "281:2:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "307:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "307:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "306:9:0"
                  },
                  "scope": 45,
                  "src": "265:51:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9a6fc8f5",
                  "id": 31,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoundData",
                  "nameLocation": "329:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "_roundId",
                        "nameLocation": "354:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "347:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "347:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "341:25:0"
                  },
                  "returnParameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "397:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "390:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "390:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 23,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "413:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "406:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "429:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "421:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "421:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "448:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "440:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "466:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "459:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "459:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "389:93:0"
                  },
                  "scope": 45,
                  "src": "320:163:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "feaf968c",
                  "id": 44,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRoundData",
                  "nameLocation": "496:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "511:2:0"
                  },
                  "returnParameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "556:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "549:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "549:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "572:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "565:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "565:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 38,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "588:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "580:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "580:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "607:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "599:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "599:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 42,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "625:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "618:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "618:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "548:93:0"
                  },
                  "scope": 45,
                  "src": "487:155:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 46,
              "src": "110:534:0",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:613:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              979
            ],
            "Ownable": [
              193
            ]
          },
          "id": 194,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 47,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 49,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 194,
              "sourceUnit": 980,
              "src": "128:45:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 48,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 979,
                    "src": "136:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 51,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 979,
                    "src": "692:7:1"
                  },
                  "id": 52,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:1"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 50,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:1",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 193,
              "linearizedBaseContracts": [
                193,
                979
              ],
              "name": "Ownable",
              "nameLocation": "681:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "706:22:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 55,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:1",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 59,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 58,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 59,
                        "src": "858:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:1"
                  },
                  "src": "825:50:1"
                },
                {
                  "documentation": {
                    "id": 60,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:1",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 64,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 64,
                        "src": "994:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:1"
                  },
                  "src": "968:41:1"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 70,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 66,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 70,
                        "src": "1042:29:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 65,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 68,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 70,
                        "src": "1073:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 67,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:1"
                  },
                  "src": "1015:84:1"
                },
                {
                  "body": {
                    "id": 95,
                    "nodeType": "Block",
                    "src": "1259:153:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 76,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "1273:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 80,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 90,
                        "nodeType": "IfStatement",
                        "src": "1269:95:1",
                        "trueBody": {
                          "id": 89,
                          "nodeType": "Block",
                          "src": "1301:63:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 85,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 84,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 83,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 86,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 82,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64,
                                  "src": "1322:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 88,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 92,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "1392:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 91,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "1373:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 94,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 71,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:1",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 96,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 74,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "1237:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:1"
                  },
                  "returnParameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:1"
                  },
                  "scope": 193,
                  "src": "1225:187:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "1521:41:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 99,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "1531:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:1"
                      },
                      {
                        "id": 102,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 97,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:1",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 104,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 98,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:1"
                  },
                  "src": "1500:62:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 112,
                    "nodeType": "Block",
                    "src": "1693:30:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 110,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1710:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 109,
                        "id": 111,
                        "nodeType": "Return",
                        "src": "1703:13:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 105,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:1",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 113,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 106,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:1"
                  },
                  "returnParameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 113,
                        "src": "1684:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:1"
                  },
                  "scope": 193,
                  "src": "1638:85:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 129,
                    "nodeType": "Block",
                    "src": "1841:117:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 117,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "1855:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 119,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "1866:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 128,
                        "nodeType": "IfStatement",
                        "src": "1851:101:1",
                        "trueBody": {
                          "id": 127,
                          "nodeType": "Block",
                          "src": "1880:72:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 123,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 961,
                                      "src": "1928:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 124,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 122,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "1901:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 126,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 114,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:1",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 130,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:1"
                  },
                  "returnParameters": {
                    "id": 116,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:1"
                  },
                  "scope": 193,
                  "src": "1796:162:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 143,
                    "nodeType": "Block",
                    "src": "2347:47:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 137,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 136,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "2357:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 142,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 131,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:1",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 144,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 134,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 133,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "2337:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:1"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:1"
                  },
                  "returnParameters": {
                    "id": 135,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:1"
                  },
                  "scope": 193,
                  "src": "2293:101:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 171,
                    "nodeType": "Block",
                    "src": "2613:145:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 152,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "2627:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 153,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 166,
                        "nodeType": "IfStatement",
                        "src": "2623:91:1",
                        "trueBody": {
                          "id": 165,
                          "nodeType": "Block",
                          "src": "2651:63:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 161,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 160,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 159,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 162,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 158,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64,
                                  "src": "2672:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 164,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 168,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "2742:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 167,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "2723:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 145,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:1",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 172,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 150,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 149,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "2603:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:1"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 147,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 172,
                        "src": "2570:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 146,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:1"
                  },
                  "returnParameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:1"
                  },
                  "scope": 193,
                  "src": "2543:215:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 191,
                    "nodeType": "Block",
                    "src": "2975:124:1",
                    "statements": [
                      {
                        "assignments": [
                          179
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 179,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 191,
                            "src": "2985:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 178,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 181,
                        "initialValue": {
                          "id": 180,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "3004:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:1"
                      },
                      {
                        "expression": {
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 182,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "3020:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 183,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 175,
                            "src": "3029:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 185,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 187,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "3073:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 188,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 175,
                              "src": "3083:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 186,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3052:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 190,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 173,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:1",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 192,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 175,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2940:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:1"
                  },
                  "returnParameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:1"
                  },
                  "scope": 193,
                  "src": "2912:187:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 194,
              "src": "663:2438:1",
              "usedErrors": [
                59,
                64
              ],
              "usedEvents": [
                70
              ]
            }
          ],
          "src": "102:3000:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              330
            ],
            "IERC20Errors": [
              235
            ],
            "IERC721Errors": [
              283
            ]
          },
          "id": 331,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 195,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 196,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:2",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 235,
              "linearizedBaseContracts": [
                235
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 197,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 205,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 205,
                        "src": "654:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 205,
                        "src": "670:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 205,
                        "src": "687:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:2"
                  },
                  "src": "623:80:2"
                },
                {
                  "documentation": {
                    "id": 206,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 210,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 208,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 210,
                        "src": "891:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:2"
                  },
                  "src": "866:41:2"
                },
                {
                  "documentation": {
                    "id": 211,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 215,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 213,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "1104:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:2"
                  },
                  "src": "1077:45:2"
                },
                {
                  "documentation": {
                    "id": 216,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:2",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 224,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "1511:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 217,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "1528:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "1547:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:2"
                  },
                  "src": "1478:85:2"
                },
                {
                  "documentation": {
                    "id": 225,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 229,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "1775:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:2"
                  },
                  "src": "1748:45:2"
                },
                {
                  "documentation": {
                    "id": 230,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:2",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 234,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 233,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 232,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 234,
                        "src": "2025:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:2"
                  },
                  "src": "1999:43:2"
                }
              ],
              "scope": 331,
              "src": "280:1764:2",
              "usedErrors": [
                205,
                210,
                215,
                224,
                229,
                234
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 236,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:2",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 283,
              "linearizedBaseContracts": [
                283
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 237,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:2",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 241,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 240,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 239,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 241,
                        "src": "2469:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 238,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:2"
                  },
                  "src": "2444:40:2"
                },
                {
                  "documentation": {
                    "id": 242,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:2",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 246,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 244,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "2656:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:2"
                  },
                  "src": "2627:46:2"
                },
                {
                  "documentation": {
                    "id": 247,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:2",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 255,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "3000:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 251,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "3016:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 253,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "3033:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 252,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:2"
                  },
                  "src": "2973:75:2"
                },
                {
                  "documentation": {
                    "id": 256,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 260,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "3237:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:2"
                  },
                  "src": "3211:42:2"
                },
                {
                  "documentation": {
                    "id": 261,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 265,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 263,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "3451:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 262,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:2"
                  },
                  "src": "3423:46:2"
                },
                {
                  "documentation": {
                    "id": 266,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 272,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 268,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "3760:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "3778:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:2"
                  },
                  "src": "3727:68:2"
                },
                {
                  "documentation": {
                    "id": 273,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 277,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4008:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:2"
                  },
                  "src": "3980:46:2"
                },
                {
                  "documentation": {
                    "id": 278,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 282,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 280,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "4262:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:2"
                  },
                  "src": "4234:46:2"
                }
              ],
              "scope": 331,
              "src": "2190:2092:2",
              "usedErrors": [
                241,
                246,
                255,
                260,
                265,
                272,
                277,
                282
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 284,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:2",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 330,
              "linearizedBaseContracts": [
                330
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 285,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 295,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 294,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 295,
                        "src": "4860:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 286,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 295,
                        "src": "4876:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 291,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 295,
                        "src": "4893:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 290,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 293,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 295,
                        "src": "4909:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 292,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:2"
                  },
                  "src": "4827:99:2"
                },
                {
                  "documentation": {
                    "id": 296,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 300,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 298,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 300,
                        "src": "5116:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:2"
                  },
                  "src": "5089:43:2"
                },
                {
                  "documentation": {
                    "id": 301,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 305,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "5331:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:2"
                  },
                  "src": "5302:47:2"
                },
                {
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 312,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 308,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "5651:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "5669:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:2"
                  },
                  "src": "5616:68:2"
                },
                {
                  "documentation": {
                    "id": 313,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 317,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 315,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "5898:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:2"
                  },
                  "src": "5869:47:2"
                },
                {
                  "documentation": {
                    "id": 318,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 322,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 321,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 322,
                        "src": "6153:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:2"
                  },
                  "src": "6124:47:2"
                },
                {
                  "documentation": {
                    "id": 323,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:2",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 329,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 328,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 325,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 329,
                        "src": "6494:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 327,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 329,
                        "src": "6513:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 326,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:2"
                  },
                  "src": "6462:73:2"
                }
              ],
              "scope": 331,
              "src": "4430:2107:2",
              "usedErrors": [
                295,
                300,
                305,
                312,
                317,
                322,
                329
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              979
            ],
            "ERC20": [
              845
            ],
            "IERC20": [
              923
            ],
            "IERC20Errors": [
              235
            ],
            "IERC20Metadata": [
              949
            ]
          },
          "id": 846,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 332,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 334,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 846,
              "sourceUnit": 924,
              "src": "131:36:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 333,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 923,
                    "src": "139:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 336,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 846,
              "sourceUnit": 950,
              "src": "168:63:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 335,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 949,
                    "src": "176:14:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 338,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 846,
              "sourceUnit": 980,
              "src": "232:48:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 337,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 979,
                    "src": "240:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 340,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 846,
              "sourceUnit": 331,
              "src": "281:65:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 339,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 235,
                    "src": "289:12:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 342,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 979,
                    "src": "1133:7:3"
                  },
                  "id": 343,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:3"
                },
                {
                  "baseName": {
                    "id": 344,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 923,
                    "src": "1142:6:3"
                  },
                  "id": 345,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:3"
                },
                {
                  "baseName": {
                    "id": 346,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 949,
                    "src": "1150:14:3"
                  },
                  "id": 347,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:3"
                },
                {
                  "baseName": {
                    "id": 348,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 235,
                    "src": "1166:12:3"
                  },
                  "id": 349,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:3"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 341,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:3",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 845,
              "linearizedBaseContracts": [
                845,
                235,
                949,
                923,
                979
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "1185:53:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 352,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:3",
                    "keyType": {
                      "id": 350,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 351,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "1245:83:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 358,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:3",
                    "keyType": {
                      "id": 354,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 357,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:3",
                      "keyType": {
                        "id": 355,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 356,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "1335:28:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 363,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "1370:20:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 365,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "1396:22:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 381,
                    "nodeType": "Block",
                    "src": "1657:57:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 373,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "1667:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 374,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "1675:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1667:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 376,
                        "nodeType": "ExpressionStatement",
                        "src": "1667:13:3"
                      },
                      {
                        "expression": {
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 377,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "1690:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 378,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "1700:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1690:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 380,
                        "nodeType": "ExpressionStatement",
                        "src": "1690:17:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 366,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:171:3",
                    "text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
                  },
                  "id": 382,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 368,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1627:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "1613:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 367,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1613:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 370,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1648:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "1634:21:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 369,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1634:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1612:44:3"
                  },
                  "returnParameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1657:0:3"
                  },
                  "scope": 845,
                  "src": "1601:113:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    936
                  ],
                  "body": {
                    "id": 390,
                    "nodeType": "Block",
                    "src": "1839:29:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 388,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "1856:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 387,
                        "id": 389,
                        "nodeType": "Return",
                        "src": "1849:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 383,
                    "nodeType": "StructuredDocumentation",
                    "src": "1720:54:3",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 391,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1788:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 384,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1792:2:3"
                  },
                  "returnParameters": {
                    "id": 387,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 391,
                        "src": "1824:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1824:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1823:15:3"
                  },
                  "scope": 845,
                  "src": "1779:89:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    942
                  ],
                  "body": {
                    "id": 399,
                    "nodeType": "Block",
                    "src": "2043:31:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 397,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "2060:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 396,
                        "id": 398,
                        "nodeType": "Return",
                        "src": "2053:14:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 392,
                    "nodeType": "StructuredDocumentation",
                    "src": "1874:102:3",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 400,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1990:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 393,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1996:2:3"
                  },
                  "returnParameters": {
                    "id": 396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "2028:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2028:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2027:15:3"
                  },
                  "scope": 845,
                  "src": "1981:93:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    948
                  ],
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "2763:26:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2780:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 405,
                        "id": 407,
                        "nodeType": "Return",
                        "src": "2773:9:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 401,
                    "nodeType": "StructuredDocumentation",
                    "src": "2080:622:3",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2716:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 402,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2724:2:3"
                  },
                  "returnParameters": {
                    "id": 405,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 404,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "2756:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 403,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2756:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2755:7:3"
                  },
                  "scope": 845,
                  "src": "2707:82:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    872
                  ],
                  "body": {
                    "id": 417,
                    "nodeType": "Block",
                    "src": "2910:36:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 415,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "2927:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 414,
                        "id": 416,
                        "nodeType": "Return",
                        "src": "2920:19:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "2795:49:3",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 418,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2858:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2869:2:3"
                  },
                  "returnParameters": {
                    "id": 414,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 413,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 418,
                        "src": "2901:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2901:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2900:9:3"
                  },
                  "scope": 845,
                  "src": "2849:97:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    880
                  ],
                  "body": {
                    "id": 430,
                    "nodeType": "Block",
                    "src": "3078:42:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 426,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "3095:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 428,
                          "indexExpression": {
                            "id": 427,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "3105:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3095:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 425,
                        "id": 429,
                        "nodeType": "Return",
                        "src": "3088:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 419,
                    "nodeType": "StructuredDocumentation",
                    "src": "2952:47:3",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 431,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "3013:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3031:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "3023:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3023:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3022:17:3"
                  },
                  "returnParameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "3069:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3069:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3068:9:3"
                  },
                  "scope": 845,
                  "src": "3004:116:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    890
                  ],
                  "body": {
                    "id": 454,
                    "nodeType": "Block",
                    "src": "3390:103:3",
                    "statements": [
                      {
                        "assignments": [
                          442
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 442,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3408:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 454,
                            "src": "3400:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 441,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3400:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 445,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 443,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "3416:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3416:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3400:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 447,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "3448:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 448,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 434,
                              "src": "3455:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 449,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 436,
                              "src": "3459:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 446,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 575,
                            "src": "3438:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3438:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 451,
                        "nodeType": "ExpressionStatement",
                        "src": "3438:27:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3482:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 440,
                        "id": 453,
                        "nodeType": "Return",
                        "src": "3475:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 432,
                    "nodeType": "StructuredDocumentation",
                    "src": "3126:184:3",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 455,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3324:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 437,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3341:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 455,
                        "src": "3333:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3353:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 455,
                        "src": "3345:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3345:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:27:3"
                  },
                  "returnParameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 439,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 455,
                        "src": "3384:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 438,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3384:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3383:6:3"
                  },
                  "scope": 845,
                  "src": "3315:178:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    900
                  ],
                  "body": {
                    "id": 471,
                    "nodeType": "Block",
                    "src": "3640:51:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 465,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "3657:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 467,
                            "indexExpression": {
                              "id": 466,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "3669:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3657:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 469,
                          "indexExpression": {
                            "id": 468,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "3676:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3657:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 464,
                        "id": 470,
                        "nodeType": "Return",
                        "src": "3650:34:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 456,
                    "nodeType": "StructuredDocumentation",
                    "src": "3499:47:3",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 472,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3560:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 458,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3578:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 472,
                        "src": "3570:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 457,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3570:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3593:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 472,
                        "src": "3585:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3585:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3569:32:3"
                  },
                  "returnParameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 472,
                        "src": "3631:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3631:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3630:9:3"
                  },
                  "scope": 845,
                  "src": "3551:140:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    910
                  ],
                  "body": {
                    "id": 495,
                    "nodeType": "Block",
                    "src": "4077:107:3",
                    "statements": [
                      {
                        "assignments": [
                          483
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 483,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4095:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 495,
                            "src": "4087:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 482,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4087:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 486,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 484,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "4103:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4103:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4087:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 488,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 483,
                              "src": "4134:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 489,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 475,
                              "src": "4141:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 490,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 477,
                              "src": "4150:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 487,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              736,
                              796
                            ],
                            "referencedDeclaration": 736,
                            "src": "4125:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4125:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 492,
                        "nodeType": "ExpressionStatement",
                        "src": "4125:31:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4173:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 481,
                        "id": 494,
                        "nodeType": "Return",
                        "src": "4166:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 473,
                    "nodeType": "StructuredDocumentation",
                    "src": "3697:296:3",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 496,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "4007:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 478,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 475,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4023:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "4015:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 474,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4015:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 477,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4040:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "4032:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4032:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4014:32:3"
                  },
                  "returnParameters": {
                    "id": 481,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 480,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "4071:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 479,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4071:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4070:6:3"
                  },
                  "scope": 845,
                  "src": "3998:186:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    922
                  ],
                  "body": {
                    "id": 527,
                    "nodeType": "Block",
                    "src": "4869:151:3",
                    "statements": [
                      {
                        "assignments": [
                          509
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 509,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4887:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 527,
                            "src": "4879:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 508,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4879:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 512,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 510,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "4897:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4897:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4879:30:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 514,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 499,
                              "src": "4935:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 515,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 509,
                              "src": "4941:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 516,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "4950:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 513,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "4919:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4919:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 518,
                        "nodeType": "ExpressionStatement",
                        "src": "4919:37:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 520,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 499,
                              "src": "4976:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 521,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "4982:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 522,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "4986:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 519,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 575,
                            "src": "4966:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4966:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 524,
                        "nodeType": "ExpressionStatement",
                        "src": "4966:26:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5009:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 507,
                        "id": 526,
                        "nodeType": "Return",
                        "src": "5002:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 497,
                    "nodeType": "StructuredDocumentation",
                    "src": "4190:581:3",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 528,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4785:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 504,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 499,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4806:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "4798:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 498,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4798:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4820:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "4812:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4812:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4832:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "4824:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4824:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4797:41:3"
                  },
                  "returnParameters": {
                    "id": 507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 506,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "4863:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4863:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4862:6:3"
                  },
                  "scope": 845,
                  "src": "4776:244:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 574,
                    "nodeType": "Block",
                    "src": "5462:231:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 538,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "5476:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5492:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5484:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 539,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5484:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5484:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5476:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 552,
                        "nodeType": "IfStatement",
                        "src": "5472:86:3",
                        "trueBody": {
                          "id": 551,
                          "nodeType": "Block",
                          "src": "5496:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 547,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5544:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 546,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5536:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 545,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5536:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 548,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5536:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 544,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 210,
                                  "src": "5517:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5517:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 550,
                              "nodeType": "RevertStatement",
                              "src": "5510:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 553,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "5571:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5585:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5577:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 554,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5577:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5577:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5571:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 567,
                        "nodeType": "IfStatement",
                        "src": "5567:86:3",
                        "trueBody": {
                          "id": 566,
                          "nodeType": "Block",
                          "src": "5589:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 562,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5639:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 561,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5631:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 560,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5631:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 563,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5631:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 559,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 215,
                                  "src": "5610:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5610:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 565,
                              "nodeType": "RevertStatement",
                              "src": "5603:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 569,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "5670:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 570,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 533,
                              "src": "5676:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 571,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 535,
                              "src": "5680:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 568,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 652,
                            "src": "5662:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5662:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 573,
                        "nodeType": "ExpressionStatement",
                        "src": "5662:24:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 529,
                    "nodeType": "StructuredDocumentation",
                    "src": "5026:362:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 575,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5402:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 531,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5420:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "5412:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5412:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 533,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5434:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "5426:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 532,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5426:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 535,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5446:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "5438:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 534,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5438:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5411:41:3"
                  },
                  "returnParameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5462:0:3"
                  },
                  "scope": 845,
                  "src": "5393:300:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 651,
                    "nodeType": "Block",
                    "src": "6083:1032:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 585,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 578,
                            "src": "6097:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6113:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6105:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 586,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6105:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6105:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6097:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 622,
                          "nodeType": "Block",
                          "src": "6271:362:3",
                          "statements": [
                            {
                              "assignments": [
                                597
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 597,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6293:11:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 622,
                                  "src": "6285:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 596,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6285:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 601,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 598,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 353,
                                  "src": "6307:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 600,
                                "indexExpression": {
                                  "id": 599,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 578,
                                  "src": "6317:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6307:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6285:37:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 602,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 597,
                                  "src": "6340:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 603,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 582,
                                  "src": "6354:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6340:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 612,
                              "nodeType": "IfStatement",
                              "src": "6336:115:3",
                              "trueBody": {
                                "id": 611,
                                "nodeType": "Block",
                                "src": "6361:90:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 606,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 578,
                                          "src": "6411:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 607,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 597,
                                          "src": "6417:11:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 608,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 582,
                                          "src": "6430:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 605,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 205,
                                        "src": "6386:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 609,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6386:50:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 610,
                                    "nodeType": "RevertStatement",
                                    "src": "6379:57:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 621,
                              "nodeType": "UncheckedBlock",
                              "src": "6464:159:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 619,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 613,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 353,
                                        "src": "6571:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 615,
                                      "indexExpression": {
                                        "id": 614,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 578,
                                        "src": "6581:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6571:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 618,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 616,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 597,
                                        "src": "6589:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 617,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 582,
                                        "src": "6603:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6589:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6571:37:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 620,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6571:37:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 623,
                        "nodeType": "IfStatement",
                        "src": "6093:540:3",
                        "trueBody": {
                          "id": 595,
                          "nodeType": "Block",
                          "src": "6117:148:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 591,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 361,
                                  "src": "6233:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 592,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 582,
                                  "src": "6249:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6233:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 594,
                              "nodeType": "ExpressionStatement",
                              "src": "6233:21:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 624,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "6647:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6661:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6653:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 625,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6653:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6653:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6647:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 643,
                          "nodeType": "Block",
                          "src": "6862:206:3",
                          "statements": [
                            {
                              "id": 642,
                              "nodeType": "UncheckedBlock",
                              "src": "6876:182:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 640,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 636,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 353,
                                        "src": "7021:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 638,
                                      "indexExpression": {
                                        "id": 637,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 580,
                                        "src": "7031:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7021:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 639,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 582,
                                      "src": "7038:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7021:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 641,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7021:22:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 644,
                        "nodeType": "IfStatement",
                        "src": "6643:425:3",
                        "trueBody": {
                          "id": 635,
                          "nodeType": "Block",
                          "src": "6665:191:3",
                          "statements": [
                            {
                              "id": 634,
                              "nodeType": "UncheckedBlock",
                              "src": "6679:167:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 632,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 630,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 361,
                                      "src": "6810:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 631,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 582,
                                      "src": "6826:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6810:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 633,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6810:21:3"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 646,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "7092:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 647,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 580,
                              "src": "7098:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 648,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "7102:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 645,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 857,
                            "src": "7083:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7083:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 650,
                        "nodeType": "EmitStatement",
                        "src": "7078:30:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 576,
                    "nodeType": "StructuredDocumentation",
                    "src": "5699:304:3",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 652,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "6017:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 578,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6033:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "6025:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 577,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6025:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6047:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "6039:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6039:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6059:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "6051:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6051:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6024:41:3"
                  },
                  "returnParameters": {
                    "id": 584,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6083:0:3"
                  },
                  "scope": 845,
                  "src": "6008:1107:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 684,
                    "nodeType": "Block",
                    "src": "7514:152:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 660,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "7528:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 663,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7547:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7539:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 661,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7539:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7539:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7528:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 674,
                        "nodeType": "IfStatement",
                        "src": "7524:91:3",
                        "trueBody": {
                          "id": 673,
                          "nodeType": "Block",
                          "src": "7551:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 669,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7601:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 668,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7593:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 667,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7593:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 670,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7593:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 666,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 215,
                                  "src": "7572:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7572:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 672,
                              "nodeType": "RevertStatement",
                              "src": "7565:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 678,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7640:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7632:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 676,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7632:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7632:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 680,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 655,
                              "src": "7644:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 681,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "7653:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 675,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 652,
                            "src": "7624:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7624:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 683,
                        "nodeType": "ExpressionStatement",
                        "src": "7624:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 653,
                    "nodeType": "StructuredDocumentation",
                    "src": "7121:332:3",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 685,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7467:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 655,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7481:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 685,
                        "src": "7473:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 654,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7473:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 657,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7498:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 685,
                        "src": "7490:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7490:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7472:32:3"
                  },
                  "returnParameters": {
                    "id": 659,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7514:0:3"
                  },
                  "scope": 845,
                  "src": "7458:208:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "8040:150:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 693,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 688,
                            "src": "8054:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8073:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8065:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 694,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8065:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8065:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8054:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 707,
                        "nodeType": "IfStatement",
                        "src": "8050:89:3",
                        "trueBody": {
                          "id": 706,
                          "nodeType": "Block",
                          "src": "8077:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 702,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8125:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 701,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8117:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 700,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8117:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 703,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8117:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 699,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 210,
                                  "src": "8098:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8098:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 705,
                              "nodeType": "RevertStatement",
                              "src": "8091:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 709,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "8156:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8173:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8165:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 710,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8165:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8165:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 714,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "8177:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 708,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 652,
                            "src": "8148:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8148:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "8148:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 686,
                    "nodeType": "StructuredDocumentation",
                    "src": "7672:307:3",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 718,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7993:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 691,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 688,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "8007:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "7999:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7999:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 690,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8024:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "8016:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 689,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8016:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7998:32:3"
                  },
                  "returnParameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8040:0:3"
                  },
                  "scope": 845,
                  "src": "7984:206:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 735,
                    "nodeType": "Block",
                    "src": "8800:54:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 729,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "8819:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 730,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 723,
                              "src": "8826:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 731,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 725,
                              "src": "8835:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8842:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 728,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              736,
                              796
                            ],
                            "referencedDeclaration": 796,
                            "src": "8810:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8810:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 734,
                        "nodeType": "ExpressionStatement",
                        "src": "8810:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 719,
                    "nodeType": "StructuredDocumentation",
                    "src": "8196:525:3",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 736,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8735:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 726,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 721,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8752:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 736,
                        "src": "8744:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8744:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8767:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 736,
                        "src": "8759:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8759:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 725,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8784:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 736,
                        "src": "8776:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 724,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8776:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8743:47:3"
                  },
                  "returnParameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8800:0:3"
                  },
                  "scope": 845,
                  "src": "8726:128:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 795,
                    "nodeType": "Block",
                    "src": "9799:334:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 748,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 739,
                            "src": "9813:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9830:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9822:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 749,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9822:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9822:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9813:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 762,
                        "nodeType": "IfStatement",
                        "src": "9809:89:3",
                        "trueBody": {
                          "id": 761,
                          "nodeType": "Block",
                          "src": "9834:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 757,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9884:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 756,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9876:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 755,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9876:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 758,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9876:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 754,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 229,
                                  "src": "9855:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9855:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 760,
                              "nodeType": "RevertStatement",
                              "src": "9848:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 763,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 741,
                            "src": "9911:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9930:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9922:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 764,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9922:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9922:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9911:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 777,
                        "nodeType": "IfStatement",
                        "src": "9907:90:3",
                        "trueBody": {
                          "id": 776,
                          "nodeType": "Block",
                          "src": "9934:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 772,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9983:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 771,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9975:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 770,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9975:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 773,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9975:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 769,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 234,
                                  "src": "9955:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9955:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 775,
                              "nodeType": "RevertStatement",
                              "src": "9948:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 778,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "10006:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 781,
                              "indexExpression": {
                                "id": 779,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 739,
                                "src": "10018:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10006:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 782,
                            "indexExpression": {
                              "id": 780,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 741,
                              "src": "10025:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10006:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 783,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 743,
                            "src": "10036:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10006:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 785,
                        "nodeType": "ExpressionStatement",
                        "src": "10006:35:3"
                      },
                      {
                        "condition": {
                          "id": 786,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "10055:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 794,
                        "nodeType": "IfStatement",
                        "src": "10051:76:3",
                        "trueBody": {
                          "id": 793,
                          "nodeType": "Block",
                          "src": "10066:61:3",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 788,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 739,
                                    "src": "10094:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 789,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 741,
                                    "src": "10101:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 790,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 743,
                                    "src": "10110:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 787,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 866,
                                  "src": "10085:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10085:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 792,
                              "nodeType": "EmitStatement",
                              "src": "10080:36:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 737,
                    "nodeType": "StructuredDocumentation",
                    "src": "8860:836:3",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 796,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9710:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 746,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 739,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9727:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 796,
                        "src": "9719:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 738,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9719:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 741,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9742:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 796,
                        "src": "9734:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 740,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9734:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 743,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9759:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 796,
                        "src": "9751:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 742,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9751:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 745,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9771:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 796,
                        "src": "9766:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 744,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9766:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9718:63:3"
                  },
                  "returnParameters": {
                    "id": 747,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9799:0:3"
                  },
                  "scope": 845,
                  "src": "9701:432:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 843,
                    "nodeType": "Block",
                    "src": "10504:387:3",
                    "statements": [
                      {
                        "assignments": [
                          807
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 807,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10522:16:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 843,
                            "src": "10514:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 806,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10514:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 812,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 809,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 799,
                              "src": "10551:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 810,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 801,
                              "src": "10558:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 808,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "10541:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10541:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10514:52:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 813,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "10580:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 816,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10604:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 815,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10604:7:3",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 814,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10599:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10599:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10613:3:3",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10599:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10580:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 842,
                        "nodeType": "IfStatement",
                        "src": "10576:309:3",
                        "trueBody": {
                          "id": 841,
                          "nodeType": "Block",
                          "src": "10618:267:3",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 820,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 807,
                                  "src": "10636:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 821,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 803,
                                  "src": "10655:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10636:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 830,
                              "nodeType": "IfStatement",
                              "src": "10632:130:3",
                              "trueBody": {
                                "id": 829,
                                "nodeType": "Block",
                                "src": "10662:100:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 824,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 801,
                                          "src": "10714:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 825,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 807,
                                          "src": "10723:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 826,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 803,
                                          "src": "10741:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 823,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 224,
                                        "src": "10687:26:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 827,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10687:60:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 828,
                                    "nodeType": "RevertStatement",
                                    "src": "10680:67:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 840,
                              "nodeType": "UncheckedBlock",
                              "src": "10775:100:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 832,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 799,
                                        "src": "10812:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 833,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 801,
                                        "src": "10819:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 836,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 834,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 807,
                                          "src": "10828:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 835,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 803,
                                          "src": "10847:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10828:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 837,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10854:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 831,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        736,
                                        796
                                      ],
                                      "referencedDeclaration": 796,
                                      "src": "10803:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 838,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10803:57:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 839,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10803:57:3"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 797,
                    "nodeType": "StructuredDocumentation",
                    "src": "10139:271:3",
                    "text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 844,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10424:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 804,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 799,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10448:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "10440:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 798,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10440:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 801,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10463:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "10455:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 800,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10455:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 803,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10480:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "10472:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 802,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10472:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10439:47:3"
                  },
                  "returnParameters": {
                    "id": 805,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10504:0:3"
                  },
                  "scope": 845,
                  "src": "10415:476:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 846,
              "src": "1106:9787:3",
              "usedErrors": [
                205,
                210,
                215,
                224,
                229,
                234
              ],
              "usedEvents": [
                857,
                866
              ]
            }
          ],
          "src": "105:10789:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              923
            ]
          },
          "id": 924,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 847,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 848,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:4",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 923,
              "linearizedBaseContracts": [
                923
              ],
              "name": "IERC20",
              "nameLocation": "214:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 849,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 857,
                  "name": "Transfer",
                  "nameLocation": "396:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 856,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 851,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 857,
                        "src": "405:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 850,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 853,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 857,
                        "src": "427:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 855,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 857,
                        "src": "447:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 854,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:4"
                  },
                  "src": "390:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 858,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 866,
                  "name": "Approval",
                  "nameLocation": "627:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 865,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 860,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 866,
                        "src": "636:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 859,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 862,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 866,
                        "src": "659:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 864,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 866,
                        "src": "684:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 863,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:4"
                  },
                  "src": "621:78:4"
                },
                {
                  "documentation": {
                    "id": 867,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 872,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 868,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:4"
                  },
                  "returnParameters": {
                    "id": 871,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "821:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 869,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:4"
                  },
                  "scope": 923,
                  "src": "775:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 873,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 880,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 880,
                        "src": "931:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:4"
                  },
                  "returnParameters": {
                    "id": 879,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 878,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 880,
                        "src": "971:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:4"
                  },
                  "scope": 923,
                  "src": "912:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 881,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 890,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 886,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 883,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "1222:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 882,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 885,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "1234:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 884,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:4"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "1267:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:4"
                  },
                  "scope": 923,
                  "src": "1204:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 891,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 900,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 896,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 893,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 900,
                        "src": "1567:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 892,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 895,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 900,
                        "src": "1582:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 894,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:4"
                  },
                  "returnParameters": {
                    "id": 899,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 898,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 900,
                        "src": "1622:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 897,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:4"
                  },
                  "scope": 923,
                  "src": "1548:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 901,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 910,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 906,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 903,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 910,
                        "src": "2326:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 902,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 905,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 910,
                        "src": "2343:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 904,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:4"
                  },
                  "returnParameters": {
                    "id": 909,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 910,
                        "src": "2376:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:4"
                  },
                  "scope": 923,
                  "src": "2309:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 911,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 922,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 918,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 913,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 922,
                        "src": "2712:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 912,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 915,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 922,
                        "src": "2726:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 914,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 917,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 922,
                        "src": "2738:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 916,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:4"
                  },
                  "returnParameters": {
                    "id": 921,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 920,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 922,
                        "src": "2771:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 919,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:4"
                  },
                  "scope": 923,
                  "src": "2690:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 924,
              "src": "204:2575:4",
              "usedErrors": [],
              "usedEvents": [
                857,
                866
              ]
            }
          ],
          "src": "106:2674:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              923
            ],
            "IERC20Metadata": [
              949
            ]
          },
          "id": 950,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 925,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 927,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 950,
              "sourceUnit": 924,
              "src": "151:37:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 926,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 923,
                    "src": "159:6:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 929,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 923,
                    "src": "306:6:5"
                  },
                  "id": 930,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:5"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 928,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:5",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 949,
              "linearizedBaseContracts": [
                949,
                923
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 931,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:5",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 936,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 932,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:5"
                  },
                  "returnParameters": {
                    "id": 935,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 934,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 936,
                        "src": "417:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 933,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:5"
                  },
                  "scope": 949,
                  "src": "378:54:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 937,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:5",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 942,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 938,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:5"
                  },
                  "returnParameters": {
                    "id": 941,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 940,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 942,
                        "src": "540:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 939,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:5"
                  },
                  "scope": 949,
                  "src": "499:56:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 943,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:5",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 948,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 944,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:5"
                  },
                  "returnParameters": {
                    "id": 947,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 946,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 948,
                        "src": "674:5:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 945,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:5"
                  },
                  "scope": 949,
                  "src": "631:50:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 950,
              "src": "278:405:5",
              "usedErrors": [],
              "usedEvents": [
                857,
                866
              ]
            }
          ],
          "src": "125:559:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              979
            ]
          },
          "id": 980,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 951,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:6"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 952,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:6",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 979,
              "linearizedBaseContracts": [
                979
              ],
              "name": "Context",
              "nameLocation": "642:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 960,
                    "nodeType": "Block",
                    "src": "718:34:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 957,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 956,
                        "id": 959,
                        "nodeType": "Return",
                        "src": "728:17:6"
                      }
                    ]
                  },
                  "id": 961,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 953,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:6"
                  },
                  "returnParameters": {
                    "id": 956,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 955,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 961,
                        "src": "709:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 954,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:6"
                  },
                  "scope": 979,
                  "src": "656:96:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 969,
                    "nodeType": "Block",
                    "src": "825:32:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 966,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:6",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 965,
                        "id": 968,
                        "nodeType": "Return",
                        "src": "835:15:6"
                      }
                    ]
                  },
                  "id": 970,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 962,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:6"
                  },
                  "returnParameters": {
                    "id": 965,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 964,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "809:14:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 963,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:6"
                  },
                  "scope": 979,
                  "src": "758:99:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 977,
                    "nodeType": "Block",
                    "src": "935:25:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 974,
                        "id": 976,
                        "nodeType": "Return",
                        "src": "945:8:6"
                      }
                    ]
                  },
                  "id": 978,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 971,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:6"
                  },
                  "returnParameters": {
                    "id": 974,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 973,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "926:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 972,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:6"
                  },
                  "scope": 979,
                  "src": "863:97:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 980,
              "src": "624:338:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:6"
        },
        "id": 6
      },
      "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
          "exportedSymbols": {
            "IUniswapV2Router01": [
              1287
            ]
          },
          "id": 1288,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 981,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IUniswapV2Router01",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1287,
              "linearizedBaseContracts": [
                1287
              ],
              "name": "IUniswapV2Router01",
              "nameLocation": "36:18:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c45a0155",
                  "id": 986,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nameLocation": "70:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 982,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "77:2:7"
                  },
                  "returnParameters": {
                    "id": 985,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 986,
                        "src": "103:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "103:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "102:9:7"
                  },
                  "scope": 1287,
                  "src": "61:51:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ad5c4648",
                  "id": 991,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "WETH",
                  "nameLocation": "126:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 987,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "130:2:7"
                  },
                  "returnParameters": {
                    "id": 990,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 989,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "156:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 988,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "156:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "155:9:7"
                  },
                  "scope": 1287,
                  "src": "117:48:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e8e33700",
                  "id": 1016,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addLiquidity",
                  "nameLocation": "180:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1008,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 993,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "210:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "202:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 992,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "202:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 995,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "234:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "226:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "226:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 997,
                        "mutability": "mutable",
                        "name": "amountADesired",
                        "nameLocation": "255:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "250:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 996,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "250:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 999,
                        "mutability": "mutable",
                        "name": "amountBDesired",
                        "nameLocation": "284:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "279:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 998,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "279:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1001,
                        "mutability": "mutable",
                        "name": "amountAMin",
                        "nameLocation": "313:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "308:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "308:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1003,
                        "mutability": "mutable",
                        "name": "amountBMin",
                        "nameLocation": "338:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "333:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "333:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1005,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "366:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "358:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1004,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "358:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1007,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "383:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "378:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1006,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "378:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "192:205:7"
                  },
                  "returnParameters": {
                    "id": 1015,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1010,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nameLocation": "421:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "416:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1009,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1012,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nameLocation": "435:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "430:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1011,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "430:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1014,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "449:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "444:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1013,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "444:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:44:7"
                  },
                  "scope": 1287,
                  "src": "171:289:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f305d719",
                  "id": 1037,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addLiquidityETH",
                  "nameLocation": "474:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1018,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "507:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "499:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1017,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "499:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1020,
                        "mutability": "mutable",
                        "name": "amountTokenDesired",
                        "nameLocation": "527:18:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "522:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1019,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "522:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1022,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nameLocation": "560:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "555:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1021,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "555:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1024,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nameLocation": "589:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "584:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1023,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "584:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1026,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "619:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "611:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1025,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "611:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1028,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "636:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "631:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1027,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "631:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "489:161:7"
                  },
                  "returnParameters": {
                    "id": 1036,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1031,
                        "mutability": "mutable",
                        "name": "amountToken",
                        "nameLocation": "682:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "677:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1030,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "677:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1033,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nameLocation": "700:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "695:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "695:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1035,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "716:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "711:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "711:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "676:50:7"
                  },
                  "scope": 1287,
                  "src": "465:262:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "baa2abde",
                  "id": 1058,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidity",
                  "nameLocation": "741:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1052,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1039,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "774:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1058,
                        "src": "766:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1038,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "766:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1041,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "798:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1058,
                        "src": "790:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1043,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "819:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1058,
                        "src": "814:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "814:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1045,
                        "mutability": "mutable",
                        "name": "amountAMin",
                        "nameLocation": "843:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1058,
                        "src": "838:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "838:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1047,
                        "mutability": "mutable",
                        "name": "amountBMin",
                        "nameLocation": "868:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1058,
                        "src": "863:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "863:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1049,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "896:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1058,
                        "src": "888:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "888:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1051,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "913:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1058,
                        "src": "908:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1050,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "908:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "756:171:7"
                  },
                  "returnParameters": {
                    "id": 1057,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1054,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nameLocation": "951:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1058,
                        "src": "946:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1053,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "946:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1056,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nameLocation": "965:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1058,
                        "src": "960:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1055,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "960:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "945:28:7"
                  },
                  "scope": 1287,
                  "src": "732:242:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "02751cec",
                  "id": 1077,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityETH",
                  "nameLocation": "988:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1060,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1024:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "1016:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1059,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1016:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1062,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "1044:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "1039:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1061,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1064,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nameLocation": "1068:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "1063:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1063:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1066,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nameLocation": "1097:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "1092:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1092:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1068,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1127:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "1119:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1119:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1070,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1144:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "1139:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1139:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1006:152:7"
                  },
                  "returnParameters": {
                    "id": 1076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1073,
                        "mutability": "mutable",
                        "name": "amountToken",
                        "nameLocation": "1182:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "1177:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1177:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1075,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nameLocation": "1200:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "1195:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1074,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1195:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1176:34:7"
                  },
                  "scope": 1287,
                  "src": "979:232:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2195995c",
                  "id": 1106,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityWithPermit",
                  "nameLocation": "1225:25:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1079,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "1268:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1260:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1078,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1260:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1081,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "1292:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1284:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1080,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1284:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "1313:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1308:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1308:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1085,
                        "mutability": "mutable",
                        "name": "amountAMin",
                        "nameLocation": "1337:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1332:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1084,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1332:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1087,
                        "mutability": "mutable",
                        "name": "amountBMin",
                        "nameLocation": "1362:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1357:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1086,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1357:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1390:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1382:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1382:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1091,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1407:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1402:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1090,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1402:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1093,
                        "mutability": "mutable",
                        "name": "approveMax",
                        "nameLocation": "1430:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1425:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1092,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1425:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1095,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "1448:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1442:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1094,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1442:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1097,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1459:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1451:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1096,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1451:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1099,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1470:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1462:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1098,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1462:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1250:227:7"
                  },
                  "returnParameters": {
                    "id": 1105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1102,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nameLocation": "1501:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1496:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1101,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1496:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1104,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nameLocation": "1515:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1510:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1103,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1510:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1495:28:7"
                  },
                  "scope": 1287,
                  "src": "1216:308:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ded9382a",
                  "id": 1133,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityETHWithPermit",
                  "nameLocation": "1538:28:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1108,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1584:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "1576:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1107,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1576:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1110,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "1604:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "1599:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1109,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1599:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1112,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nameLocation": "1628:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "1623:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nameLocation": "1657:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "1652:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1652:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1116,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1687:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "1679:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1679:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1118,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1704:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "1699:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1117,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1699:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1120,
                        "mutability": "mutable",
                        "name": "approveMax",
                        "nameLocation": "1727:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "1722:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1119,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1722:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "1745:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "1739:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1739:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1124,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1756:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "1748:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1123,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1748:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1126,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1767:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "1759:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1125,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1759:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:208:7"
                  },
                  "returnParameters": {
                    "id": 1132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1129,
                        "mutability": "mutable",
                        "name": "amountToken",
                        "nameLocation": "1798:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "1793:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1128,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1793:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1131,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nameLocation": "1816:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "1811:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1130,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1811:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1792:34:7"
                  },
                  "scope": 1287,
                  "src": "1529:298:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "38ed1739",
                  "id": 1150,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForTokens",
                  "nameLocation": "1841:24:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1135,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "1880:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "1875:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1134,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1875:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "1903:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "1898:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1898:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1140,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "1944:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "1925:23:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1925:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1139,
                          "nodeType": "ArrayTypeName",
                          "src": "1925:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1142,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1966:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "1958:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1958:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1144,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1983:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "1978:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1978:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1865:132:7"
                  },
                  "returnParameters": {
                    "id": 1149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1148,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2030:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "2016:21:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1146,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2016:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1147,
                          "nodeType": "ArrayTypeName",
                          "src": "2016:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2015:23:7"
                  },
                  "scope": 1287,
                  "src": "1832:207:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8803dbee",
                  "id": 1167,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensForExactTokens",
                  "nameLocation": "2053:24:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1152,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "2092:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "2087:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1151,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2087:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1154,
                        "mutability": "mutable",
                        "name": "amountInMax",
                        "nameLocation": "2116:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "2111:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2111:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1157,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "2156:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "2137:23:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1155,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2137:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1156,
                          "nodeType": "ArrayTypeName",
                          "src": "2137:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1159,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2178:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "2170:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1158,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2170:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1161,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2195:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "2190:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1160,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2190:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2077:132:7"
                  },
                  "returnParameters": {
                    "id": 1166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1165,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2242:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "2228:21:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1163,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2228:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1164,
                          "nodeType": "ArrayTypeName",
                          "src": "2228:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2227:23:7"
                  },
                  "scope": 1287,
                  "src": "2044:207:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7ff36ab5",
                  "id": 1182,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactETHForTokens",
                  "nameLocation": "2265:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1169,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "2292:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1182,
                        "src": "2287:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1168,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2287:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1172,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "2325:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1182,
                        "src": "2306:23:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2306:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1171,
                          "nodeType": "ArrayTypeName",
                          "src": "2306:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1174,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2339:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1182,
                        "src": "2331:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1173,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2331:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1176,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2348:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1182,
                        "src": "2343:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1175,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2286:71:7"
                  },
                  "returnParameters": {
                    "id": 1181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1180,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2422:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1182,
                        "src": "2408:21:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1178,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2408:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1179,
                          "nodeType": "ArrayTypeName",
                          "src": "2408:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2407:23:7"
                  },
                  "scope": 1287,
                  "src": "2256:175:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4a25d94a",
                  "id": 1199,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensForExactETH",
                  "nameLocation": "2445:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1184,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "2472:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "2467:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1183,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2467:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1186,
                        "mutability": "mutable",
                        "name": "amountInMax",
                        "nameLocation": "2488:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "2483:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1185,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2483:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1189,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "2520:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "2501:23:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1187,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2501:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1188,
                          "nodeType": "ArrayTypeName",
                          "src": "2501:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1191,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2534:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "2526:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2526:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1193,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2543:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "2538:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2538:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2466:86:7"
                  },
                  "returnParameters": {
                    "id": 1198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1197,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2601:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "2587:21:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1195,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2587:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1196,
                          "nodeType": "ArrayTypeName",
                          "src": "2587:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2586:23:7"
                  },
                  "scope": 1287,
                  "src": "2436:174:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18cbafe5",
                  "id": 1216,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForETH",
                  "nameLocation": "2624:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1201,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "2651:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1216,
                        "src": "2646:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1200,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2646:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1203,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "2666:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1216,
                        "src": "2661:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1202,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2661:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1206,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "2699:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1216,
                        "src": "2680:23:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1204,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2680:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1205,
                          "nodeType": "ArrayTypeName",
                          "src": "2680:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1208,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2713:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1216,
                        "src": "2705:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2705:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1210,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2722:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1216,
                        "src": "2717:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1209,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2717:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2645:86:7"
                  },
                  "returnParameters": {
                    "id": 1215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1214,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2780:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1216,
                        "src": "2766:21:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1212,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2766:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1213,
                          "nodeType": "ArrayTypeName",
                          "src": "2766:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2765:23:7"
                  },
                  "scope": 1287,
                  "src": "2615:174:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fb3bdb41",
                  "id": 1231,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapETHForExactTokens",
                  "nameLocation": "2803:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1218,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "2830:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1231,
                        "src": "2825:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1217,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2825:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1221,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "2860:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1231,
                        "src": "2841:23:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2841:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1220,
                          "nodeType": "ArrayTypeName",
                          "src": "2841:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1223,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2874:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1231,
                        "src": "2866:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1222,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2866:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1225,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2883:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1231,
                        "src": "2878:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1224,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2878:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2824:68:7"
                  },
                  "returnParameters": {
                    "id": 1230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1229,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2957:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1231,
                        "src": "2943:21:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1227,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2943:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1228,
                          "nodeType": "ArrayTypeName",
                          "src": "2943:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2942:23:7"
                  },
                  "scope": 1287,
                  "src": "2794:172:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ad615dec",
                  "id": 1242,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "quote",
                  "nameLocation": "2981:5:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1233,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nameLocation": "2992:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "2987:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1232,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2987:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1235,
                        "mutability": "mutable",
                        "name": "reserveA",
                        "nameLocation": "3006:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "3001:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1234,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3001:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1237,
                        "mutability": "mutable",
                        "name": "reserveB",
                        "nameLocation": "3021:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "3016:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1236,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2986:44:7"
                  },
                  "returnParameters": {
                    "id": 1241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1240,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nameLocation": "3059:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "3054:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1239,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3054:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3053:14:7"
                  },
                  "scope": 1287,
                  "src": "2972:96:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "054d50d4",
                  "id": 1253,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountOut",
                  "nameLocation": "3082:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1244,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "3100:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1253,
                        "src": "3095:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1243,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3095:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1246,
                        "mutability": "mutable",
                        "name": "reserveIn",
                        "nameLocation": "3115:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1253,
                        "src": "3110:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1245,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3110:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1248,
                        "mutability": "mutable",
                        "name": "reserveOut",
                        "nameLocation": "3131:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1253,
                        "src": "3126:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1247,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3126:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3094:48:7"
                  },
                  "returnParameters": {
                    "id": 1252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1251,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "3171:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1253,
                        "src": "3166:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1250,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3166:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3165:16:7"
                  },
                  "scope": 1287,
                  "src": "3073:109:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "85f8c259",
                  "id": 1264,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountIn",
                  "nameLocation": "3196:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1260,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1255,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "3213:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1264,
                        "src": "3208:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1254,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3208:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1257,
                        "mutability": "mutable",
                        "name": "reserveIn",
                        "nameLocation": "3229:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1264,
                        "src": "3224:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1256,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3224:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1259,
                        "mutability": "mutable",
                        "name": "reserveOut",
                        "nameLocation": "3245:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1264,
                        "src": "3240:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1258,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3240:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3207:49:7"
                  },
                  "returnParameters": {
                    "id": 1263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1262,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "3285:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1264,
                        "src": "3280:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1261,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3280:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3279:15:7"
                  },
                  "scope": 1287,
                  "src": "3187:108:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d06ca61f",
                  "id": 1275,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsOut",
                  "nameLocation": "3309:13:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1266,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "3328:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "3323:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1265,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3323:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1269,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "3357:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "3338:23:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1267,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3338:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1268,
                          "nodeType": "ArrayTypeName",
                          "src": "3338:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3322:40:7"
                  },
                  "returnParameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1273,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "3400:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "3386:21:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1271,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3386:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1272,
                          "nodeType": "ArrayTypeName",
                          "src": "3386:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3385:23:7"
                  },
                  "scope": 1287,
                  "src": "3300:109:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1f00ca74",
                  "id": 1286,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsIn",
                  "nameLocation": "3423:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1277,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "3441:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1286,
                        "src": "3436:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1276,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3436:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1280,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "3471:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1286,
                        "src": "3452:23:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1278,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3452:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1279,
                          "nodeType": "ArrayTypeName",
                          "src": "3452:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3435:41:7"
                  },
                  "returnParameters": {
                    "id": 1285,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1284,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "3514:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1286,
                        "src": "3500:21:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1282,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3500:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1283,
                          "nodeType": "ArrayTypeName",
                          "src": "3500:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3499:23:7"
                  },
                  "scope": 1287,
                  "src": "3414:109:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1288,
              "src": "26:3499:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "0:3526:7"
        },
        "id": 7
      },
      "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
          "exportedSymbols": {
            "IUniswapV2Router01": [
              1287
            ],
            "IUniswapV2Router02": [
              1375
            ]
          },
          "id": 1376,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1289,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:8"
            },
            {
              "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
              "file": "./IUniswapV2Router01.sol",
              "id": 1290,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1376,
              "sourceUnit": 1288,
              "src": "26:34:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1291,
                    "name": "IUniswapV2Router01",
                    "nameLocations": [
                      "94:18:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1287,
                    "src": "94:18:8"
                  },
                  "id": 1292,
                  "nodeType": "InheritanceSpecifier",
                  "src": "94:18:8"
                }
              ],
              "canonicalName": "IUniswapV2Router02",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1375,
              "linearizedBaseContracts": [
                1375,
                1287
              ],
              "name": "IUniswapV2Router02",
              "nameLocation": "72:18:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "af2979eb",
                  "id": 1309,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
                  "nameLocation": "128:47:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1294,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "193:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1309,
                        "src": "185:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1293,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "185:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1296,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "213:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1309,
                        "src": "208:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1295,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "208:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1298,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nameLocation": "237:14:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1309,
                        "src": "232:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1297,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "232:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1300,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nameLocation": "266:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1309,
                        "src": "261:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1299,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "261:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1302,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "296:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1309,
                        "src": "288:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1301,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "288:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1304,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "313:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1309,
                        "src": "308:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1303,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "308:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "175:152:8"
                  },
                  "returnParameters": {
                    "id": 1308,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1307,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nameLocation": "351:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1309,
                        "src": "346:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1306,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "346:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "345:16:8"
                  },
                  "scope": 1375,
                  "src": "119:243:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5b0d5984",
                  "id": 1334,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
                  "nameLocation": "376:57:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1330,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1311,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "451:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "443:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1310,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "443:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1313,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "471:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "466:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1312,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "466:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1315,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nameLocation": "495:14:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "490:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1314,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "490:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1317,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nameLocation": "524:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "519:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1316,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "519:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1319,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "554:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "546:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1318,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "546:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1321,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "571:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "566:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1320,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "566:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1323,
                        "mutability": "mutable",
                        "name": "approveMax",
                        "nameLocation": "594:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "589:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1322,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "589:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1325,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "612:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "606:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1324,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "606:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1327,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "623:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "615:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1326,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "615:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1329,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "634:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "626:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1328,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "626:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "433:208:8"
                  },
                  "returnParameters": {
                    "id": 1333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1332,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nameLocation": "665:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "660:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1331,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "659:16:8"
                  },
                  "scope": 1375,
                  "src": "367:309:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5c11d795",
                  "id": 1348,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
                  "nameLocation": "691:53:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1336,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "759:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1348,
                        "src": "754:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1335,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "754:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1338,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "782:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1348,
                        "src": "777:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1337,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1341,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "823:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1348,
                        "src": "804:23:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1339,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "804:7:8",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1340,
                          "nodeType": "ArrayTypeName",
                          "src": "804:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1343,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "845:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1348,
                        "src": "837:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "837:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1345,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "862:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1348,
                        "src": "857:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1344,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "857:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "744:132:8"
                  },
                  "returnParameters": {
                    "id": 1347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "885:0:8"
                  },
                  "scope": 1375,
                  "src": "682:204:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b6f9de95",
                  "id": 1360,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
                  "nameLocation": "900:50:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1350,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "965:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "960:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1349,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "960:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1353,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "1006:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "987:23:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1351,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "987:7:8",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1352,
                          "nodeType": "ArrayTypeName",
                          "src": "987:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1355,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1028:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "1020:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1354,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1357,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1045:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "1040:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1356,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1040:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "950:109:8"
                  },
                  "returnParameters": {
                    "id": 1359,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1076:0:8"
                  },
                  "scope": 1375,
                  "src": "891:186:8",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "791ac947",
                  "id": 1374,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                  "nameLocation": "1091:50:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1362,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "1156:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1374,
                        "src": "1151:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1361,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1151:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1364,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "1179:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1374,
                        "src": "1174:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1363,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1174:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1367,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "1220:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1374,
                        "src": "1201:23:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1365,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1201:7:8",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1366,
                          "nodeType": "ArrayTypeName",
                          "src": "1201:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1369,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1242:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1374,
                        "src": "1234:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1368,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1371,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1259:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1374,
                        "src": "1254:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1370,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1254:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1141:132:8"
                  },
                  "returnParameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1282:0:8"
                  },
                  "scope": 1375,
                  "src": "1082:201:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1376,
              "src": "62:1223:8",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "0:1286:8"
        },
        "id": 8
      },
      "contracts/Chainlink.sol": {
        "ast": {
          "absolutePath": "contracts/Chainlink.sol",
          "exportedSymbols": {
            "AggregatorV3Interface": [
              45
            ],
            "Chainlink": [
              1451
            ],
            "IChainlink": [
              2101
            ],
            "Ownable": [
              193
            ]
          },
          "id": 1452,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1377,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:9"
            },
            {
              "absolutePath": "contracts/interfaces/IChainlink.sol",
              "file": "./interfaces/IChainlink.sol",
              "id": 1379,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1452,
              "sourceUnit": 2102,
              "src": "68:55:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1378,
                    "name": "IChainlink",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2101,
                    "src": "76:10:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1381,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1452,
              "sourceUnit": 194,
              "src": "127:67:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1380,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 193,
                    "src": "135:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
              "file": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
              "id": 1383,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1452,
              "sourceUnit": 46,
              "src": "196:112:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1382,
                    "name": "AggregatorV3Interface",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "204:21:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1384,
                    "name": "IChainlink",
                    "nameLocations": [
                      "334:10:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2101,
                    "src": "334:10:9"
                  },
                  "id": 1385,
                  "nodeType": "InheritanceSpecifier",
                  "src": "334:10:9"
                },
                {
                  "baseName": {
                    "id": 1386,
                    "name": "Ownable",
                    "nameLocations": [
                      "346:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 193,
                    "src": "346:7:9"
                  },
                  "id": 1387,
                  "nodeType": "InheritanceSpecifier",
                  "src": "346:7:9"
                }
              ],
              "canonicalName": "Chainlink",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1451,
              "linearizedBaseContracts": [
                1451,
                193,
                979,
                2101
              ],
              "name": "Chainlink",
              "nameLocation": "321:9:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1391,
                  "mutability": "mutable",
                  "name": "_feeds",
                  "nameLocation": "389:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "361:34:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 1390,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1388,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "369:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "361:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1389,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "380:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1398,
                    "nodeType": "Block",
                    "src": "438:2:9",
                    "statements": []
                  },
                  "id": 1399,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1394,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "426:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "430:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "426:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1396,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1393,
                        "name": "Ownable",
                        "nameLocations": [
                          "418:7:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 193,
                        "src": "418:7:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "418:19:9"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1392,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "415:2:9"
                  },
                  "returnParameters": {
                    "id": 1397,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "438:0:9"
                  },
                  "scope": 1451,
                  "src": "404:36:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1414,
                    "nodeType": "Block",
                    "src": "513:39:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1408,
                              "name": "_feeds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1391,
                              "src": "524:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1410,
                            "indexExpression": {
                              "id": 1409,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1401,
                              "src": "531:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "524:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1411,
                            "name": "feed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1403,
                            "src": "540:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "524:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1413,
                        "nodeType": "ExpressionStatement",
                        "src": "524:20:9"
                      }
                    ]
                  },
                  "functionSelector": "40b1eb10",
                  "id": 1415,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1406,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1405,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "503:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "503:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "503:9:9"
                    }
                  ],
                  "name": "setFeed",
                  "nameLocation": "457:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1401,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "473:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1415,
                        "src": "465:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1400,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "465:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1403,
                        "mutability": "mutable",
                        "name": "feed",
                        "nameLocation": "488:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1415,
                        "src": "480:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "480:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "464:29:9"
                  },
                  "returnParameters": {
                    "id": 1407,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "513:0:9"
                  },
                  "scope": 1451,
                  "src": "448:104:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2100
                  ],
                  "body": {
                    "id": 1449,
                    "nodeType": "Block",
                    "src": "658:200:9",
                    "statements": [
                      {
                        "assignments": [
                          1427
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1427,
                            "mutability": "mutable",
                            "name": "agg",
                            "nameLocation": "691:3:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1449,
                            "src": "669:25:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            },
                            "typeName": {
                              "id": 1426,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1425,
                                "name": "AggregatorV3Interface",
                                "nameLocations": [
                                  "669:21:9"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 45,
                                "src": "669:21:9"
                              },
                              "referencedDeclaration": 45,
                              "src": "669:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1433,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1429,
                                "name": "_feeds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1391,
                                "src": "719:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                  "typeString": "mapping(address => address)"
                                }
                              },
                              "id": 1431,
                              "indexExpression": {
                                "id": 1430,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1417,
                                "src": "726:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "719:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1428,
                            "name": "AggregatorV3Interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "697:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                              "typeString": "type(contract AggregatorV3Interface)"
                            }
                          },
                          "id": 1432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "697:36:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "669:64:9"
                      },
                      {
                        "assignments": [
                          null,
                          1435,
                          null,
                          null,
                          1437
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 1435,
                            "mutability": "mutable",
                            "name": "answer",
                            "nameLocation": "756:6:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1449,
                            "src": "749:13:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 1434,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "749:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          {
                            "constant": false,
                            "id": 1437,
                            "mutability": "mutable",
                            "name": "decimal",
                            "nameLocation": "775:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1449,
                            "src": "768:14:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 1436,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "768:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1441,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1438,
                              "name": "agg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1427,
                              "src": "786:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 1439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "790:15:9",
                            "memberName": "latestRoundData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44,
                            "src": "786:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "id": 1440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "786:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "746:61:9"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 1444,
                                  "name": "answer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1435,
                                  "src": "833:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 1443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "828:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1442,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "828:4:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "828:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1446,
                              "name": "decimal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1437,
                              "src": "842:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            }
                          ],
                          "id": 1447,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "827:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint256,uint80)"
                          }
                        },
                        "functionReturnParameters": 1424,
                        "id": 1448,
                        "nodeType": "Return",
                        "src": "820:30:9"
                      }
                    ]
                  },
                  "functionSelector": "41976e09",
                  "id": 1450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPrice",
                  "nameLocation": "569:8:9",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1419,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "623:8:9"
                  },
                  "parameters": {
                    "id": 1418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1417,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "596:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1450,
                        "src": "588:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "588:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "577:31:9"
                  },
                  "returnParameters": {
                    "id": 1424,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1421,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1450,
                        "src": "641:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1420,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "641:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1423,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1450,
                        "src": "650:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 1422,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "650:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "640:17:9"
                  },
                  "scope": 1451,
                  "src": "560:298:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1452,
              "src": "312:549:9",
              "usedErrors": [
                59,
                64
              ],
              "usedEvents": [
                70
              ]
            }
          ],
          "src": "40:823:9"
        },
        "id": 9
      },
      "contracts/Factory.sol": {
        "ast": {
          "absolutePath": "contracts/Factory.sol",
          "exportedSymbols": {
            "Enums": [
              2463
            ],
            "Factory": [
              1660
            ],
            "IFactory": [
              2186
            ],
            "Strategy": [
              2089
            ]
          },
          "id": 1661,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1453,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:10"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "./lib/Enums.sol",
              "id": 1455,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1661,
              "sourceUnit": 2464,
              "src": "68:38:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1454,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2463,
                    "src": "76:5:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/Strategy.sol",
              "file": "./Strategy.sol",
              "id": 1457,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1661,
              "sourceUnit": 2090,
              "src": "108:40:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1456,
                    "name": "Strategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2089,
                    "src": "116:8:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IFactory.sol",
              "file": "./interfaces/IFactory.sol",
              "id": 1459,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1661,
              "sourceUnit": 2187,
              "src": "150:51:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1458,
                    "name": "IFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2186,
                    "src": "158:8:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1460,
                    "name": "IFactory",
                    "nameLocations": [
                      "225:8:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2186,
                    "src": "225:8:10"
                  },
                  "id": 1461,
                  "nodeType": "InheritanceSpecifier",
                  "src": "225:8:10"
                }
              ],
              "canonicalName": "Factory",
              "contractDependencies": [
                2089
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1660,
              "linearizedBaseContracts": [
                1660,
                2186
              ],
              "name": "Factory",
              "nameLocation": "214:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "_revenue",
                  "nameLocation": "258:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1660,
                  "src": "241:25:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1465,
                  "mutability": "mutable",
                  "name": "_dataFeed",
                  "nameLocation": "290:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1660,
                  "src": "273:26:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1467,
                  "mutability": "mutable",
                  "name": "_swapRouter",
                  "nameLocation": "323:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1660,
                  "src": "306:28:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1470,
                  "mutability": "constant",
                  "name": "EDGER",
                  "nameLocation": "369:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1660,
                  "src": "343:85:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307833453634366530363246303565303165313836306541353361364443383165374539313632444536",
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "386:42:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x3E646e062F05e01e1860eA53a6DC81e7E9162DE6"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1491,
                    "nodeType": "Block",
                    "src": "507:106:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1479,
                            "name": "_revenue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1463,
                            "src": "518:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1480,
                            "name": "revenue_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1472,
                            "src": "529:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "518:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1482,
                        "nodeType": "ExpressionStatement",
                        "src": "518:19:10"
                      },
                      {
                        "expression": {
                          "id": 1485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1483,
                            "name": "_dataFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1465,
                            "src": "548:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1484,
                            "name": "dataFeed_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1474,
                            "src": "560:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "548:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1486,
                        "nodeType": "ExpressionStatement",
                        "src": "548:21:10"
                      },
                      {
                        "expression": {
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1487,
                            "name": "_swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1467,
                            "src": "580:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1488,
                            "name": "swapRouter_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1476,
                            "src": "594:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "580:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1490,
                        "nodeType": "ExpressionStatement",
                        "src": "580:25:10"
                      }
                    ]
                  },
                  "id": 1492,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1472,
                        "mutability": "mutable",
                        "name": "revenue_",
                        "nameLocation": "457:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1492,
                        "src": "449:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1471,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "449:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1474,
                        "mutability": "mutable",
                        "name": "dataFeed_",
                        "nameLocation": "475:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1492,
                        "src": "467:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "467:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1476,
                        "mutability": "mutable",
                        "name": "swapRouter_",
                        "nameLocation": "494:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1492,
                        "src": "486:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1475,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "486:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "448:58:10"
                  },
                  "returnParameters": {
                    "id": 1478,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "507:0:10"
                  },
                  "scope": 1660,
                  "src": "437:176:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2158
                  ],
                  "body": {
                    "id": 1554,
                    "nodeType": "Block",
                    "src": "899:555:10",
                    "statements": [
                      {
                        "assignments": [
                          1516
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1516,
                            "mutability": "mutable",
                            "name": "strategy",
                            "nameLocation": "919:8:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1554,
                            "src": "910:17:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Strategy_$2089",
                              "typeString": "contract Strategy"
                            },
                            "typeName": {
                              "id": 1515,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1514,
                                "name": "Strategy",
                                "nameLocations": [
                                  "910:8:10"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2089,
                                "src": "910:8:10"
                              },
                              "referencedDeclaration": 2089,
                              "src": "910:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$2089",
                                "typeString": "contract Strategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1533,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1522,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "965:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Factory_$1660",
                                    "typeString": "contract Factory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Factory_$1660",
                                    "typeString": "contract Factory"
                                  }
                                ],
                                "id": 1521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "957:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1520,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "957:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "957:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1524,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "985:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "989:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "985:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1526,
                              "name": "visibility",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1501,
                              "src": "1010:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Visibility_$2457",
                                "typeString": "enum Enums.Visibility"
                              }
                            },
                            {
                              "id": 1527,
                              "name": "depositUsdMin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1503,
                              "src": "1035:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1528,
                              "name": "forkCost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1505,
                              "src": "1063:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1529,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1495,
                              "src": "1086:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 1530,
                              "name": "splitRatio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1498,
                              "src": "1107:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1531,
                              "name": "allowedActions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1509,
                              "src": "1132:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                                "typeString": "enum Enums.ActionCall[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_Visibility_$2457",
                                "typeString": "enum Enums.Visibility"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                                "typeString": "enum Enums.ActionCall[] memory"
                              }
                            ],
                            "id": 1519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "930:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_enum$_Visibility_$2457_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr_$returns$_t_contract$_Strategy_$2089_$",
                              "typeString": "function (address,address,enum Enums.Visibility,uint256,uint256,address[] memory,uint256[] memory,enum Enums.ActionCall[] memory) returns (contract Strategy)"
                            },
                            "typeName": {
                              "id": 1518,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1517,
                                "name": "Strategy",
                                "nameLocations": [
                                  "934:8:10"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2089,
                                "src": "934:8:10"
                              },
                              "referencedDeclaration": 2089,
                              "src": "934:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$2089",
                                "typeString": "contract Strategy"
                              }
                            }
                          },
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "930:227:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Strategy_$2089",
                            "typeString": "contract Strategy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "910:247:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1537,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1516,
                                  "src": "1213:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Strategy_$2089",
                                    "typeString": "contract Strategy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Strategy_$2089",
                                    "typeString": "contract Strategy"
                                  }
                                ],
                                "id": 1536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1205:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1535,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1205:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1205:17:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1539,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1237:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1241:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1237:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1541,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1495,
                              "src": "1262:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 1542,
                              "name": "splitRatio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1498,
                              "src": "1283:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1543,
                              "name": "visibility",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1501,
                              "src": "1308:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Visibility_$2457",
                                "typeString": "enum Enums.Visibility"
                              }
                            },
                            {
                              "id": 1544,
                              "name": "depositUsdMin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1503,
                              "src": "1333:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1545,
                              "name": "forkCost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1505,
                              "src": "1361:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1546,
                              "name": "allowedActions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1509,
                              "src": "1384:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                                "typeString": "enum Enums.ActionCall[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_Visibility_$2457",
                                "typeString": "enum Enums.Visibility"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                                "typeString": "enum Enums.ActionCall[] memory"
                              }
                            ],
                            "id": 1534,
                            "name": "StrategyCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2128,
                            "src": "1175:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_enum$_Visibility_$2457_$_t_uint256_$_t_uint256_$_t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address[] memory,uint256[] memory,enum Enums.Visibility,uint256,uint256,enum Enums.ActionCall[] memory)"
                            }
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1175:234:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1548,
                        "nodeType": "EmitStatement",
                        "src": "1170:239:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1551,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1516,
                              "src": "1437:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$2089",
                                "typeString": "contract Strategy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Strategy_$2089",
                                "typeString": "contract Strategy"
                              }
                            ],
                            "id": 1550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1429:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1549,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1429:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1429:17:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1513,
                        "id": 1553,
                        "nodeType": "Return",
                        "src": "1422:24:10"
                      }
                    ]
                  },
                  "functionSelector": "8403ef08",
                  "id": 1555,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createStrategy",
                  "nameLocation": "630:14:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1510,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1495,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "672:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "655:23:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1493,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "655:7:10",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1494,
                          "nodeType": "ArrayTypeName",
                          "src": "655:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1498,
                        "mutability": "mutable",
                        "name": "splitRatio",
                        "nameLocation": "706:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "689:27:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1496,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "689:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1497,
                          "nodeType": "ArrayTypeName",
                          "src": "689:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1501,
                        "mutability": "mutable",
                        "name": "visibility",
                        "nameLocation": "744:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "727:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Visibility_$2457",
                          "typeString": "enum Enums.Visibility"
                        },
                        "typeName": {
                          "id": 1500,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1499,
                            "name": "Enums.Visibility",
                            "nameLocations": [
                              "727:5:10",
                              "733:10:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2457,
                            "src": "727:16:10"
                          },
                          "referencedDeclaration": 2457,
                          "src": "727:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Visibility_$2457",
                            "typeString": "enum Enums.Visibility"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1503,
                        "mutability": "mutable",
                        "name": "depositUsdMin",
                        "nameLocation": "773:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "765:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1502,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "765:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1505,
                        "mutability": "mutable",
                        "name": "forkCost",
                        "nameLocation": "805:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "797:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1504,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "797:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1509,
                        "mutability": "mutable",
                        "name": "allowedActions",
                        "nameLocation": "850:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "824:40:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1507,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1506,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "824:5:10",
                                "830:10:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2462,
                              "src": "824:16:10"
                            },
                            "referencedDeclaration": 2462,
                            "src": "824:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 1508,
                          "nodeType": "ArrayTypeName",
                          "src": "824:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "644:227:10"
                  },
                  "returnParameters": {
                    "id": 1513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1512,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "890:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1511,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:9:10"
                  },
                  "scope": 1660,
                  "src": "621:833:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2165
                  ],
                  "body": {
                    "id": 1622,
                    "nodeType": "Block",
                    "src": "1537:518:10",
                    "statements": [
                      {
                        "assignments": [
                          1564
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1564,
                            "mutability": "mutable",
                            "name": "base",
                            "nameLocation": "1557:4:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1622,
                            "src": "1548:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Strategy_$2089",
                              "typeString": "contract Strategy"
                            },
                            "typeName": {
                              "id": 1563,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1562,
                                "name": "Strategy",
                                "nameLocations": [
                                  "1548:8:10"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2089,
                                "src": "1548:8:10"
                              },
                              "referencedDeclaration": 2089,
                              "src": "1548:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$2089",
                                "typeString": "contract Strategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1568,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1566,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1557,
                              "src": "1573:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1565,
                            "name": "Strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2089,
                            "src": "1564:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strategy_$2089_$",
                              "typeString": "type(contract Strategy)"
                            }
                          },
                          "id": 1567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1564:18:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Strategy_$2089",
                            "typeString": "contract Strategy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1548:34:10"
                      },
                      {
                        "assignments": [
                          1571
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1571,
                            "mutability": "mutable",
                            "name": "fork",
                            "nameLocation": "1604:4:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1622,
                            "src": "1595:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Strategy_$2089",
                              "typeString": "contract Strategy"
                            },
                            "typeName": {
                              "id": 1570,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1569,
                                "name": "Strategy",
                                "nameLocations": [
                                  "1595:8:10"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2089,
                                "src": "1595:8:10"
                              },
                              "referencedDeclaration": 2089,
                              "src": "1595:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$2089",
                                "typeString": "contract Strategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1598,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1577,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1646:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Factory_$1660",
                                    "typeString": "contract Factory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Factory_$1660",
                                    "typeString": "contract Factory"
                                  }
                                ],
                                "id": 1576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1638:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1575,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1638:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1638:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1579,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1666:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1670:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1666:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1581,
                                  "name": "Enums",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2463,
                                  "src": "1691:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Enums_$2463_$",
                                    "typeString": "type(library Enums)"
                                  }
                                },
                                "id": 1582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1697:10:10",
                                "memberName": "Visibility",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2457,
                                "src": "1691:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Visibility_$2457_$",
                                  "typeString": "type(enum Enums.Visibility)"
                                }
                              },
                              "id": 1583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1708:7:10",
                              "memberName": "Private",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2456,
                              "src": "1691:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Visibility_$2457",
                                "typeString": "enum Enums.Visibility"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1584,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1564,
                                  "src": "1730:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Strategy_$2089",
                                    "typeString": "contract Strategy"
                                  }
                                },
                                "id": 1585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1735:16:10",
                                "memberName": "getDepositUsdMin",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3410,
                                "src": "1730:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 1586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1730:23:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1768:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1588,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1564,
                                  "src": "1796:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Strategy_$2089",
                                    "typeString": "contract Strategy"
                                  }
                                },
                                "id": 1589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1801:9:10",
                                "memberName": "getTokens",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3346,
                                "src": "1796:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                  "typeString": "function () view external returns (address[] memory)"
                                }
                              },
                              "id": 1590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1796:16:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1591,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1564,
                                  "src": "1827:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Strategy_$2089",
                                    "typeString": "contract Strategy"
                                  }
                                },
                                "id": 1592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1832:13:10",
                                "memberName": "getSplitRatio",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3401,
                                "src": "1827:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                  "typeString": "function () view external returns (uint256[] memory)"
                                }
                              },
                              "id": 1593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1827:20:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1594,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1564,
                                  "src": "1862:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Strategy_$2089",
                                    "typeString": "contract Strategy"
                                  }
                                },
                                "id": 1595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1867:17:10",
                                "memberName": "getAllowedActions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3421,
                                "src": "1862:22:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr_$",
                                  "typeString": "function () view external returns (enum Enums.ActionCall[] memory)"
                                }
                              },
                              "id": 1596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1862:24:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                                "typeString": "enum Enums.ActionCall[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_Visibility_$2457",
                                "typeString": "enum Enums.Visibility"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                                "typeString": "enum Enums.ActionCall[] memory"
                              }
                            ],
                            "id": 1574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1611:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_enum$_Visibility_$2457_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr_$returns$_t_contract$_Strategy_$2089_$",
                              "typeString": "function (address,address,enum Enums.Visibility,uint256,uint256,address[] memory,uint256[] memory,enum Enums.ActionCall[] memory) returns (contract Strategy)"
                            },
                            "typeName": {
                              "id": 1573,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1572,
                                "name": "Strategy",
                                "nameLocations": [
                                  "1615:8:10"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2089,
                                "src": "1615:8:10"
                              },
                              "referencedDeclaration": 2089,
                              "src": "1615:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$2089",
                                "typeString": "contract Strategy"
                              }
                            }
                          },
                          "id": 1597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1611:286:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Strategy_$2089",
                            "typeString": "contract Strategy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1595:302:10"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1599,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1564,
                                "src": "1910:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Strategy_$2089",
                                  "typeString": "contract Strategy"
                                }
                              },
                              "id": 1601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1915:6:10",
                              "memberName": "onFork",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1877,
                              "src": "1910:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 1604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 1602,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1929:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1933:5:10",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1929:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1910:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1910:31:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1606,
                        "nodeType": "ExpressionStatement",
                        "src": "1910:31:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1608,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1557,
                              "src": "1974:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1611,
                                  "name": "fork",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1571,
                                  "src": "1992:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Strategy_$2089",
                                    "typeString": "contract Strategy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Strategy_$2089",
                                    "typeString": "contract Strategy"
                                  }
                                ],
                                "id": 1610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1984:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1609,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1984:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1984:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1613,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1999:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2003:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1999:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1607,
                            "name": "StrategyForked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2136,
                            "src": "1959:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 1615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1959:51:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1616,
                        "nodeType": "EmitStatement",
                        "src": "1954:56:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1619,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1557,
                              "src": "2038:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2030:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1617,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2030:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2030:17:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1561,
                        "id": 1621,
                        "nodeType": "Return",
                        "src": "2023:24:10"
                      }
                    ]
                  },
                  "functionSelector": "64f079e1",
                  "id": 1623,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forkStrategy",
                  "nameLocation": "1471:12:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1558,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1557,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nameLocation": "1492:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1623,
                        "src": "1484:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1556,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1484:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1483:18:10"
                  },
                  "returnParameters": {
                    "id": 1561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1560,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1623,
                        "src": "1528:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1527:9:10"
                  },
                  "scope": 1660,
                  "src": "1462:593:10",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2170
                  ],
                  "body": {
                    "id": 1631,
                    "nodeType": "Block",
                    "src": "2133:34:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1629,
                          "name": "_revenue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1463,
                          "src": "2151:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1628,
                        "id": 1630,
                        "nodeType": "Return",
                        "src": "2144:15:10"
                      }
                    ]
                  },
                  "functionSelector": "78d1c86d",
                  "id": 1632,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRevenueAddress",
                  "nameLocation": "2072:17:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1625,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2106:8:10"
                  },
                  "parameters": {
                    "id": 1624,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2089:2:10"
                  },
                  "returnParameters": {
                    "id": 1628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1627,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1632,
                        "src": "2124:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1626,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2124:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2123:9:10"
                  },
                  "scope": 1660,
                  "src": "2063:104:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2175
                  ],
                  "body": {
                    "id": 1640,
                    "nodeType": "Block",
                    "src": "2248:37:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1638,
                          "name": "_swapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1467,
                          "src": "2266:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1637,
                        "id": 1639,
                        "nodeType": "Return",
                        "src": "2259:18:10"
                      }
                    ]
                  },
                  "functionSelector": "f5c8ba93",
                  "id": 1641,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSwapRouterAddress",
                  "nameLocation": "2184:20:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1634,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2221:8:10"
                  },
                  "parameters": {
                    "id": 1633,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2204:2:10"
                  },
                  "returnParameters": {
                    "id": 1637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1636,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "2239:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1635,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2239:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2238:9:10"
                  },
                  "scope": 1660,
                  "src": "2175:110:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2180
                  ],
                  "body": {
                    "id": 1649,
                    "nodeType": "Block",
                    "src": "2367:35:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1647,
                          "name": "_dataFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1465,
                          "src": "2385:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1646,
                        "id": 1648,
                        "nodeType": "Return",
                        "src": "2378:16:10"
                      }
                    ]
                  },
                  "functionSelector": "8b5350cc",
                  "id": 1650,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPriceOracleAddress",
                  "nameLocation": "2302:21:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1643,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2340:8:10"
                  },
                  "parameters": {
                    "id": 1642,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2323:2:10"
                  },
                  "returnParameters": {
                    "id": 1646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1645,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1650,
                        "src": "2358:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2358:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2357:9:10"
                  },
                  "scope": 1660,
                  "src": "2293:109:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2185
                  ],
                  "body": {
                    "id": 1658,
                    "nodeType": "Block",
                    "src": "2468:31:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1656,
                          "name": "EDGER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1470,
                          "src": "2486:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1655,
                        "id": 1657,
                        "nodeType": "Return",
                        "src": "2479:12:10"
                      }
                    ]
                  },
                  "functionSelector": "f94f657c",
                  "id": 1659,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "edger",
                  "nameLocation": "2419:5:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1652,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2441:8:10"
                  },
                  "parameters": {
                    "id": 1651,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2424:2:10"
                  },
                  "returnParameters": {
                    "id": 1655,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1654,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1659,
                        "src": "2459:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1653,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2459:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2458:9:10"
                  },
                  "scope": 1660,
                  "src": "2410:89:10",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1661,
              "src": "205:2297:10",
              "usedErrors": [],
              "usedEvents": [
                2128,
                2136
              ]
            }
          ],
          "src": "40:2464:10"
        },
        "id": 10
      },
      "contracts/Revenue.sol": {
        "ast": {
          "absolutePath": "contracts/Revenue.sol",
          "exportedSymbols": {
            "IRevenue": [
              2389
            ],
            "Revenue": [
              1770
            ],
            "Types": [
              2482
            ]
          },
          "id": 1771,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1662,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:11"
            },
            {
              "absolutePath": "contracts/lib/Types.sol",
              "file": "./lib/Types.sol",
              "id": 1664,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1771,
              "sourceUnit": 2483,
              "src": "68:38:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1663,
                    "name": "Types",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2482,
                    "src": "76:5:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IRevenue.sol",
              "file": "./interfaces/IRevenue.sol",
              "id": 1666,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1771,
              "sourceUnit": 2390,
              "src": "108:51:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1665,
                    "name": "IRevenue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2389,
                    "src": "116:8:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1667,
                    "name": "IRevenue",
                    "nameLocations": [
                      "183:8:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2389,
                    "src": "183:8:11"
                  },
                  "id": 1668,
                  "nodeType": "InheritanceSpecifier",
                  "src": "183:8:11"
                }
              ],
              "canonicalName": "Revenue",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1770,
              "linearizedBaseContracts": [
                1770,
                2389
              ],
              "name": "Revenue",
              "nameLocation": "172:7:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1673,
                  "mutability": "mutable",
                  "name": "balances",
                  "nameLocation": "241:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "199:50:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Revenue_$2481_storage_$",
                    "typeString": "mapping(address => struct Types.Revenue)"
                  },
                  "typeName": {
                    "id": 1672,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1669,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "207:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "199:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Revenue_$2481_storage_$",
                      "typeString": "mapping(address => struct Types.Revenue)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1671,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1670,
                        "name": "Types.Revenue",
                        "nameLocations": [
                          "218:5:11",
                          "224:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2481,
                        "src": "218:13:11"
                      },
                      "referencedDeclaration": 2481,
                      "src": "218:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Revenue_$2481_storage_ptr",
                        "typeString": "struct Types.Revenue"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1676,
                    "nodeType": "Block",
                    "src": "272:2:11",
                    "statements": []
                  },
                  "id": 1677,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1674,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "269:2:11"
                  },
                  "returnParameters": {
                    "id": 1675,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "272:0:11"
                  },
                  "scope": 1770,
                  "src": "258:16:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2375
                  ],
                  "body": {
                    "id": 1705,
                    "nodeType": "Block",
                    "src": "334:151:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1684,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "353:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "357:5:11",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "353:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "365:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "353:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d7573742073656e6420736f6d6520636f696e",
                              "id": 1688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "368:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_33924286f6567bd90df720bee40376d793fc7b73dbbbb1646c6f5950634b8ca8",
                                "typeString": "literal_string \"Must send some coin\""
                              },
                              "value": "Must send some coin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_33924286f6567bd90df720bee40376d793fc7b73dbbbb1646c6f5950634b8ca8",
                                "typeString": "literal_string \"Must send some coin\""
                              }
                            ],
                            "id": 1683,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "345:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "345:45:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1690,
                        "nodeType": "ExpressionStatement",
                        "src": "345:45:11"
                      },
                      {
                        "expression": {
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1691,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1673,
                                "src": "403:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Revenue_$2481_storage_$",
                                  "typeString": "mapping(address => struct Types.Revenue storage ref)"
                                }
                              },
                              "id": 1693,
                              "indexExpression": {
                                "id": 1692,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1679,
                                "src": "412:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "403:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Revenue_$2481_storage",
                                "typeString": "struct Types.Revenue storage ref"
                              }
                            },
                            "id": 1694,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "416:9:11",
                            "memberName": "unClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2480,
                            "src": "403:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1695,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "429:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "433:5:11",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "429:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "403:35:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1698,
                        "nodeType": "ExpressionStatement",
                        "src": "403:35:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1700,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1679,
                              "src": "463:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1701,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "467:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "471:5:11",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "467:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1699,
                            "name": "Funded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2364,
                            "src": "456:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "456:21:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1704,
                        "nodeType": "EmitStatement",
                        "src": "451:26:11"
                      }
                    ]
                  },
                  "functionSelector": "23024408",
                  "id": 1706,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fund",
                  "nameLocation": "291:4:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1681,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "325:8:11"
                  },
                  "parameters": {
                    "id": 1680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1679,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "304:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "296:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1678,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "296:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "295:12:11"
                  },
                  "returnParameters": {
                    "id": 1682,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "334:0:11"
                  },
                  "scope": 1770,
                  "src": "282:203:11",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2380
                  ],
                  "body": {
                    "id": 1754,
                    "nodeType": "Block",
                    "src": "545:327:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1713,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1708,
                                "src": "578:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1714,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1673,
                                    "src": "588:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Revenue_$2481_storage_$",
                                      "typeString": "mapping(address => struct Types.Revenue storage ref)"
                                    }
                                  },
                                  "id": 1717,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1715,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "597:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1716,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "601:6:11",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "597:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "588:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Revenue_$2481_storage",
                                    "typeString": "struct Types.Revenue storage ref"
                                  }
                                },
                                "id": 1718,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "609:9:11",
                                "memberName": "unClaimed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2480,
                                "src": "588:30:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "578:40:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e742062616c616e6365",
                              "id": 1720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "633:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                "typeString": "literal_string \"Insufficient balance\""
                              },
                              "value": "Insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                "typeString": "literal_string \"Insufficient balance\""
                              }
                            ],
                            "id": 1712,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "556:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "556:110:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1722,
                        "nodeType": "ExpressionStatement",
                        "src": "556:110:11"
                      },
                      {
                        "expression": {
                          "id": 1729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1723,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1673,
                                "src": "679:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Revenue_$2481_storage_$",
                                  "typeString": "mapping(address => struct Types.Revenue storage ref)"
                                }
                              },
                              "id": 1726,
                              "indexExpression": {
                                "expression": {
                                  "id": 1724,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "688:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "692:6:11",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "688:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "679:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Revenue_$2481_storage",
                                "typeString": "struct Types.Revenue storage ref"
                              }
                            },
                            "id": 1727,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "700:9:11",
                            "memberName": "unClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2480,
                            "src": "679:30:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1728,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1708,
                            "src": "713:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "679:40:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1730,
                        "nodeType": "ExpressionStatement",
                        "src": "679:40:11"
                      },
                      {
                        "expression": {
                          "id": 1737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1731,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1673,
                                "src": "730:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Revenue_$2481_storage_$",
                                  "typeString": "mapping(address => struct Types.Revenue storage ref)"
                                }
                              },
                              "id": 1734,
                              "indexExpression": {
                                "expression": {
                                  "id": 1732,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "739:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "743:6:11",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "739:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "730:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Revenue_$2481_storage",
                                "typeString": "struct Types.Revenue storage ref"
                              }
                            },
                            "id": 1735,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "751:7:11",
                            "memberName": "claimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2478,
                            "src": "730:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1736,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1708,
                            "src": "762:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "730:38:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1738,
                        "nodeType": "ExpressionStatement",
                        "src": "730:38:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1745,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1708,
                              "src": "810:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1741,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "789:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "793:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "789:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "781:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1739,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "781:8:11",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "781:19:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "801:8:11",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "781:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "781:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1747,
                        "nodeType": "ExpressionStatement",
                        "src": "781:36:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1749,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "845:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "849:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "845:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1751,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1708,
                              "src": "857:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1748,
                            "name": "Withdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2370,
                            "src": "835:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "835:29:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1753,
                        "nodeType": "EmitStatement",
                        "src": "830:34:11"
                      }
                    ]
                  },
                  "functionSelector": "2e1a7d4d",
                  "id": 1755,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "502:8:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1710,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "536:8:11"
                  },
                  "parameters": {
                    "id": 1709,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1708,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "519:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1755,
                        "src": "511:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1707,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "511:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "510:16:11"
                  },
                  "returnParameters": {
                    "id": 1711,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "545:0:11"
                  },
                  "scope": 1770,
                  "src": "493:379:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2388
                  ],
                  "body": {
                    "id": 1768,
                    "nodeType": "Block",
                    "src": "983:40:11",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1764,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1673,
                            "src": "1001:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Revenue_$2481_storage_$",
                              "typeString": "mapping(address => struct Types.Revenue storage ref)"
                            }
                          },
                          "id": 1766,
                          "indexExpression": {
                            "id": 1765,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1757,
                            "src": "1010:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1001:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Revenue_$2481_storage",
                            "typeString": "struct Types.Revenue storage ref"
                          }
                        },
                        "functionReturnParameters": 1763,
                        "id": 1767,
                        "nodeType": "Return",
                        "src": "994:21:11"
                      }
                    ]
                  },
                  "functionSelector": "70a08231",
                  "id": 1769,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "889:9:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1759,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "943:8:11"
                  },
                  "parameters": {
                    "id": 1758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1757,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "917:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1769,
                        "src": "909:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1756,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "909:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "898:30:11"
                  },
                  "returnParameters": {
                    "id": 1763,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1762,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1769,
                        "src": "961:20:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Revenue_$2481_memory_ptr",
                          "typeString": "struct Types.Revenue"
                        },
                        "typeName": {
                          "id": 1761,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1760,
                            "name": "Types.Revenue",
                            "nameLocations": [
                              "961:5:11",
                              "967:7:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2481,
                            "src": "961:13:11"
                          },
                          "referencedDeclaration": 2481,
                          "src": "961:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Revenue_$2481_storage_ptr",
                            "typeString": "struct Types.Revenue"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "960:22:11"
                  },
                  "scope": 1770,
                  "src": "880:143:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1771,
              "src": "163:863:11",
              "usedErrors": [],
              "usedEvents": [
                2364,
                2370
              ]
            }
          ],
          "src": "40:988:11"
        },
        "id": 11
      },
      "contracts/Strategy.sol": {
        "ast": {
          "absolutePath": "contracts/Strategy.sol",
          "exportedSymbols": {
            "Enums": [
              2463
            ],
            "IFactory": [
              2186
            ],
            "IRevenue": [
              2389
            ],
            "IStrategy": [
              2425
            ],
            "MultiTokenPool": [
              3549
            ],
            "Ownable": [
              193
            ],
            "Params": [
              2474
            ],
            "Strategy": [
              2089
            ],
            "Types": [
              2482
            ]
          },
          "id": 2090,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1772,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:12"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "./lib/Enums.sol",
              "id": 1774,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2090,
              "sourceUnit": 2464,
              "src": "65:38:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1773,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2463,
                    "src": "73:5:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/Types.sol",
              "file": "./lib/Types.sol",
              "id": 1776,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2090,
              "sourceUnit": 2483,
              "src": "104:38:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1775,
                    "name": "Types",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2482,
                    "src": "112:5:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/Params.sol",
              "file": "./lib/Params.sol",
              "id": 1778,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2090,
              "sourceUnit": 2475,
              "src": "143:40:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1777,
                    "name": "Params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2474,
                    "src": "151:6:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IStrategy.sol",
              "file": "./interfaces/IStrategy.sol",
              "id": 1780,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2090,
              "sourceUnit": 2426,
              "src": "184:53:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1779,
                    "name": "IStrategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2425,
                    "src": "192:9:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/pool/MultiTokenPool.sol",
              "file": "./pool/MultiTokenPool.sol",
              "id": 1782,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2090,
              "sourceUnit": 3550,
              "src": "238:57:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1781,
                    "name": "MultiTokenPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3549,
                    "src": "246:14:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1784,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2090,
              "sourceUnit": 194,
              "src": "296:67:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1783,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 193,
                    "src": "304:7:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IFactory.sol",
              "file": "./interfaces/IFactory.sol",
              "id": 1786,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2090,
              "sourceUnit": 2187,
              "src": "364:51:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1785,
                    "name": "IFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2186,
                    "src": "372:8:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IRevenue.sol",
              "file": "./interfaces/IRevenue.sol",
              "id": 1788,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2090,
              "sourceUnit": 2390,
              "src": "416:51:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1787,
                    "name": "IRevenue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2389,
                    "src": "424:8:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1789,
                    "name": "MultiTokenPool",
                    "nameLocations": [
                      "490:14:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3549,
                    "src": "490:14:12"
                  },
                  "id": 1790,
                  "nodeType": "InheritanceSpecifier",
                  "src": "490:14:12"
                },
                {
                  "baseName": {
                    "id": 1791,
                    "name": "IStrategy",
                    "nameLocations": [
                      "506:9:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2425,
                    "src": "506:9:12"
                  },
                  "id": 1792,
                  "nodeType": "InheritanceSpecifier",
                  "src": "506:9:12"
                }
              ],
              "canonicalName": "Strategy",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2089,
              "linearizedBaseContracts": [
                2089,
                2425,
                3549,
                193,
                2292,
                2307,
                4040,
                845,
                235,
                949,
                923,
                979
              ],
              "name": "Strategy",
              "nameLocation": "478:8:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1794,
                  "mutability": "mutable",
                  "name": "_forkCost",
                  "nameLocation": "539:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2089,
                  "src": "522:26:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1797,
                  "mutability": "mutable",
                  "name": "_visibility",
                  "nameLocation": "580:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2089,
                  "src": "554:37:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Visibility_$2457",
                    "typeString": "enum Enums.Visibility"
                  },
                  "typeName": {
                    "id": 1796,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1795,
                      "name": "Enums.Visibility",
                      "nameLocations": [
                        "554:5:12",
                        "560:10:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2457,
                      "src": "554:16:12"
                    },
                    "referencedDeclaration": 2457,
                    "src": "554:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Visibility_$2457",
                      "typeString": "enum Enums.Visibility"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1837,
                    "nodeType": "Block",
                    "src": "1100:73:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1829,
                            "name": "_visibility",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1797,
                            "src": "1110:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Visibility_$2457",
                              "typeString": "enum Enums.Visibility"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1830,
                            "name": "visibility_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1804,
                            "src": "1124:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Visibility_$2457",
                              "typeString": "enum Enums.Visibility"
                            }
                          },
                          "src": "1110:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Visibility_$2457",
                            "typeString": "enum Enums.Visibility"
                          }
                        },
                        "id": 1832,
                        "nodeType": "ExpressionStatement",
                        "src": "1110:25:12"
                      },
                      {
                        "expression": {
                          "id": 1835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1833,
                            "name": "_forkCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1794,
                            "src": "1145:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1834,
                            "name": "forkCost_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1808,
                            "src": "1157:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1145:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1836,
                        "nodeType": "ExpressionStatement",
                        "src": "1145:21:12"
                      }
                    ]
                  },
                  "id": 1838,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1821,
                          "name": "factory_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1799,
                          "src": "938:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1822,
                          "name": "creator_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1801,
                          "src": "960:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1823,
                          "name": "depositUsdMin_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1806,
                          "src": "982:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1824,
                          "name": "initialTokens_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1811,
                          "src": "1010:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1825,
                          "name": "initialSplitRatio_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1814,
                          "src": "1038:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1826,
                          "name": "allowedActions_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1818,
                          "src": "1070:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                            "typeString": "enum Enums.ActionCall[] memory"
                          }
                        }
                      ],
                      "id": 1827,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1820,
                        "name": "MultiTokenPool",
                        "nameLocations": [
                          "910:14:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3549,
                        "src": "910:14:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "910:185:12"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1819,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1799,
                        "mutability": "mutable",
                        "name": "factory_",
                        "nameLocation": "627:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1838,
                        "src": "619:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1798,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "619:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1801,
                        "mutability": "mutable",
                        "name": "creator_",
                        "nameLocation": "653:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1838,
                        "src": "645:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1800,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "645:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1804,
                        "mutability": "mutable",
                        "name": "visibility_",
                        "nameLocation": "688:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1838,
                        "src": "671:28:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Visibility_$2457",
                          "typeString": "enum Enums.Visibility"
                        },
                        "typeName": {
                          "id": 1803,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1802,
                            "name": "Enums.Visibility",
                            "nameLocations": [
                              "671:5:12",
                              "677:10:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2457,
                            "src": "671:16:12"
                          },
                          "referencedDeclaration": 2457,
                          "src": "671:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Visibility_$2457",
                            "typeString": "enum Enums.Visibility"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1806,
                        "mutability": "mutable",
                        "name": "depositUsdMin_",
                        "nameLocation": "717:14:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1838,
                        "src": "709:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1805,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1808,
                        "mutability": "mutable",
                        "name": "forkCost_",
                        "nameLocation": "749:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1838,
                        "src": "741:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1807,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "741:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1811,
                        "mutability": "mutable",
                        "name": "initialTokens_",
                        "nameLocation": "785:14:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1838,
                        "src": "768:31:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1809,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "768:7:12",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1810,
                          "nodeType": "ArrayTypeName",
                          "src": "768:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1814,
                        "mutability": "mutable",
                        "name": "initialSplitRatio_",
                        "nameLocation": "826:18:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1838,
                        "src": "809:35:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1812,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "809:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1813,
                          "nodeType": "ArrayTypeName",
                          "src": "809:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1818,
                        "mutability": "mutable",
                        "name": "allowedActions_",
                        "nameLocation": "880:15:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1838,
                        "src": "854:41:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1816,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1815,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "854:5:12",
                                "860:10:12"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2462,
                              "src": "854:16:12"
                            },
                            "referencedDeclaration": 2462,
                            "src": "854:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 1817,
                          "nodeType": "ArrayTypeName",
                          "src": "854:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "609:292:12"
                  },
                  "returnParameters": {
                    "id": 1828,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1100:0:12"
                  },
                  "scope": 2089,
                  "src": "598:575:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2403
                  ],
                  "body": {
                    "id": 1876,
                    "nodeType": "Block",
                    "src": "1234:258:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Visibility_$2457",
                                "typeString": "enum Enums.Visibility"
                              },
                              "id": 1849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1845,
                                "name": "_visibility",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1797,
                                "src": "1252:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Visibility_$2457",
                                  "typeString": "enum Enums.Visibility"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 1846,
                                    "name": "Enums",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2463,
                                    "src": "1267:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Enums_$2463_$",
                                      "typeString": "type(library Enums)"
                                    }
                                  },
                                  "id": 1847,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1273:10:12",
                                  "memberName": "Visibility",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2457,
                                  "src": "1267:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Visibility_$2457_$",
                                    "typeString": "type(enum Enums.Visibility)"
                                  }
                                },
                                "id": 1848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1284:6:12",
                                "memberName": "Public",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2455,
                                "src": "1267:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Visibility_$2457",
                                  "typeString": "enum Enums.Visibility"
                                }
                              },
                              "src": "1252:38:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "446973616c6c6f776564",
                              "id": 1850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1292:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2d6423744790b6029c9d5ea599c0fe5e8c874ff122fdf0e58daf8ea12b798429",
                                "typeString": "literal_string \"Disallowed\""
                              },
                              "value": "Disallowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2d6423744790b6029c9d5ea599c0fe5e8c874ff122fdf0e58daf8ea12b798429",
                                "typeString": "literal_string \"Disallowed\""
                              }
                            ],
                            "id": 1844,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1244:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1244:61:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1852,
                        "nodeType": "ExpressionStatement",
                        "src": "1244:61:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1854,
                                "name": "_forkCost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1794,
                                "src": "1323:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1855,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1336:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1340:5:12",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1336:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1323:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420666f726b20636f7374",
                              "id": 1858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1347:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_de3313357729295e3f34a33febe827e07a3e8f74ab904af250524aefd1220f55",
                                "typeString": "literal_string \"Insufficient fork cost\""
                              },
                              "value": "Insufficient fork cost"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_de3313357729295e3f34a33febe827e07a3e8f74ab904af250524aefd1220f55",
                                "typeString": "literal_string \"Insufficient fork cost\""
                              }
                            ],
                            "id": 1853,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1315:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1315:57:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1860,
                        "nodeType": "ExpressionStatement",
                        "src": "1315:57:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1872,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "1468:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1468:7:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1863,
                                            "name": "_factory",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3564,
                                            "src": "1401:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1862,
                                          "name": "IFactory",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2186,
                                          "src": "1392:8:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IFactory_$2186_$",
                                            "typeString": "type(contract IFactory)"
                                          }
                                        },
                                        "id": 1864,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1392:18:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IFactory_$2186",
                                          "typeString": "contract IFactory"
                                        }
                                      },
                                      "id": 1865,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1411:17:12",
                                      "memberName": "getRevenueAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2170,
                                      "src": "1392:36:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 1866,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1392:38:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1861,
                                  "name": "IRevenue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2389,
                                  "src": "1383:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IRevenue_$2389_$",
                                    "typeString": "type(contract IRevenue)"
                                  }
                                },
                                "id": 1867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1383:48:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRevenue_$2389",
                                  "typeString": "contract IRevenue"
                                }
                              },
                              "id": 1868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1432:4:12",
                              "memberName": "fund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2375,
                              "src": "1383:53:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                                "typeString": "function (address) payable external"
                              }
                            },
                            "id": 1871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 1869,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1444:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1448:5:12",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1444:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1383:71:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                              "typeString": "function (address) payable external"
                            }
                          },
                          "id": 1874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1383:102:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1875,
                        "nodeType": "ExpressionStatement",
                        "src": "1383:102:12"
                      }
                    ]
                  },
                  "functionSelector": "8769b449",
                  "id": 1877,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1842,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1841,
                        "name": "onlyFactor",
                        "nameLocations": [
                          "1223:10:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2072,
                        "src": "1223:10:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1223:10:12"
                    }
                  ],
                  "name": "onFork",
                  "nameLocation": "1188:6:12",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1840,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1214:8:12"
                  },
                  "parameters": {
                    "id": 1839,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1194:2:12"
                  },
                  "returnParameters": {
                    "id": 1843,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1234:0:12"
                  },
                  "scope": 2089,
                  "src": "1179:313:12",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2409
                  ],
                  "body": {
                    "id": 1993,
                    "nodeType": "Block",
                    "src": "1593:853:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1888,
                                    "name": "call",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1880,
                                    "src": "1628:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExecuteCall_$2473_memory_ptr",
                                      "typeString": "struct Params.ExecuteCall memory"
                                    }
                                  },
                                  "id": 1889,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1633:6:12",
                                  "memberName": "action",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2470,
                                  "src": "1628:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ActionCall_$2462",
                                    "typeString": "enum Enums.ActionCall"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_ActionCall_$2462",
                                    "typeString": "enum Enums.ActionCall"
                                  }
                                ],
                                "id": 1887,
                                "name": "_isAllowedAction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2032,
                                "src": "1611:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_enum$_ActionCall_$2462_$returns$_t_bool_$",
                                  "typeString": "function (enum Enums.ActionCall) view returns (bool)"
                                }
                              },
                              "id": 1890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1611:29:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416374696f6e206e6f7420616c6c6f776564",
                              "id": 1891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1642:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_32c7620b5360e60589e0401697015dce3c79159a7bdfc332f8060d2e478c957b",
                                "typeString": "literal_string \"Action not allowed\""
                              },
                              "value": "Action not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_32c7620b5360e60589e0401697015dce3c79159a7bdfc332f8060d2e478c957b",
                                "typeString": "literal_string \"Action not allowed\""
                              }
                            ],
                            "id": 1886,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1603:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1603:60:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1893,
                        "nodeType": "ExpressionStatement",
                        "src": "1603:60:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ActionCall_$2462",
                            "typeString": "enum Enums.ActionCall"
                          },
                          "id": 1899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1894,
                              "name": "call",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1880,
                              "src": "1678:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExecuteCall_$2473_memory_ptr",
                                "typeString": "struct Params.ExecuteCall memory"
                              }
                            },
                            "id": 1895,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1683:6:12",
                            "memberName": "action",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2470,
                            "src": "1678:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1896,
                                "name": "Enums",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2463,
                                "src": "1693:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Enums_$2463_$",
                                  "typeString": "type(library Enums)"
                                }
                              },
                              "id": 1897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1699:10:12",
                              "memberName": "ActionCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2462,
                              "src": "1693:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ActionCall_$2462_$",
                                "typeString": "type(enum Enums.ActionCall)"
                              }
                            },
                            "id": 1898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1710:16:12",
                            "memberName": "AdjustSplitRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2458,
                            "src": "1693:33:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "src": "1678:48:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1922,
                        "nodeType": "IfStatement",
                        "src": "1674:183:12",
                        "trueBody": {
                          "id": 1921,
                          "nodeType": "Block",
                          "src": "1728:129:12",
                          "statements": [
                            {
                              "assignments": [
                                1904
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1904,
                                  "mutability": "mutable",
                                  "name": "ratio",
                                  "nameLocation": "1759:5:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1921,
                                  "src": "1742:22:12",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 1902,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1742:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1903,
                                    "nodeType": "ArrayTypeName",
                                    "src": "1742:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                      "typeString": "uint256[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1914,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1907,
                                      "name": "call",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1880,
                                      "src": "1778:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ExecuteCall_$2473_memory_ptr",
                                        "typeString": "struct Params.ExecuteCall memory"
                                      }
                                    },
                                    "id": 1908,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1783:4:12",
                                    "memberName": "data",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2472,
                                    "src": "1778:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "baseExpression": {
                                          "id": 1910,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1790:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 1909,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1790:7:12",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1911,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1790:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                          "typeString": "type(uint256[] memory)"
                                        }
                                      }
                                    ],
                                    "id": 1912,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1789:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                      "typeString": "type(uint256[] memory)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                      "typeString": "type(uint256[] memory)"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1905,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "1767:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "1771:6:12",
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "1767:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1767:34:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1742:59:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1918,
                                    "name": "ratio",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1904,
                                    "src": "1840:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1915,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -25,
                                    "src": "1816:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_super$_Strategy_$2089_$",
                                      "typeString": "type(contract super Strategy)"
                                    }
                                  },
                                  "id": 1917,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1822:17:12",
                                  "memberName": "_adjustSplitRatio",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4012,
                                  "src": "1816:23:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256[] memory)"
                                  }
                                },
                                "id": 1919,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1816:30:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1920,
                              "nodeType": "ExpressionStatement",
                              "src": "1816:30:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ActionCall_$2462",
                            "typeString": "enum Enums.ActionCall"
                          },
                          "id": 1928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1923,
                              "name": "call",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1880,
                              "src": "1871:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExecuteCall_$2473_memory_ptr",
                                "typeString": "struct Params.ExecuteCall memory"
                              }
                            },
                            "id": 1924,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1876:6:12",
                            "memberName": "action",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2470,
                            "src": "1871:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1925,
                                "name": "Enums",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2463,
                                "src": "1886:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Enums_$2463_$",
                                  "typeString": "type(library Enums)"
                                }
                              },
                              "id": 1926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1892:10:12",
                              "memberName": "ActionCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2462,
                              "src": "1886:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ActionCall_$2462_$",
                                "typeString": "type(enum Enums.ActionCall)"
                              }
                            },
                            "id": 1927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1903:12:12",
                            "memberName": "SwapToSingle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2459,
                            "src": "1886:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "src": "1871:44:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1956,
                        "nodeType": "IfStatement",
                        "src": "1867:266:12",
                        "trueBody": {
                          "id": 1955,
                          "nodeType": "Block",
                          "src": "1917:216:12",
                          "statements": [
                            {
                              "assignments": [
                                1933,
                                1935
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1933,
                                  "mutability": "mutable",
                                  "name": "tokensIn",
                                  "nameLocation": "1949:8:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1955,
                                  "src": "1932:25:12",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 1931,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1932:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1932,
                                    "nodeType": "ArrayTypeName",
                                    "src": "1932:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1935,
                                  "mutability": "mutable",
                                  "name": "tokenOut",
                                  "nameLocation": "1967:8:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1955,
                                  "src": "1959:16:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1934,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1959:7:12",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1947,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1938,
                                      "name": "call",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1880,
                                      "src": "2007:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ExecuteCall_$2473_memory_ptr",
                                        "typeString": "struct Params.ExecuteCall memory"
                                      }
                                    },
                                    "id": 1939,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2012:4:12",
                                    "memberName": "data",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2472,
                                    "src": "2007:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "baseExpression": {
                                          "id": 1941,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2035:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1940,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2035:7:12",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1942,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2035:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                                          "typeString": "type(address[] memory)"
                                        }
                                      },
                                      {
                                        "id": 1944,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2046:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1943,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2046:7:12",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "id": 1945,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "2034:20:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_address_$_$",
                                      "typeString": "tuple(type(address[] memory),type(address))"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_address_$_$",
                                      "typeString": "tuple(type(address[] memory),type(address))"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1936,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "1979:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1937,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "1983:6:12",
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "1979:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1946,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1979:89:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_address_payable_$",
                                  "typeString": "tuple(address[] memory,address payable)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1931:137:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1951,
                                    "name": "tokensIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1933,
                                    "src": "2103:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  {
                                    "id": 1952,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1935,
                                    "src": "2113:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1948,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -25,
                                    "src": "2083:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_super$_Strategy_$2089_$",
                                      "typeString": "type(contract super Strategy)"
                                    }
                                  },
                                  "id": 1950,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2089:13:12",
                                  "memberName": "_swapToSingle",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3759,
                                  "src": "2083:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$__$",
                                    "typeString": "function (address[] memory,address)"
                                  }
                                },
                                "id": 1953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2083:39:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1954,
                              "nodeType": "ExpressionStatement",
                              "src": "2083:39:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ActionCall_$2462",
                            "typeString": "enum Enums.ActionCall"
                          },
                          "id": 1962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1957,
                              "name": "call",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1880,
                              "src": "2147:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExecuteCall_$2473_memory_ptr",
                                "typeString": "struct Params.ExecuteCall memory"
                              }
                            },
                            "id": 1958,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2152:6:12",
                            "memberName": "action",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2470,
                            "src": "2147:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1959,
                                "name": "Enums",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2463,
                                "src": "2162:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Enums_$2463_$",
                                  "typeString": "type(library Enums)"
                                }
                              },
                              "id": 1960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2168:10:12",
                              "memberName": "ActionCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2462,
                              "src": "2162:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ActionCall_$2462_$",
                                "typeString": "type(enum Enums.ActionCall)"
                              }
                            },
                            "id": 1961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2179:10:12",
                            "memberName": "SwapToMany",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2460,
                            "src": "2162:27:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "src": "2147:42:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1988,
                        "nodeType": "IfStatement",
                        "src": "2143:262:12",
                        "trueBody": {
                          "id": 1987,
                          "nodeType": "Block",
                          "src": "2191:214:12",
                          "statements": [
                            {
                              "assignments": [
                                1964,
                                1967
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1964,
                                  "mutability": "mutable",
                                  "name": "tokenIn",
                                  "nameLocation": "2214:7:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1987,
                                  "src": "2206:15:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1963,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2206:7:12",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1967,
                                  "mutability": "mutable",
                                  "name": "tokensOut",
                                  "nameLocation": "2240:9:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1987,
                                  "src": "2223:26:12",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 1965,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2223:7:12",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1966,
                                    "nodeType": "ArrayTypeName",
                                    "src": "2223:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1979,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1970,
                                      "name": "call",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1880,
                                      "src": "2281:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ExecuteCall_$2473_memory_ptr",
                                        "typeString": "struct Params.ExecuteCall memory"
                                      }
                                    },
                                    "id": 1971,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2286:4:12",
                                    "memberName": "data",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2472,
                                    "src": "2281:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "id": 1973,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2309:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1972,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2309:7:12",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      {
                                        "baseExpression": {
                                          "id": 1975,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2318:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1974,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2318:7:12",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1976,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2318:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                                          "typeString": "type(address[] memory)"
                                        }
                                      }
                                    ],
                                    "id": 1977,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "2308:20:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$",
                                      "typeString": "tuple(type(address),type(address[] memory))"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$",
                                      "typeString": "tuple(type(address),type(address[] memory))"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1968,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2253:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1969,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2257:6:12",
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "2253:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2253:89:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_payable_$_t_array$_t_address_$dyn_memory_ptr_$",
                                  "typeString": "tuple(address payable,address[] memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2205:137:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1983,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1964,
                                    "src": "2375:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1984,
                                    "name": "tokensOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1967,
                                    "src": "2384:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1980,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -25,
                                    "src": "2357:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_super$_Strategy_$2089_$",
                                      "typeString": "type(contract super Strategy)"
                                    }
                                  },
                                  "id": 1982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2363:11:12",
                                  "memberName": "_swapToMany",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3962,
                                  "src": "2357:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address[] memory)"
                                  }
                                },
                                "id": 1985,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2357:37:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1986,
                              "nodeType": "ExpressionStatement",
                              "src": "2357:37:12"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1990,
                              "name": "call",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1880,
                              "src": "2434:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExecuteCall_$2473_memory_ptr",
                                "typeString": "struct Params.ExecuteCall memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ExecuteCall_$2473_memory_ptr",
                                "typeString": "struct Params.ExecuteCall memory"
                              }
                            ],
                            "id": 1989,
                            "name": "ExecuteCalled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2400,
                            "src": "2420:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_struct$_ExecuteCall_$2473_memory_ptr_$returns$__$",
                              "typeString": "function (struct Params.ExecuteCall memory)"
                            }
                          },
                          "id": 1991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2420:19:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1992,
                        "nodeType": "EmitStatement",
                        "src": "2415:24:12"
                      }
                    ]
                  },
                  "functionSelector": "b317650b",
                  "id": 1994,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1884,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1883,
                        "name": "onlyEdger",
                        "nameLocations": [
                          "1583:9:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2088,
                        "src": "1583:9:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1583:9:12"
                    }
                  ],
                  "name": "executeCall",
                  "nameLocation": "1507:11:12",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1882,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1574:8:12"
                  },
                  "parameters": {
                    "id": 1881,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1880,
                        "mutability": "mutable",
                        "name": "call",
                        "nameLocation": "1554:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1994,
                        "src": "1528:30:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExecuteCall_$2473_memory_ptr",
                          "typeString": "struct Params.ExecuteCall"
                        },
                        "typeName": {
                          "id": 1879,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1878,
                            "name": "Params.ExecuteCall",
                            "nameLocations": [
                              "1528:6:12",
                              "1535:11:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2473,
                            "src": "1528:18:12"
                          },
                          "referencedDeclaration": 2473,
                          "src": "1528:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExecuteCall_$2473_storage_ptr",
                            "typeString": "struct Params.ExecuteCall"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1518:46:12"
                  },
                  "returnParameters": {
                    "id": 1885,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1593:0:12"
                  },
                  "scope": 2089,
                  "src": "1498:948:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2031,
                    "nodeType": "Block",
                    "src": "2714:220:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2002,
                            "name": "allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "2724:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 2003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2734:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2724:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2005,
                        "nodeType": "ExpressionStatement",
                        "src": "2724:15:12"
                      },
                      {
                        "body": {
                          "id": 2029,
                          "nodeType": "Block",
                          "src": "2800:128:12",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ActionCall_$2462",
                                  "typeString": "enum Enums.ActionCall"
                                },
                                "id": 2021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2017,
                                    "name": "_allowedActions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3576,
                                    "src": "2818:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage",
                                      "typeString": "enum Enums.ActionCall[] storage ref"
                                    }
                                  },
                                  "id": 2019,
                                  "indexExpression": {
                                    "id": 2018,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2007,
                                    "src": "2834:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2818:18:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ActionCall_$2462",
                                    "typeString": "enum Enums.ActionCall"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2020,
                                  "name": "action",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1997,
                                  "src": "2840:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ActionCall_$2462",
                                    "typeString": "enum Enums.ActionCall"
                                  }
                                },
                                "src": "2818:28:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2028,
                              "nodeType": "IfStatement",
                              "src": "2814:104:12",
                              "trueBody": {
                                "id": 2027,
                                "nodeType": "Block",
                                "src": "2848:70:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2024,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2022,
                                        "name": "allowed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2000,
                                        "src": "2866:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 2023,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2876:4:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2866:14:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2025,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2866:14:12"
                                  },
                                  {
                                    "id": 2026,
                                    "nodeType": "Break",
                                    "src": "2898:5:12"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2010,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2007,
                            "src": "2767:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2011,
                              "name": "_allowedActions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3576,
                              "src": "2771:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage",
                                "typeString": "enum Enums.ActionCall[] storage ref"
                              }
                            },
                            "id": 2012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2787:6:12",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2771:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2767:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2030,
                        "initializationExpression": {
                          "assignments": [
                            2007
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2007,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2760:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 2030,
                              "src": "2755:6:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2006,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2755:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2009,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2764:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2755:10:12"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2795:3:12",
                            "subExpression": {
                              "id": 2014,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2007,
                              "src": "2795:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2016,
                          "nodeType": "ExpressionStatement",
                          "src": "2795:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "2750:178:12"
                      }
                    ]
                  },
                  "id": 2032,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isAllowedAction",
                  "nameLocation": "2621:16:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1998,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1997,
                        "mutability": "mutable",
                        "name": "action",
                        "nameLocation": "2664:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2032,
                        "src": "2647:23:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ActionCall_$2462",
                          "typeString": "enum Enums.ActionCall"
                        },
                        "typeName": {
                          "id": 1996,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1995,
                            "name": "Enums.ActionCall",
                            "nameLocations": [
                              "2647:5:12",
                              "2653:10:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2462,
                            "src": "2647:16:12"
                          },
                          "referencedDeclaration": 2462,
                          "src": "2647:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ActionCall_$2462",
                            "typeString": "enum Enums.ActionCall"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2637:39:12"
                  },
                  "returnParameters": {
                    "id": 2001,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2000,
                        "mutability": "mutable",
                        "name": "allowed",
                        "nameLocation": "2705:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2032,
                        "src": "2700:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1999,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2700:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2699:14:12"
                  },
                  "scope": 2089,
                  "src": "2612:322:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    2414
                  ],
                  "body": {
                    "id": 2041,
                    "nodeType": "Block",
                    "src": "3160:31:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2038,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "3177:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3177:7:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2037,
                        "id": 2040,
                        "nodeType": "Return",
                        "src": "3170:14:12"
                      }
                    ]
                  },
                  "functionSelector": "02d05d3f",
                  "id": 2042,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "creator",
                  "nameLocation": "3109:7:12",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2034,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3133:8:12"
                  },
                  "parameters": {
                    "id": 2033,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3116:2:12"
                  },
                  "returnParameters": {
                    "id": 2037,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2036,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2042,
                        "src": "3151:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2035,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3151:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3150:9:12"
                  },
                  "scope": 2089,
                  "src": "3100:91:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2419
                  ],
                  "body": {
                    "id": 2050,
                    "nodeType": "Block",
                    "src": "3257:32:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2048,
                          "name": "_factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3564,
                          "src": "3274:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2047,
                        "id": 2049,
                        "nodeType": "Return",
                        "src": "3267:15:12"
                      }
                    ]
                  },
                  "functionSelector": "c45a0155",
                  "id": 2051,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nameLocation": "3206:7:12",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2044,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3230:8:12"
                  },
                  "parameters": {
                    "id": 2043,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3213:2:12"
                  },
                  "returnParameters": {
                    "id": 2047,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2046,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2051,
                        "src": "3248:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2045,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3248:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3247:9:12"
                  },
                  "scope": 2089,
                  "src": "3197:92:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2424
                  ],
                  "body": {
                    "id": 2059,
                    "nodeType": "Block",
                    "src": "3359:33:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2057,
                          "name": "_forkCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1794,
                          "src": "3376:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2056,
                        "id": 2058,
                        "nodeType": "Return",
                        "src": "3369:16:12"
                      }
                    ]
                  },
                  "functionSelector": "531bcdb3",
                  "id": 2060,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getForkCost",
                  "nameLocation": "3304:11:12",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2053,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3332:8:12"
                  },
                  "parameters": {
                    "id": 2052,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3315:2:12"
                  },
                  "returnParameters": {
                    "id": 2056,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2055,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2060,
                        "src": "3350:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3350:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3349:9:12"
                  },
                  "scope": 2089,
                  "src": "3295:97:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2071,
                    "nodeType": "Block",
                    "src": "3580:86:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2063,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3598:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3602:6:12",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3598:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2065,
                                "name": "_factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3564,
                                "src": "3612:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3598:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920666163746f727920697320616c6c6f776564",
                              "id": 2067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3622:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_12613c2ca220dc5e8390c4e16d6d08d4903efa285f831f590ad7b52f71d4e342",
                                "typeString": "literal_string \"Only factory is allowed\""
                              },
                              "value": "Only factory is allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_12613c2ca220dc5e8390c4e16d6d08d4903efa285f831f590ad7b52f71d4e342",
                                "typeString": "literal_string \"Only factory is allowed\""
                              }
                            ],
                            "id": 2062,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3590:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3590:58:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2069,
                        "nodeType": "ExpressionStatement",
                        "src": "3590:58:12"
                      },
                      {
                        "id": 2070,
                        "nodeType": "PlaceholderStatement",
                        "src": "3658:1:12"
                      }
                    ]
                  },
                  "id": 2072,
                  "name": "onlyFactor",
                  "nameLocation": "3567:10:12",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2061,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3577:2:12"
                  },
                  "src": "3558:108:12",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2087,
                    "nodeType": "Block",
                    "src": "3693:136:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2075,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3724:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3728:6:12",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3724:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2078,
                                        "name": "_factory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3564,
                                        "src": "3747:8:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2077,
                                      "name": "IFactory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2186,
                                      "src": "3738:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IFactory_$2186_$",
                                        "typeString": "type(contract IFactory)"
                                      }
                                    },
                                    "id": 2079,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3738:18:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IFactory_$2186",
                                      "typeString": "contract IFactory"
                                    }
                                  },
                                  "id": 2080,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3757:5:12",
                                  "memberName": "edger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2185,
                                  "src": "3738:24:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 2081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3738:26:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3724:40:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920656467657220697320616c6c6f776564",
                              "id": 2083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3778:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fb025bd66e520b2cf36fe9d2a0f645aa267cffccca78782b37e734be7a0d944",
                                "typeString": "literal_string \"Only edger is allowed\""
                              },
                              "value": "Only edger is allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fb025bd66e520b2cf36fe9d2a0f645aa267cffccca78782b37e734be7a0d944",
                                "typeString": "literal_string \"Only edger is allowed\""
                              }
                            ],
                            "id": 2074,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3703:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3703:108:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2085,
                        "nodeType": "ExpressionStatement",
                        "src": "3703:108:12"
                      },
                      {
                        "id": 2086,
                        "nodeType": "PlaceholderStatement",
                        "src": "3821:1:12"
                      }
                    ]
                  },
                  "id": 2088,
                  "name": "onlyEdger",
                  "nameLocation": "3681:9:12",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2073,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3690:2:12"
                  },
                  "src": "3672:157:12",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2090,
              "src": "469:3362:12",
              "usedErrors": [
                59,
                64,
                205,
                210,
                215,
                224,
                229,
                234
              ],
              "usedEvents": [
                70,
                857,
                866,
                2202,
                2212,
                2220,
                2400
              ]
            }
          ],
          "src": "39:3793:12"
        },
        "id": 12
      },
      "contracts/interfaces/IChainlink.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IChainlink.sol",
          "exportedSymbols": {
            "IChainlink": [
              2101
            ]
          },
          "id": 2102,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2091,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IChainlink",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2101,
              "linearizedBaseContracts": [
                2101
              ],
              "name": "IChainlink",
              "nameLocation": "78:10:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "41976e09",
                  "id": 2100,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPrice",
                  "nameLocation": "105:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2093,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "132:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2100,
                        "src": "124:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2092,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "124:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "113:31:13"
                  },
                  "returnParameters": {
                    "id": 2099,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2096,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "176:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2100,
                        "src": "168:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2095,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "168:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2098,
                        "mutability": "mutable",
                        "name": "decimal",
                        "nameLocation": "190:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2100,
                        "src": "183:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2097,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "183:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "167:31:13"
                  },
                  "scope": 2101,
                  "src": "96:103:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2102,
              "src": "68:134:13",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:164:13"
        },
        "id": 13
      },
      "contracts/interfaces/IFactory.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IFactory.sol",
          "exportedSymbols": {
            "Enums": [
              2463
            ],
            "IFactory": [
              2186
            ]
          },
          "id": 2187,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2103,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:14"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "../lib/Enums.sol",
              "id": 2105,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2187,
              "sourceUnit": 2464,
              "src": "68:39:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2104,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2463,
                    "src": "76:5:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2186,
              "linearizedBaseContracts": [
                2186
              ],
              "name": "IFactory",
              "nameLocation": "121:8:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "7c752b9113b23f79161cc728ca055e06564fd3019bfc3663d04ad659cc708264",
                  "id": 2128,
                  "name": "StrategyCreated",
                  "nameLocation": "143:15:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2107,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nameLocation": "177:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "169:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2106,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "169:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2109,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "creator",
                        "nameLocation": "204:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "196:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "196:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2112,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "232:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "222:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2110,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "222:7:14",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2111,
                          "nodeType": "ArrayTypeName",
                          "src": "222:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2115,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "splitRatio",
                        "nameLocation": "259:10:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "249:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2113,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "249:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2114,
                          "nodeType": "ArrayTypeName",
                          "src": "249:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2118,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "visibility",
                        "nameLocation": "297:10:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "280:27:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Visibility_$2457",
                          "typeString": "enum Enums.Visibility"
                        },
                        "typeName": {
                          "id": 2117,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2116,
                            "name": "Enums.Visibility",
                            "nameLocations": [
                              "280:5:14",
                              "286:10:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2457,
                            "src": "280:16:14"
                          },
                          "referencedDeclaration": 2457,
                          "src": "280:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Visibility_$2457",
                            "typeString": "enum Enums.Visibility"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2120,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "depositUsdMin",
                        "nameLocation": "326:13:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "318:21:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "318:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2122,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "forkCost",
                        "nameLocation": "358:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "350:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2121,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "350:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2126,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "allowedActions",
                        "nameLocation": "396:14:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "377:33:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2124,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2123,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "377:5:14",
                                "383:10:14"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2462,
                              "src": "377:16:14"
                            },
                            "referencedDeclaration": 2462,
                            "src": "377:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 2125,
                          "nodeType": "ArrayTypeName",
                          "src": "377:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "158:259:14"
                  },
                  "src": "137:281:14"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d41cbc93f20efdc0e7c08e245f3f4b52a335efa799019f8e94b49bff570b28b4",
                  "id": 2136,
                  "name": "StrategyForked",
                  "nameLocation": "432:14:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2135,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2130,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "455:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2136,
                        "src": "447:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2132,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fork",
                        "nameLocation": "469:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2136,
                        "src": "461:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "461:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2134,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "forker",
                        "nameLocation": "483:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2136,
                        "src": "475:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "475:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "446:44:14"
                  },
                  "src": "426:65:14"
                },
                {
                  "functionSelector": "8403ef08",
                  "id": 2158,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createStrategy",
                  "nameLocation": "508:14:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2139,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "550:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2158,
                        "src": "533:23:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "533:7:14",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2138,
                          "nodeType": "ArrayTypeName",
                          "src": "533:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2142,
                        "mutability": "mutable",
                        "name": "splitRatio",
                        "nameLocation": "584:10:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2158,
                        "src": "567:27:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2140,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "567:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2141,
                          "nodeType": "ArrayTypeName",
                          "src": "567:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2145,
                        "mutability": "mutable",
                        "name": "visibility",
                        "nameLocation": "622:10:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2158,
                        "src": "605:27:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Visibility_$2457",
                          "typeString": "enum Enums.Visibility"
                        },
                        "typeName": {
                          "id": 2144,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2143,
                            "name": "Enums.Visibility",
                            "nameLocations": [
                              "605:5:14",
                              "611:10:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2457,
                            "src": "605:16:14"
                          },
                          "referencedDeclaration": 2457,
                          "src": "605:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Visibility_$2457",
                            "typeString": "enum Enums.Visibility"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2147,
                        "mutability": "mutable",
                        "name": "depositUsdMin",
                        "nameLocation": "651:13:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2158,
                        "src": "643:21:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "643:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2149,
                        "mutability": "mutable",
                        "name": "forkCost",
                        "nameLocation": "683:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2158,
                        "src": "675:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "675:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2153,
                        "mutability": "mutable",
                        "name": "allowedActions",
                        "nameLocation": "728:14:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2158,
                        "src": "702:40:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2151,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2150,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "702:5:14",
                                "708:10:14"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2462,
                              "src": "702:16:14"
                            },
                            "referencedDeclaration": 2462,
                            "src": "702:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 2152,
                          "nodeType": "ArrayTypeName",
                          "src": "702:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "522:227:14"
                  },
                  "returnParameters": {
                    "id": 2157,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2156,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2158,
                        "src": "768:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2155,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "768:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "767:9:14"
                  },
                  "scope": 2186,
                  "src": "499:278:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "64f079e1",
                  "id": 2165,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forkStrategy",
                  "nameLocation": "794:12:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2160,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nameLocation": "815:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2165,
                        "src": "807:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2159,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "807:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "806:18:14"
                  },
                  "returnParameters": {
                    "id": 2164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2163,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2165,
                        "src": "851:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2162,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "851:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "850:9:14"
                  },
                  "scope": 2186,
                  "src": "785:75:14",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "78d1c86d",
                  "id": 2170,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRevenueAddress",
                  "nameLocation": "877:17:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2166,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "894:2:14"
                  },
                  "returnParameters": {
                    "id": 2169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2168,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2170,
                        "src": "920:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "920:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "919:9:14"
                  },
                  "scope": 2186,
                  "src": "868:61:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f5c8ba93",
                  "id": 2175,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSwapRouterAddress",
                  "nameLocation": "946:20:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2171,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "966:2:14"
                  },
                  "returnParameters": {
                    "id": 2174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2173,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2175,
                        "src": "992:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "992:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "991:9:14"
                  },
                  "scope": 2186,
                  "src": "937:64:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8b5350cc",
                  "id": 2180,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPriceOracleAddress",
                  "nameLocation": "1018:21:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2176,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1039:2:14"
                  },
                  "returnParameters": {
                    "id": 2179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2178,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2180,
                        "src": "1065:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2177,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1065:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1064:9:14"
                  },
                  "scope": 2186,
                  "src": "1009:65:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f94f657c",
                  "id": 2185,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "edger",
                  "nameLocation": "1091:5:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2181,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1096:2:14"
                  },
                  "returnParameters": {
                    "id": 2184,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2183,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2185,
                        "src": "1122:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1122:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1121:9:14"
                  },
                  "scope": 2186,
                  "src": "1082:49:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2187,
              "src": "111:1023:14",
              "usedErrors": [],
              "usedEvents": [
                2128,
                2136
              ]
            }
          ],
          "src": "40:1096:14"
        },
        "id": 14
      },
      "contracts/interfaces/IMultiTokenPool.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IMultiTokenPool.sol",
          "exportedSymbols": {
            "Enums": [
              2463
            ],
            "IMultiTokenPool": [
              2292
            ],
            "IPoolAdmin": [
              2307
            ]
          },
          "id": 2293,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2188,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:15"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "../lib/Enums.sol",
              "id": 2190,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2293,
              "sourceUnit": 2464,
              "src": "68:39:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2189,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2463,
                    "src": "76:5:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IPoolAdmin.sol",
              "file": "./IPoolAdmin.sol",
              "id": 2192,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2293,
              "sourceUnit": 2308,
              "src": "109:44:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2191,
                    "name": "IPoolAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2307,
                    "src": "117:10:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2193,
                    "name": "IPoolAdmin",
                    "nameLocations": [
                      "186:10:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2307,
                    "src": "186:10:15"
                  },
                  "id": 2194,
                  "nodeType": "InheritanceSpecifier",
                  "src": "186:10:15"
                }
              ],
              "canonicalName": "IMultiTokenPool",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2292,
              "linearizedBaseContracts": [
                2292,
                2307
              ],
              "name": "IMultiTokenPool",
              "nameLocation": "167:15:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "cbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f495517",
                  "id": 2202,
                  "name": "TokensDeposited",
                  "nameLocation": "210:15:15",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2196,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "lp",
                        "nameLocation": "242:2:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2202,
                        "src": "226:18:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2195,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "226:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2198,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "254:5:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2202,
                        "src": "246:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "246:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2200,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "269:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2202,
                        "src": "261:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "261:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "225:51:15"
                  },
                  "src": "204:73:15"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ac36971df326c5d24b63183927b8fe4cf71b792277ff128d73f0729a653323e3",
                  "id": 2212,
                  "name": "TokensWithdrawn",
                  "nameLocation": "291:15:15",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2204,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "lp",
                        "nameLocation": "333:2:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2212,
                        "src": "317:18:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2203,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "317:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2207,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "356:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2212,
                        "src": "346:16:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "346:7:15",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2206,
                          "nodeType": "ArrayTypeName",
                          "src": "346:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2210,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "383:7:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2212,
                        "src": "373:17:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2208,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "373:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2209,
                          "nodeType": "ArrayTypeName",
                          "src": "373:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "306:91:15"
                  },
                  "src": "285:113:15"
                },
                {
                  "anonymous": false,
                  "eventSelector": "16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f74",
                  "id": 2220,
                  "name": "TokensDonated",
                  "nameLocation": "412:13:15",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2214,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "donor",
                        "nameLocation": "442:5:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2220,
                        "src": "426:21:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2213,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2216,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "457:5:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2220,
                        "src": "449:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "449:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2218,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "472:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2220,
                        "src": "464:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2217,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "464:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "425:54:15"
                  },
                  "src": "406:74:15"
                },
                {
                  "functionSelector": "47e7ef24",
                  "id": 2227,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "497:7:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2222,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "513:5:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2227,
                        "src": "505:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "505:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2224,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "528:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2227,
                        "src": "520:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "520:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "504:31:15"
                  },
                  "returnParameters": {
                    "id": 2226,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "544:0:15"
                  },
                  "scope": 2292,
                  "src": "488:57:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5358fbda",
                  "id": 2232,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositETH",
                  "nameLocation": "562:10:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2229,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "581:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2232,
                        "src": "573:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2228,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "573:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "572:16:15"
                  },
                  "returnParameters": {
                    "id": 2231,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "605:0:15"
                  },
                  "scope": 2292,
                  "src": "553:53:15",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2e1a7d4d",
                  "id": 2237,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "623:8:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2234,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "640:8:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2237,
                        "src": "632:16:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2233,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:18:15"
                  },
                  "returnParameters": {
                    "id": 2236,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "658:0:15"
                  },
                  "scope": 2292,
                  "src": "614:45:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f9c4d3db",
                  "id": 2244,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawSingle",
                  "nameLocation": "676:14:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2242,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2239,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "699:8:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2244,
                        "src": "691:16:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2238,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "691:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2241,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "717:8:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2244,
                        "src": "709:16:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2240,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "690:36:15"
                  },
                  "returnParameters": {
                    "id": 2243,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "735:0:15"
                  },
                  "scope": 2292,
                  "src": "667:69:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a216aa06",
                  "id": 2249,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawSingleETH",
                  "nameLocation": "753:17:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2246,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "779:8:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2249,
                        "src": "771:16:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2245,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "771:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "770:18:15"
                  },
                  "returnParameters": {
                    "id": 2248,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "797:0:15"
                  },
                  "scope": 2292,
                  "src": "744:54:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e69d849d",
                  "id": 2256,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "donate",
                  "nameLocation": "815:6:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2251,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "830:5:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2256,
                        "src": "822:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2250,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2253,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "845:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2256,
                        "src": "837:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2252,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "837:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:31:15"
                  },
                  "returnParameters": {
                    "id": 2255,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "861:0:15"
                  },
                  "scope": 2292,
                  "src": "806:56:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ab83f98a",
                  "id": 2261,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "donateETH",
                  "nameLocation": "879:9:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2258,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "897:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2261,
                        "src": "889:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2257,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "889:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "888:16:15"
                  },
                  "returnParameters": {
                    "id": 2260,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "921:0:15"
                  },
                  "scope": 2292,
                  "src": "870:52:15",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "aa6ca808",
                  "id": 2267,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokens",
                  "nameLocation": "939:9:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2262,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "948:2:15"
                  },
                  "returnParameters": {
                    "id": 2266,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2265,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "974:16:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2263,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "974:7:15",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2264,
                          "nodeType": "ArrayTypeName",
                          "src": "974:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "973:18:15"
                  },
                  "scope": 2292,
                  "src": "930:62:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "00113e08",
                  "id": 2273,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalances",
                  "nameLocation": "1009:11:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2268,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1020:2:15"
                  },
                  "returnParameters": {
                    "id": 2272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2271,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2273,
                        "src": "1046:16:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2269,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1046:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2270,
                          "nodeType": "ArrayTypeName",
                          "src": "1046:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1045:18:15"
                  },
                  "scope": 2292,
                  "src": "1000:64:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4eadcca8",
                  "id": 2279,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSplitRatio",
                  "nameLocation": "1081:13:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2274,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1094:2:15"
                  },
                  "returnParameters": {
                    "id": 2278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2277,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2279,
                        "src": "1120:16:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2275,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1120:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2276,
                          "nodeType": "ArrayTypeName",
                          "src": "1120:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1119:18:15"
                  },
                  "scope": 2292,
                  "src": "1072:66:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8e4e9018",
                  "id": 2284,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDepositUsdMin",
                  "nameLocation": "1155:16:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2280,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1171:2:15"
                  },
                  "returnParameters": {
                    "id": 2283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2282,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2284,
                        "src": "1197:7:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1197:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1196:9:15"
                  },
                  "scope": 2292,
                  "src": "1146:60:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2494452d",
                  "id": 2291,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllowedActions",
                  "nameLocation": "1223:17:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2285,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1240:2:15"
                  },
                  "returnParameters": {
                    "id": 2290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2289,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2291,
                        "src": "1293:25:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2287,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2286,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "1293:5:15",
                                "1299:10:15"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2462,
                              "src": "1293:16:15"
                            },
                            "referencedDeclaration": 2462,
                            "src": "1293:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 2288,
                          "nodeType": "ArrayTypeName",
                          "src": "1293:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1292:27:15"
                  },
                  "scope": 2292,
                  "src": "1214:106:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2293,
              "src": "157:1166:15",
              "usedErrors": [],
              "usedEvents": [
                2202,
                2212,
                2220
              ]
            }
          ],
          "src": "40:1285:15"
        },
        "id": 15
      },
      "contracts/interfaces/IPoolAdmin.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IPoolAdmin.sol",
          "exportedSymbols": {
            "IPoolAdmin": [
              2307
            ]
          },
          "id": 2308,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2294,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:16"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IPoolAdmin",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2307,
              "linearizedBaseContracts": [
                2307
              ],
              "name": "IPoolAdmin",
              "nameLocation": "78:10:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "af81c5b9",
                  "id": 2301,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addToken",
                  "nameLocation": "105:8:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2296,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "122:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2301,
                        "src": "114:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2295,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "114:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2298,
                        "mutability": "mutable",
                        "name": "ratio",
                        "nameLocation": "137:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2301,
                        "src": "129:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2297,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "129:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "113:30:16"
                  },
                  "returnParameters": {
                    "id": 2300,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "152:0:16"
                  },
                  "scope": 2307,
                  "src": "96:57:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5fa7b584",
                  "id": 2306,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeToken",
                  "nameLocation": "170:11:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2303,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "190:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2306,
                        "src": "182:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2302,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "182:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "181:15:16"
                  },
                  "returnParameters": {
                    "id": 2305,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "205:0:16"
                  },
                  "scope": 2307,
                  "src": "161:45:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2308,
              "src": "68:141:16",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:171:16"
        },
        "id": 16
      },
      "contracts/interfaces/IPriceOracle.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IPriceOracle.sol",
          "exportedSymbols": {
            "IPriceOracle": [
              2354
            ]
          },
          "id": 2355,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2309,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:17"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IPriceOracle",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2354,
              "linearizedBaseContracts": [
                2354
              ],
              "name": "IPriceOracle",
              "nameLocation": "78:12:17",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "67f46796",
                  "id": 2318,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountOutInUsd",
                  "nameLocation": "107:17:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2311,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "143:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2318,
                        "src": "135:16:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2310,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "135:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2313,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "170:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2318,
                        "src": "162:15:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2312,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "162:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "124:60:17"
                  },
                  "returnParameters": {
                    "id": 2317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2316,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "216:9:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2318,
                        "src": "208:17:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2315,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "208:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "207:19:17"
                  },
                  "scope": 2354,
                  "src": "98:129:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "04eb30c6",
                  "id": 2329,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsOutInUsd",
                  "nameLocation": "244:18:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2321,
                        "mutability": "mutable",
                        "name": "amountIns",
                        "nameLocation": "290:9:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2329,
                        "src": "273:26:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2319,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "273:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2320,
                          "nodeType": "ArrayTypeName",
                          "src": "273:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2324,
                        "mutability": "mutable",
                        "name": "tokenIns",
                        "nameLocation": "327:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2329,
                        "src": "310:25:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2322,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "310:7:17",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2323,
                          "nodeType": "ArrayTypeName",
                          "src": "310:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "262:80:17"
                  },
                  "returnParameters": {
                    "id": 2328,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2327,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "374:9:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2329,
                        "src": "366:17:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2326,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "366:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "365:19:17"
                  },
                  "scope": 2354,
                  "src": "235:150:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5e1e6325",
                  "id": 2340,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountOut",
                  "nameLocation": "402:12:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2331,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "433:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2340,
                        "src": "425:16:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2330,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "425:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2333,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "460:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2340,
                        "src": "452:15:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "452:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2335,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "486:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2340,
                        "src": "478:16:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "478:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "414:87:17"
                  },
                  "returnParameters": {
                    "id": 2339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2338,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "533:9:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2340,
                        "src": "525:17:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "525:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "524:19:17"
                  },
                  "scope": 2354,
                  "src": "393:151:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9e99c826",
                  "id": 2353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsOut",
                  "nameLocation": "561:13:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2343,
                        "mutability": "mutable",
                        "name": "amountIns",
                        "nameLocation": "602:9:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2353,
                        "src": "585:26:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2341,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "585:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2342,
                          "nodeType": "ArrayTypeName",
                          "src": "585:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2346,
                        "mutability": "mutable",
                        "name": "tokenIns",
                        "nameLocation": "639:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2353,
                        "src": "622:25:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2344,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "622:7:17",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2345,
                          "nodeType": "ArrayTypeName",
                          "src": "622:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2348,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "666:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2353,
                        "src": "658:16:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2347,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "574:107:17"
                  },
                  "returnParameters": {
                    "id": 2352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2351,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "713:9:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2353,
                        "src": "705:17:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2350,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "705:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "704:19:17"
                  },
                  "scope": 2354,
                  "src": "552:172:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2355,
              "src": "68:659:17",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:689:17"
        },
        "id": 17
      },
      "contracts/interfaces/IRevenue.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IRevenue.sol",
          "exportedSymbols": {
            "IRevenue": [
              2389
            ],
            "Types": [
              2482
            ]
          },
          "id": 2390,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2356,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:18"
            },
            {
              "absolutePath": "contracts/lib/Types.sol",
              "file": "../lib/Types.sol",
              "id": 2358,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2390,
              "sourceUnit": 2483,
              "src": "68:39:18",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2357,
                    "name": "Types",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2482,
                    "src": "76:5:18",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IRevenue",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2389,
              "linearizedBaseContracts": [
                2389
              ],
              "name": "IRevenue",
              "nameLocation": "121:8:18",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a524",
                  "id": 2364,
                  "name": "Funded",
                  "nameLocation": "143:6:18",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2360,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "166:4:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2364,
                        "src": "150:20:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2359,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "150:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2362,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "180:6:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2364,
                        "src": "172:14:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2361,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "172:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "149:38:18"
                  },
                  "src": "137:51:18"
                },
                {
                  "anonymous": false,
                  "eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
                  "id": 2370,
                  "name": "Withdrawn",
                  "nameLocation": "202:9:18",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2366,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "228:4:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2370,
                        "src": "212:20:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "212:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2368,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "242:6:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2370,
                        "src": "234:14:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2367,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "234:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "211:38:18"
                  },
                  "src": "196:54:18"
                },
                {
                  "functionSelector": "23024408",
                  "id": 2375,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fund",
                  "nameLocation": "267:4:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2372,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "280:2:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2375,
                        "src": "272:10:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2371,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "272:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "271:12:18"
                  },
                  "returnParameters": {
                    "id": 2374,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "300:0:18"
                  },
                  "scope": 2389,
                  "src": "258:43:18",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2e1a7d4d",
                  "id": 2380,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "318:8:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2377,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "335:6:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2380,
                        "src": "327:14:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2376,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "327:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "326:16:18"
                  },
                  "returnParameters": {
                    "id": 2379,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "351:0:18"
                  },
                  "scope": 2389,
                  "src": "309:43:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 2388,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "369:9:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2383,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2382,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "397:4:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2388,
                        "src": "389:12:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2381,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "389:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "378:30:18"
                  },
                  "returnParameters": {
                    "id": 2387,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2386,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2388,
                        "src": "432:20:18",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Revenue_$2481_memory_ptr",
                          "typeString": "struct Types.Revenue"
                        },
                        "typeName": {
                          "id": 2385,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2384,
                            "name": "Types.Revenue",
                            "nameLocations": [
                              "432:5:18",
                              "438:7:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2481,
                            "src": "432:13:18"
                          },
                          "referencedDeclaration": 2481,
                          "src": "432:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Revenue_$2481_storage_ptr",
                            "typeString": "struct Types.Revenue"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "431:22:18"
                  },
                  "scope": 2389,
                  "src": "360:94:18",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2390,
              "src": "111:346:18",
              "usedErrors": [],
              "usedEvents": [
                2364,
                2370
              ]
            }
          ],
          "src": "40:419:18"
        },
        "id": 18
      },
      "contracts/interfaces/IStrategy.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IStrategy.sol",
          "exportedSymbols": {
            "Enums": [
              2463
            ],
            "IStrategy": [
              2425
            ],
            "Params": [
              2474
            ]
          },
          "id": 2426,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2391,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:19"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "../lib/Enums.sol",
              "id": 2393,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2426,
              "sourceUnit": 2464,
              "src": "68:39:19",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2392,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2463,
                    "src": "76:5:19",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/Params.sol",
              "file": "../lib/Params.sol",
              "id": 2395,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2426,
              "sourceUnit": 2475,
              "src": "109:41:19",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2394,
                    "name": "Params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2474,
                    "src": "117:6:19",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IStrategy",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2425,
              "linearizedBaseContracts": [
                2425
              ],
              "name": "IStrategy",
              "nameLocation": "164:9:19",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "2dbb4029cc94c05452861994b3d66ab5d4b3f2b45418116b370c7981f2eebb90",
                  "id": 2400,
                  "name": "ExecuteCalled",
                  "nameLocation": "187:13:19",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2398,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "call",
                        "nameLocation": "220:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2400,
                        "src": "201:23:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExecuteCall_$2473_memory_ptr",
                          "typeString": "struct Params.ExecuteCall"
                        },
                        "typeName": {
                          "id": 2397,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2396,
                            "name": "Params.ExecuteCall",
                            "nameLocations": [
                              "201:6:19",
                              "208:11:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2473,
                            "src": "201:18:19"
                          },
                          "referencedDeclaration": 2473,
                          "src": "201:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExecuteCall_$2473_storage_ptr",
                            "typeString": "struct Params.ExecuteCall"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "200:25:19"
                  },
                  "src": "181:45:19"
                },
                {
                  "functionSelector": "8769b449",
                  "id": 2403,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onFork",
                  "nameLocation": "243:6:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2401,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "249:2:19"
                  },
                  "returnParameters": {
                    "id": 2402,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "268:0:19"
                  },
                  "scope": 2425,
                  "src": "234:35:19",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b317650b",
                  "id": 2409,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeCall",
                  "nameLocation": "286:11:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2406,
                        "mutability": "mutable",
                        "name": "call",
                        "nameLocation": "324:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2409,
                        "src": "298:30:19",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExecuteCall_$2473_memory_ptr",
                          "typeString": "struct Params.ExecuteCall"
                        },
                        "typeName": {
                          "id": 2405,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2404,
                            "name": "Params.ExecuteCall",
                            "nameLocations": [
                              "298:6:19",
                              "305:11:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2473,
                            "src": "298:18:19"
                          },
                          "referencedDeclaration": 2473,
                          "src": "298:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExecuteCall_$2473_storage_ptr",
                            "typeString": "struct Params.ExecuteCall"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "297:32:19"
                  },
                  "returnParameters": {
                    "id": 2408,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "338:0:19"
                  },
                  "scope": 2425,
                  "src": "277:62:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "02d05d3f",
                  "id": 2414,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "creator",
                  "nameLocation": "356:7:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2410,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "363:2:19"
                  },
                  "returnParameters": {
                    "id": 2413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2412,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2414,
                        "src": "389:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "389:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "388:9:19"
                  },
                  "scope": 2425,
                  "src": "347:51:19",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c45a0155",
                  "id": 2419,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nameLocation": "415:7:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2415,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "422:2:19"
                  },
                  "returnParameters": {
                    "id": 2418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2419,
                        "src": "448:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "447:9:19"
                  },
                  "scope": 2425,
                  "src": "406:51:19",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "531bcdb3",
                  "id": 2424,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getForkCost",
                  "nameLocation": "474:11:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2420,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "485:2:19"
                  },
                  "returnParameters": {
                    "id": 2423,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2422,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2424,
                        "src": "511:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2421,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "511:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "510:9:19"
                  },
                  "scope": 2425,
                  "src": "465:55:19",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2426,
              "src": "154:369:19",
              "usedErrors": [],
              "usedEvents": [
                2400
              ]
            }
          ],
          "src": "40:485:19"
        },
        "id": 19
      },
      "contracts/interfaces/IWETH.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IWETH.sol",
          "exportedSymbols": {
            "IWETH": [
              2452
            ]
          },
          "id": 2453,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2427,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:20"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IWETH",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2452,
              "linearizedBaseContracts": [
                2452
              ],
              "name": "IWETH",
              "nameLocation": "78:5:20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "aa67c919",
                  "id": 2434,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositFor",
                  "nameLocation": "100:10:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2429,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "119:7:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2434,
                        "src": "111:15:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "111:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "110:17:20"
                  },
                  "returnParameters": {
                    "id": 2433,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2432,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2434,
                        "src": "154:4:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2431,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "154:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "153:6:20"
                  },
                  "scope": 2452,
                  "src": "91:69:20",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "205c2878",
                  "id": 2443,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawTo",
                  "nameLocation": "177:10:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2439,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2436,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "196:7:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2443,
                        "src": "188:15:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2435,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "188:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2438,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "213:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2443,
                        "src": "205:13:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2437,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "205:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "187:32:20"
                  },
                  "returnParameters": {
                    "id": 2442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2441,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2443,
                        "src": "238:4:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2440,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "238:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "237:6:20"
                  },
                  "scope": 2452,
                  "src": "168:76:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d0e30db0",
                  "id": 2446,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "261:7:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2444,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "268:2:20"
                  },
                  "returnParameters": {
                    "id": 2445,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "287:0:20"
                  },
                  "scope": 2452,
                  "src": "252:36:20",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2e1a7d4d",
                  "id": 2451,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "305:8:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2448,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "319:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2451,
                        "src": "314:10:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2447,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "314:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "313:12:20"
                  },
                  "returnParameters": {
                    "id": 2450,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "334:0:20"
                  },
                  "scope": 2452,
                  "src": "296:39:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2453,
              "src": "68:270:20",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:300:20"
        },
        "id": 20
      },
      "contracts/lib/Enums.sol": {
        "ast": {
          "absolutePath": "contracts/lib/Enums.sol",
          "exportedSymbols": {
            "Enums": [
              2463
            ]
          },
          "id": 2464,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2454,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:21"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Enums",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2463,
              "linearizedBaseContracts": [
                2463
              ],
              "name": "Enums",
              "nameLocation": "76:5:21",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Enums.Visibility",
                  "id": 2457,
                  "members": [
                    {
                      "id": 2455,
                      "name": "Public",
                      "nameLocation": "116:6:21",
                      "nodeType": "EnumValue",
                      "src": "116:6:21"
                    },
                    {
                      "id": 2456,
                      "name": "Private",
                      "nameLocation": "133:7:21",
                      "nodeType": "EnumValue",
                      "src": "133:7:21"
                    }
                  ],
                  "name": "Visibility",
                  "nameLocation": "94:10:21",
                  "nodeType": "EnumDefinition",
                  "src": "89:58:21"
                },
                {
                  "canonicalName": "Enums.ActionCall",
                  "id": 2462,
                  "members": [
                    {
                      "id": 2458,
                      "name": "AdjustSplitRatio",
                      "nameLocation": "182:16:21",
                      "nodeType": "EnumValue",
                      "src": "182:16:21"
                    },
                    {
                      "id": 2459,
                      "name": "SwapToSingle",
                      "nameLocation": "209:12:21",
                      "nodeType": "EnumValue",
                      "src": "209:12:21"
                    },
                    {
                      "id": 2460,
                      "name": "SwapToMany",
                      "nameLocation": "232:10:21",
                      "nodeType": "EnumValue",
                      "src": "232:10:21"
                    },
                    {
                      "id": 2461,
                      "name": "None",
                      "nameLocation": "253:4:21",
                      "nodeType": "EnumValue",
                      "src": "253:4:21"
                    }
                  ],
                  "name": "ActionCall",
                  "nameLocation": "160:10:21",
                  "nodeType": "EnumDefinition",
                  "src": "155:187:21"
                }
              ],
              "scope": 2464,
              "src": "68:277:21",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:307:21"
        },
        "id": 21
      },
      "contracts/lib/Params.sol": {
        "ast": {
          "absolutePath": "contracts/lib/Params.sol",
          "exportedSymbols": {
            "Enums": [
              2463
            ],
            "Params": [
              2474
            ]
          },
          "id": 2475,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2465,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:22"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "./Enums.sol",
              "id": 2467,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2475,
              "sourceUnit": 2464,
              "src": "68:34:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2466,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2463,
                    "src": "76:5:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Params",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2474,
              "linearizedBaseContracts": [
                2474
              ],
              "name": "Params",
              "nameLocation": "114:6:22",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Params.ExecuteCall",
                  "id": 2473,
                  "members": [
                    {
                      "constant": false,
                      "id": 2470,
                      "mutability": "mutable",
                      "name": "action",
                      "nameLocation": "175:6:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2473,
                      "src": "158:23:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ActionCall_$2462",
                        "typeString": "enum Enums.ActionCall"
                      },
                      "typeName": {
                        "id": 2469,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2468,
                          "name": "Enums.ActionCall",
                          "nameLocations": [
                            "158:5:22",
                            "164:10:22"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2462,
                          "src": "158:16:22"
                        },
                        "referencedDeclaration": 2462,
                        "src": "158:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ActionCall_$2462",
                          "typeString": "enum Enums.ActionCall"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2472,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "198:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2473,
                      "src": "192:10:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2471,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "192:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ExecuteCall",
                  "nameLocation": "135:11:22",
                  "nodeType": "StructDefinition",
                  "scope": 2474,
                  "src": "128:82:22",
                  "visibility": "public"
                }
              ],
              "scope": 2475,
              "src": "106:107:22",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:175:22"
        },
        "id": 22
      },
      "contracts/lib/Types.sol": {
        "ast": {
          "absolutePath": "contracts/lib/Types.sol",
          "exportedSymbols": {
            "Types": [
              2482
            ]
          },
          "id": 2483,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2476,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:23"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Types",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2482,
              "linearizedBaseContracts": [
                2482
              ],
              "name": "Types",
              "nameLocation": "76:5:23",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Types.Revenue",
                  "id": 2481,
                  "members": [
                    {
                      "constant": false,
                      "id": 2478,
                      "mutability": "mutable",
                      "name": "claimed",
                      "nameLocation": "123:7:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 2481,
                      "src": "115:15:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2477,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "115:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2480,
                      "mutability": "mutable",
                      "name": "unClaimed",
                      "nameLocation": "149:9:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 2481,
                      "src": "141:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2479,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "141:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Revenue",
                  "nameLocation": "96:7:23",
                  "nodeType": "StructDefinition",
                  "scope": 2482,
                  "src": "89:77:23",
                  "visibility": "public"
                }
              ],
              "scope": 2483,
              "src": "68:101:23",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:131:23"
        },
        "id": 23
      },
      "contracts/oracle/PriceOracle.sol": {
        "ast": {
          "absolutePath": "contracts/oracle/PriceOracle.sol",
          "exportedSymbols": {
            "IChainlink": [
              2101
            ],
            "IPriceOracle": [
              2354
            ],
            "PriceOracle": [
              2689
            ]
          },
          "id": 2690,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2484,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:24"
            },
            {
              "absolutePath": "contracts/interfaces/IChainlink.sol",
              "file": "../interfaces/IChainlink.sol",
              "id": 2486,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2690,
              "sourceUnit": 2102,
              "src": "68:56:24",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2485,
                    "name": "IChainlink",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2101,
                    "src": "76:10:24",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IPriceOracle.sol",
              "file": "../interfaces/IPriceOracle.sol",
              "id": 2488,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2690,
              "sourceUnit": 2355,
              "src": "126:60:24",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2487,
                    "name": "IPriceOracle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2354,
                    "src": "134:12:24",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2489,
                    "name": "IPriceOracle",
                    "nameLocations": [
                      "214:12:24"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2354,
                    "src": "214:12:24"
                  },
                  "id": 2490,
                  "nodeType": "InheritanceSpecifier",
                  "src": "214:12:24"
                }
              ],
              "canonicalName": "PriceOracle",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2689,
              "linearizedBaseContracts": [
                2689,
                2354
              ],
              "name": "PriceOracle",
              "nameLocation": "199:11:24",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 2493,
                  "mutability": "immutable",
                  "name": "_chainlink",
                  "nameLocation": "264:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2689,
                  "src": "234:40:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IChainlink_$2101",
                    "typeString": "contract IChainlink"
                  },
                  "typeName": {
                    "id": 2492,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2491,
                      "name": "IChainlink",
                      "nameLocations": [
                        "234:10:24"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2101,
                      "src": "234:10:24"
                    },
                    "referencedDeclaration": 2101,
                    "src": "234:10:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IChainlink_$2101",
                      "typeString": "contract IChainlink"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2503,
                    "nodeType": "Block",
                    "src": "317:41:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 2501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2499,
                            "name": "_chainlink",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2493,
                            "src": "328:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IChainlink_$2101",
                              "typeString": "contract IChainlink"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2500,
                            "name": "chainlink",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2496,
                            "src": "341:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IChainlink_$2101",
                              "typeString": "contract IChainlink"
                            }
                          },
                          "src": "328:22:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IChainlink_$2101",
                            "typeString": "contract IChainlink"
                          }
                        },
                        "id": 2502,
                        "nodeType": "ExpressionStatement",
                        "src": "328:22:24"
                      }
                    ]
                  },
                  "id": 2504,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2496,
                        "mutability": "mutable",
                        "name": "chainlink",
                        "nameLocation": "306:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2504,
                        "src": "295:20:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IChainlink_$2101",
                          "typeString": "contract IChainlink"
                        },
                        "typeName": {
                          "id": 2495,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2494,
                            "name": "IChainlink",
                            "nameLocations": [
                              "295:10:24"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2101,
                            "src": "295:10:24"
                          },
                          "referencedDeclaration": 2101,
                          "src": "295:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IChainlink_$2101",
                            "typeString": "contract IChainlink"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "294:22:24"
                  },
                  "returnParameters": {
                    "id": 2498,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "317:0:24"
                  },
                  "scope": 2689,
                  "src": "283:75:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2318
                  ],
                  "body": {
                    "id": 2535,
                    "nodeType": "Block",
                    "src": "502:142:24",
                    "statements": [
                      {
                        "assignments": [
                          2515,
                          2517
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2515,
                            "mutability": "mutable",
                            "name": "price",
                            "nameLocation": "522:5:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 2535,
                            "src": "514:13:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2514,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "514:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2517,
                            "mutability": "mutable",
                            "name": "decimal",
                            "nameLocation": "536:7:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 2535,
                            "src": "529:14:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 2516,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "529:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2522,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2520,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2508,
                              "src": "567:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2518,
                              "name": "_chainlink",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2493,
                              "src": "547:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IChainlink_$2101",
                                "typeString": "contract IChainlink"
                              }
                            },
                            "id": 2519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "558:8:24",
                            "memberName": "getPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2100,
                            "src": "547:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint80_$",
                              "typeString": "function (address) view external returns (uint256,uint80)"
                            }
                          },
                          "id": 2521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "547:28:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "513:62:24"
                      },
                      {
                        "expression": {
                          "id": 2533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2523,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2512,
                            "src": "588:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2526,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2524,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2515,
                                    "src": "601:5:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2525,
                                    "name": "amountIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2506,
                                    "src": "609:8:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "601:16:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2527,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "600:18:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2530,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 2528,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "622:2:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "id": 2529,
                                    "name": "decimal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2517,
                                    "src": "628:7:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  },
                                  "src": "622:13:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2531,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "621:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "600:36:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "588:48:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2534,
                        "nodeType": "ExpressionStatement",
                        "src": "588:48:24"
                      }
                    ]
                  },
                  "functionSelector": "67f46796",
                  "id": 2536,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountOutInUsd",
                  "nameLocation": "375:17:24",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2510,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "465:8:24"
                  },
                  "parameters": {
                    "id": 2509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2506,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "411:8:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2536,
                        "src": "403:16:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2505,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "403:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2508,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "438:7:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2536,
                        "src": "430:15:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2507,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "430:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "392:60:24"
                  },
                  "returnParameters": {
                    "id": 2513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2512,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "491:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2536,
                        "src": "483:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "483:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "482:19:24"
                  },
                  "scope": 2689,
                  "src": "366:278:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2329
                  ],
                  "body": {
                    "id": 2581,
                    "nodeType": "Block",
                    "src": "809:225:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2549,
                                  "name": "amountIns",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2539,
                                  "src": "828:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 2550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "838:6:24",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "828:16:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2551,
                                  "name": "tokenIns",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2542,
                                  "src": "848:8:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 2552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "857:6:24",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "848:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "828:35:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d69736d61746368656420617272617973",
                              "id": 2554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "865:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481",
                                "typeString": "literal_string \"Mismatched arrays\""
                              },
                              "value": "Mismatched arrays"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481",
                                "typeString": "literal_string \"Mismatched arrays\""
                              }
                            ],
                            "id": 2548,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "820:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "820:65:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2556,
                        "nodeType": "ExpressionStatement",
                        "src": "820:65:24"
                      },
                      {
                        "body": {
                          "id": 2579,
                          "nodeType": "Block",
                          "src": "943:84:24",
                          "statements": [
                            {
                              "expression": {
                                "id": 2577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2568,
                                  "name": "amountOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2546,
                                  "src": "958:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 2570,
                                        "name": "amountIns",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2539,
                                        "src": "989:9:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 2572,
                                      "indexExpression": {
                                        "id": 2571,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2558,
                                        "src": "999:1:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "989:12:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 2573,
                                        "name": "tokenIns",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2542,
                                        "src": "1003:8:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 2575,
                                      "indexExpression": {
                                        "id": 2574,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2558,
                                        "src": "1012:1:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1003:11:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2569,
                                    "name": "getAmountOutInUsd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2536,
                                    "src": "971:17:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,address) view returns (uint256)"
                                    }
                                  },
                                  "id": 2576,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "971:44:24",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "958:57:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2578,
                              "nodeType": "ExpressionStatement",
                              "src": "958:57:24"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2561,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "916:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2562,
                              "name": "amountIns",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2539,
                              "src": "920:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "930:6:24",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "920:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "916:20:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2580,
                        "initializationExpression": {
                          "assignments": [
                            2558
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2558,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "909:1:24",
                              "nodeType": "VariableDeclaration",
                              "scope": 2580,
                              "src": "901:9:24",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2557,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "901:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2560,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "913:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "901:13:24"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "938:3:24",
                            "subExpression": {
                              "id": 2565,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2558,
                              "src": "938:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2567,
                          "nodeType": "ExpressionStatement",
                          "src": "938:3:24"
                        },
                        "nodeType": "ForStatement",
                        "src": "896:131:24"
                      }
                    ]
                  },
                  "functionSelector": "04eb30c6",
                  "id": 2582,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsOutInUsd",
                  "nameLocation": "661:18:24",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2544,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "772:8:24"
                  },
                  "parameters": {
                    "id": 2543,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2539,
                        "mutability": "mutable",
                        "name": "amountIns",
                        "nameLocation": "707:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2582,
                        "src": "690:26:24",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2537,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "690:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2538,
                          "nodeType": "ArrayTypeName",
                          "src": "690:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2542,
                        "mutability": "mutable",
                        "name": "tokenIns",
                        "nameLocation": "744:8:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2582,
                        "src": "727:25:24",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2540,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "727:7:24",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2541,
                          "nodeType": "ArrayTypeName",
                          "src": "727:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "679:80:24"
                  },
                  "returnParameters": {
                    "id": 2547,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2546,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "798:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2582,
                        "src": "790:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2545,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:19:24"
                  },
                  "scope": 2689,
                  "src": "652:382:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2340
                  ],
                  "body": {
                    "id": 2638,
                    "nodeType": "Block",
                    "src": "1200:383:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2594,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2586,
                            "src": "1215:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2595,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2588,
                            "src": "1226:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1215:19:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2599,
                        "nodeType": "IfStatement",
                        "src": "1211:40:24",
                        "trueBody": {
                          "expression": {
                            "id": 2597,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2584,
                            "src": "1243:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 2593,
                          "id": 2598,
                          "nodeType": "Return",
                          "src": "1236:15:24"
                        }
                      },
                      {
                        "assignments": [
                          2601,
                          2603
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2601,
                            "mutability": "mutable",
                            "name": "basePrice",
                            "nameLocation": "1273:9:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 2638,
                            "src": "1265:17:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2600,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1265:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2603,
                            "mutability": "mutable",
                            "name": "baseDecimal",
                            "nameLocation": "1291:11:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 2638,
                            "src": "1284:18:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 2602,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "1284:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2608,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2606,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2586,
                              "src": "1326:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2604,
                              "name": "_chainlink",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2493,
                              "src": "1306:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IChainlink_$2101",
                                "typeString": "contract IChainlink"
                              }
                            },
                            "id": 2605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1317:8:24",
                            "memberName": "getPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2100,
                            "src": "1306:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint80_$",
                              "typeString": "function (address) view external returns (uint256,uint80)"
                            }
                          },
                          "id": 2607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1306:28:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1264:70:24"
                      },
                      {
                        "assignments": [
                          2610,
                          2612
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2610,
                            "mutability": "mutable",
                            "name": "quotePrice",
                            "nameLocation": "1354:10:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 2638,
                            "src": "1346:18:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2609,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1346:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2612,
                            "mutability": "mutable",
                            "name": "quoteDecimal",
                            "nameLocation": "1373:12:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 2638,
                            "src": "1366:19:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 2611,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "1366:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2617,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2615,
                              "name": "tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2588,
                              "src": "1423:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2613,
                              "name": "_chainlink",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2493,
                              "src": "1389:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IChainlink_$2101",
                                "typeString": "contract IChainlink"
                              }
                            },
                            "id": 2614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1400:8:24",
                            "memberName": "getPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2100,
                            "src": "1389:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint80_$",
                              "typeString": "function (address) view external returns (uint256,uint80)"
                            }
                          },
                          "id": 2616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1389:53:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1345:97:24"
                      },
                      {
                        "expression": {
                          "id": 2636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2618,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2592,
                            "src": "1455:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2621,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2619,
                                      "name": "basePrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2601,
                                      "src": "1481:9:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2620,
                                      "name": "amountIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2584,
                                      "src": "1493:8:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1481:20:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2624,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130",
                                          "id": 2622,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1505:2:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "id": 2623,
                                          "name": "quoteDecimal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2612,
                                          "src": "1511:12:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                          }
                                        },
                                        "src": "1505:18:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2625,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1504:20:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1481:43:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2627,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1480:45:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2633,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2628,
                                    "name": "quotePrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2610,
                                    "src": "1542:10:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2631,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130",
                                          "id": 2629,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1556:2:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "id": 2630,
                                          "name": "baseDecimal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2603,
                                          "src": "1562:11:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                          }
                                        },
                                        "src": "1556:17:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2632,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1555:19:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1542:32:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2634,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1541:34:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1480:95:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1455:120:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2637,
                        "nodeType": "ExpressionStatement",
                        "src": "1455:120:24"
                      }
                    ]
                  },
                  "functionSelector": "5e1e6325",
                  "id": 2639,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountOut",
                  "nameLocation": "1051:12:24",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2590,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1163:8:24"
                  },
                  "parameters": {
                    "id": 2589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2584,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "1082:8:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2639,
                        "src": "1074:16:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2583,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1074:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2586,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "1109:7:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2639,
                        "src": "1101:15:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1101:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2588,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "1135:8:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2639,
                        "src": "1127:16:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1127:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1063:87:24"
                  },
                  "returnParameters": {
                    "id": 2593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2592,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "1189:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2639,
                        "src": "1181:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2591,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1181:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1180:19:24"
                  },
                  "scope": 2689,
                  "src": "1042:541:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2353
                  ],
                  "body": {
                    "id": 2687,
                    "nodeType": "Block",
                    "src": "1770:230:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2654,
                                  "name": "amountIns",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2642,
                                  "src": "1789:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 2655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1799:6:24",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1789:16:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2656,
                                  "name": "tokenIns",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2645,
                                  "src": "1809:8:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 2657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1818:6:24",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1809:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1789:35:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d69736d61746368656420617272617973",
                              "id": 2659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1826:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481",
                                "typeString": "literal_string \"Mismatched arrays\""
                              },
                              "value": "Mismatched arrays"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481",
                                "typeString": "literal_string \"Mismatched arrays\""
                              }
                            ],
                            "id": 2653,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1781:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1781:65:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2661,
                        "nodeType": "ExpressionStatement",
                        "src": "1781:65:24"
                      },
                      {
                        "body": {
                          "id": 2685,
                          "nodeType": "Block",
                          "src": "1904:89:24",
                          "statements": [
                            {
                              "expression": {
                                "id": 2683,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2673,
                                  "name": "amountOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2651,
                                  "src": "1919:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 2675,
                                        "name": "amountIns",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2642,
                                        "src": "1945:9:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 2677,
                                      "indexExpression": {
                                        "id": 2676,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2663,
                                        "src": "1955:1:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1945:12:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 2678,
                                        "name": "tokenIns",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2645,
                                        "src": "1959:8:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 2680,
                                      "indexExpression": {
                                        "id": 2679,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2663,
                                        "src": "1968:1:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1959:11:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 2681,
                                      "name": "tokenOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2647,
                                      "src": "1972:8:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2674,
                                    "name": "getAmountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2639,
                                    "src": "1932:12:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,address,address) view returns (uint256)"
                                    }
                                  },
                                  "id": 2682,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1932:49:24",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1919:62:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2684,
                              "nodeType": "ExpressionStatement",
                              "src": "1919:62:24"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2666,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2663,
                            "src": "1877:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2667,
                              "name": "amountIns",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2642,
                              "src": "1881:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1891:6:24",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1881:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1877:20:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2686,
                        "initializationExpression": {
                          "assignments": [
                            2663
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2663,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1870:1:24",
                              "nodeType": "VariableDeclaration",
                              "scope": 2686,
                              "src": "1862:9:24",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2662,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1862:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2665,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1874:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1862:13:24"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1899:3:24",
                            "subExpression": {
                              "id": 2670,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2663,
                              "src": "1899:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2672,
                          "nodeType": "ExpressionStatement",
                          "src": "1899:3:24"
                        },
                        "nodeType": "ForStatement",
                        "src": "1857:136:24"
                      }
                    ]
                  },
                  "functionSelector": "9e99c826",
                  "id": 2688,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsOut",
                  "nameLocation": "1600:13:24",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2649,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1733:8:24"
                  },
                  "parameters": {
                    "id": 2648,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2642,
                        "mutability": "mutable",
                        "name": "amountIns",
                        "nameLocation": "1641:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "1624:26:24",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2640,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1624:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2641,
                          "nodeType": "ArrayTypeName",
                          "src": "1624:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2645,
                        "mutability": "mutable",
                        "name": "tokenIns",
                        "nameLocation": "1678:8:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "1661:25:24",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2643,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1661:7:24",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2644,
                          "nodeType": "ArrayTypeName",
                          "src": "1661:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2647,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "1705:8:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "1697:16:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2646,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1697:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1613:107:24"
                  },
                  "returnParameters": {
                    "id": 2652,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2651,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "1759:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "1751:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2650,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1751:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1750:19:24"
                  },
                  "scope": 2689,
                  "src": "1591:409:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2690,
              "src": "190:1813:24",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:1965:24"
        },
        "id": 24
      },
      "contracts/pool/MultiTokenPool.sol": {
        "ast": {
          "absolutePath": "contracts/pool/MultiTokenPool.sol",
          "exportedSymbols": {
            "ERC20": [
              845
            ],
            "Enums": [
              2463
            ],
            "IERC20": [
              923
            ],
            "IFactory": [
              2186
            ],
            "IMultiTokenPool": [
              2292
            ],
            "IPriceOracle": [
              2354
            ],
            "IUniswapV2Router02": [
              1375
            ],
            "MultiTokenPool": [
              3549
            ],
            "Ownable": [
              193
            ],
            "PoolActions": [
              4040
            ]
          },
          "id": 3550,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2691,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:25"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "../lib/Enums.sol",
              "id": 2693,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3550,
              "sourceUnit": 2464,
              "src": "68:39:25",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2692,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2463,
                    "src": "76:5:25",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IFactory.sol",
              "file": "../interfaces/IFactory.sol",
              "id": 2695,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3550,
              "sourceUnit": 2187,
              "src": "109:52:25",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2694,
                    "name": "IFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2186,
                    "src": "117:8:25",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IPriceOracle.sol",
              "file": "../interfaces/IPriceOracle.sol",
              "id": 2697,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3550,
              "sourceUnit": 2355,
              "src": "163:60:25",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2696,
                    "name": "IPriceOracle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2354,
                    "src": "171:12:25",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IMultiTokenPool.sol",
              "file": "../interfaces/IMultiTokenPool.sol",
              "id": 2699,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3550,
              "sourceUnit": 2293,
              "src": "225:66:25",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2698,
                    "name": "IMultiTokenPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2292,
                    "src": "233:15:25",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 2701,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3550,
              "sourceUnit": 846,
              "src": "293:68:25",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2700,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 845,
                    "src": "301:5:25",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2703,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3550,
              "sourceUnit": 924,
              "src": "363:70:25",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2702,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 923,
                    "src": "371:6:25",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 2705,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3550,
              "sourceUnit": 194,
              "src": "435:67:25",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2704,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 193,
                    "src": "443:7:25",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
              "file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
              "id": 2707,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3550,
              "sourceUnit": 1376,
              "src": "504:101:25",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2706,
                    "name": "IUniswapV2Router02",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1375,
                    "src": "512:18:25",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/pool/PoolActions.sol",
              "file": "./PoolActions.sol",
              "id": 2709,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3550,
              "sourceUnit": 4041,
              "src": "609:46:25",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2708,
                    "name": "PoolActions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4040,
                    "src": "617:11:25",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2710,
                    "name": "ERC20",
                    "nameLocations": [
                      "686:5:25"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 845,
                    "src": "686:5:25"
                  },
                  "id": 2711,
                  "nodeType": "InheritanceSpecifier",
                  "src": "686:5:25"
                },
                {
                  "baseName": {
                    "id": 2712,
                    "name": "PoolActions",
                    "nameLocations": [
                      "693:11:25"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4040,
                    "src": "693:11:25"
                  },
                  "id": 2713,
                  "nodeType": "InheritanceSpecifier",
                  "src": "693:11:25"
                },
                {
                  "baseName": {
                    "id": 2714,
                    "name": "IMultiTokenPool",
                    "nameLocations": [
                      "706:15:25"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2292,
                    "src": "706:15:25"
                  },
                  "id": 2715,
                  "nodeType": "InheritanceSpecifier",
                  "src": "706:15:25"
                },
                {
                  "baseName": {
                    "id": 2716,
                    "name": "Ownable",
                    "nameLocations": [
                      "723:7:25"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 193,
                    "src": "723:7:25"
                  },
                  "id": 2717,
                  "nodeType": "InheritanceSpecifier",
                  "src": "723:7:25"
                }
              ],
              "canonicalName": "MultiTokenPool",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3549,
              "linearizedBaseContracts": [
                3549,
                193,
                2292,
                2307,
                4040,
                845,
                235,
                949,
                923,
                979
              ],
              "name": "MultiTokenPool",
              "nameLocation": "668:14:25",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2824,
                    "nodeType": "Block",
                    "src": "1025:764:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2744,
                                  "name": "initialTokens_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2726,
                                  "src": "1058:14:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 2745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1073:6:25",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1058:21:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2746,
                                  "name": "initialSplitRatio_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2729,
                                  "src": "1083:18:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 2747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1102:6:25",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1083:25:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1058:50:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d69736d61746368656420617272617973",
                              "id": 2749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1123:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481",
                                "typeString": "literal_string \"Mismatched arrays\""
                              },
                              "value": "Mismatched arrays"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481",
                                "typeString": "literal_string \"Mismatched arrays\""
                              }
                            ],
                            "id": 2743,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1036:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1036:117:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2751,
                        "nodeType": "ExpressionStatement",
                        "src": "1036:117:25"
                      },
                      {
                        "expression": {
                          "id": 2754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2752,
                            "name": "_factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3564,
                            "src": "1166:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2753,
                            "name": "factory_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2719,
                            "src": "1177:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1166:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2755,
                        "nodeType": "ExpressionStatement",
                        "src": "1166:19:25"
                      },
                      {
                        "assignments": [
                          2757
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2757,
                            "mutability": "mutable",
                            "name": "swapRouter",
                            "nameLocation": "1206:10:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 2824,
                            "src": "1198:18:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2756,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1198:7:25",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2763,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2759,
                                  "name": "_factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3564,
                                  "src": "1228:8:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2758,
                                "name": "IFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2186,
                                "src": "1219:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFactory_$2186_$",
                                  "typeString": "type(contract IFactory)"
                                }
                              },
                              "id": 2760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1219:18:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFactory_$2186",
                                "typeString": "contract IFactory"
                              }
                            },
                            "id": 2761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1238:20:25",
                            "memberName": "getSwapRouterAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2175,
                            "src": "1219:39:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1219:41:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1198:62:25"
                      },
                      {
                        "expression": {
                          "id": 2768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2764,
                            "name": "_swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3562,
                            "src": "1271:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2766,
                                "name": "swapRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2757,
                                "src": "1304:10:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2765,
                              "name": "IUniswapV2Router02",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "1285:18:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1375_$",
                                "typeString": "type(contract IUniswapV2Router02)"
                              }
                            },
                            "id": 2767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1285:30:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          },
                          "src": "1271:44:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 2769,
                        "nodeType": "ExpressionStatement",
                        "src": "1271:44:25"
                      },
                      {
                        "expression": {
                          "id": 2772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2770,
                            "name": "_depositUsdMin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3566,
                            "src": "1328:14:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2771,
                            "name": "depositUsdMin_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2723,
                            "src": "1345:14:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1328:31:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2773,
                        "nodeType": "ExpressionStatement",
                        "src": "1328:31:25"
                      },
                      {
                        "expression": {
                          "id": 2776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2774,
                            "name": "_underlyingTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3572,
                            "src": "1372:17:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2775,
                            "name": "initialTokens_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2726,
                            "src": "1392:14:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "1372:34:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 2777,
                        "nodeType": "ExpressionStatement",
                        "src": "1372:34:25"
                      },
                      {
                        "expression": {
                          "id": 2780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2778,
                            "name": "_splitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3569,
                            "src": "1417:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2779,
                            "name": "initialSplitRatio_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2729,
                            "src": "1431:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "1417:32:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 2781,
                        "nodeType": "ExpressionStatement",
                        "src": "1417:32:25"
                      },
                      {
                        "expression": {
                          "id": 2784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2782,
                            "name": "_allowedActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3576,
                            "src": "1462:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage",
                              "typeString": "enum Enums.ActionCall[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2783,
                            "name": "allowedActions_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2733,
                            "src": "1480:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                              "typeString": "enum Enums.ActionCall[] memory"
                            }
                          },
                          "src": "1462:33:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage",
                            "typeString": "enum Enums.ActionCall[] storage ref"
                          }
                        },
                        "id": 2785,
                        "nodeType": "ExpressionStatement",
                        "src": "1462:33:25"
                      },
                      {
                        "assignments": [
                          2787
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2787,
                            "mutability": "mutable",
                            "name": "totalRatio",
                            "nameLocation": "1516:10:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 2824,
                            "src": "1508:18:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2786,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1508:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2789,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1529:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1508:22:25"
                      },
                      {
                        "body": {
                          "id": 2815,
                          "nodeType": "Block",
                          "src": "1597:121:25",
                          "statements": [
                            {
                              "expression": {
                                "id": 2805,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2801,
                                  "name": "totalRatio",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2787,
                                  "src": "1612:10:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2802,
                                    "name": "initialSplitRatio_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2729,
                                    "src": "1626:18:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 2804,
                                  "indexExpression": {
                                    "id": 2803,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2791,
                                    "src": "1645:1:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1626:21:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1612:35:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2806,
                              "nodeType": "ExpressionStatement",
                              "src": "1612:35:25"
                            },
                            {
                              "expression": {
                                "id": 2813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2807,
                                    "name": "_isUnderlyingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3580,
                                    "src": "1662:18:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 2811,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2808,
                                      "name": "initialTokens_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2726,
                                      "src": "1681:14:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 2810,
                                    "indexExpression": {
                                      "id": 2809,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2791,
                                      "src": "1696:1:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1681:17:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1662:37:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 2812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1702:4:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1662:44:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2814,
                              "nodeType": "ExpressionStatement",
                              "src": "1662:44:25"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2794,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2791,
                            "src": "1561:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2795,
                              "name": "initialSplitRatio_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2729,
                              "src": "1565:18:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1584:6:25",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1565:25:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1561:29:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2816,
                        "initializationExpression": {
                          "assignments": [
                            2791
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2791,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1554:1:25",
                              "nodeType": "VariableDeclaration",
                              "scope": 2816,
                              "src": "1546:9:25",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2790,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1546:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2793,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1558:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1546:13:25"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1592:3:25",
                            "subExpression": {
                              "id": 2798,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2791,
                              "src": "1592:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2800,
                          "nodeType": "ExpressionStatement",
                          "src": "1592:3:25"
                        },
                        "nodeType": "ForStatement",
                        "src": "1541:177:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2818,
                                "name": "totalRatio",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2787,
                                "src": "1738:10:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2819,
                                "name": "DIVISOR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3583,
                                "src": "1752:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1738:21:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420726174696f2073756d",
                              "id": 2821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1761:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38835bc47bdd0a0bfcd75c0ecaae2f486482e496d2f52fa1b049d72d895eb704",
                                "typeString": "literal_string \"Invalid ratio sum\""
                              },
                              "value": "Invalid ratio sum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38835bc47bdd0a0bfcd75c0ecaae2f486482e496d2f52fa1b049d72d895eb704",
                                "typeString": "literal_string \"Invalid ratio sum\""
                              }
                            ],
                            "id": 2817,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1730:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:51:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2823,
                        "nodeType": "ExpressionStatement",
                        "src": "1730:51:25"
                      }
                    ]
                  },
                  "id": 2825,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "4c50546f6b656e",
                          "id": 2736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "990:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_91896885eb10c3c73de18aef4dd028882060740275c7a0f7d08a98d2ad73965d",
                            "typeString": "literal_string \"LPToken\""
                          },
                          "value": "LPToken"
                        },
                        {
                          "hexValue": "4c50",
                          "id": 2737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1001:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9c21acbd49d77f161dc74d87db3b4adb975d116ec37505d4dd76e89d2844ede3",
                            "typeString": "literal_string \"LP\""
                          },
                          "value": "LP"
                        }
                      ],
                      "id": 2738,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2735,
                        "name": "ERC20",
                        "nameLocations": [
                          "984:5:25"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 845,
                        "src": "984:5:25"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "984:22:25"
                    },
                    {
                      "arguments": [
                        {
                          "id": 2740,
                          "name": "creator_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2721,
                          "src": "1015:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2741,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2739,
                        "name": "Ownable",
                        "nameLocations": [
                          "1007:7:25"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 193,
                        "src": "1007:7:25"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1007:17:25"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2734,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2719,
                        "mutability": "mutable",
                        "name": "factory_",
                        "nameLocation": "768:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 2825,
                        "src": "760:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2718,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "760:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2721,
                        "mutability": "mutable",
                        "name": "creator_",
                        "nameLocation": "795:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 2825,
                        "src": "787:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "787:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2723,
                        "mutability": "mutable",
                        "name": "depositUsdMin_",
                        "nameLocation": "822:14:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 2825,
                        "src": "814:22:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2722,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "814:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2726,
                        "mutability": "mutable",
                        "name": "initialTokens_",
                        "nameLocation": "864:14:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 2825,
                        "src": "847:31:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2724,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "847:7:25",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2725,
                          "nodeType": "ArrayTypeName",
                          "src": "847:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2729,
                        "mutability": "mutable",
                        "name": "initialSplitRatio_",
                        "nameLocation": "906:18:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 2825,
                        "src": "889:35:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2727,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "889:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2728,
                          "nodeType": "ArrayTypeName",
                          "src": "889:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2733,
                        "mutability": "mutable",
                        "name": "allowedActions_",
                        "nameLocation": "961:15:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 2825,
                        "src": "935:41:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2731,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2730,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "935:5:25",
                                "941:10:25"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2462,
                              "src": "935:16:25"
                            },
                            "referencedDeclaration": 2462,
                            "src": "935:16:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 2732,
                          "nodeType": "ArrayTypeName",
                          "src": "935:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "749:234:25"
                  },
                  "returnParameters": {
                    "id": 2742,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1025:0:25"
                  },
                  "scope": 3549,
                  "src": "738:1051:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2227
                  ],
                  "body": {
                    "id": 2893,
                    "nodeType": "Block",
                    "src": "2062:576:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2836,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3580,
                                "src": "2081:18:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 2838,
                              "indexExpression": {
                                "id": 2837,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2827,
                                "src": "2100:5:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2081:25:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455448206e6f7420737570706f72746564",
                              "id": 2839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2108:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9d30b9cb3dbec6ac7a1342d613d3a72e366093233be813950c84004db17f9eab",
                                "typeString": "literal_string \"ETH not supported\""
                              },
                              "value": "ETH not supported"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9d30b9cb3dbec6ac7a1342d613d3a72e366093233be813950c84004db17f9eab",
                                "typeString": "literal_string \"ETH not supported\""
                              }
                            ],
                            "id": 2835,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2073:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2073:55:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2841,
                        "nodeType": "ExpressionStatement",
                        "src": "2073:55:25"
                      },
                      {
                        "assignments": [
                          2843
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2843,
                            "mutability": "mutable",
                            "name": "priceOracle",
                            "nameLocation": "2149:11:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 2893,
                            "src": "2141:19:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2842,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2141:7:25",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2849,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2845,
                                  "name": "_factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3564,
                                  "src": "2172:8:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2844,
                                "name": "IFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2186,
                                "src": "2163:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFactory_$2186_$",
                                  "typeString": "type(contract IFactory)"
                                }
                              },
                              "id": 2846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2163:18:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFactory_$2186",
                                "typeString": "contract IFactory"
                              }
                            },
                            "id": 2847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2182:21:25",
                            "memberName": "getPriceOracleAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2180,
                            "src": "2163:40:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2163:42:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2141:64:25"
                      },
                      {
                        "assignments": [
                          2851
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2851,
                            "mutability": "mutable",
                            "name": "amountUsd",
                            "nameLocation": "2224:9:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 2893,
                            "src": "2216:17:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2850,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2216:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2859,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2856,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2829,
                              "src": "2294:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2857,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2827,
                              "src": "2315:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2853,
                                  "name": "priceOracle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2843,
                                  "src": "2249:11:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2852,
                                "name": "IPriceOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2354,
                                "src": "2236:12:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPriceOracle_$2354_$",
                                  "typeString": "type(contract IPriceOracle)"
                                }
                              },
                              "id": 2854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2236:25:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPriceOracle_$2354",
                                "typeString": "contract IPriceOracle"
                              }
                            },
                            "id": 2855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2262:17:25",
                            "memberName": "getAmountOutInUsd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2318,
                            "src": "2236:43:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (uint256,address) view external returns (uint256)"
                            }
                          },
                          "id": 2858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2236:95:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2216:115:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2861,
                                "name": "amountUsd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2851,
                                "src": "2366:9:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2862,
                                "name": "_depositUsdMin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3566,
                                "src": "2379:14:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2366:27:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e74206465706f73697420616d6f756e7420696e20757364",
                              "id": 2864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2408:36:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_97c8811a5c9c088687c1bb66f526b3067714ee3173b5e059e016b410fbfc4468",
                                "typeString": "literal_string \"Insufficient deposit amount in usd\""
                              },
                              "value": "Insufficient deposit amount in usd"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_97c8811a5c9c088687c1bb66f526b3067714ee3173b5e059e016b410fbfc4468",
                                "typeString": "literal_string \"Insufficient deposit amount in usd\""
                              }
                            ],
                            "id": 2860,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2344:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2344:111:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2866,
                        "nodeType": "ExpressionStatement",
                        "src": "2344:111:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2871,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2495:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2499:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2495:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2875,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2515:4:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MultiTokenPool_$3549",
                                    "typeString": "contract MultiTokenPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MultiTokenPool_$3549",
                                    "typeString": "contract MultiTokenPool"
                                  }
                                ],
                                "id": 2874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2507:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2873,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2507:7:25",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2507:13:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2877,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2829,
                              "src": "2522:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2868,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2827,
                                  "src": "2475:5:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2867,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 923,
                                "src": "2468:6:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2468:13:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$923",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2482:12:25",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 922,
                            "src": "2468:26:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2468:61:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2879,
                        "nodeType": "ExpressionStatement",
                        "src": "2468:61:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2881,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2548:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2552:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2548:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2883,
                              "name": "amountUsd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2851,
                              "src": "2560:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2880,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 685,
                            "src": "2542:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:28:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2885,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:28:25"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2887,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2604:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2608:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2604:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2889,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2827,
                              "src": "2616:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2890,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2829,
                              "src": "2623:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2886,
                            "name": "TokensDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2202,
                            "src": "2588:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2588:42:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2892,
                        "nodeType": "EmitStatement",
                        "src": "2583:47:25"
                      }
                    ]
                  },
                  "functionSelector": "47e7ef24",
                  "id": 2894,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2833,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2832,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2052:9:25"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "2052:9:25"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2052:9:25"
                    }
                  ],
                  "name": "deposit",
                  "nameLocation": "1970:7:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2831,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2043:8:25"
                  },
                  "parameters": {
                    "id": 2830,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2827,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1996:5:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 2894,
                        "src": "1988:13:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2826,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1988:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2829,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2020:6:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 2894,
                        "src": "2012:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2828,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2012:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1977:56:25"
                  },
                  "returnParameters": {
                    "id": 2834,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2062:0:25"
                  },
                  "scope": 3549,
                  "src": "1961:677:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2232
                  ],
                  "body": {
                    "id": 2955,
                    "nodeType": "Block",
                    "src": "2718:582:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2903,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2737:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2904,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2741:5:25",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2737:9:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2905,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2896,
                                "src": "2750:6:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2737:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e636f72726563742045544820616d6f756e74",
                              "id": 2907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2758:22:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b",
                                "typeString": "literal_string \"Incorrect ETH amount\""
                              },
                              "value": "Incorrect ETH amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b",
                                "typeString": "literal_string \"Incorrect ETH amount\""
                              }
                            ],
                            "id": 2902,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2729:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2729:52:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2909,
                        "nodeType": "ExpressionStatement",
                        "src": "2729:52:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2911,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3580,
                                "src": "2800:18:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 2913,
                              "indexExpression": {
                                "id": 2912,
                                "name": "SONIC_COIN",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3586,
                                "src": "2819:10:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2800:30:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455448206e6f7420737570706f72746564",
                              "id": 2914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2832:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9d30b9cb3dbec6ac7a1342d613d3a72e366093233be813950c84004db17f9eab",
                                "typeString": "literal_string \"ETH not supported\""
                              },
                              "value": "ETH not supported"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9d30b9cb3dbec6ac7a1342d613d3a72e366093233be813950c84004db17f9eab",
                                "typeString": "literal_string \"ETH not supported\""
                              }
                            ],
                            "id": 2910,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2792:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2792:60:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2916,
                        "nodeType": "ExpressionStatement",
                        "src": "2792:60:25"
                      },
                      {
                        "assignments": [
                          2918
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2918,
                            "mutability": "mutable",
                            "name": "priceOracle",
                            "nameLocation": "2873:11:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 2955,
                            "src": "2865:19:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2917,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2865:7:25",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2924,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2920,
                                  "name": "_factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3564,
                                  "src": "2896:8:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2919,
                                "name": "IFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2186,
                                "src": "2887:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFactory_$2186_$",
                                  "typeString": "type(contract IFactory)"
                                }
                              },
                              "id": 2921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2887:18:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFactory_$2186",
                                "typeString": "contract IFactory"
                              }
                            },
                            "id": 2922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2906:21:25",
                            "memberName": "getPriceOracleAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2180,
                            "src": "2887:40:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2887:42:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2865:64:25"
                      },
                      {
                        "assignments": [
                          2926
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2926,
                            "mutability": "mutable",
                            "name": "amountUsd",
                            "nameLocation": "2950:9:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 2955,
                            "src": "2942:17:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2925,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2942:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2934,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2931,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2896,
                              "src": "3020:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2932,
                              "name": "SONIC_COIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3586,
                              "src": "3041:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2928,
                                  "name": "priceOracle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2918,
                                  "src": "2975:11:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2927,
                                "name": "IPriceOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2354,
                                "src": "2962:12:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPriceOracle_$2354_$",
                                  "typeString": "type(contract IPriceOracle)"
                                }
                              },
                              "id": 2929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2962:25:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPriceOracle_$2354",
                                "typeString": "contract IPriceOracle"
                              }
                            },
                            "id": 2930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2988:17:25",
                            "memberName": "getAmountOutInUsd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2318,
                            "src": "2962:43:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (uint256,address) view external returns (uint256)"
                            }
                          },
                          "id": 2933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2962:100:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2942:120:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2936,
                                "name": "amountUsd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2926,
                                "src": "3097:9:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2937,
                                "name": "_depositUsdMin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3566,
                                "src": "3110:14:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3097:27:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e74206465706f73697420616d6f756e7420696e20757364",
                              "id": 2939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3139:36:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_97c8811a5c9c088687c1bb66f526b3067714ee3173b5e059e016b410fbfc4468",
                                "typeString": "literal_string \"Insufficient deposit amount in usd\""
                              },
                              "value": "Insufficient deposit amount in usd"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_97c8811a5c9c088687c1bb66f526b3067714ee3173b5e059e016b410fbfc4468",
                                "typeString": "literal_string \"Insufficient deposit amount in usd\""
                              }
                            ],
                            "id": 2935,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3075:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3075:111:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2941,
                        "nodeType": "ExpressionStatement",
                        "src": "3075:111:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2943,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3205:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3209:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3205:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2945,
                              "name": "amountUsd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2926,
                              "src": "3217:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2942,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 685,
                            "src": "3199:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3199:28:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2947,
                        "nodeType": "ExpressionStatement",
                        "src": "3199:28:25"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2949,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3261:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3265:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3261:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2951,
                              "name": "SONIC_COIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3586,
                              "src": "3273:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2952,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2896,
                              "src": "3285:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2948,
                            "name": "TokensDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2202,
                            "src": "3245:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3245:47:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2954,
                        "nodeType": "EmitStatement",
                        "src": "3240:52:25"
                      }
                    ]
                  },
                  "functionSelector": "5358fbda",
                  "id": 2956,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2900,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2899,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2708:9:25"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "2708:9:25"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2708:9:25"
                    }
                  ],
                  "name": "depositETH",
                  "nameLocation": "2655:10:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2898,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2699:8:25"
                  },
                  "parameters": {
                    "id": 2897,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2896,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2674:6:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 2956,
                        "src": "2666:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2895,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2666:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2665:16:25"
                  },
                  "returnParameters": {
                    "id": 2901,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2718:0:25"
                  },
                  "scope": 3549,
                  "src": "2646:654:25",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2237
                  ],
                  "body": {
                    "id": 3050,
                    "nodeType": "Block",
                    "src": "3362:747:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2963,
                                "name": "lpAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2958,
                                "src": "3381:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2964,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3392:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3381:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420616d6f756e74",
                              "id": 2966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3395:16:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                "typeString": "literal_string \"Invalid amount\""
                              },
                              "value": "Invalid amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                "typeString": "literal_string \"Invalid amount\""
                              }
                            ],
                            "id": 2962,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3373:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3373:39:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2968,
                        "nodeType": "ExpressionStatement",
                        "src": "3373:39:25"
                      },
                      {
                        "assignments": [
                          2970
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2970,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "3433:11:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 3050,
                            "src": "3425:19:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2969,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3425:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2973,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2971,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "3447:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3447:13:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3425:35:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2975,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2970,
                                "src": "3479:11:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3493:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3479:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f206c6971756964697479",
                              "id": 2978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3496:14:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
                                "typeString": "literal_string \"No liquidity\""
                              },
                              "value": "No liquidity"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
                                "typeString": "literal_string \"No liquidity\""
                              }
                            ],
                            "id": 2974,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3471:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3471:40:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2980,
                        "nodeType": "ExpressionStatement",
                        "src": "3471:40:25"
                      },
                      {
                        "body": {
                          "id": 3042,
                          "nodeType": "Block",
                          "src": "3579:483:25",
                          "statements": [
                            {
                              "assignments": [
                                2993
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2993,
                                  "mutability": "mutable",
                                  "name": "tokenOut",
                                  "nameLocation": "3602:8:25",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3042,
                                  "src": "3594:16:25",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 2992,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3594:7:25",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2997,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 2994,
                                  "name": "_underlyingTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3572,
                                  "src": "3613:17:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2996,
                                "indexExpression": {
                                  "id": 2995,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2982,
                                  "src": "3631:1:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3613:20:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3594:39:25"
                            },
                            {
                              "assignments": [
                                2999
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2999,
                                  "mutability": "mutable",
                                  "name": "amountOut",
                                  "nameLocation": "3656:9:25",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3042,
                                  "src": "3648:17:25",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2998,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3648:7:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3008,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3004,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 3001,
                                            "name": "tokenOut",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2993,
                                            "src": "3680:8:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 3000,
                                          "name": "getBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4039,
                                          "src": "3669:10:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view returns (uint256)"
                                          }
                                        },
                                        "id": 3002,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3669:20:25",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 3003,
                                        "name": "lpAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2958,
                                        "src": "3692:8:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3669:31:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3005,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3668:33:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 3006,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2970,
                                  "src": "3704:11:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3668:47:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3648:67:25"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3009,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2993,
                                  "src": "3736:8:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 3010,
                                  "name": "SONIC_COIN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3586,
                                  "src": "3748:10:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3736:22:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 3040,
                                "nodeType": "Block",
                                "src": "3968:83:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 3035,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "4013:3:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 3036,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4017:6:25",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "4013:10:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 3037,
                                          "name": "amountOut",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2999,
                                          "src": "4025:9:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 3032,
                                              "name": "tokenOut",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2993,
                                              "src": "3994:8:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 3031,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 923,
                                            "src": "3987:6:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 3033,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3987:16:25",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$923",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 3034,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4004:8:25",
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 890,
                                        "src": "3987:25:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 3038,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3987:48:25",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3039,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3987:48:25"
                                  }
                                ]
                              },
                              "id": 3041,
                              "nodeType": "IfStatement",
                              "src": "3732:319:25",
                              "trueBody": {
                                "id": 3030,
                                "nodeType": "Block",
                                "src": "3760:202:25",
                                "statements": [
                                  {
                                    "assignments": [
                                      3013,
                                      null
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 3013,
                                        "mutability": "mutable",
                                        "name": "_success",
                                        "nameLocation": "3785:8:25",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 3030,
                                        "src": "3780:13:25",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "typeName": {
                                          "id": 3012,
                                          "name": "bool",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3780:4:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "visibility": "internal"
                                      },
                                      null
                                    ],
                                    "id": 3024,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "hexValue": "",
                                          "id": 3022,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3864:2:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          },
                                          "value": ""
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                              "typeString": "literal_string \"\""
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 3016,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "3807:3:25",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 3017,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "3811:6:25",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3807:10:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 3015,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3799:8:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_payable_$",
                                                "typeString": "type(address payable)"
                                              },
                                              "typeName": {
                                                "id": 3014,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3799:8:25",
                                                "stateMutability": "payable",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 3018,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3799:19:25",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          },
                                          "id": 3019,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3819:4:25",
                                          "memberName": "call",
                                          "nodeType": "MemberAccess",
                                          "src": "3799:24:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                          }
                                        },
                                        "id": 3021,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "names": [
                                          "value"
                                        ],
                                        "nodeType": "FunctionCallOptions",
                                        "options": [
                                          {
                                            "id": 3020,
                                            "name": "amountOut",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2999,
                                            "src": "3831:9:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "src": "3799:42:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                        }
                                      },
                                      "id": 3023,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3799:86:25",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "tuple(bool,bytes memory)"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3779:106:25"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 3026,
                                          "name": "_success",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3013,
                                          "src": "3914:8:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "455448207472616e73666572206661696c6564",
                                          "id": 3027,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3924:21:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
                                            "typeString": "literal_string \"ETH transfer failed\""
                                          },
                                          "value": "ETH transfer failed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
                                            "typeString": "literal_string \"ETH transfer failed\""
                                          }
                                        ],
                                        "id": 3025,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "3906:7:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 3028,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3906:40:25",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3029,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3906:40:25"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2985,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2982,
                            "src": "3544:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2986,
                              "name": "_underlyingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3572,
                              "src": "3548:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3566:6:25",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3548:24:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3544:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3043,
                        "initializationExpression": {
                          "assignments": [
                            2982
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2982,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3537:1:25",
                              "nodeType": "VariableDeclaration",
                              "scope": 3043,
                              "src": "3529:9:25",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2981,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3529:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2984,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3541:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3529:13:25"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3574:3:25",
                            "subExpression": {
                              "id": 2989,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2982,
                              "src": "3574:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2991,
                          "nodeType": "ExpressionStatement",
                          "src": "3574:3:25"
                        },
                        "nodeType": "ForStatement",
                        "src": "3524:538:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3045,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4080:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4084:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4080:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3047,
                              "name": "lpAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2958,
                              "src": "4092:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3044,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "4074:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4074:27:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3049,
                        "nodeType": "ExpressionStatement",
                        "src": "4074:27:25"
                      }
                    ]
                  },
                  "functionSelector": "2e1a7d4d",
                  "id": 3051,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "3317:8:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2960,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3353:8:25"
                  },
                  "parameters": {
                    "id": 2959,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2958,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "3334:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 3051,
                        "src": "3326:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2957,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3325:18:25"
                  },
                  "returnParameters": {
                    "id": 2961,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3362:0:25"
                  },
                  "scope": 3549,
                  "src": "3308:801:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2244
                  ],
                  "body": {
                    "id": 3064,
                    "nodeType": "Block",
                    "src": "4192:51:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3060,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3053,
                              "src": "4219:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3061,
                              "name": "lpAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3055,
                              "src": "4226:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3059,
                            "name": "_withdrawSingle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3271,
                            "src": "4203:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4203:32:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3063,
                        "nodeType": "ExpressionStatement",
                        "src": "4203:32:25"
                      }
                    ]
                  },
                  "functionSelector": "f9c4d3db",
                  "id": 3065,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawSingle",
                  "nameLocation": "4126:14:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3057,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4183:8:25"
                  },
                  "parameters": {
                    "id": 3056,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3053,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4149:5:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 3065,
                        "src": "4141:13:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3052,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4141:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3055,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "4164:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 3065,
                        "src": "4156:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4156:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4140:33:25"
                  },
                  "returnParameters": {
                    "id": 3058,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4192:0:25"
                  },
                  "scope": 3549,
                  "src": "4117:126:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2249
                  ],
                  "body": {
                    "id": 3076,
                    "nodeType": "Block",
                    "src": "4314:56:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3072,
                              "name": "SONIC_COIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3586,
                              "src": "4341:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3073,
                              "name": "lpAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3067,
                              "src": "4353:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3071,
                            "name": "_withdrawSingle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3271,
                            "src": "4325:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4325:37:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3075,
                        "nodeType": "ExpressionStatement",
                        "src": "4325:37:25"
                      }
                    ]
                  },
                  "functionSelector": "a216aa06",
                  "id": 3077,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawSingleETH",
                  "nameLocation": "4260:17:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3069,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4305:8:25"
                  },
                  "parameters": {
                    "id": 3068,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3067,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "4286:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 3077,
                        "src": "4278:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3066,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4278:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4277:18:25"
                  },
                  "returnParameters": {
                    "id": 3070,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4314:0:25"
                  },
                  "scope": 3549,
                  "src": "4251:119:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3270,
                    "nodeType": "Block",
                    "src": "4448:1693:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3085,
                                "name": "lpAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3081,
                                "src": "4467:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3086,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4478:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4467:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420616d6f756e74",
                              "id": 3088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4481:16:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                "typeString": "literal_string \"Invalid amount\""
                              },
                              "value": "Invalid amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                "typeString": "literal_string \"Invalid amount\""
                              }
                            ],
                            "id": 3084,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4459:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4459:39:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3090,
                        "nodeType": "ExpressionStatement",
                        "src": "4459:39:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3092,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3580,
                                "src": "4517:18:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 3094,
                              "indexExpression": {
                                "id": 3093,
                                "name": "tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3079,
                                "src": "4536:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4517:28:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e",
                              "id": 3095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4547:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              },
                              "value": "Invalid token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              }
                            ],
                            "id": 3091,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4509:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4509:54:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3097,
                        "nodeType": "ExpressionStatement",
                        "src": "4509:54:25"
                      },
                      {
                        "assignments": [
                          3099
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3099,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "4584:11:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 3270,
                            "src": "4576:19:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3098,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4576:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3102,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3100,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "4598:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4598:13:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4576:35:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3104,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3099,
                                "src": "4630:11:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4644:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4630:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f206c6971756964697479",
                              "id": 3107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4647:14:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
                                "typeString": "literal_string \"No liquidity\""
                              },
                              "value": "No liquidity"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
                                "typeString": "literal_string \"No liquidity\""
                              }
                            ],
                            "id": 3103,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4622:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4622:40:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3109,
                        "nodeType": "ExpressionStatement",
                        "src": "4622:40:25"
                      },
                      {
                        "body": {
                          "id": 3262,
                          "nodeType": "Block",
                          "src": "4730:1364:25",
                          "statements": [
                            {
                              "assignments": [
                                3122
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3122,
                                  "mutability": "mutable",
                                  "name": "tokenIn",
                                  "nameLocation": "4753:7:25",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3262,
                                  "src": "4745:15:25",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3121,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4745:7:25",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3126,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3123,
                                  "name": "_underlyingTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3572,
                                  "src": "4763:17:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 3125,
                                "indexExpression": {
                                  "id": 3124,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3111,
                                  "src": "4781:1:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4763:20:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4745:38:25"
                            },
                            {
                              "assignments": [
                                3128
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3128,
                                  "mutability": "mutable",
                                  "name": "amountIn",
                                  "nameLocation": "4806:8:25",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3262,
                                  "src": "4798:16:25",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3127,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4798:7:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3137,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3133,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 3130,
                                            "name": "tokenIn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3122,
                                            "src": "4829:7:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 3129,
                                          "name": "getBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4039,
                                          "src": "4818:10:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view returns (uint256)"
                                          }
                                        },
                                        "id": 3131,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4818:19:25",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 3132,
                                        "name": "lpAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3081,
                                        "src": "4840:8:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4818:30:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3134,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4817:32:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 3135,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3099,
                                  "src": "4852:11:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4817:46:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4798:65:25"
                            },
                            {
                              "assignments": [
                                3142
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3142,
                                  "mutability": "mutable",
                                  "name": "path",
                                  "nameLocation": "4897:4:25",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3262,
                                  "src": "4880:21:25",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3140,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4880:7:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3141,
                                    "nodeType": "ArrayTypeName",
                                    "src": "4880:9:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3148,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 3146,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4918:1:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "id": 3145,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "4904:13:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (address[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3143,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4908:7:25",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3144,
                                    "nodeType": "ArrayTypeName",
                                    "src": "4908:9:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  }
                                },
                                "id": 3147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4904:16:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4880:40:25"
                            },
                            {
                              "expression": {
                                "id": 3160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3149,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3142,
                                    "src": "4937:4:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3151,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 3150,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4942:1:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4937:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3152,
                                      "name": "tokenIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3122,
                                      "src": "4947:7:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3153,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3586,
                                      "src": "4958:10:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "4947:21:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 3158,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3122,
                                    "src": "4992:7:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 3159,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "4947:52:25",
                                  "trueExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3155,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3562,
                                        "src": "4971:11:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 3156,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4983:4:25",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 991,
                                      "src": "4971:16:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 3157,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4971:18:25",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4937:62:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3161,
                              "nodeType": "ExpressionStatement",
                              "src": "4937:62:25"
                            },
                            {
                              "expression": {
                                "id": 3173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3162,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3142,
                                    "src": "5014:4:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3164,
                                  "indexExpression": {
                                    "hexValue": "31",
                                    "id": 3163,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5019:1:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5014:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3167,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3165,
                                      "name": "tokenOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3079,
                                      "src": "5024:8:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3166,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3586,
                                      "src": "5036:10:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "5024:22:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 3171,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3079,
                                    "src": "5070:8:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 3172,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "5024:54:25",
                                  "trueExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3168,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3562,
                                        "src": "5049:11:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 3169,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5061:4:25",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 991,
                                      "src": "5049:16:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 3170,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5049:18:25",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5014:64:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3174,
                              "nodeType": "ExpressionStatement",
                              "src": "5014:64:25"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 3181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 3177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3175,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3122,
                                    "src": "5099:7:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 3176,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3079,
                                    "src": "5110:8:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5099:19:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 3180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3178,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3079,
                                    "src": "5122:8:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 3179,
                                    "name": "SONIC_COIN",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3586,
                                    "src": "5134:10:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5122:22:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5099:45:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 3203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3201,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3122,
                                    "src": "5357:7:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 3202,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3079,
                                    "src": "5368:8:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5357:19:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3216,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3214,
                                      "name": "tokenIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3122,
                                      "src": "5469:7:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3215,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3586,
                                      "src": "5480:10:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "5469:21:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 3258,
                                    "nodeType": "Block",
                                    "src": "5744:339:25",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 3239,
                                                  "name": "_swapRouter",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3562,
                                                  "src": "5795:11:25",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                                    "typeString": "contract IUniswapV2Router02"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                                    "typeString": "contract IUniswapV2Router02"
                                                  }
                                                ],
                                                "id": 3238,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "5787:7:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 3237,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "5787:7:25",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 3240,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "5787:20:25",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 3241,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3128,
                                              "src": "5809:8:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 3234,
                                                  "name": "tokenIn",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3122,
                                                  "src": "5770:7:25",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 3233,
                                                "name": "IERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 923,
                                                "src": "5763:6:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                                  "typeString": "type(contract IERC20)"
                                                }
                                              },
                                              "id": 3235,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "5763:15:25",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$923",
                                                "typeString": "contract IERC20"
                                              }
                                            },
                                            "id": 3236,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5779:7:25",
                                            "memberName": "approve",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 910,
                                            "src": "5763:23:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                          },
                                          "id": 3242,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5763:55:25",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 3243,
                                        "nodeType": "ExpressionStatement",
                                        "src": "5763:55:25"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 3247,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3128,
                                              "src": "5898:8:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "hexValue": "30",
                                              "id": 3248,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5929:1:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            {
                                              "id": 3249,
                                              "name": "path",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3142,
                                              "src": "5969:4:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 3250,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "5996:3:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 3251,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "6000:6:25",
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "5996:10:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3255,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 3252,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "6029:5:25",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 3253,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "6035:9:25",
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "6029:15:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 3254,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6047:1:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "6029:19:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 3244,
                                              "name": "_swapRouter",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3562,
                                              "src": "5839:11:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                                "typeString": "contract IUniswapV2Router02"
                                              }
                                            },
                                            "id": 3246,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5851:24:25",
                                            "memberName": "swapExactTokensForTokens",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1150,
                                            "src": "5839:36:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 3256,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5839:228:25",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 3257,
                                        "nodeType": "ExpressionStatement",
                                        "src": "5839:228:25"
                                      }
                                    ]
                                  },
                                  "id": 3259,
                                  "nodeType": "IfStatement",
                                  "src": "5465:618:25",
                                  "trueBody": {
                                    "id": 3232,
                                    "nodeType": "Block",
                                    "src": "5492:246:25",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "30",
                                              "id": 3222,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5584:1:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            {
                                              "id": 3223,
                                              "name": "path",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3142,
                                              "src": "5624:4:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 3224,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "5651:3:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 3225,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "5655:6:25",
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "5651:10:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3229,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 3226,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "5684:5:25",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 3227,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "5690:9:25",
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "5684:15:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 3228,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "5702:1:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "5684:19:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                  "typeString": "address[] memory"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "id": 3217,
                                                "name": "_swapRouter",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3562,
                                                "src": "5511:11:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                                  "typeString": "contract IUniswapV2Router02"
                                                }
                                              },
                                              "id": 3219,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "5523:21:25",
                                              "memberName": "swapExactETHForTokens",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1182,
                                              "src": "5511:33:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                                "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                                              }
                                            },
                                            "id": 3221,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "names": [
                                              "value"
                                            ],
                                            "nodeType": "FunctionCallOptions",
                                            "options": [
                                              {
                                                "id": 3220,
                                                "name": "amountIn",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3128,
                                                "src": "5552:8:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "src": "5511:50:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                                              "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 3230,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5511:211:25",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 3231,
                                        "nodeType": "ExpressionStatement",
                                        "src": "5511:211:25"
                                      }
                                    ]
                                  }
                                },
                                "id": 3260,
                                "nodeType": "IfStatement",
                                "src": "5353:730:25",
                                "trueBody": {
                                  "id": 3213,
                                  "nodeType": "Block",
                                  "src": "5378:81:25",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 3208,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "5422:3:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 3209,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5426:6:25",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "5422:10:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 3210,
                                            "name": "amountIn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3128,
                                            "src": "5434:8:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 3205,
                                                "name": "tokenIn",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3122,
                                                "src": "5404:7:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 3204,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 923,
                                              "src": "5397:6:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 3206,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5397:15:25",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$923",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 3207,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5413:8:25",
                                          "memberName": "transfer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 890,
                                          "src": "5397:24:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                            "typeString": "function (address,uint256) external returns (bool)"
                                          }
                                        },
                                        "id": 3211,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5397:46:25",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 3212,
                                      "nodeType": "ExpressionStatement",
                                      "src": "5397:46:25"
                                    }
                                  ]
                                }
                              },
                              "id": 3261,
                              "nodeType": "IfStatement",
                              "src": "5095:988:25",
                              "trueBody": {
                                "id": 3200,
                                "nodeType": "Block",
                                "src": "5146:201:25",
                                "statements": [
                                  {
                                    "assignments": [
                                      3183,
                                      null
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 3183,
                                        "mutability": "mutable",
                                        "name": "_success",
                                        "nameLocation": "5171:8:25",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 3200,
                                        "src": "5166:13:25",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "typeName": {
                                          "id": 3182,
                                          "name": "bool",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5166:4:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "visibility": "internal"
                                      },
                                      null
                                    ],
                                    "id": 3194,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "hexValue": "",
                                          "id": 3192,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5249:2:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          },
                                          "value": ""
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                              "typeString": "literal_string \"\""
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 3186,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "5193:3:25",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 3187,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "5197:6:25",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "5193:10:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 3185,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "5185:8:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_payable_$",
                                                "typeString": "type(address payable)"
                                              },
                                              "typeName": {
                                                "id": 3184,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5185:8:25",
                                                "stateMutability": "payable",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 3188,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5185:19:25",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          },
                                          "id": 3189,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5205:4:25",
                                          "memberName": "call",
                                          "nodeType": "MemberAccess",
                                          "src": "5185:24:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                          }
                                        },
                                        "id": 3191,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "names": [
                                          "value"
                                        ],
                                        "nodeType": "FunctionCallOptions",
                                        "options": [
                                          {
                                            "id": 3190,
                                            "name": "amountIn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3128,
                                            "src": "5217:8:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "src": "5185:41:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                        }
                                      },
                                      "id": 3193,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5185:85:25",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "tuple(bool,bytes memory)"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5165:105:25"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 3196,
                                          "name": "_success",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3183,
                                          "src": "5299:8:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "455448207472616e73666572206661696c6564",
                                          "id": 3197,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5309:21:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
                                            "typeString": "literal_string \"ETH transfer failed\""
                                          },
                                          "value": "ETH transfer failed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
                                            "typeString": "literal_string \"ETH transfer failed\""
                                          }
                                        ],
                                        "id": 3195,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "5291:7:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 3198,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5291:40:25",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3199,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5291:40:25"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3114,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3111,
                            "src": "4695:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3115,
                              "name": "_underlyingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3572,
                              "src": "4699:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4717:6:25",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4699:24:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4695:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3263,
                        "initializationExpression": {
                          "assignments": [
                            3111
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3111,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4688:1:25",
                              "nodeType": "VariableDeclaration",
                              "scope": 3263,
                              "src": "4680:9:25",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3110,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4680:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3113,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4692:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4680:13:25"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4725:3:25",
                            "subExpression": {
                              "id": 3118,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3111,
                              "src": "4725:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3120,
                          "nodeType": "ExpressionStatement",
                          "src": "4725:3:25"
                        },
                        "nodeType": "ForStatement",
                        "src": "4675:1419:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3265,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6112:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6116:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6112:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3267,
                              "name": "lpAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3081,
                              "src": "6124:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3264,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "6106:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6106:27:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3269,
                        "nodeType": "ExpressionStatement",
                        "src": "6106:27:25"
                      }
                    ]
                  },
                  "id": 3271,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_withdrawSingle",
                  "nameLocation": "4387:15:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3082,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3079,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "4411:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 3271,
                        "src": "4403:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3078,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4403:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3081,
                        "mutability": "mutable",
                        "name": "lpAmount",
                        "nameLocation": "4429:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 3271,
                        "src": "4421:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3080,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4421:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4402:36:25"
                  },
                  "returnParameters": {
                    "id": 3083,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4448:0:25"
                  },
                  "scope": 3549,
                  "src": "4378:1763:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    2256
                  ],
                  "body": {
                    "id": 3306,
                    "nodeType": "Block",
                    "src": "6214:200:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3280,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3580,
                                "src": "6233:18:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 3282,
                              "indexExpression": {
                                "id": 3281,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3273,
                                "src": "6252:5:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6233:25:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e",
                              "id": 3283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6260:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              },
                              "value": "Invalid token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              }
                            ],
                            "id": 3279,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6225:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6225:51:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3285,
                        "nodeType": "ExpressionStatement",
                        "src": "6225:51:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3290,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6314:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6318:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6314:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3294,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6334:4:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MultiTokenPool_$3549",
                                    "typeString": "contract MultiTokenPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MultiTokenPool_$3549",
                                    "typeString": "contract MultiTokenPool"
                                  }
                                ],
                                "id": 3293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6326:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3292,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6326:7:25",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6326:13:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3296,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3275,
                              "src": "6341:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3287,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3273,
                                  "src": "6294:5:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3286,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 923,
                                "src": "6287:6:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6287:13:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$923",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6301:12:25",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 922,
                            "src": "6287:26:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6287:61:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3298,
                        "nodeType": "ExpressionStatement",
                        "src": "6287:61:25"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3300,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6380:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6384:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6380:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3302,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3273,
                              "src": "6392:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3303,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3275,
                              "src": "6399:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3299,
                            "name": "TokensDonated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2220,
                            "src": "6366:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6366:40:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3305,
                        "nodeType": "EmitStatement",
                        "src": "6361:45:25"
                      }
                    ]
                  },
                  "functionSelector": "e69d849d",
                  "id": 3307,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "donate",
                  "nameLocation": "6158:6:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3277,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6205:8:25"
                  },
                  "parameters": {
                    "id": 3276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3273,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6173:5:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 3307,
                        "src": "6165:13:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3272,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6165:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3275,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6188:6:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 3307,
                        "src": "6180:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3274,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6180:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6164:31:25"
                  },
                  "returnParameters": {
                    "id": 3278,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6214:0:25"
                  },
                  "scope": 3549,
                  "src": "6149:265:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2261
                  ],
                  "body": {
                    "id": 3335,
                    "nodeType": "Block",
                    "src": "6483:205:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3314,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3580,
                                "src": "6502:18:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 3316,
                              "indexExpression": {
                                "id": 3315,
                                "name": "SONIC_COIN",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3586,
                                "src": "6521:10:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6502:30:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455448206e6f7420737570706f72746564",
                              "id": 3317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6534:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9d30b9cb3dbec6ac7a1342d613d3a72e366093233be813950c84004db17f9eab",
                                "typeString": "literal_string \"ETH not supported\""
                              },
                              "value": "ETH not supported"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9d30b9cb3dbec6ac7a1342d613d3a72e366093233be813950c84004db17f9eab",
                                "typeString": "literal_string \"ETH not supported\""
                              }
                            ],
                            "id": 3313,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6494:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6494:60:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3319,
                        "nodeType": "ExpressionStatement",
                        "src": "6494:60:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3321,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6573:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6577:5:25",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6573:9:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 3323,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3309,
                                "src": "6586:6:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6573:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e636f72726563742045544820616d6f756e74",
                              "id": 3325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6594:22:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b",
                                "typeString": "literal_string \"Incorrect ETH amount\""
                              },
                              "value": "Incorrect ETH amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b",
                                "typeString": "literal_string \"Incorrect ETH amount\""
                              }
                            ],
                            "id": 3320,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6565:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6565:52:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3327,
                        "nodeType": "ExpressionStatement",
                        "src": "6565:52:25"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3329,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6649:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6653:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6649:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3331,
                              "name": "SONIC_COIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3586,
                              "src": "6661:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3332,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3309,
                              "src": "6673:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3328,
                            "name": "TokensDonated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2220,
                            "src": "6635:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6635:45:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3334,
                        "nodeType": "EmitStatement",
                        "src": "6630:50:25"
                      }
                    ]
                  },
                  "functionSelector": "ab83f98a",
                  "id": 3336,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "donateETH",
                  "nameLocation": "6431:9:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3311,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6474:8:25"
                  },
                  "parameters": {
                    "id": 3310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3309,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6449:6:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 3336,
                        "src": "6441:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6441:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6440:16:25"
                  },
                  "returnParameters": {
                    "id": 3312,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6483:0:25"
                  },
                  "scope": 3549,
                  "src": "6422:266:25",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2267
                  ],
                  "body": {
                    "id": 3345,
                    "nodeType": "Block",
                    "src": "6985:43:25",
                    "statements": [
                      {
                        "expression": {
                          "id": 3343,
                          "name": "_underlyingTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3572,
                          "src": "7003:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "functionReturnParameters": 3342,
                        "id": 3344,
                        "nodeType": "Return",
                        "src": "6996:24:25"
                      }
                    ]
                  },
                  "functionSelector": "aa6ca808",
                  "id": 3346,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokens",
                  "nameLocation": "6923:9:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3338,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6949:8:25"
                  },
                  "parameters": {
                    "id": 3337,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6932:2:25"
                  },
                  "returnParameters": {
                    "id": 3342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3341,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3346,
                        "src": "6967:16:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3339,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6967:7:25",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3340,
                          "nodeType": "ArrayTypeName",
                          "src": "6967:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6966:18:25"
                  },
                  "scope": 3549,
                  "src": "6914:114:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2273
                  ],
                  "body": {
                    "id": 3390,
                    "nodeType": "Block",
                    "src": "7171:250:25",
                    "statements": [
                      {
                        "assignments": [
                          3357
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3357,
                            "mutability": "mutable",
                            "name": "balances",
                            "nameLocation": "7199:8:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 3390,
                            "src": "7182:25:25",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3355,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7182:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3356,
                              "nodeType": "ArrayTypeName",
                              "src": "7182:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3364,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3361,
                                "name": "_underlyingTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3572,
                                "src": "7224:17:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 3362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7242:6:25",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7224:24:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7210:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3358,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7214:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3359,
                              "nodeType": "ArrayTypeName",
                              "src": "7214:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 3363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7210:39:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7182:67:25"
                      },
                      {
                        "body": {
                          "id": 3386,
                          "nodeType": "Block",
                          "src": "7315:73:25",
                          "statements": [
                            {
                              "expression": {
                                "id": 3384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3376,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3357,
                                    "src": "7330:8:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 3378,
                                  "indexExpression": {
                                    "id": 3377,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3366,
                                    "src": "7339:1:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7330:11:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 3380,
                                        "name": "_underlyingTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3572,
                                        "src": "7355:17:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 3382,
                                      "indexExpression": {
                                        "id": 3381,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3366,
                                        "src": "7373:1:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7355:20:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3379,
                                    "name": "getBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4039,
                                    "src": "7344:10:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view returns (uint256)"
                                    }
                                  },
                                  "id": 3383,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7344:32:25",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7330:46:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3385,
                              "nodeType": "ExpressionStatement",
                              "src": "7330:46:25"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3369,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3366,
                            "src": "7280:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3370,
                              "name": "_underlyingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3572,
                              "src": "7284:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7302:6:25",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7284:24:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7280:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3387,
                        "initializationExpression": {
                          "assignments": [
                            3366
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3366,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "7273:1:25",
                              "nodeType": "VariableDeclaration",
                              "scope": 3387,
                              "src": "7265:9:25",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3365,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7265:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3368,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7277:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7265:13:25"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "7310:3:25",
                            "subExpression": {
                              "id": 3373,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3366,
                              "src": "7310:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3375,
                          "nodeType": "ExpressionStatement",
                          "src": "7310:3:25"
                        },
                        "nodeType": "ForStatement",
                        "src": "7260:128:25"
                      },
                      {
                        "expression": {
                          "id": 3388,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3357,
                          "src": "7405:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "functionReturnParameters": 3352,
                        "id": 3389,
                        "nodeType": "Return",
                        "src": "7398:15:25"
                      }
                    ]
                  },
                  "functionSelector": "00113e08",
                  "id": 3391,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalances",
                  "nameLocation": "7107:11:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3348,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7135:8:25"
                  },
                  "parameters": {
                    "id": 3347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7118:2:25"
                  },
                  "returnParameters": {
                    "id": 3352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3391,
                        "src": "7153:16:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3349,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7153:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3350,
                          "nodeType": "ArrayTypeName",
                          "src": "7153:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7152:18:25"
                  },
                  "scope": 3549,
                  "src": "7098:323:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2279
                  ],
                  "body": {
                    "id": 3400,
                    "nodeType": "Block",
                    "src": "7504:37:25",
                    "statements": [
                      {
                        "expression": {
                          "id": 3398,
                          "name": "_splitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3569,
                          "src": "7522:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 3397,
                        "id": 3399,
                        "nodeType": "Return",
                        "src": "7515:18:25"
                      }
                    ]
                  },
                  "functionSelector": "4eadcca8",
                  "id": 3401,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSplitRatio",
                  "nameLocation": "7438:13:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3393,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7468:8:25"
                  },
                  "parameters": {
                    "id": 3392,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7451:2:25"
                  },
                  "returnParameters": {
                    "id": 3397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3396,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3401,
                        "src": "7486:16:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3394,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7486:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3395,
                          "nodeType": "ArrayTypeName",
                          "src": "7486:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7485:18:25"
                  },
                  "scope": 3549,
                  "src": "7429:112:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2284
                  ],
                  "body": {
                    "id": 3409,
                    "nodeType": "Block",
                    "src": "7618:40:25",
                    "statements": [
                      {
                        "expression": {
                          "id": 3407,
                          "name": "_depositUsdMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3566,
                          "src": "7636:14:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3406,
                        "id": 3408,
                        "nodeType": "Return",
                        "src": "7629:21:25"
                      }
                    ]
                  },
                  "functionSelector": "8e4e9018",
                  "id": 3410,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDepositUsdMin",
                  "nameLocation": "7558:16:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3403,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7591:8:25"
                  },
                  "parameters": {
                    "id": 3402,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7574:2:25"
                  },
                  "returnParameters": {
                    "id": 3406,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3405,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3410,
                        "src": "7609:7:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3404,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7609:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7608:9:25"
                  },
                  "scope": 3549,
                  "src": "7549:109:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2291
                  ],
                  "body": {
                    "id": 3420,
                    "nodeType": "Block",
                    "src": "7795:41:25",
                    "statements": [
                      {
                        "expression": {
                          "id": 3418,
                          "name": "_allowedActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3576,
                          "src": "7813:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage",
                            "typeString": "enum Enums.ActionCall[] storage ref"
                          }
                        },
                        "functionReturnParameters": 3417,
                        "id": 3419,
                        "nodeType": "Return",
                        "src": "7806:22:25"
                      }
                    ]
                  },
                  "functionSelector": "2494452d",
                  "id": 3421,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllowedActions",
                  "nameLocation": "7675:17:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3412,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7736:8:25"
                  },
                  "parameters": {
                    "id": 3411,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7692:2:25"
                  },
                  "returnParameters": {
                    "id": 3417,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3416,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3421,
                        "src": "7763:25:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_memory_ptr",
                          "typeString": "enum Enums.ActionCall[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3414,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3413,
                              "name": "Enums.ActionCall",
                              "nameLocations": [
                                "7763:5:25",
                                "7769:10:25"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2462,
                              "src": "7763:16:25"
                            },
                            "referencedDeclaration": 2462,
                            "src": "7763:16:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ActionCall_$2462",
                              "typeString": "enum Enums.ActionCall"
                            }
                          },
                          "id": 3415,
                          "nodeType": "ArrayTypeName",
                          "src": "7763:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage_ptr",
                            "typeString": "enum Enums.ActionCall[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7762:27:25"
                  },
                  "scope": 3549,
                  "src": "7666:170:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2301
                  ],
                  "body": {
                    "id": 3457,
                    "nodeType": "Block",
                    "src": "8109:191:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "8128:26:25",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 3432,
                                  "name": "_isUnderlyingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3580,
                                  "src": "8129:18:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 3434,
                                "indexExpression": {
                                  "id": 3433,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3423,
                                  "src": "8148:5:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8129:25:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e20657869737473",
                              "id": 3436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8156:14:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3db9ad693b88c6e4fb0e48ab391a338f8a5d940c93fde8dc913f7afc81f17d10",
                                "typeString": "literal_string \"Token exists\""
                              },
                              "value": "Token exists"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3db9ad693b88c6e4fb0e48ab391a338f8a5d940c93fde8dc913f7afc81f17d10",
                                "typeString": "literal_string \"Token exists\""
                              }
                            ],
                            "id": 3431,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8120:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8120:51:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3438,
                        "nodeType": "ExpressionStatement",
                        "src": "8120:51:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3442,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3423,
                              "src": "8207:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3439,
                              "name": "_underlyingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3572,
                              "src": "8184:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8202:4:25",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8184:22:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 3443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8184:29:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3444,
                        "nodeType": "ExpressionStatement",
                        "src": "8184:29:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3448,
                              "name": "ratio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3425,
                              "src": "8241:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3445,
                              "name": "_splitRatio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3569,
                              "src": "8224:11:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 3447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8236:4:25",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8224:16:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 3449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8224:23:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3450,
                        "nodeType": "ExpressionStatement",
                        "src": "8224:23:25"
                      },
                      {
                        "expression": {
                          "id": 3455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3451,
                              "name": "_isUnderlyingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3580,
                              "src": "8260:18:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 3453,
                            "indexExpression": {
                              "id": 3452,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3423,
                              "src": "8279:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8260:25:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 3454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8288:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8260:32:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3456,
                        "nodeType": "ExpressionStatement",
                        "src": "8260:32:25"
                      }
                    ]
                  },
                  "functionSelector": "af81c5b9",
                  "id": 3458,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3429,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3428,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "8099:9:25"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "8099:9:25"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8099:9:25"
                    }
                  ],
                  "name": "addToken",
                  "nameLocation": "8017:8:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3427,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "8090:8:25"
                  },
                  "parameters": {
                    "id": 3426,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3423,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8044:5:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 3458,
                        "src": "8036:13:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3422,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8036:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3425,
                        "mutability": "mutable",
                        "name": "ratio",
                        "nameLocation": "8068:5:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 3458,
                        "src": "8060:13:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3424,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8060:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8025:55:25"
                  },
                  "returnParameters": {
                    "id": 3430,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8109:0:25"
                  },
                  "scope": 3549,
                  "src": "8008:292:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2306
                  ],
                  "body": {
                    "id": 3547,
                    "nodeType": "Block",
                    "src": "8372:690:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3467,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3580,
                                "src": "8391:18:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 3469,
                              "indexExpression": {
                                "id": 3468,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3460,
                                "src": "8410:5:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8391:25:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e206e6f7420666f756e64",
                              "id": 3470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8418:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_487af3faa279cd1df07c0d1897feb1b8a94d7a439a5fcca3a8f816912eee96c2",
                                "typeString": "literal_string \"Token not found\""
                              },
                              "value": "Token not found"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_487af3faa279cd1df07c0d1897feb1b8a94d7a439a5fcca3a8f816912eee96c2",
                                "typeString": "literal_string \"Token not found\""
                              }
                            ],
                            "id": 3466,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8383:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8383:53:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3472,
                        "nodeType": "ExpressionStatement",
                        "src": "8383:53:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3480,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8501:4:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MultiTokenPool_$3549",
                                          "typeString": "contract MultiTokenPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_MultiTokenPool_$3549",
                                          "typeString": "contract MultiTokenPool"
                                        }
                                      ],
                                      "id": 3479,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8493:7:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3478,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8493:7:25",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3481,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8493:13:25",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 3475,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3460,
                                        "src": "8476:5:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3474,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 923,
                                      "src": "8469:6:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 3476,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8469:13:25",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$923",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8483:9:25",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 880,
                                  "src": "8469:23:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 3482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8469:38:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8511:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8469:43:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f6e2d7a65726f2062616c616e6365",
                              "id": 3485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8527:18:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8475eb1d5b3d67d1054f96b81bd9eb461071f90775ea9ca975c1fc6c3cfd6d67",
                                "typeString": "literal_string \"Non-zero balance\""
                              },
                              "value": "Non-zero balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8475eb1d5b3d67d1054f96b81bd9eb461071f90775ea9ca975c1fc6c3cfd6d67",
                                "typeString": "literal_string \"Non-zero balance\""
                              }
                            ],
                            "id": 3473,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8447:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8447:109:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3487,
                        "nodeType": "ExpressionStatement",
                        "src": "8447:109:25"
                      },
                      {
                        "body": {
                          "id": 3545,
                          "nodeType": "Block",
                          "src": "8624:431:25",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 3499,
                                    "name": "_underlyingTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3572,
                                    "src": "8643:17:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 3501,
                                  "indexExpression": {
                                    "id": 3500,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3489,
                                    "src": "8661:1:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8643:20:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 3502,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3460,
                                  "src": "8667:5:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "8643:29:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3544,
                              "nodeType": "IfStatement",
                              "src": "8639:405:25",
                              "trueBody": {
                                "id": 3543,
                                "nodeType": "Block",
                                "src": "8674:370:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 3513,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 3504,
                                          "name": "_underlyingTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3572,
                                          "src": "8693:17:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 3506,
                                        "indexExpression": {
                                          "id": 3505,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3489,
                                          "src": "8711:1:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "8693:20:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 3507,
                                          "name": "_underlyingTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3572,
                                          "src": "8716:17:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 3512,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 3511,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 3508,
                                              "name": "_underlyingTokens",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3572,
                                              "src": "8756:17:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                "typeString": "address[] storage ref"
                                              }
                                            },
                                            "id": 3509,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "8774:6:25",
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "8756:24:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 3510,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8783:1:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "8756:28:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8716:87:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "8693:110:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3514,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8693:110:25"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 3515,
                                          "name": "_underlyingTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3572,
                                          "src": "8822:17:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 3517,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8840:3:25",
                                        "memberName": "pop",
                                        "nodeType": "MemberAccess",
                                        "src": "8822:21:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                          "typeString": "function (address[] storage pointer)"
                                        }
                                      },
                                      "id": 3518,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8822:23:25",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3519,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8822:23:25"
                                  },
                                  {
                                    "expression": {
                                      "id": 3529,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 3520,
                                          "name": "_splitRatio",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3569,
                                          "src": "8864:11:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 3522,
                                        "indexExpression": {
                                          "id": 3521,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3489,
                                          "src": "8876:1:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "8864:14:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 3523,
                                          "name": "_splitRatio",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3569,
                                          "src": "8881:11:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 3528,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 3527,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 3524,
                                              "name": "_splitRatio",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3569,
                                              "src": "8893:11:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 3525,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "8905:6:25",
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "8893:18:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 3526,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8914:1:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "8893:22:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8881:35:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8864:52:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3530,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8864:52:25"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 3531,
                                          "name": "_splitRatio",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3569,
                                          "src": "8935:11:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 3533,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8947:3:25",
                                        "memberName": "pop",
                                        "nodeType": "MemberAccess",
                                        "src": "8935:15:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                          "typeString": "function (uint256[] storage pointer)"
                                        }
                                      },
                                      "id": 3534,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8935:17:25",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3535,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8935:17:25"
                                  },
                                  {
                                    "expression": {
                                      "id": 3540,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 3536,
                                          "name": "_isUnderlyingToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3580,
                                          "src": "8971:18:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                            "typeString": "mapping(address => bool)"
                                          }
                                        },
                                        "id": 3538,
                                        "indexExpression": {
                                          "id": 3537,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3460,
                                          "src": "8990:5:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "8971:25:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "66616c7365",
                                        "id": 3539,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8999:5:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
                                      "src": "8971:33:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3541,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8971:33:25"
                                  },
                                  {
                                    "id": 3542,
                                    "nodeType": "Break",
                                    "src": "9023:5:25"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3492,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3489,
                            "src": "8589:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3493,
                              "name": "_underlyingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3572,
                              "src": "8593:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8611:6:25",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8593:24:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8589:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3546,
                        "initializationExpression": {
                          "assignments": [
                            3489
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3489,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8582:1:25",
                              "nodeType": "VariableDeclaration",
                              "scope": 3546,
                              "src": "8574:9:25",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3488,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8574:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3491,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8586:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8574:13:25"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8619:3:25",
                            "subExpression": {
                              "id": 3496,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3489,
                              "src": "8619:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3498,
                          "nodeType": "ExpressionStatement",
                          "src": "8619:3:25"
                        },
                        "nodeType": "ForStatement",
                        "src": "8569:486:25"
                      }
                    ]
                  },
                  "functionSelector": "5fa7b584",
                  "id": 3548,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3464,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3463,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "8362:9:25"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "8362:9:25"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8362:9:25"
                    }
                  ],
                  "name": "removeToken",
                  "nameLocation": "8317:11:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3462,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "8353:8:25"
                  },
                  "parameters": {
                    "id": 3461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3460,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8337:5:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 3548,
                        "src": "8329:13:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8329:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8328:15:25"
                  },
                  "returnParameters": {
                    "id": 3465,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8372:0:25"
                  },
                  "scope": 3549,
                  "src": "8308:754:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3550,
              "src": "659:8406:25",
              "usedErrors": [
                59,
                64,
                205,
                210,
                215,
                224,
                229,
                234
              ],
              "usedEvents": [
                70,
                857,
                866,
                2202,
                2212,
                2220
              ]
            }
          ],
          "src": "40:9027:25"
        },
        "id": 25
      },
      "contracts/pool/PoolActions.sol": {
        "ast": {
          "absolutePath": "contracts/pool/PoolActions.sol",
          "exportedSymbols": {
            "Enums": [
              2463
            ],
            "IERC20": [
              923
            ],
            "IUniswapV2Router02": [
              1375
            ],
            "IWETH": [
              2452
            ],
            "PoolActions": [
              4040
            ]
          },
          "id": 4041,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3551,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:26"
            },
            {
              "absolutePath": "contracts/lib/Enums.sol",
              "file": "../lib/Enums.sol",
              "id": 3553,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4041,
              "sourceUnit": 2464,
              "src": "68:39:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3552,
                    "name": "Enums",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2463,
                    "src": "76:5:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IWETH.sol",
              "file": "../interfaces/IWETH.sol",
              "id": 3555,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4041,
              "sourceUnit": 2453,
              "src": "109:46:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3554,
                    "name": "IWETH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2452,
                    "src": "117:5:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 3557,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4041,
              "sourceUnit": 924,
              "src": "157:70:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3556,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 923,
                    "src": "165:6:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
              "file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
              "id": 3559,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4041,
              "sourceUnit": 1376,
              "src": "229:101:26",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3558,
                    "name": "IUniswapV2Router02",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1375,
                    "src": "237:18:26",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "PoolActions",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 4040,
              "linearizedBaseContracts": [
                4040
              ],
              "name": "PoolActions",
              "nameLocation": "352:11:26",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 3562,
                  "mutability": "immutable",
                  "name": "_swapRouter",
                  "nameLocation": "409:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "371:49:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                    "typeString": "contract IUniswapV2Router02"
                  },
                  "typeName": {
                    "id": 3561,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3560,
                      "name": "IUniswapV2Router02",
                      "nameLocations": [
                        "371:18:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1375,
                      "src": "371:18:26"
                    },
                    "referencedDeclaration": 1375,
                    "src": "371:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3564,
                  "mutability": "immutable",
                  "name": "_factory",
                  "nameLocation": "454:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "427:35:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3566,
                  "mutability": "mutable",
                  "name": "_depositUsdMin",
                  "nameLocation": "488:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "471:31:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3569,
                  "mutability": "mutable",
                  "name": "_splitRatio",
                  "nameLocation": "530:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "511:30:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3567,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "511:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3568,
                    "nodeType": "ArrayTypeName",
                    "src": "511:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3572,
                  "mutability": "mutable",
                  "name": "_underlyingTokens",
                  "nameLocation": "567:17:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "548:36:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3570,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "548:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3571,
                    "nodeType": "ArrayTypeName",
                    "src": "548:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3576,
                  "mutability": "mutable",
                  "name": "_allowedActions",
                  "nameLocation": "621:15:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "593:43:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage",
                    "typeString": "enum Enums.ActionCall[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3574,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3573,
                        "name": "Enums.ActionCall",
                        "nameLocations": [
                          "593:5:26",
                          "599:10:26"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2462,
                        "src": "593:16:26"
                      },
                      "referencedDeclaration": 2462,
                      "src": "593:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ActionCall_$2462",
                        "typeString": "enum Enums.ActionCall"
                      }
                    },
                    "id": 3575,
                    "nodeType": "ArrayTypeName",
                    "src": "593:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_ActionCall_$2462_$dyn_storage_ptr",
                      "typeString": "enum Enums.ActionCall[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3580,
                  "mutability": "mutable",
                  "name": "_isUnderlyingToken",
                  "nameLocation": "679:18:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "645:52:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 3579,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3577,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "653:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "645:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3578,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "664:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 3583,
                  "mutability": "constant",
                  "name": "DIVISOR",
                  "nameLocation": "723:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "706:33:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31305f303030",
                    "id": 3582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "733:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10_000"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 3586,
                  "mutability": "constant",
                  "name": "SONIC_COIN",
                  "nameLocation": "763:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "746:72:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
                    "id": 3585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "776:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3758,
                    "nodeType": "Block",
                    "src": "929:1432:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3595,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3580,
                                "src": "948:18:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 3597,
                              "indexExpression": {
                                "id": 3596,
                                "name": "tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3591,
                                "src": "967:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "948:28:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e",
                              "id": 3598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "978:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              },
                              "value": "Invalid token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              }
                            ],
                            "id": 3594,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "940:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "940:54:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3600,
                        "nodeType": "ExpressionStatement",
                        "src": "940:54:26"
                      },
                      {
                        "body": {
                          "id": 3722,
                          "nodeType": "Block",
                          "src": "1053:1082:26",
                          "statements": [
                            {
                              "assignments": [
                                3613
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3613,
                                  "mutability": "mutable",
                                  "name": "tokenIn",
                                  "nameLocation": "1076:7:26",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3722,
                                  "src": "1068:15:26",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3612,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1068:7:26",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3617,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3614,
                                  "name": "tokensIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3589,
                                  "src": "1086:8:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 3616,
                                "indexExpression": {
                                  "id": 3615,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3602,
                                  "src": "1095:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1086:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1068:29:26"
                            },
                            {
                              "assignments": [
                                3619
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3619,
                                  "mutability": "mutable",
                                  "name": "amountIn",
                                  "nameLocation": "1120:8:26",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3722,
                                  "src": "1112:16:26",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3618,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1112:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3623,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 3621,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3613,
                                    "src": "1142:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3620,
                                  "name": "getBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4039,
                                  "src": "1131:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 3622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1131:19:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1112:38:26"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3624,
                                  "name": "amountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3619,
                                  "src": "1171:8:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3625,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1183:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1171:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3628,
                              "nodeType": "IfStatement",
                              "src": "1167:27:26",
                              "trueBody": {
                                "id": 3627,
                                "nodeType": "Continue",
                                "src": "1186:8:26"
                              }
                            },
                            {
                              "assignments": [
                                3633
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3633,
                                  "mutability": "mutable",
                                  "name": "path",
                                  "nameLocation": "1228:4:26",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3722,
                                  "src": "1211:21:26",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3631,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1211:7:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3632,
                                    "nodeType": "ArrayTypeName",
                                    "src": "1211:9:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3639,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 3637,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1249:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "id": 3636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "1235:13:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (address[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3634,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1239:7:26",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3635,
                                    "nodeType": "ArrayTypeName",
                                    "src": "1239:9:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  }
                                },
                                "id": 3638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1235:16:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1211:40:26"
                            },
                            {
                              "expression": {
                                "id": 3651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3640,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3633,
                                    "src": "1268:4:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3642,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 3641,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1273:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1268:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3645,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3643,
                                      "name": "tokenIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3613,
                                      "src": "1278:7:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3644,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3586,
                                      "src": "1289:10:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "1278:21:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 3649,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3613,
                                    "src": "1323:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 3650,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "1278:52:26",
                                  "trueExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3646,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3562,
                                        "src": "1302:11:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 3647,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1314:4:26",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 991,
                                      "src": "1302:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 3648,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1302:18:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1268:62:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3652,
                              "nodeType": "ExpressionStatement",
                              "src": "1268:62:26"
                            },
                            {
                              "expression": {
                                "id": 3664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3653,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3633,
                                    "src": "1345:4:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3655,
                                  "indexExpression": {
                                    "hexValue": "31",
                                    "id": 3654,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1350:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1345:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3658,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3656,
                                      "name": "tokenOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3591,
                                      "src": "1355:8:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3657,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3586,
                                      "src": "1367:10:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "1355:22:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 3662,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3591,
                                    "src": "1401:8:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 3663,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "1355:54:26",
                                  "trueExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3659,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3562,
                                        "src": "1380:11:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 3660,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1392:4:26",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 991,
                                      "src": "1380:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 3661,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1380:18:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1345:64:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3665,
                              "nodeType": "ExpressionStatement",
                              "src": "1345:64:26"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3666,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3613,
                                  "src": "1430:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 3667,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3591,
                                  "src": "1441:8:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1430:19:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 3673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3671,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3613,
                                    "src": "1504:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 3672,
                                    "name": "SONIC_COIN",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3586,
                                    "src": "1515:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "1504:21:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "id": 3719,
                                  "nodeType": "Block",
                                  "src": "1782:342:26",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 3698,
                                                "name": "_swapRouter",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3562,
                                                "src": "1833:11:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                                  "typeString": "contract IUniswapV2Router02"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                                  "typeString": "contract IUniswapV2Router02"
                                                }
                                              ],
                                              "id": 3697,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1825:7:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 3696,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1825:7:26",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 3699,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1825:20:26",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 3700,
                                            "name": "amountIn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3619,
                                            "src": "1847:8:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 3693,
                                                "name": "tokenIn",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3613,
                                                "src": "1808:7:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 3692,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 923,
                                              "src": "1801:6:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 3694,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1801:15:26",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$923",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 3695,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1817:7:26",
                                          "memberName": "approve",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 910,
                                          "src": "1801:23:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                            "typeString": "function (address,uint256) external returns (bool)"
                                          }
                                        },
                                        "id": 3701,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1801:55:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 3702,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1801:55:26"
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 3706,
                                            "name": "amountIn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3619,
                                            "src": "1936:8:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "hexValue": "30",
                                            "id": 3707,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1967:1:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          {
                                            "id": 3708,
                                            "name": "path",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3633,
                                            "src": "2007:4:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 3711,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "2042:4:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_PoolActions_$4040",
                                                  "typeString": "contract PoolActions"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_PoolActions_$4040",
                                                  "typeString": "contract PoolActions"
                                                }
                                              ],
                                              "id": 3710,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "2034:7:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 3709,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2034:7:26",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 3712,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2034:13:26",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3716,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 3713,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "2070:5:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 3714,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "2076:9:26",
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "2070:15:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 3715,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2088:1:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "2070:19:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 3703,
                                            "name": "_swapRouter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3562,
                                            "src": "1877:11:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                              "typeString": "contract IUniswapV2Router02"
                                            }
                                          },
                                          "id": 3705,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1889:24:26",
                                          "memberName": "swapExactTokensForTokens",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1150,
                                          "src": "1877:36:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                            "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                                          }
                                        },
                                        "id": 3717,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1877:231:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 3718,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1877:231:26"
                                    }
                                  ]
                                },
                                "id": 3720,
                                "nodeType": "IfStatement",
                                "src": "1500:624:26",
                                "trueBody": {
                                  "id": 3691,
                                  "nodeType": "Block",
                                  "src": "1527:249:26",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 3679,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1619:1:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          {
                                            "id": 3680,
                                            "name": "path",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3633,
                                            "src": "1659:4:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 3683,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "1694:4:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_PoolActions_$4040",
                                                  "typeString": "contract PoolActions"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_PoolActions_$4040",
                                                  "typeString": "contract PoolActions"
                                                }
                                              ],
                                              "id": 3682,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1686:7:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 3681,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1686:7:26",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 3684,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1686:13:26",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3688,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 3685,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "1722:5:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 3686,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "1728:9:26",
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "1722:15:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 3687,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1740:1:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "1722:19:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 3674,
                                              "name": "_swapRouter",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3562,
                                              "src": "1546:11:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                                "typeString": "contract IUniswapV2Router02"
                                              }
                                            },
                                            "id": 3676,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1558:21:26",
                                            "memberName": "swapExactETHForTokens",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1182,
                                            "src": "1546:33:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                              "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 3678,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "names": [
                                            "value"
                                          ],
                                          "nodeType": "FunctionCallOptions",
                                          "options": [
                                            {
                                              "id": 3677,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3619,
                                              "src": "1587:8:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "src": "1546:50:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                                            "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                                          }
                                        },
                                        "id": 3689,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1546:214:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 3690,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1546:214:26"
                                    }
                                  ]
                                }
                              },
                              "id": 3721,
                              "nodeType": "IfStatement",
                              "src": "1426:698:26",
                              "trueBody": {
                                "id": 3670,
                                "nodeType": "Block",
                                "src": "1451:43:26",
                                "statements": [
                                  {
                                    "id": 3669,
                                    "nodeType": "Continue",
                                    "src": "1470:8:26"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3605,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3602,
                            "src": "1027:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3606,
                              "name": "tokensIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3589,
                              "src": "1031:8:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1040:6:26",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1031:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1027:19:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3723,
                        "initializationExpression": {
                          "assignments": [
                            3602
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3602,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1020:1:26",
                              "nodeType": "VariableDeclaration",
                              "scope": 3723,
                              "src": "1012:9:26",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3601,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1012:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3604,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1024:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1012:13:26"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1048:3:26",
                            "subExpression": {
                              "id": 3609,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3602,
                              "src": "1048:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3611,
                          "nodeType": "ExpressionStatement",
                          "src": "1048:3:26"
                        },
                        "nodeType": "ForStatement",
                        "src": "1007:1128:26"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3732,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2196:4:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PoolActions_$4040",
                                      "typeString": "contract PoolActions"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PoolActions_$4040",
                                      "typeString": "contract PoolActions"
                                    }
                                  ],
                                  "id": 3731,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2188:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3730,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2188:7:26",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2188:13:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3725,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3562,
                                        "src": "2158:11:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 3726,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2170:4:26",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 991,
                                      "src": "2158:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 3727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2158:18:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3724,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 923,
                                  "src": "2151:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 3728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2151:26:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$923",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 3729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2178:9:26",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 880,
                              "src": "2151:36:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 3734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2151:51:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2205:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2151:55:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3757,
                        "nodeType": "IfStatement",
                        "src": "2147:207:26",
                        "trueBody": {
                          "id": 3756,
                          "nodeType": "Block",
                          "src": "2208:146:26",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 3751,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "2321:4:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_PoolActions_$4040",
                                              "typeString": "contract PoolActions"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_PoolActions_$4040",
                                              "typeString": "contract PoolActions"
                                            }
                                          ],
                                          "id": 3750,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2313:7:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 3749,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2313:7:26",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 3752,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2313:13:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "expression": {
                                                "id": 3744,
                                                "name": "_swapRouter",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3562,
                                                "src": "2283:11:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                                  "typeString": "contract IUniswapV2Router02"
                                                }
                                              },
                                              "id": 3745,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "2295:4:26",
                                              "memberName": "WETH",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 991,
                                              "src": "2283:16:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                                "typeString": "function () pure external returns (address)"
                                              }
                                            },
                                            "id": 3746,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2283:18:26",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 3743,
                                          "name": "IERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 923,
                                          "src": "2276:6:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                            "typeString": "type(contract IERC20)"
                                          }
                                        },
                                        "id": 3747,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2276:26:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$923",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 3748,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2303:9:26",
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 880,
                                      "src": "2276:36:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 3753,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2276:51:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "id": 3738,
                                            "name": "_swapRouter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3562,
                                            "src": "2229:11:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                              "typeString": "contract IUniswapV2Router02"
                                            }
                                          },
                                          "id": 3739,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "2241:4:26",
                                          "memberName": "WETH",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 991,
                                          "src": "2229:16:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                            "typeString": "function () pure external returns (address)"
                                          }
                                        },
                                        "id": 3740,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2229:18:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3737,
                                      "name": "IWETH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2452,
                                      "src": "2223:5:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IWETH_$2452_$",
                                        "typeString": "type(contract IWETH)"
                                      }
                                    },
                                    "id": 3741,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2223:25:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IWETH_$2452",
                                      "typeString": "contract IWETH"
                                    }
                                  },
                                  "id": 3742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2249:8:26",
                                  "memberName": "withdraw",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2451,
                                  "src": "2223:34:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 3754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2223:119:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3755,
                              "nodeType": "ExpressionStatement",
                              "src": "2223:119:26"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 3759,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_swapToSingle",
                  "nameLocation": "836:13:26",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3592,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3589,
                        "mutability": "mutable",
                        "name": "tokensIn",
                        "nameLocation": "877:8:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 3759,
                        "src": "860:25:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3587,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "860:7:26",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3588,
                          "nodeType": "ArrayTypeName",
                          "src": "860:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3591,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "904:8:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 3759,
                        "src": "896:16:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3590,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "896:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "849:70:26"
                  },
                  "returnParameters": {
                    "id": 3593,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "929:0:26"
                  },
                  "scope": 4040,
                  "src": "827:1534:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3961,
                    "nodeType": "Block",
                    "src": "2444:1654:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3768,
                                "name": "_isUnderlyingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3580,
                                "src": "2463:18:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 3770,
                              "indexExpression": {
                                "id": 3769,
                                "name": "tokenIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3761,
                                "src": "2482:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2463:27:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e",
                              "id": 3771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2492:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              },
                              "value": "Invalid token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                "typeString": "literal_string \"Invalid token\""
                              }
                            ],
                            "id": 3767,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2455:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2455:53:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3773,
                        "nodeType": "ExpressionStatement",
                        "src": "2455:53:26"
                      },
                      {
                        "assignments": [
                          3775
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3775,
                            "mutability": "mutable",
                            "name": "amountIns",
                            "nameLocation": "2529:9:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 3961,
                            "src": "2521:17:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3774,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2521:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3794,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3776,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3761,
                              "src": "2541:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3777,
                              "name": "SONIC_COIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3586,
                              "src": "2552:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2541:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3790,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2649:4:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PoolActions_$4040",
                                      "typeString": "contract PoolActions"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PoolActions_$4040",
                                      "typeString": "contract PoolActions"
                                    }
                                  ],
                                  "id": 3789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2641:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3788,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2641:7:26",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2641:13:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3785,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3761,
                                    "src": "2622:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3784,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 923,
                                  "src": "2615:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 3786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2615:15:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$923",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 3787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2631:9:26",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 880,
                              "src": "2615:25:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 3792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2615:40:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "2541:114:26",
                          "trueExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3781,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2586:4:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PoolActions_$4040",
                                    "typeString": "contract PoolActions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PoolActions_$4040",
                                    "typeString": "contract PoolActions"
                                  }
                                ],
                                "id": 3780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2578:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3779,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2578:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2578:13:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 3783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2592:7:26",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "2578:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2521:134:26"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3795,
                            "name": "amountIns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3775,
                            "src": "2672:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2685:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2672:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3799,
                        "nodeType": "IfStatement",
                        "src": "2668:27:26",
                        "trueBody": {
                          "functionReturnParameters": 3766,
                          "id": 3798,
                          "nodeType": "Return",
                          "src": "2688:7:26"
                        }
                      },
                      {
                        "assignments": [
                          3801
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3801,
                            "mutability": "mutable",
                            "name": "amountIn",
                            "nameLocation": "2715:8:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 3961,
                            "src": "2707:16:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3800,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2707:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3807,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3802,
                                "name": "amountIns",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3775,
                                "src": "2727:9:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "expression": {
                                  "id": 3803,
                                  "name": "tokensOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3764,
                                  "src": "2739:9:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 3804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2749:6:26",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2739:16:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2727:28:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3806,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2726:30:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2707:49:26"
                      },
                      {
                        "body": {
                          "id": 3925,
                          "nodeType": "Block",
                          "src": "2816:1056:26",
                          "statements": [
                            {
                              "assignments": [
                                3820
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3820,
                                  "mutability": "mutable",
                                  "name": "tokenOut",
                                  "nameLocation": "2839:8:26",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3925,
                                  "src": "2831:16:26",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3819,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2831:7:26",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3824,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3821,
                                  "name": "tokensOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3764,
                                  "src": "2850:9:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 3823,
                                "indexExpression": {
                                  "id": 3822,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3809,
                                  "src": "2860:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2850:12:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2831:31:26"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 3826,
                                      "name": "_isUnderlyingToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3580,
                                      "src": "2885:18:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 3828,
                                    "indexExpression": {
                                      "id": 3827,
                                      "name": "tokenOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3820,
                                      "src": "2904:8:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2885:28:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e76616c696420746f6b656e",
                                    "id": 3829,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2915:15:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                      "typeString": "literal_string \"Invalid token\""
                                    },
                                    "value": "Invalid token"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                      "typeString": "literal_string \"Invalid token\""
                                    }
                                  ],
                                  "id": 3825,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2877:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2877:54:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3831,
                              "nodeType": "ExpressionStatement",
                              "src": "2877:54:26"
                            },
                            {
                              "assignments": [
                                3836
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3836,
                                  "mutability": "mutable",
                                  "name": "path",
                                  "nameLocation": "2965:4:26",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3925,
                                  "src": "2948:21:26",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3834,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2948:7:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3835,
                                    "nodeType": "ArrayTypeName",
                                    "src": "2948:9:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3842,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 3840,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2986:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "id": 3839,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "2972:13:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (address[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3837,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2976:7:26",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3838,
                                    "nodeType": "ArrayTypeName",
                                    "src": "2976:9:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  }
                                },
                                "id": 3841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2972:16:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2948:40:26"
                            },
                            {
                              "expression": {
                                "id": 3854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3843,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3836,
                                    "src": "3005:4:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3845,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 3844,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3010:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3005:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3848,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3846,
                                      "name": "tokenIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3761,
                                      "src": "3015:7:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3847,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3586,
                                      "src": "3026:10:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "3015:21:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 3852,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3761,
                                    "src": "3060:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 3853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "3015:52:26",
                                  "trueExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3849,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3562,
                                        "src": "3039:11:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 3850,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3051:4:26",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 991,
                                      "src": "3039:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 3851,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3039:18:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3005:62:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3855,
                              "nodeType": "ExpressionStatement",
                              "src": "3005:62:26"
                            },
                            {
                              "expression": {
                                "id": 3867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3856,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3836,
                                    "src": "3082:4:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3858,
                                  "indexExpression": {
                                    "hexValue": "31",
                                    "id": 3857,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3087:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3082:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3861,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3859,
                                      "name": "tokenOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3820,
                                      "src": "3092:8:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 3860,
                                      "name": "SONIC_COIN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3586,
                                      "src": "3104:10:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "3092:22:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 3865,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3820,
                                    "src": "3138:8:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 3866,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "3092:54:26",
                                  "trueExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3862,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3562,
                                        "src": "3117:11:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 3863,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3129:4:26",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 991,
                                      "src": "3117:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 3864,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3117:18:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3082:64:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3868,
                              "nodeType": "ExpressionStatement",
                              "src": "3082:64:26"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3869,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3761,
                                  "src": "3167:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 3870,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3820,
                                  "src": "3178:8:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3167:19:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 3876,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3874,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3761,
                                    "src": "3241:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 3875,
                                    "name": "SONIC_COIN",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3586,
                                    "src": "3252:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "3241:21:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "id": 3922,
                                  "nodeType": "Block",
                                  "src": "3519:342:26",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 3901,
                                                "name": "_swapRouter",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3562,
                                                "src": "3570:11:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                                  "typeString": "contract IUniswapV2Router02"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                                  "typeString": "contract IUniswapV2Router02"
                                                }
                                              ],
                                              "id": 3900,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3562:7:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 3899,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3562:7:26",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 3902,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3562:20:26",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 3903,
                                            "name": "amountIn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3801,
                                            "src": "3584:8:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 3896,
                                                "name": "tokenIn",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3761,
                                                "src": "3545:7:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 3895,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 923,
                                              "src": "3538:6:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 3897,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3538:15:26",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$923",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 3898,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3554:7:26",
                                          "memberName": "approve",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 910,
                                          "src": "3538:23:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                            "typeString": "function (address,uint256) external returns (bool)"
                                          }
                                        },
                                        "id": 3904,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3538:55:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 3905,
                                      "nodeType": "ExpressionStatement",
                                      "src": "3538:55:26"
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 3909,
                                            "name": "amountIn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3801,
                                            "src": "3673:8:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "hexValue": "30",
                                            "id": 3910,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3704:1:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          {
                                            "id": 3911,
                                            "name": "path",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3836,
                                            "src": "3744:4:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 3914,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "3779:4:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_PoolActions_$4040",
                                                  "typeString": "contract PoolActions"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_PoolActions_$4040",
                                                  "typeString": "contract PoolActions"
                                                }
                                              ],
                                              "id": 3913,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3771:7:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 3912,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3771:7:26",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 3915,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3771:13:26",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3919,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 3916,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "3807:5:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 3917,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "3813:9:26",
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "3807:15:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 3918,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "3825:1:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "3807:19:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 3906,
                                            "name": "_swapRouter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3562,
                                            "src": "3614:11:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                              "typeString": "contract IUniswapV2Router02"
                                            }
                                          },
                                          "id": 3908,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3626:24:26",
                                          "memberName": "swapExactTokensForTokens",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1150,
                                          "src": "3614:36:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                            "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                                          }
                                        },
                                        "id": 3920,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3614:231:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 3921,
                                      "nodeType": "ExpressionStatement",
                                      "src": "3614:231:26"
                                    }
                                  ]
                                },
                                "id": 3923,
                                "nodeType": "IfStatement",
                                "src": "3237:624:26",
                                "trueBody": {
                                  "id": 3894,
                                  "nodeType": "Block",
                                  "src": "3264:249:26",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 3882,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3356:1:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          {
                                            "id": 3883,
                                            "name": "path",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3836,
                                            "src": "3396:4:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 3886,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "3431:4:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_PoolActions_$4040",
                                                  "typeString": "contract PoolActions"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_PoolActions_$4040",
                                                  "typeString": "contract PoolActions"
                                                }
                                              ],
                                              "id": 3885,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3423:7:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 3884,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3423:7:26",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 3887,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3423:13:26",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3891,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 3888,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "3459:5:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 3889,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "3465:9:26",
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "3459:15:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 3890,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "3477:1:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "3459:19:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 3877,
                                              "name": "_swapRouter",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3562,
                                              "src": "3283:11:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                                "typeString": "contract IUniswapV2Router02"
                                              }
                                            },
                                            "id": 3879,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3295:21:26",
                                            "memberName": "swapExactETHForTokens",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1182,
                                            "src": "3283:33:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                              "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 3881,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "names": [
                                            "value"
                                          ],
                                          "nodeType": "FunctionCallOptions",
                                          "options": [
                                            {
                                              "id": 3880,
                                              "name": "amountIn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3801,
                                              "src": "3324:8:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "src": "3283:50:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                                            "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                                          }
                                        },
                                        "id": 3892,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3283:214:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 3893,
                                      "nodeType": "ExpressionStatement",
                                      "src": "3283:214:26"
                                    }
                                  ]
                                }
                              },
                              "id": 3924,
                              "nodeType": "IfStatement",
                              "src": "3163:698:26",
                              "trueBody": {
                                "id": 3873,
                                "nodeType": "Block",
                                "src": "3188:43:26",
                                "statements": [
                                  {
                                    "id": 3872,
                                    "nodeType": "Continue",
                                    "src": "3207:8:26"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3812,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3809,
                            "src": "2789:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3813,
                              "name": "tokensOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3764,
                              "src": "2793:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2803:6:26",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2793:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2789:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3926,
                        "initializationExpression": {
                          "assignments": [
                            3809
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3809,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2782:1:26",
                              "nodeType": "VariableDeclaration",
                              "scope": 3926,
                              "src": "2774:9:26",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3808,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2774:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3811,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2786:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2774:13:26"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2811:3:26",
                            "subExpression": {
                              "id": 3816,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3809,
                              "src": "2811:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3818,
                          "nodeType": "ExpressionStatement",
                          "src": "2811:3:26"
                        },
                        "nodeType": "ForStatement",
                        "src": "2769:1103:26"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3935,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3933:4:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PoolActions_$4040",
                                      "typeString": "contract PoolActions"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PoolActions_$4040",
                                      "typeString": "contract PoolActions"
                                    }
                                  ],
                                  "id": 3934,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3925:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3933,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3925:7:26",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3925:13:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 3928,
                                        "name": "_swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3562,
                                        "src": "3895:11:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      },
                                      "id": 3929,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3907:4:26",
                                      "memberName": "WETH",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 991,
                                      "src": "3895:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 3930,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3895:18:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3927,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 923,
                                  "src": "3888:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 3931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3888:26:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$923",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 3932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3915:9:26",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 880,
                              "src": "3888:36:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 3937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3888:51:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3942:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3888:55:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3960,
                        "nodeType": "IfStatement",
                        "src": "3884:207:26",
                        "trueBody": {
                          "id": 3959,
                          "nodeType": "Block",
                          "src": "3945:146:26",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 3954,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "4058:4:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_PoolActions_$4040",
                                              "typeString": "contract PoolActions"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_PoolActions_$4040",
                                              "typeString": "contract PoolActions"
                                            }
                                          ],
                                          "id": 3953,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4050:7:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 3952,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4050:7:26",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 3955,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4050:13:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "expression": {
                                                "id": 3947,
                                                "name": "_swapRouter",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3562,
                                                "src": "4020:11:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                                  "typeString": "contract IUniswapV2Router02"
                                                }
                                              },
                                              "id": 3948,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "4032:4:26",
                                              "memberName": "WETH",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 991,
                                              "src": "4020:16:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                                "typeString": "function () pure external returns (address)"
                                              }
                                            },
                                            "id": 3949,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4020:18:26",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 3946,
                                          "name": "IERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 923,
                                          "src": "4013:6:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                            "typeString": "type(contract IERC20)"
                                          }
                                        },
                                        "id": 3950,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4013:26:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$923",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 3951,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4040:9:26",
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 880,
                                      "src": "4013:36:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 3956,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4013:51:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "id": 3941,
                                            "name": "_swapRouter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3562,
                                            "src": "3966:11:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$1375",
                                              "typeString": "contract IUniswapV2Router02"
                                            }
                                          },
                                          "id": 3942,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3978:4:26",
                                          "memberName": "WETH",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 991,
                                          "src": "3966:16:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                            "typeString": "function () pure external returns (address)"
                                          }
                                        },
                                        "id": 3943,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3966:18:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3940,
                                      "name": "IWETH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2452,
                                      "src": "3960:5:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IWETH_$2452_$",
                                        "typeString": "type(contract IWETH)"
                                      }
                                    },
                                    "id": 3944,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3960:25:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IWETH_$2452",
                                      "typeString": "contract IWETH"
                                    }
                                  },
                                  "id": 3945,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3986:8:26",
                                  "memberName": "withdraw",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2451,
                                  "src": "3960:34:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 3957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3960:119:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3958,
                              "nodeType": "ExpressionStatement",
                              "src": "3960:119:26"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 3962,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_swapToMany",
                  "nameLocation": "2378:11:26",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3765,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3761,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "2398:7:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 3962,
                        "src": "2390:15:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3760,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2390:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3764,
                        "mutability": "mutable",
                        "name": "tokensOut",
                        "nameLocation": "2424:9:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 3962,
                        "src": "2407:26:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3762,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2407:7:26",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3763,
                          "nodeType": "ArrayTypeName",
                          "src": "2407:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2389:45:26"
                  },
                  "returnParameters": {
                    "id": 3766,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2444:0:26"
                  },
                  "scope": 4040,
                  "src": "2369:1729:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4011,
                    "nodeType": "Block",
                    "src": "4170:335:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3969,
                                  "name": "newRatios",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3965,
                                  "src": "4189:9:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 3970,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4199:6:26",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4189:16:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3971,
                                  "name": "_underlyingTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3572,
                                  "src": "4209:17:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 3972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4227:6:26",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4209:24:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4189:44:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206c656e677468",
                              "id": 3974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4235:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7",
                                "typeString": "literal_string \"Invalid length\""
                              },
                              "value": "Invalid length"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7",
                                "typeString": "literal_string \"Invalid length\""
                              }
                            ],
                            "id": 3968,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4181:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4181:71:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3976,
                        "nodeType": "ExpressionStatement",
                        "src": "4181:71:26"
                      },
                      {
                        "assignments": [
                          3978
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3978,
                            "mutability": "mutable",
                            "name": "totalRatio",
                            "nameLocation": "4273:10:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 4011,
                            "src": "4265:18:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3977,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4265:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3980,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4286:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4265:22:26"
                      },
                      {
                        "body": {
                          "id": 3998,
                          "nodeType": "Block",
                          "src": "4345:53:26",
                          "statements": [
                            {
                              "expression": {
                                "id": 3996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3992,
                                  "name": "totalRatio",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3978,
                                  "src": "4360:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 3993,
                                    "name": "newRatios",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3965,
                                    "src": "4374:9:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 3995,
                                  "indexExpression": {
                                    "id": 3994,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3982,
                                    "src": "4384:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4374:12:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4360:26:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3997,
                              "nodeType": "ExpressionStatement",
                              "src": "4360:26:26"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3985,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3982,
                            "src": "4318:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3986,
                              "name": "newRatios",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3965,
                              "src": "4322:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 3987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4332:6:26",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4322:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4318:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3999,
                        "initializationExpression": {
                          "assignments": [
                            3982
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3982,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4311:1:26",
                              "nodeType": "VariableDeclaration",
                              "scope": 3999,
                              "src": "4303:9:26",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3981,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4303:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3984,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4315:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4303:13:26"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4340:3:26",
                            "subExpression": {
                              "id": 3989,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3982,
                              "src": "4340:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3991,
                          "nodeType": "ExpressionStatement",
                          "src": "4340:3:26"
                        },
                        "nodeType": "ForStatement",
                        "src": "4298:100:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4001,
                                "name": "totalRatio",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3978,
                                "src": "4418:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 4002,
                                "name": "DIVISOR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3583,
                                "src": "4432:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4418:21:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420726174696f2073756d",
                              "id": 4004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4441:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38835bc47bdd0a0bfcd75c0ecaae2f486482e496d2f52fa1b049d72d895eb704",
                                "typeString": "literal_string \"Invalid ratio sum\""
                              },
                              "value": "Invalid ratio sum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38835bc47bdd0a0bfcd75c0ecaae2f486482e496d2f52fa1b049d72d895eb704",
                                "typeString": "literal_string \"Invalid ratio sum\""
                              }
                            ],
                            "id": 4000,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4410:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4410:51:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4006,
                        "nodeType": "ExpressionStatement",
                        "src": "4410:51:26"
                      },
                      {
                        "expression": {
                          "id": 4009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4007,
                            "name": "_splitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3569,
                            "src": "4474:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4008,
                            "name": "newRatios",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3965,
                            "src": "4488:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "4474:23:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 4010,
                        "nodeType": "ExpressionStatement",
                        "src": "4474:23:26"
                      }
                    ]
                  },
                  "id": 4012,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_adjustSplitRatio",
                  "nameLocation": "4115:17:26",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3965,
                        "mutability": "mutable",
                        "name": "newRatios",
                        "nameLocation": "4150:9:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4012,
                        "src": "4133:26:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3963,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4133:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3964,
                          "nodeType": "ArrayTypeName",
                          "src": "4133:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4132:28:26"
                  },
                  "returnParameters": {
                    "id": 3967,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4170:0:26"
                  },
                  "scope": 4040,
                  "src": "4106:399:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4038,
                    "nodeType": "Block",
                    "src": "4580:157:26",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 4021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4019,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4014,
                              "src": "4611:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 4020,
                              "name": "SONIC_COIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3586,
                              "src": "4620:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4611:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 4033,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "4723:4:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PoolActions_$4040",
                                      "typeString": "contract PoolActions"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PoolActions_$4040",
                                      "typeString": "contract PoolActions"
                                    }
                                  ],
                                  "id": 4032,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4715:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4031,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4715:7:26",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4715:13:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4028,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4014,
                                    "src": "4698:5:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 4027,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 923,
                                  "src": "4691:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 4029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4691:13:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$923",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 4030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4705:9:26",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 880,
                              "src": "4691:23:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 4035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4691:38:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "4611:118:26",
                          "trueExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4024,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4658:4:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PoolActions_$4040",
                                    "typeString": "contract PoolActions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PoolActions_$4040",
                                    "typeString": "contract PoolActions"
                                  }
                                ],
                                "id": 4023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4650:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4022,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4650:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4650:13:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 4026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4664:7:26",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "4650:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4018,
                        "id": 4037,
                        "nodeType": "Return",
                        "src": "4591:138:26"
                      }
                    ]
                  },
                  "id": 4039,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalance",
                  "nameLocation": "4522:10:26",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4015,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4014,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4541:5:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4039,
                        "src": "4533:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4013,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4533:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4532:15:26"
                  },
                  "returnParameters": {
                    "id": 4018,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4017,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4039,
                        "src": "4571:7:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4016,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4571:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4570:9:26"
                  },
                  "scope": 4040,
                  "src": "4513:224:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 4041,
              "src": "334:4406:26",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:4702:26"
        },
        "id": 26
      }
    },
    "contracts": {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
        "AggregatorV3Interface": {
          "abi": [
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "description",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_roundId",
                  "type": "uint80"
                }
              ],
              "name": "getRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "description()": "7284e416",
              "getRoundData(uint80)": "9a6fc8f5",
              "latestRoundData()": "feaf968c",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
        "IUniswapV2Router01": {
          "abi": [
            {
              "inputs": [],
              "name": "WETH",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountADesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBDesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenDesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidityETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveOut",
                  "type": "uint256"
                }
              ],
              "name": "getAmountIn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveOut",
                  "type": "uint256"
                }
              ],
              "name": "getAmountOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsIn",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsOut",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveB",
                  "type": "uint256"
                }
              ],
              "name": "quote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidityETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityETHWithPermit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityWithPermit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapETHForExactTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactETHForTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForETH",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMax",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensForExactETH",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMax",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensForExactTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "WETH()": "ad5c4648",
              "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
              "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
              "factory()": "c45a0155",
              "getAmountIn(uint256,uint256,uint256)": "85f8c259",
              "getAmountOut(uint256,uint256,uint256)": "054d50d4",
              "getAmountsIn(uint256,address[])": "1f00ca74",
              "getAmountsOut(uint256,address[])": "d06ca61f",
              "quote(uint256,uint256,uint256)": "ad615dec",
              "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
              "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
              "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
              "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
              "swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
              "swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
              "swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
              "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
              "swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
              "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}"
        }
      },
      "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
        "IUniswapV2Router02": {
          "abi": [
            {
              "inputs": [],
              "name": "WETH",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountADesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBDesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenDesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidityETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveOut",
                  "type": "uint256"
                }
              ],
              "name": "getAmountIn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveOut",
                  "type": "uint256"
                }
              ],
              "name": "getAmountOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsIn",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsOut",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveB",
                  "type": "uint256"
                }
              ],
              "name": "quote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidityETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityETHWithPermit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityWithPermit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapETHForExactTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactETHForTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForETH",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMax",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensForExactETH",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMax",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensForExactTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "WETH()": "ad5c4648",
              "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
              "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
              "factory()": "c45a0155",
              "getAmountIn(uint256,uint256,uint256)": "85f8c259",
              "getAmountOut(uint256,uint256,uint256)": "054d50d4",
              "getAmountsIn(uint256,address[])": "1f00ca74",
              "getAmountsOut(uint256,address[])": "d06ca61f",
              "quote(uint256,uint256,uint256)": "ad615dec",
              "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
              "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
              "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
              "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
              "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
              "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
              "swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
              "swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
              "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
              "swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
              "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
              "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
              "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
              "swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
              "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}"
        }
      },
      "contracts/Chainlink.sol": {
        "Chainlink": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "getPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feed",
                  "type": "address"
                }
              ],
              "name": "setFeed",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608080604052346075573315605f5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36103ec908161007b8239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806340b1eb10146102d857806341976e0914610194578063715018a61461012e5780638da5cb5b146101075763f2fde38b1461005357600080fd5b34610102576020366003190112610102576001600160a01b03610074610347565b61007c610374565b1680156100d3576001600160a01b036000548273ffffffffffffffffffffffffffffffffffffffff19821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b600080fd5b346101025760003660031901126101025760206001600160a01b0360005416604051908152f35b3461010257600036600319011261010257610147610374565b60006001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610102576020366003190112610102576001600160a01b036101b5610347565b166000526001602052600460a06001600160a01b0360406000205416604051928380927ffeaf968c0000000000000000000000000000000000000000000000000000000082525afa80156102cc576000918291610228575b6040805184815269ffffffffffffffffffff84166020820152f35b905060a03d60a0116102c5575b601f8101601f1916820167ffffffffffffffff8111838210176102985760a091839160405281010312610294576040915061026f8161035d565b5069ffffffffffffffffffff61028c60806020840151930161035d565b91925061020d565b5080fd5b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b503d610235565b6040513d6000823e3d90fd5b34610102576040366003190112610102576102f1610347565b602435906001600160a01b038216809203610102576001600160a01b0390610317610374565b16600052600160205260406000209073ffffffffffffffffffffffffffffffffffffffff19825416179055600080f35b600435906001600160a01b038216820361010257565b519069ffffffffffffffffffff8216820361010257565b6001600160a01b0360005416330361038857565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fdfea2646970667358221220f6aee86d30106839866928ae24df11f78668a6481b1944fb86bde7ea00d3524964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x75 JUMPI CALLER ISZERO PUSH1 0x5F JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x3EC SWAP1 DUP2 PUSH2 0x7B DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40B1EB10 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x107 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x102 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x102 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x74 PUSH2 0x347 JUMP JUMPDEST PUSH2 0x7C PUSH2 0x374 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x102 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x102 JUMPI PUSH2 0x147 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x102 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x102 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1B5 PUSH2 0x347 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0xA0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xFEAF968C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x228 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0xA0 RETURNDATASIZE PUSH1 0xA0 GT PUSH2 0x2C5 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x298 JUMPI PUSH1 0xA0 SWAP2 DUP4 SWAP2 PUSH1 0x40 MSTORE DUP2 ADD SUB SLT PUSH2 0x294 JUMPI PUSH1 0x40 SWAP2 POP PUSH2 0x26F DUP2 PUSH2 0x35D JUMP JUMPDEST POP PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH2 0x28C PUSH1 0x80 PUSH1 0x20 DUP5 ADD MLOAD SWAP4 ADD PUSH2 0x35D JUMP JUMPDEST SWAP2 SWAP3 POP PUSH2 0x20D JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x102 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x102 JUMPI PUSH2 0x2F1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 SWAP3 SUB PUSH2 0x102 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x317 PUSH2 0x374 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x102 JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x102 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x388 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xAE 0xE8 PUSH14 0x30106839866928AE24DF11F78668 0xA6 BASEFEE SHL NOT PREVRANDAO 0xFB DUP7 0xBD 0xE7 0xEA STOP 0xD3 MSTORE BLOBHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "312:549:9:-:0;;;;;;;426:10;1273:26:1;1269:95;;1297:1;312:549:9;;426:10;-1:-1:-1;;;;;;312:549:9;;;;;;426:10;-1:-1:-1;;;;;312:549:9;;;;3052:40:1;;1297:1;3052:40;312:549:9;;;;;;;1269:95:1;1322:31;;;1297:1;1322:31;1297:1;1322:31;312:549:9;;1297:1:1;1322:31;312:549:9;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 839,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_uint80_fromMemory": {
                  "entryPoint": 861,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_checkOwner": {
                  "entryPoint": 884,
                  "id": 130,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c806340b1eb10146102d857806341976e0914610194578063715018a61461012e5780638da5cb5b146101075763f2fde38b1461005357600080fd5b34610102576020366003190112610102576001600160a01b03610074610347565b61007c610374565b1680156100d3576001600160a01b036000548273ffffffffffffffffffffffffffffffffffffffff19821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b600080fd5b346101025760003660031901126101025760206001600160a01b0360005416604051908152f35b3461010257600036600319011261010257610147610374565b60006001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610102576020366003190112610102576001600160a01b036101b5610347565b166000526001602052600460a06001600160a01b0360406000205416604051928380927ffeaf968c0000000000000000000000000000000000000000000000000000000082525afa80156102cc576000918291610228575b6040805184815269ffffffffffffffffffff84166020820152f35b905060a03d60a0116102c5575b601f8101601f1916820167ffffffffffffffff8111838210176102985760a091839160405281010312610294576040915061026f8161035d565b5069ffffffffffffffffffff61028c60806020840151930161035d565b91925061020d565b5080fd5b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b503d610235565b6040513d6000823e3d90fd5b34610102576040366003190112610102576102f1610347565b602435906001600160a01b038216809203610102576001600160a01b0390610317610374565b16600052600160205260406000209073ffffffffffffffffffffffffffffffffffffffff19825416179055600080f35b600435906001600160a01b038216820361010257565b519069ffffffffffffffffffff8216820361010257565b6001600160a01b0360005416330361038857565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fdfea2646970667358221220f6aee86d30106839866928ae24df11f78668a6481b1944fb86bde7ea00d3524964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40B1EB10 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x107 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x102 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x102 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x74 PUSH2 0x347 JUMP JUMPDEST PUSH2 0x7C PUSH2 0x374 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x102 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x102 JUMPI PUSH2 0x147 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x102 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x102 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1B5 PUSH2 0x347 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0xA0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xFEAF968C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x228 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0xA0 RETURNDATASIZE PUSH1 0xA0 GT PUSH2 0x2C5 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x298 JUMPI PUSH1 0xA0 SWAP2 DUP4 SWAP2 PUSH1 0x40 MSTORE DUP2 ADD SUB SLT PUSH2 0x294 JUMPI PUSH1 0x40 SWAP2 POP PUSH2 0x26F DUP2 PUSH2 0x35D JUMP JUMPDEST POP PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH2 0x28C PUSH1 0x80 PUSH1 0x20 DUP5 ADD MLOAD SWAP4 ADD PUSH2 0x35D JUMP JUMPDEST SWAP2 SWAP3 POP PUSH2 0x20D JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x102 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x102 JUMPI PUSH2 0x2F1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 SWAP3 SUB PUSH2 0x102 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x317 PUSH2 0x374 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x102 JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x102 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x388 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xAE 0xE8 PUSH14 0x30106839866928AE24DF11F78668 0xA6 BASEFEE SHL NOT PREVRANDAO 0xFB DUP7 0xBD 0xE7 0xEA STOP 0xD3 MSTORE BLOBHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "312:549:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;312:549:9;;;;-1:-1:-1;;;;;312:549:9;;:::i;:::-;1500:62:1;;:::i;:::-;312:549:9;2627:22:1;;2623:91;;-1:-1:-1;;;;;312:549:9;;;-1:-1:-1;;312:549:9;;;;;;3052:40:1;312:549:9;3052:40:1;;312:549:9;2623:91:1;2672:31;312:549:9;2672:31:1;312:549:9;;;;;2672:31:1;312:549:9;;;;;;;;;;-1:-1:-1;;312:549:9;;;;;-1:-1:-1;;;;;312:549:9;;;;;;;;;;;;;;;-1:-1:-1;;312:549:9;;;;1500:62:1;;:::i;:::-;312:549:9;-1:-1:-1;;;;;312:549:9;;-1:-1:-1;;312:549:9;;;;;3052:40:1;;;;312:549:9;;;;;;;-1:-1:-1;;312:549:9;;;;-1:-1:-1;;;;;312:549:9;;:::i;:::-;;;;719:6;312:549;;;786:21;-1:-1:-1;;;;;312:549:9;;;;;;;786:21;;;;312:549;786:21;;;;;;;;312:549;;;786:21;;;312:549;;;;;;;;;;;;;;;786:21;;;;;;;;;;312:549;;;-1:-1:-1;;312:549:9;;;;;;;;;;;;786:21;312:549;;;;;786:21;;312:549;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;786:21;;;;;312:549;;;;;;;;;;;;;;786:21;;;;;;312:549;;;;;;;;;;;;;;;-1:-1:-1;;312:549:9;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;312:549:9;;;;;;;-1:-1:-1;;;;;1500:62:1;;;:::i;:::-;312:549:9;;;524:6;312:549;;;;;;-1:-1:-1;;312:549:9;;;;;;;;;;;;;-1:-1:-1;;;;;312:549:9;;;;;;:::o;:::-;;;;;;;;;;:::o;1796:162:1:-;-1:-1:-1;;;;;1710:6:1;312:549:9;;735:10:6;1855:23:1;1851:101;;1796:162::o;1851:101::-;1901:40;1710:6;1901:40;735:10:6;1901:40:1;312:549:9;;1710:6:1;1901:40"
            },
            "methodIdentifiers": {
              "getPrice(address)": "41976e09",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "setFeed(address,address)": "40b1eb10",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"setFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Chainlink.sol\":\"Chainlink\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Chainlink.sol\":{\"keccak256\":\"0xdcbd85b483b2b48f5aa0cc8fd167340f17cb6457241cc1e43f8e074c930b30c4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://726733d0f1dbc0fb95a1f7ef845b1fdb94691a82eeed25ae829f33119cbfe5a5\",\"dweb:/ipfs/QmeWzsuiD65xS95XJYU1vxYqEdzkJAZAZ1FnnYyvGNw9Sb\"]},\"contracts/interfaces/IChainlink.sol\":{\"keccak256\":\"0xda420cc62622c01860b1ca82bf479ad0f7577905f052b7e2c1b7c88e0166447a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e1b28eb7e0d766e77bf15a861e15f33dcf91b1a043ed2bce18a44c5b0bba485\",\"dweb:/ipfs/QmNT5BhbETpVhg8foLhBLGghBemRaTvkHHrL54ixJBSijc\"]}},\"version\":1}"
        }
      },
      "contracts/Factory.sol": {
        "Factory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "revenue_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "dataFeed_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapRouter_",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "splitRatio",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "enum Enums.Visibility",
                  "name": "visibility",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "depositUsdMin",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "forkCost",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "allowedActions",
                  "type": "uint8[]"
                }
              ],
              "name": "StrategyCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "fork",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "forker",
                  "type": "address"
                }
              ],
              "name": "StrategyForked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "splitRatio",
                  "type": "uint256[]"
                },
                {
                  "internalType": "enum Enums.Visibility",
                  "name": "visibility",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "depositUsdMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "forkCost",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "allowedActions",
                  "type": "uint8[]"
                }
              ],
              "name": "createStrategy",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "edger",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                }
              ],
              "name": "forkStrategy",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPriceOracleAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRevenueAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSwapRouterAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 190,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803460a357601f6156e038819003918201601f19168301916001600160401b0383118484101760a85780849260609460405283398101031260a35760428160be565b906057604060516020840160be565b920160be565b600080546001600160a01b039485166001600160a01b03199182161790915560018054938516938216939093179092556002805491909316911617905560405161560e90816100d28239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820360a35756fe608080604052600436101561001357600080fd5b600090813560e01c90816364f079e1146103ea5750806378d1c86d146103c45780638403ef08146100e25780638b5350cc146100bb578063f5c8ba93146100945763f94f657c1461006357600080fd5b346100915780600319360112610091576020604051733e646e062f05e01e1860ea53a6dc81e7e9162de68152f35b80fd5b503461009157806003193601126100915760206001600160a01b0360025416604051908152f35b503461009157806003193601126100915760206001600160a01b0360015416604051908152f35b50346100915760c0366003190112610091576004359067ffffffffffffffff82116100915736602383011215610091578160040135610120816108cb565b9261012e6040519485610893565b8184526024602085019260051b8201019036821161039057602401915b8183106103a4575050506024359067ffffffffffffffff8211610091573660238301121561009157816004013591610182836108cb565b926101906040519485610893565b8084526024602085019160051b8301019136831161039057602401905b82821061039457505050604435906002821015610091576064356084359060a4359267ffffffffffffffff841161009157366023850112156100915783600401356101f7816108cb565b946102056040519687610893565b8186526024602087019260051b8201019036821161039057602401915b81831061037357505050604051614c1f8082019082821067ffffffffffffffff83111761035f5782916102ac916109ba843930815233602082015261026a604082018a6108e3565b85606082015286608082015261010060a082015261029d61028f61010083018d610906565b82810360c08401528b610943565b9060e081830391015287610977565b039082f09081156103535750936103189360209793610348936103316103266001600160a01b037f7c752b9113b23f79161cc728ca055e06564fd3019bfc3663d04ad659cc7082649a169a604051998a998d8b52338f8c015261010060408c01526101008b0190610906565b9089820360608b0152610943565b9460808801906108e3565b60a086015260c085015283820360e0850152610977565b0390a1604051908152f35b604051903d90823e3d90fd5b602484634e487b7160e01b81526041600452fd5b8235600481101561038c57815260209283019201610222565b8480fd5b8380fd5b81358152602091820191016101ad565b82356001600160a01b038116810361038c5781526020928301920161014b565b50346100915780600319360112610091576001600160a01b036020915416604051908152f35b9050602036600319011261088f57600435906001600160a01b038216809203610633577f8e4e9018000000000000000000000000000000000000000000000000000000008152602081600481855afa908115610884578391610852575b50604051907faa6ca8080000000000000000000000000000000000000000000000000000000082528382600481865afa9182156106285784926107ae575b506040517f4eadcca80000000000000000000000000000000000000000000000000000000081528481600481875afa9081156107a357859161070e575b50604051907f2494452d0000000000000000000000000000000000000000000000000000000082528582600481885afa918215610703578692610656575b5060405193614c1f938486019486861067ffffffffffffffff871117610642579261056361057f9593610571938998966109ba8a393087523360208801526001604088015260608701528a608087015261010060a0870152610100860190610906565b9084820360c0860152610943565b9160e0818403910152610977565b039083f0801561063757813b15610633576040517f8769b449000000000000000000000000000000000000000000000000000000008152838160048134875af1801561062857916020946060927fd41cbc93f20efdc0e7c08e245f3f4b52a335efa799019f8e94b49bff570b28b494610618575b50506001600160a01b03604051918583521685820152336040820152a1604051908152f35b8161062291610893565b386105f3565b6040513d86823e3d90fd5b8280fd5b6040513d84823e3d90fd5b602489634e487b7160e01b81526041600452fd5b9091503d8087833e6106688183610893565b8101906020818303126106fb5780519067ffffffffffffffff82116106ff57019080601f830112156106fb578151906106a0826108cb565b926106ae6040519485610893565b82845260208085019360051b8201019182116106f757602001915b8183106106da575050509038610500565b825160048110156106f3578152602092830192016106c9565b8980fd5b8880fd5b8680fd5b8780fd5b6040513d88823e3d90fd5b90503d8086833e61071f8183610893565b81019060208183031261079f5780519067ffffffffffffffff82116106fb57019080601f8301121561079f578151610756816108cb565b926107646040519485610893565b81845260208085019260051b8201019283116106ff57602001905b82821061078f57505050386104c2565b815181526020918201910161077f565b8580fd5b6040513d87823e3d90fd5b9091503d8085833e6107c08183610893565b81019060208183031261038c5780519067ffffffffffffffff821161079f57019080601f8301121561038c578151906107f8826108cb565b926108066040519485610893565b82845260208085019360051b8201019182116106fb57602001915b818310610832575050509038610485565b82516001600160a01b03811681036106ff57815260209283019201610821565b90506020813d60201161087c575b8161086d60209383610893565b81010312610633575138610447565b3d9150610860565b6040513d85823e3d90fd5b5080fd5b90601f8019910116810190811067ffffffffffffffff8211176108b557604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116108b55760051b60200190565b9060028210156108f05752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b8181106109245750505090565b82516001600160a01b0316845260209384019390920191600101610917565b906020808351928381520192019060005b8181106109615750505090565b8251845260209384019390920191600101610954565b90602080835192838152019201906000905b8082106109965750505090565b90919283519060048210156108f05760208160019382935201940192019061098956fe60c0806040523461077d57614c1f803803809161001c82856109dc565b833981016101008282031261077d57610034826109ff565b90610041602084016109ff565b91604084015192600284101561077d5760608501519260808601519560a081015160018060401b03811161077d5781019482601f8701121561077d5785519061008982610a13565b9661009760405198896109dc565b828852602088016020819460051b8301019186831161077d57602001905b8282106109c45750505060c08301516001600160401b03811161077d5783019584601f8801121561077d578651936100ec85610a13565b976100fa604051998a6109dc565b858952602089016020819760051b8301019188831161077d57602001905b8282106109b45750505060e0810151906001600160401b03821161077d57019585601f8801121561077d5786519661014f88610a13565b9661015d60405198896109dc565b88885260208801916020839a60051b82010191821161077d57602001915b81831061099b575050506040516101936040826109dc565b600781526626282a37b5b2b760c91b6020820152604051906101b66040836109dc565b600282526104c560f41b60208301528051906001600160401b03821161068e5760035490600182811c92168015610991575b60208310146108af5781601f849311610942575b50602090601f83116001146108da576000926108cf575b50508160011b916000199060031b1c1916176003555b8051906001600160401b03821161068e5760045490600182811c921680156108c5575b60208310146108af5781601f849311610855575b50602090601f83116001146107ed576000926107e2575b50508160011b916000199060031b1c1916176004555b6001600160a01b031680156107cc57600a80546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38851885103610796575060a081905260405163f5c8ba9360e01b815290602090829060049082906001600160a01b03165afa90811561078a5760009161074b575b506001600160a01b03166080526005558551906001600160401b03821161068e5768010000000000000000821161068e5760075482600755808310610710575b506007600052602060002060005b8381106106f35750508551929150506001600160401b03821161068e5768010000000000000000821161068e57600654826006558083106106b8575b506006600052602060002060005b8381106106a45750509151929150506001600160401b03821161068e5768010000000000000000821161068e576008548260085580831061063d575b5090600860005260206000208160051c9160005b8381106105f05750601f198116900380610588575b505050506000936000945b82518610156104955761043f8684610a41565b51810180911161047f57946001906001600160a01b0361045f8287610a41565b5116600052600960205260406000208260ff19825416179055019461042c565b634e487b7160e01b600052601160045260246000fd5b61271085910361054f5760ff8019600c5416911617600c55600b556040516141b39081610a6c823960805181818161027d015281816102e701528181610430015281816104a001528181610c5c01528181610cc601528181610d6501528181610ded01528181610f6a015281816117f901528181613bbb01528181613c3a01528181613cd401528181613d480152613e8c015260a0518181816108480152818161096601528181611c41015281816121eb01526124490152f35b60405162461bcd60e51b8152602060048201526011602482015270496e76616c696420726174696f2073756d60781b6044820152606490fd5b9260009360005b8181106105a457505050015538808080610421565b909194855160048110156105da576105d0602091846001949060ff809160031b9316831b921b19161790565b960192910161058f565b634e487b7160e01b600052602160045260246000fd5b6000805b6020811061060957508382015560010161040c565b9590815160048110156105da57610634602091896001949060ff809160031b9316831b921b19161790565b920196016105f4565b61066b9060086000526020600020601f80860160051c82019281871680610671575b500160051c0190610a2a565b386103f8565b6000198501908154906000199060200360031b1c1690553861065f565b634e487b7160e01b600052604160045260246000fd5b6001906020845194019381840155016103bc565b60066000526106ed907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f908101908401610a2a565b386103ae565b82516001600160a01b031681830155602090920191600101610372565b6007600052610745907fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688908101908401610a2a565b38610364565b90506020813d602011610782575b81610766602093836109dc565b8101031261077d57610777906109ff565b38610324565b600080fd5b3d9150610759565b6040513d6000823e3d90fd5b62461bcd60e51b81526020600482015260116024820152704d69736d6174636865642061727261797360781b6044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b015190503880610277565b600460009081528281209350601f198516905b81811061083d5750908460019594939210610824575b505050811b0160045561028d565b015160001960f88460031b161c19169055388080610816565b92936020600181928786015181550195019301610800565b600460005261089f907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f850160051c810191602086106108a5575b601f0160051c0190610a2a565b38610260565b9091508190610892565b634e487b7160e01b600052602260045260246000fd5b91607f169161024c565b015190503880610213565b600360009081528281209350601f198516905b81811061092a5750908460019594939210610911575b505050811b01600355610229565b015160001960f88460031b161c19169055388080610903565b929360206001819287860151815501950193016108ed565b600360005261098b907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f850160051c810191602086106108a557601f0160051c0190610a2a565b386101fc565b91607f16916101e8565b8251600481101561077d5781526020928301920161017b565b8151815260209182019101610118565b602080916109d1846109ff565b8152019101906100b5565b601f909101601f19168101906001600160401b0382119082101761068e57604052565b51906001600160a01b038216820361077d57565b6001600160401b03811161068e5760051b60200190565b818110610a35575050565b60008155600101610a2a565b8051821015610a555760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c8062113e081461318957806302d05d3f14611c0457806306fdde03146130cc578063095ea7b31461302457806318160ddd1461300657806323b872dd14612f055780632494452d146127185780632e1a7d4d14612610578063313ce567146125f457806347e7ef24146123e45780634eadcca814612363578063531bcdb3146123455780635358fbda1461217f5780635fa7b58414611eff57806370a0823114611ec8578063715018a614611e605780638769b44914611c2b5780638da5cb5b14611c045780638e4e901814611be657806395d89b4114611ad9578063a216aa0614611797578063a9059cbb14611765578063aa6ca808146116cf578063ab83f98a1461163f578063af81c5b914611505578063b317650b1461086c578063c45a015514610828578063dd62ed3e146107d8578063e69d849d146106e4578063f2fde38b146106375763f9c4d3db1461017157600080fd5b346106345760403660031901126106345761018a613290565b602435610198811515613405565b6001600160a01b0382169081845260096020526101bb60ff604086205416613771565b600254926101ca841515613450565b6040926060919073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81149087805b600754811015610626576001600160a01b0361020782613388565b90549060031b1c1661022a8a6102258a610220856137bc565b61349b565b6134c4565b90604051610238898261331c565b600281528a36602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82148015610620576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105d65787916105e7575b505b6001600160a01b036102c0846133d4565b9116905287156105e1576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105d6578791610599575b505b6001600160a01b0361032a846133e1565b911690528287148080610592575b15610364575050505082808060019561035c94335af16103566134fc565b5061352c565b0188906101ec565b929392156103e557505060405163a9059cbb60e01b815233600482015260248101919091529260209184916044918391905af19182156103da576001926103ac575b5061035c565b6103cc9060203d81116103d3575b6103c4818361331c565b8101906134e4565b50386103a6565b503d6103ba565b6040513d8c823e3d90fd5b93945092909190156104955750600142019182421161048157918b916104249493604051809681948293637ff36ab560e01b8452339060048501613ab4565b03916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19182156103da57600192610466575061035c565b6103cc903d808d833e610479818361331c565b810190613692565b60248c634e487b7160e01b81526011600452fd5b906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169160208d6040519283809263095ea7b360e01b8252816104fa888a60048401602090939291936001600160a01b0360408201951681520152565b03925af180156105875761056b575b506001420192834211610557579161053f9493918d8094604051978895869485936338ed173960e01b8552339160048601613a7b565b03925af19182156103da57600192610466575061035c565b60248d634e487b7160e01b81526011600452fd5b6105829060203d81116103d3576103c4818361331c565b610509565b6040513d8f823e3d90fd5b5088610338565b90506020813d82116105ce575b816105b36020938361331c565b810103126105ca576105c4906135c2565b38610317565b8680fd5b3d91506105a6565b6040513d89823e3d90fd5b88610319565b90506020813d8211610618575b816106016020938361331c565b810103126105ca57610612906135c2565b386102ad565b3d91506105f4565b826102af565b50610631863361394d565b80f35b80fd5b5034610634576020366003190112610634576001600160a01b03610659613290565b6106616139ce565b1680156106b8576001600160a01b03600a548273ffffffffffffffffffffffffffffffffffffffff19821617600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b6024827f1e4fbdf700000000000000000000000000000000000000000000000000000000815280600452fd5b5034610634576040366003190112610634576106fe613290565b6024356001600160a01b03821690818452600960205261072460ff604086205416613771565b6040516323b872dd60e01b815233600482015230602482015260448101829052916020908390606490829088905af19081156107cd577f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f74926107aa926107b0575b50604051918291339583602090939291936001600160a01b0360408201951681520152565b0390a280f35b6107c89060203d6020116103d3576103c4818361331c565b610785565b6040513d86823e3d90fd5b5034610634576040366003190112610634576001600160a01b0360406107fc613290565b92826108066132a6565b9416815260016020522091166000526020526020604060002054604051908152f35b503461063457806003193601126106345760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346106345760203660031901126106345760043567ffffffffffffffff8111611501576040600319823603011261150157604051906040820182811067ffffffffffffffff8211176114ed576040528060040135600481101561121e57825260248101359067ffffffffffffffff821161121e5701366023820112156110c357826004820135916108fd83613354565b9261090b604051948561331c565b80845236602483830101116110c357806024602093018386013783010152602082019081526040517ff94f657c0000000000000000000000000000000000000000000000000000000081526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156107cd5784906114ad575b6001600160a01b0391501633036114695781519160048310159283611455576008549385805b8681101561144957600888528260ff8260051c7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3015460f88460031b161c1690611435576004811015611435578414610a16576001016109bb565b5050505090915060015b156113f15780516004811015610b3f5715611222575b80516004811015610b3f57600114610b53575b80516004811015610b3f57600214610ab1575b610a9a90610aab7f2dbb4029cc94c05452861994b3d66ab5d4b3f2b45418116b370c7981f2eebb9093604051938493602085526020850190516132bc565b51604080840152606083019061324f565b0390a180f35b8151908151820191604081840312610b3b57610acf602082016135c2565b9360408201519167ffffffffffffffff83116105ca577f2dbb4029cc94c05452861994b3d66ab5d4b3f2b45418116b370c7981f2eebb90956001600160a01b03610b2a610b31936020610aab9781610a9a9b0192010161370c565b9116613ae6565b9350509050610a5c565b8480fd5b602484634e487b7160e01b81526021600452fd5b9091825191825183016040848203126110c35760208401519067ffffffffffffffff821161121e576040610b9d6001600160a01b0393602080610ba495999799019187010161370c565b93016135c2565b168083526009602052610bbd60ff604085205416613771565b60609460409273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee831491855b8251811015610f56576001600160a01b03610bf882856133f1565b5116610c03816137bc565b8015610f4c5760405191610c178c8461331c565b600283528836602085013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81148015610f46576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610efc578c91610f0d575b505b6001600160a01b03610c9f866133d4565b911690528715610f07576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610efc578c91610ebf575b505b6001600160a01b03610d09866133e1565b91169052818903610d2257505050506001905b01610bdd565b15610dd657506001420191824211610dc257918991610d5993604051809581948293637ff36ab560e01b8452309060048501613ab4565b03916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af18015610db7579060019291610d9d575b50610d1c565b610db0903d808b833e610479818361331c565b5038610d97565b6040513d8a823e3d90fd5b60248a634e487b7160e01b81526011600452fd5b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201819052602482018490529291602090829060449082908f905af18015610eb457610e98575b506001420192834211610e845791610e6b93918b8094604051968795869485936338ed173960e01b8552309160048601613a7b565b03925af18015610db7579060019291610d9d5750610d1c565b60248b634e487b7160e01b81526011600452fd5b610eaf9060203d81116103d3576103c4818361331c565b610e36565b6040513d8d823e3d90fd5b90506020813d8211610ef4575b81610ed96020938361331c565b81010312610ef057610eea906135c2565b38610cf6565b8b80fd5b3d9150610ecc565b6040513d8e823e3d90fd5b88610cf8565b90506020813d8211610f3e575b81610f276020938361331c565b81010312610ef057610f38906135c2565b38610c8c565b3d9150610f1a565b81610c8e565b5050600190610d1c565b509594965050505050826001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166040516315ab88c960e31b8152602081600481855afa90811561110c5783916111d9575b5060206001600160a01b03916024604051809481936370a0823160e01b8352306004840152165afa90811561110c5783916111a4575b50610ff1575b5050610a49565b6040516315ab88c960e31b8152602081600481855afa90811561110c57839161115c575b5060206001600160a01b036004921692604051928380926315ab88c960e31b82525afa90811561110c578391611117575b5060206001600160a01b03916024604051809481936370a0823160e01b8352306004840152165afa90811561110c5783916110d2575b50813b156110c3578291602483926040519485938492632e1a7d4d60e01b845260048401525af180156110c75715610fea57816110b89161331c565b6110c3578238610fea565b8280fd5b6040513d84823e3d90fd5b9250506020823d602011611104575b816110ee6020938361331c565b810103126110ff578491513861107c565b600080fd5b3d91506110e1565b6040513d85823e3d90fd5b90506020813d602011611154575b816111326020938361331c565b810103126110c357602061114d6001600160a01b03926135c2565b9150611046565b3d9150611125565b90506020813d60201161119c575b816111776020938361331c565b810103126110c35760206001600160a01b036111946004936135c2565b925050611015565b3d915061116a565b9250506020823d6020116111d1575b816111c06020938361331c565b810103126110ff5784915138610fe4565b3d91506111b3565b90506020813d602011611216575b816111f46020938361331c565b810103126110c357602061120f6001600160a01b03926135c2565b9150610fae565b3d91506111e7565b8380fd5b90611237815160208082518301019101613692565b8051600754036113ad578391825b825184101561126d5761126560019161125e86866133f1565b5190613a6e565b930192611245565b61271091949350036113695780519067ffffffffffffffff82116113555768010000000000000000821161135557600654826006558083106112f7575b5060200160068552845b8281106112c357505050610a36565b60019060208351930192817ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0155016112b4565b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01827ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f015b81811061134a57506112aa565b86815560010161133d565b602485634e487b7160e01b81526041600452fd5b606460405162461bcd60e51b815260206004820152601160248201527f496e76616c696420726174696f2073756d0000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964206c656e6774680000000000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601260248201527f416374696f6e206e6f7420616c6c6f77656400000000000000000000000000006044820152fd5b602489634e487b7160e01b81526021600452fd5b50929394505050610a20565b602485634e487b7160e01b81526021600452fd5b606460405162461bcd60e51b815260206004820152601560248201527f4f6e6c7920656467657220697320616c6c6f77656400000000000000000000006044820152fd5b506020813d6020116114e5575b816114c76020938361331c565b8101031261121e576114e06001600160a01b03916135c2565b610995565b3d91506114ba565b602484634e487b7160e01b81526041600452fd5b5080fd5b50346106345760403660031901126106345761151f613290565b6115276139ce565b6001600160a01b03811690818352600960205260ff6040842054166115fb57600754680100000000000000008110156114ed579061156e82600161158d9401600755613388565b9091906001600160a01b038084549260031b9316831b921b1916179055565b600654680100000000000000008110156115e7576115b48160016115ce93016006556133b9565b6024359082549060031b91821b91600019901b1916179055565b8152600960205260408120805460ff1916600117905580f35b602483634e487b7160e01b81526041600452fd5b606460405162461bcd60e51b815260206004820152600c60248201527f546f6b656e2065786973747300000000000000000000000000000000000000006044820152fd5b5060203660031901126106345760043573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8252600960205261167b60ff604084205416613577565b611686813414613647565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f7460403392a280f35b503461063457806003193601126106345760405180916020600754928381520191600782527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688915b818110611746576117428561172e8187038261331c565b6040519182916020835260208301906132df565b0390f35b82546001600160a01b0316845260209093019260019283019201611717565b50346106345760403660031901126106345761178c611782613290565b6024359033613856565b602060405160018152f35b5034610634576020366003190112610634576004356117b7811515613405565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260096020526117e360ff604084205416613771565b600254906117f2821515613450565b60409060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685805b600754811015611ace576001600160a01b0361183f82613388565b90549060031b1c166118588861022588610220856137bc565b90604051611866878261331c565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82148015611ac8576040516315ab88c960e31b81526020816004818b5afa9081156105d6578791611a8f575b505b6001600160a01b036118c5846133d4565b911690526040516315ab88c960e31b81526020816004818b5afa9081156105d6578791611a56575b506001600160a01b036118ff846133e1565b911690528080611a4e575b1561192f5750505082808060019561192794335af16103566134fc565b018690611824565b91929115611994575060405163a9059cbb60e01b815233600482015260248101919091529260209184916044918391905af1918215610db757600192611976575b50611927565b61198d9060203d81116103d3576103c4818361331c565b5038611970565b60405163095ea7b360e01b81526001600160a01b0387166004820152602481018390529094509091602090829060449082908e905af180156103da57611a32575b506001420192834211610dc257908991611a0560405195869384936338ed173960e01b8552339160048601613a7b565b038183875af1918215610db757600192611a1f5750611927565b61198d903d808b833e610479818361331c565b611a499060203d81116103d3576103c4818361331c565b6119d5565b50600161190a565b90506020813d8211611a87575b81611a706020938361331c565b810103126105ca57611a81906135c2565b386118ed565b3d9150611a63565b90506020813d8211611ac0575b81611aa96020938361331c565b810103126105ca57611aba906135c2565b386118b2565b3d9150611a9c565b826118b4565b50610631843361394d565b50346106345780600319360112610634576040519080600454908160011c91600181168015611bdc575b602084108114611bc857838652908115611ba15750600114611b44575b61174284611b308186038261331c565b60405191829160208352602083019061324f565b600481527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b808210611b8757509091508101602001611b3082611b20565b919260018160209254838588010152019101909291611b6e565b60ff191660208087019190915292151560051b85019092019250611b309150839050611b20565b602483634e487b7160e01b81526022600452fd5b92607f1692611b03565b50346106345780600319360112610634576020600554604051908152f35b503461063457806003193601126106345760206001600160a01b03600a5416604051908152f35b5080600319360112610634576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016803303611e1c5760ff600c54166002811015611e0857611dc457600b543410611d80576020600491604051928380927f78d1c86d0000000000000000000000000000000000000000000000000000000082525afa80156110c7578290611d40575b6001600160a01b03915016816001600160a01b03600a5416823b156115015781906024604051809581937f23024408000000000000000000000000000000000000000000000000000000008352600483015234905af18015611d3357611d255780f35b611d2e9161331c565b388180f35b50604051903d90823e3d90fd5b506020813d602011611d78575b81611d5a6020938361331c565b8101031261150157611d736001600160a01b03916135c2565b611cc2565b3d9150611d4d565b606460405162461bcd60e51b815260206004820152601660248201527f496e73756666696369656e7420666f726b20636f7374000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600a60248201527f446973616c6c6f776564000000000000000000000000000000000000000000006044820152fd5b602483634e487b7160e01b81526021600452fd5b606460405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920666163746f727920697320616c6c6f7765640000000000000000006044820152fd5b5034610634578060031936011261063457611e796139ce565b806001600160a01b03600a5473ffffffffffffffffffffffffffffffffffffffff198116600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346106345760203660031901126106345760406020916001600160a01b03611eef613290565b1681528083522054604051908152f35b5034610634576020366003190112610634576001600160a01b03611f21613290565b611f296139ce565b16808252600960205260ff6040832054161561213b576040516370a0823160e01b8152306004820152602081602481855afa90811561110c578391612109575b506120c557815b600754808210156120bf57826001600160a01b03611f8d84613388565b90549060031b1c1614611fa35750600101611f70565b6000198101908111612097576001600160a01b03611fc3611fd492613388565b90549060031b1c1661156e83613388565b60075480156120ab5760001901611fea81613388565b6001600160a01b0382549160031b1b191690556007556006546000198101908111612097579061202c61201f612045936133b9565b90549060031b1c916133b9565b90919082549060031b91821b91600019901b1916179055565b6006548015612083576000190161205b816133b9565b8154906000199060031b1b19169055600655815260096020526040812060ff19815416905580f35b602483634e487b7160e01b81526031600452fd5b602484634e487b7160e01b81526011600452fd5b602484634e487b7160e01b81526031600452fd5b50505080f35b606460405162461bcd60e51b815260206004820152601060248201527f4e6f6e2d7a65726f2062616c616e6365000000000000000000000000000000006044820152fd5b90506020813d602011612133575b816121246020938361331c565b810103126110c3575138611f69565b3d9150612117565b606460405162461bcd60e51b815260206004820152600f60248201527f546f6b656e206e6f7420666f756e6400000000000000000000000000000000006044820152fd5b506020366003190112610634576004356121976139ce565b6121a2813414613647565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260096020526121ce60ff604084205416613577565b6040516322d4d43360e21b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561110c578391612300575b5060206001600160a01b03916044604051809481936333fa33cb60e11b835287600484015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6024840152165afa801561110c5783906122cc575b612283915061227d6005548210156135d6565b33613a10565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f49551760403392a280f35b506020813d6020116122f8575b816122e66020938361331c565b810103126110c357612283905161226a565b3d91506122d9565b90506020813d60201161233d575b8161231b6020938361331c565b810103126110c35760206123366001600160a01b03926135c2565b915061221b565b3d915061230e565b50346106345780600319360112610634576020600b54604051908152f35b503461063457806003193601126106345760405180916020600654928381520191600682527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f915b8181106123ce57611742856123c28187038261331c565b60405191829182613215565b82548452602090930192600192830192016123ab565b5034610634576040366003190112610634576123fe613290565b6024356124096139ce565b6001600160a01b038216808452600960205261242b60ff604086205416613577565b604051916322d4d43360e21b83526020836004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9283156125705785936125af575b5060206001600160a01b03936044604051809681936333fa33cb60e11b8352866004840152876024840152165afa92831561257057859361257b575b506124c46005548410156135d6565b6040516323b872dd60e01b815233600482015230602482015260448101829052916020908390606490829089905af18015612570577fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f495517936107aa9361252f92612553575b5033613a10565b604051918291339583602090939291936001600160a01b0360408201951681520152565b61256b9060203d6020116103d3576103c4818361331c565b612528565b6040513d87823e3d90fd5b9092506020813d6020116125a7575b816125976020938361331c565b81010312610b3b575191386124b5565b3d915061258a565b92506020833d6020116125ec575b816125ca6020938361331c565b81010312610b3b5760206125e56001600160a01b03946135c2565b9350612479565b3d91506125bd565b5034610634578060031936011261063457602060405160128152f35b503461063457602036600319011261063457600435612630811515613405565b6002549061263f821515613450565b82805b60075481101561270d576001600160a01b0361265d82613388565b90549060031b1c166126768561022586610220856137bc565b9073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036126b057508280806001956126a894335af16103566134fc565b018390612642565b60405163a9059cbb60e01b81523360048201526024810192909252909260209184916044918391905af1918215612570576001926126ef575b506126a8565b6127069060203d81116103d3576103c4818361331c565b50386126e9565b50610631823361394d565b50346106345780600319360112610634576040518060206008549283815201918183600886527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee39286905b80601f830110612c7c5761287c945491818110612c61575b818110612c43575b818110612c25575b818110612c07575b818110612bea575b818110612bcc575b818110612bae575b818110612b90575b818110612b72575b818110612b54575b818110612b36575b818110612b18575b818110612afa575b818110612adc575b818110612abe575b818110612aa0575b818110612a82575b818110612a64575b818110612a46575b818110612a28575b818110612a0a575b8181106129ec575b8181106129ce575b8181106129b0575b818110612992575b818110612974575b818110612956575b818110612938575b81811061291a575b8181106128fc575b8181106128de575b106128c7575b50939293038361331c565b604051928392602084019060208552518091526040840192915b8181106128a4575050500390f35b91935091602080826128b960019488516132bc565b019401910191849392612896565b906128d78160209360f81c6132bc565b0138612871565b926020816128f460019360ff8760f01c166132bc565b01930161286b565b9260208161291260019360ff8760e81c166132bc565b019301612863565b9260208161293060019360ff8760e01c166132bc565b01930161285b565b9260208161294e60019360ff8760d81c166132bc565b019301612853565b9260208161296c60019360ff8760d01c166132bc565b01930161284b565b9260208161298a60019360ff8760c81c166132bc565b019301612843565b926020816129a860019360ff8760c01c166132bc565b01930161283b565b926020816129c660019360ff8760b81c166132bc565b019301612833565b926020816129e460019360ff8760b01c166132bc565b01930161282b565b92602081612a0260019360ff8760a81c166132bc565b019301612823565b92602081612a2060019360ff8760a01c166132bc565b01930161281b565b92602081612a3e60019360ff8760981c166132bc565b019301612813565b92602081612a5c60019360ff8760901c166132bc565b01930161280b565b92602081612a7a60019360ff8760881c166132bc565b019301612803565b92602081612a9860019360ff8760801c166132bc565b0193016127fb565b92602081612ab660019360ff8760781c166132bc565b0193016127f3565b92602081612ad460019360ff8760701c166132bc565b0193016127eb565b92602081612af260019360ff8760681c166132bc565b0193016127e3565b92602081612b1060019360ff8760601c166132bc565b0193016127db565b92602081612b2e60019360ff8760581c166132bc565b0193016127d3565b92602081612b4c60019360ff8760501c166132bc565b0193016127cb565b92602081612b6a60019360ff8760481c166132bc565b0193016127c3565b92602081612b8860019360ff8760401c166132bc565b0193016127bb565b92602081612ba660019360ff8760381c166132bc565b0193016127b3565b92602081612bc460019360ff8760301c166132bc565b0193016127ab565b92602081612be260019360ff8760281c166132bc565b0193016127a3565b92602081612bff60019360ff87851c166132bc565b01930161279b565b92602081612c1d60019360ff8760181c166132bc565b019301612793565b92602081612c3b60019360ff8760101c166132bc565b01930161278b565b92602081612c5960019360ff8760081c166132bc565b019301612783565b92602081612c7460019360ff87166132bc565b01930161277b565b916020919350610400600191612ef78754612c9a8360ff83166132bc565b612cac86840160ff8360081c166132bc565b612cbf6040840160ff8360101c166132bc565b612cd26060840160ff8360181c166132bc565b612ce46080840160ff83891c166132bc565b612cf760a0840160ff8360281c166132bc565b612d0a60c0840160ff8360301c166132bc565b612d1d60e0840160ff8360381c166132bc565b612d31610100840160ff8360401c166132bc565b612d45610120840160ff8360481c166132bc565b612d59610140840160ff8360501c166132bc565b612d6d610160840160ff8360581c166132bc565b612d81610180840160ff8360601c166132bc565b612d956101a0840160ff8360681c166132bc565b612da96101c0840160ff8360701c166132bc565b612dbd6101e0840160ff8360781c166132bc565b612dd1610200840160ff8360801c166132bc565b612de5610220840160ff8360881c166132bc565b612df9610240840160ff8360901c166132bc565b612e0d610260840160ff8360981c166132bc565b612e21610280840160ff8360a01c166132bc565b612e356102a0840160ff8360a81c166132bc565b612e496102c0840160ff8360b01c166132bc565b612e5d6102e0840160ff8360b81c166132bc565b612e71610300840160ff8360c01c166132bc565b612e85610320840160ff8360c81c166132bc565b612e99610340840160ff8360d01c166132bc565b612ead610360840160ff8360d81c166132bc565b612ec1610380840160ff8360e01c166132bc565b612ed56103a0840160ff8360e81c166132bc565b612ee96103c0840160ff8360f01c166132bc565b6103e083019060f81c6132bc565b019401920184929391612763565b503461063457606036600319011261063457612f1f613290565b612f276132a6565b604435916001600160a01b0381168085526001602052604085206001600160a01b03331686526020526040852054906000198210612f6c575b505061178c9350613856565b848210612fd2578015612fbf573315612fac57604086869261178c985260016020528181206001600160a01b033316825260205220910390553880612f60565b602486634a1406b160e11b815280600452fd5b60248663e602df0560e01b815280600452fd5b60648686847ffb8f41b200000000000000000000000000000000000000000000000000000000835233600452602452604452fd5b50346106345780600319360112610634576020600254604051908152f35b50346106345760403660031901126106345761303e613290565b6024359033156130b9576001600160a01b03169182156130a65760408291338152600160205281812085825260205220556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b80634a1406b160e11b6024925280600452fd5b60248363e602df0560e01b815280600452fd5b50346106345780600319360112610634576040519080600354908160011c9160018116801561317f575b602084108114611bc857838652908115611ba157506001146131225761174284611b308186038261331c565b600381527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b80821061316557509091508101602001611b3082611b20565b91926001816020925483858801015201910190929161314c565b92607f16926130f6565b50346106345780600319360112610634576007546131a681613370565b916131b4604051938461331c565b818352601f196131c383613370565b013660208501375b8181106131e057604051806117428582613215565b806132046001600160a01b036131f7600194613388565b90549060031b1c166137bc565b61320e82866133f1565b52016131cb565b602060408183019282815284518094520192019060005b8181106132395750505090565b825184526020938401939092019160010161322c565b919082519283825260005b84811061327b575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161325a565b600435906001600160a01b03821682036110ff57565b602435906001600160a01b03821682036110ff57565b9060048210156132c95752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b8181106132fd5750505090565b82516001600160a01b03168452602093840193909201916001016132f0565b90601f8019910116810190811067ffffffffffffffff82111761333e57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161333e57601f01601f191660200190565b67ffffffffffffffff811161333e5760051b60200190565b6007548110156133a357600760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6006548110156133a357600660005260206000200190600090565b8051156133a35760200190565b8051600110156133a35760400190565b80518210156133a35760209160051b010190565b1561340c57565b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420616d6f756e740000000000000000000000000000000000006044820152fd5b1561345757565b606460405162461bcd60e51b815260206004820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b818102929181159184041417156134ae57565b634e487b7160e01b600052601160045260246000fd5b81156134ce570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126110ff575180151581036110ff5790565b3d15613527573d9061350d82613354565b9161351b604051938461331c565b82523d6000602084013e565b606090565b1561353357565b606460405162461bcd60e51b815260206004820152601360248201527f455448207472616e73666572206661696c6564000000000000000000000000006044820152fd5b1561357e57565b606460405162461bcd60e51b815260206004820152601160248201527f455448206e6f7420737570706f727465640000000000000000000000000000006044820152fd5b51906001600160a01b03821682036110ff57565b156135dd57565b608460405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e74206465706f73697420616d6f756e7420696e207560448201527f73640000000000000000000000000000000000000000000000000000000000006064820152fd5b1561364e57565b606460405162461bcd60e51b815260206004820152601460248201527f496e636f72726563742045544820616d6f756e740000000000000000000000006044820152fd5b6020818303126110ff5780519067ffffffffffffffff82116110ff57019080601f830112156110ff5781516136c681613370565b926136d4604051948561331c565b81845260208085019260051b8201019283116110ff57602001905b8282106136fc5750505090565b81518152602091820191016136ef565b9080601f830112156110ff57815161372381613370565b92613731604051948561331c565b81845260208085019260051b8201019283116110ff57602001905b8282106137595750505090565b60208091613766846135c2565b81520191019061374c565b1561377857565b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420746f6b656e000000000000000000000000000000000000006044820152fd5b6000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036137e95750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa91821561384a57809261381957505090565b9091506020823d602011613842575b816138356020938361331c565b8101031261063457505190565b3d9150613828565b604051903d90823e3d90fd5b6001600160a01b031690811561391e576001600160a01b03169182156138ef5760008281528060205260408120548281106138d55791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b0316801561391e576000918183528260205260408320548181106139b557817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b6001600160a01b03600a541633036139e257565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6001600160a01b03169081156138ef57613a2c81600254613a6e565b6002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009284845283825260408420818154019055604051908152a3565b919082018092116134ae57565b90613aa96080936001600160a01b03929796959784526000602085015260a0604085015260a08401906132df565b951660608201520152565b6001600160a01b03613adb60609396959496600084526080602085015260808401906132df565b951660408201520152565b90916000906001600160a01b0383168083526009602052613b0d60ff604085205416613771565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8114801561411b57475b8015614112578651939593613b40916134c4565b6060969093604091865b8151811015613e78576001600160a01b03613b6582846133f1565b51168089526009602052613b7f60ff60408b205416613771565b60405190613b8d8c8361331c565b60028252853660208401378615613e72576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610eb4578b91613e39575b505b6001600160a01b03613bfe846133d4565b9116905273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8103613e33576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610eb4578b91613df6575b505b6001600160a01b03613c7d846133e1565b911690528703613c9257506001905b01613b4a565b8515613d31576001420190814211610dc257613cc7918a916040519384928392637ff36ab560e01b8452309060048501613ab4565b03818b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af18015613d26579060019291613d0c575b50613c8c565b613d1f903d808c833e610479818361331c565b5038613d06565b6040513d8b823e3d90fd5b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201819052602482018a9052906020816044818e8d5af18015610eb457613dda575b506001420191824211610e8457918a918a83613dc195604051968795869485936338ed173960e01b8552309160048601613a7b565b03925af18015613d26579060019291613d0c5750613c8c565b613df19060203d81116103d3576103c4818361331c565b613d8c565b90506020813d8211613e2b575b81613e106020938361331c565b81010312613e2757613e21906135c2565b38613c6a565b8a80fd5b3d9150613e03565b80613c6c565b90506020813d8211613e6a575b81613e536020938361331c565b81010312613e2757613e64906135c2565b38613beb565b3d9150613e46565b84613bed565b505050505050509091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166040516315ab88c960e31b8152602081600481855afa90811561110c5783916140cd575b5060206001600160a01b03916024604051809481936370a0823160e01b8352306004840152165afa90811561110c57839161409b575b50613f0f575050565b6040516315ab88c960e31b8152602081600481855afa90811561110c578391614053575b5060206001600160a01b036004921692604051928380926315ab88c960e31b82525afa90811561110c57839161400e575b5060206001600160a01b03916024604051809481936370a0823160e01b8352306004840152165afa90811561110c578391613fdc575b50813b156110c3578291602483926040519485938492632e1a7d4d60e01b845260048401525af180156110c757613fcf575050565b81613fd99161331c565b50565b90506020813d602011614006575b81613ff76020938361331c565b810103126110c3575138613f9a565b3d9150613fea565b90506020813d60201161404b575b816140296020938361331c565b810103126110c35760206140446001600160a01b03926135c2565b9150613f64565b3d915061401c565b90506020813d602011614093575b8161406e6020938361331c565b810103126110c35760206001600160a01b0361408b6004936135c2565b925050613f33565b3d9150614061565b90506020813d6020116140c5575b816140b66020938361331c565b810103126110c3575138613f06565b3d91506140a9565b90506020813d60201161410a575b816140e86020938361331c565b810103126110c35760206141036001600160a01b03926135c2565b9150613ed0565b3d91506140db565b50505092505050565b6040516370a0823160e01b8152306004820152602081602481865afa90811561257057859161414b575b50613b2c565b90506020813d602011614175575b816141666020938361331c565b81010312610b3b575138614145565b3d915061415956fea264697066735822122033435b1119b5fc1e3ee4ac353b3d5eb3948a02f62d11de26ee438c9a8cba2ead64736f6c634300081c0033a264697066735822122047af936cabad77930e782579fa6b73fadb0f3062e90d0aea993bbe4df78dea6f64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH1 0xA3 JUMPI PUSH1 0x1F PUSH2 0x56E0 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xA8 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xA3 JUMPI PUSH1 0x42 DUP2 PUSH1 0xBE JUMP JUMPDEST SWAP1 PUSH1 0x57 PUSH1 0x40 PUSH1 0x51 PUSH1 0x20 DUP5 ADD PUSH1 0xBE JUMP JUMPDEST SWAP3 ADD PUSH1 0xBE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x560E SWAP1 DUP2 PUSH2 0xD2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH1 0xA3 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x64F079E1 EQ PUSH2 0x3EA JUMPI POP DUP1 PUSH4 0x78D1C86D EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x8403EF08 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x8B5350CC EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF5C8BA93 EQ PUSH2 0x94 JUMPI PUSH4 0xF94F657C EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0x3E646E062F05E01E1860EA53A6DC81E7E9162DE6 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x91 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x91 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x91 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x120 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x12E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x390 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x3A4 JUMPI POP POP POP PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x91 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x91 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x182 DUP4 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x190 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x390 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x394 JUMPI POP POP POP PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x91 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x91 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x91 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1F7 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP5 PUSH2 0x205 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x893 JUMP JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x24 PUSH1 0x20 DUP8 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x390 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x373 JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x4C1F DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x35F JUMPI DUP3 SWAP2 PUSH2 0x2AC SWAP2 PUSH2 0x9BA DUP5 CODECOPY ADDRESS DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x26A PUSH1 0x40 DUP3 ADD DUP11 PUSH2 0x8E3 JUMP JUMPDEST DUP6 PUSH1 0x60 DUP3 ADD MSTORE DUP7 PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x29D PUSH2 0x28F PUSH2 0x100 DUP4 ADD DUP14 PUSH2 0x906 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE DUP12 PUSH2 0x943 JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP2 DUP4 SUB SWAP2 ADD MSTORE DUP8 PUSH2 0x977 JUMP JUMPDEST SUB SWAP1 DUP3 CREATE SWAP1 DUP2 ISZERO PUSH2 0x353 JUMPI POP SWAP4 PUSH2 0x318 SWAP4 PUSH1 0x20 SWAP8 SWAP4 PUSH2 0x348 SWAP4 PUSH2 0x331 PUSH2 0x326 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x7C752B9113B23F79161CC728CA055E06564FD3019BFC3663D04AD659CC708264 SWAP11 AND SWAP11 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP14 DUP12 MSTORE CALLER DUP16 DUP13 ADD MSTORE PUSH2 0x100 PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0x100 DUP12 ADD SWAP1 PUSH2 0x906 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x943 JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP9 ADD SWAP1 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x977 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x38C JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x222 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1AD JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x38C JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x14B JUMP JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x88F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 SWAP3 SUB PUSH2 0x633 JUMPI PUSH32 0x8E4E901800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x884 JUMPI DUP4 SWAP2 PUSH2 0x852 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH32 0xAA6CA80800000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP4 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x628 JUMPI DUP5 SWAP3 PUSH2 0x7AE JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x4EADCCA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP5 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI DUP6 SWAP2 PUSH2 0x70E JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH32 0x2494452D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP3 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x703 JUMPI DUP7 SWAP3 PUSH2 0x656 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP4 PUSH2 0x4C1F SWAP4 DUP5 DUP7 ADD SWAP5 DUP7 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0x642 JUMPI SWAP3 PUSH2 0x563 PUSH2 0x57F SWAP6 SWAP4 PUSH2 0x571 SWAP4 DUP10 SWAP9 SWAP7 PUSH2 0x9BA DUP11 CODECOPY ADDRESS DUP8 MSTORE CALLER PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE DUP11 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x906 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x943 JUMP JUMPDEST SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x977 JUMP JUMPDEST SUB SWAP1 DUP4 CREATE DUP1 ISZERO PUSH2 0x637 JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8769B44900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 CALLVALUE DUP8 GAS CALL DUP1 ISZERO PUSH2 0x628 JUMPI SWAP2 PUSH1 0x20 SWAP5 PUSH1 0x60 SWAP3 PUSH32 0xD41CBC93F20EFDC0E7C08E245F3F4B52A335EFA799019F8E94B49BFF570B28B4 SWAP5 PUSH2 0x618 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 DUP6 DUP4 MSTORE AND DUP6 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP2 PUSH2 0x622 SWAP2 PUSH2 0x893 JUMP JUMPDEST CODESIZE PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x668 DUP2 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x6FB JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6FF JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x6FB JUMPI DUP2 MLOAD SWAP1 PUSH2 0x6A0 DUP3 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x6AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x6F7 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x6DA JUMPI POP POP POP SWAP1 CODESIZE PUSH2 0x500 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x6C9 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x71F DUP2 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x79F JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6FB JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x79F JUMPI DUP2 MLOAD PUSH2 0x756 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x764 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x6FF JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x78F JUMPI POP POP POP CODESIZE PUSH2 0x4C2 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x77F JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x7C0 DUP2 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x38C JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x79F JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x38C JUMPI DUP2 MLOAD SWAP1 PUSH2 0x7F8 DUP3 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x806 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x6FB JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x832 JUMPI POP POP POP SWAP1 CODESIZE PUSH2 0x485 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6FF JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x821 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x87C JUMPI JUMPDEST DUP2 PUSH2 0x86D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x633 JUMPI MLOAD CODESIZE PUSH2 0x447 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8B5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8B5 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x8F0 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x924 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x917 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x961 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x954 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x996 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP4 MLOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x20 DUP2 PUSH1 0x1 SWAP4 DUP3 SWAP4 MSTORE ADD SWAP5 ADD SWAP3 ADD SWAP1 PUSH2 0x989 JUMP INVALID PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x77D JUMPI PUSH2 0x4C1F DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x9DC JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH2 0x100 DUP3 DUP3 SUB SLT PUSH2 0x77D JUMPI PUSH2 0x34 DUP3 PUSH2 0x9FF JUMP JUMPDEST SWAP1 PUSH2 0x41 PUSH1 0x20 DUP5 ADD PUSH2 0x9FF JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MLOAD SWAP3 PUSH1 0x2 DUP5 LT ISZERO PUSH2 0x77D JUMPI PUSH1 0x60 DUP6 ADD MLOAD SWAP3 PUSH1 0x80 DUP7 ADD MLOAD SWAP6 PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI DUP2 ADD SWAP5 DUP3 PUSH1 0x1F DUP8 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP6 MLOAD SWAP1 PUSH2 0x89 DUP3 PUSH2 0xA13 JUMP JUMPDEST SWAP7 PUSH2 0x97 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x9DC JUMP JUMPDEST DUP3 DUP9 MSTORE PUSH1 0x20 DUP9 ADD PUSH1 0x20 DUP2 SWAP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP7 DUP4 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9C4 JUMPI POP POP POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI DUP4 ADD SWAP6 DUP5 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP7 MLOAD SWAP4 PUSH2 0xEC DUP6 PUSH2 0xA13 JUMP JUMPDEST SWAP8 PUSH2 0xFA PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x9DC JUMP JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x20 DUP10 ADD PUSH1 0x20 DUP2 SWAP8 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP9 DUP4 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH1 0xE0 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x77D JUMPI ADD SWAP6 DUP6 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP7 MLOAD SWAP7 PUSH2 0x14F DUP9 PUSH2 0xA13 JUMP JUMPDEST SWAP7 PUSH2 0x15D PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x9DC JUMP JUMPDEST DUP9 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP2 PUSH1 0x20 DUP4 SWAP11 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x99B JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x193 PUSH1 0x40 DUP3 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x26282A37B5B2B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B6 PUSH1 0x40 DUP4 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE PUSH2 0x4C5 PUSH1 0xF4 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x991 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8AF JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x942 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x8DA JUMPI PUSH1 0x0 SWAP3 PUSH2 0x8CF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8C5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8AF JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x855 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7ED JUMPI PUSH1 0x0 SWAP3 PUSH2 0x7E2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP9 MLOAD DUP9 MLOAD SUB PUSH2 0x796 JUMPI POP PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0xF5C8BA93 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x74B JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x5 SSTORE DUP6 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x7 SLOAD DUP3 PUSH1 0x7 SSTORE DUP1 DUP4 LT PUSH2 0x710 JUMPI JUMPDEST POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6F3 JUMPI POP POP DUP6 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x6B8 JUMPI JUMPDEST POP PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6A4 JUMPI POP POP SWAP2 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x8 SLOAD DUP3 PUSH1 0x8 SSTORE DUP1 DUP4 LT PUSH2 0x63D JUMPI JUMPDEST POP SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x5F0 JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x588 JUMPI JUMPDEST POP POP POP POP PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP5 JUMPDEST DUP3 MLOAD DUP7 LT ISZERO PUSH2 0x495 JUMPI PUSH2 0x43F DUP7 DUP5 PUSH2 0xA41 JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x47F JUMPI SWAP5 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x45F DUP3 DUP8 PUSH2 0xA41 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP5 PUSH2 0x42C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2710 DUP6 SWAP2 SUB PUSH2 0x54F JUMPI PUSH1 0xFF DUP1 NOT PUSH1 0xC SLOAD AND SWAP2 AND OR PUSH1 0xC SSTORE PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH2 0x41B3 SWAP1 DUP2 PUSH2 0xA6C DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x27D ADD MSTORE DUP2 DUP2 PUSH2 0x2E7 ADD MSTORE DUP2 DUP2 PUSH2 0x430 ADD MSTORE DUP2 DUP2 PUSH2 0x4A0 ADD MSTORE DUP2 DUP2 PUSH2 0xC5C ADD MSTORE DUP2 DUP2 PUSH2 0xCC6 ADD MSTORE DUP2 DUP2 PUSH2 0xD65 ADD MSTORE DUP2 DUP2 PUSH2 0xDED ADD MSTORE DUP2 DUP2 PUSH2 0xF6A ADD MSTORE DUP2 DUP2 PUSH2 0x17F9 ADD MSTORE DUP2 DUP2 PUSH2 0x3BBB ADD MSTORE DUP2 DUP2 PUSH2 0x3C3A ADD MSTORE DUP2 DUP2 PUSH2 0x3CD4 ADD MSTORE DUP2 DUP2 PUSH2 0x3D48 ADD MSTORE PUSH2 0x3E8C ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x848 ADD MSTORE DUP2 DUP2 PUSH2 0x966 ADD MSTORE DUP2 DUP2 PUSH2 0x1C41 ADD MSTORE DUP2 DUP2 PUSH2 0x21EB ADD MSTORE PUSH2 0x2449 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420726174696F2073756D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5A4 JUMPI POP POP POP ADD SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x421 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 DUP6 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5D0 PUSH1 0x20 SWAP2 DUP5 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x58F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x609 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x40C JUMP JUMPDEST SWAP6 SWAP1 DUP2 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x634 PUSH1 0x20 SWAP2 DUP10 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP3 ADD SWAP7 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x66B SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP2 DUP8 AND DUP1 PUSH2 0x671 JUMPI JUMPDEST POP ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x0 NOT DUP6 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x65F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE PUSH2 0x6ED SWAP1 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x3AE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 ADD SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 MSTORE PUSH2 0x745 SWAP1 PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x364 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x782 JUMPI JUMPDEST DUP2 PUSH2 0x766 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9DC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x77D JUMPI PUSH2 0x777 SWAP1 PUSH2 0x9FF JUMP JUMPDEST CODESIZE PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x759 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D69736D61746368656420617272617973 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x83D JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x824 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x28D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x816 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH2 0x89F SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x8A5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x260 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x24C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x92A JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x911 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x229 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x903 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH2 0x98B SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x8A5 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x1FC JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x77D JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x17B JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x118 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x9D1 DUP5 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x68E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x77D JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x68E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xA35 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA2A JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x113E08 EQ PUSH2 0x3189 JUMPI DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x1C04 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x30CC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3024 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3006 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2F05 JUMPI DUP1 PUSH4 0x2494452D EQ PUSH2 0x2718 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2610 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25F4 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x23E4 JUMPI DUP1 PUSH4 0x4EADCCA8 EQ PUSH2 0x2363 JUMPI DUP1 PUSH4 0x531BCDB3 EQ PUSH2 0x2345 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x217F JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0x1EFF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EC8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E60 JUMPI DUP1 PUSH4 0x8769B449 EQ PUSH2 0x1C2B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C04 JUMPI DUP1 PUSH4 0x8E4E9018 EQ PUSH2 0x1BE6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AD9 JUMPI DUP1 PUSH4 0xA216AA06 EQ PUSH2 0x1797 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1765 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x16CF JUMPI DUP1 PUSH4 0xAB83F98A EQ PUSH2 0x163F JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x1505 JUMPI DUP1 PUSH4 0xB317650B EQ PUSH2 0x86C JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x828 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x637 JUMPI PUSH4 0xF9C4D3DB EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x18A PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x198 DUP2 ISZERO ISZERO PUSH2 0x3405 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1BB PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH2 0x1CA DUP5 ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 SWAP3 PUSH1 0x60 SWAP2 SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 DUP8 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x626 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x207 DUP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x22A DUP11 PUSH2 0x225 DUP11 PUSH2 0x220 DUP6 PUSH2 0x37BC JUMP JUMPDEST PUSH2 0x349B JUMP JUMPDEST PUSH2 0x34C4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x238 DUP10 DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP11 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x5E7 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2C0 DUP5 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x599 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x32A DUP5 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP3 DUP8 EQ DUP1 DUP1 PUSH2 0x592 JUMPI JUMPDEST ISZERO PUSH2 0x364 JUMPI POP POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x35C SWAP5 CALLER GAS CALL PUSH2 0x356 PUSH2 0x34FC JUMP JUMPDEST POP PUSH2 0x352C JUMP JUMPDEST ADD DUP9 SWAP1 PUSH2 0x1EC JUMP JUMPDEST SWAP3 SWAP4 SWAP3 ISZERO PUSH2 0x3E5 JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3AC JUMPI JUMPDEST POP PUSH2 0x35C JUMP JUMPDEST PUSH2 0x3CC SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI JUMPDEST PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x34E4 JUMP JUMPDEST POP CODESIZE PUSH2 0x3A6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP5 POP SWAP3 SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x495 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x481 JUMPI SWAP2 DUP12 SWAP2 PUSH2 0x424 SWAP5 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE CALLER SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x3AB4 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x1 SWAP3 PUSH2 0x466 JUMPI POP PUSH2 0x35C JUMP JUMPDEST PUSH2 0x3CC SWAP1 RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0x24 DUP13 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH1 0x20 DUP14 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 PUSH2 0x4FA DUP9 DUP11 PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x587 JUMPI PUSH2 0x56B JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0x557 JUMPI SWAP2 PUSH2 0x53F SWAP5 SWAP4 SWAP2 DUP14 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x1 SWAP3 PUSH2 0x466 JUMPI POP PUSH2 0x35C JUMP JUMPDEST PUSH1 0x24 DUP14 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x582 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x5CE JUMPI JUMPDEST DUP2 PUSH2 0x5B3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x5C4 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x317 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0x319 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x618 JUMPI JUMPDEST DUP2 PUSH2 0x601 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x612 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x2AD JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5F4 JUMP JUMPDEST DUP3 PUSH2 0x2AF JUMP JUMPDEST POP PUSH2 0x631 DUP7 CALLER PUSH2 0x394D JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x659 PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x661 PUSH2 0x39CE JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x6FE PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x724 PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7CD JUMPI PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 SWAP3 PUSH2 0x7AA SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x7C8 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH2 0x7FC PUSH2 0x3290 JUMP JUMPDEST SWAP3 DUP3 PUSH2 0x806 PUSH2 0x32A6 JUMP JUMPDEST SWAP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1501 JUMPI PUSH1 0x40 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1501 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x14ED JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x121E JUMPI DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x121E JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x10C3 JUMPI DUP3 PUSH1 0x4 DUP3 ADD CALLDATALOAD SWAP2 PUSH2 0x8FD DUP4 PUSH2 0x3354 JUMP JUMPDEST SWAP3 PUSH2 0x90B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x331C JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x10C3 JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH32 0xF94F657C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x7CD JUMPI DUP5 SWAP1 PUSH2 0x14AD JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND CALLER SUB PUSH2 0x1469 JUMPI DUP2 MLOAD SWAP2 PUSH1 0x4 DUP4 LT ISZERO SWAP3 DUP4 PUSH2 0x1455 JUMPI PUSH1 0x8 SLOAD SWAP4 DUP6 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1449 JUMPI PUSH1 0x8 DUP9 MSTORE DUP3 PUSH1 0xFF DUP3 PUSH1 0x5 SHR PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SLOAD PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR AND SWAP1 PUSH2 0x1435 JUMPI PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1435 JUMPI DUP5 EQ PUSH2 0xA16 JUMPI PUSH1 0x1 ADD PUSH2 0x9BB JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 POP PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x13F1 JUMPI DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB3F JUMPI ISZERO PUSH2 0x1222 JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x1 EQ PUSH2 0xB53 JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x2 EQ PUSH2 0xAB1 JUMPI JUMPDEST PUSH2 0xA9A SWAP1 PUSH2 0xAAB PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x20 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 MLOAD PUSH2 0x32BC JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x324F JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP2 MLOAD SWAP1 DUP2 MLOAD DUP3 ADD SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0xB3B JUMPI PUSH2 0xACF PUSH1 0x20 DUP3 ADD PUSH2 0x35C2 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x5CA JUMPI PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB2A PUSH2 0xB31 SWAP4 PUSH1 0x20 PUSH2 0xAAB SWAP8 DUP2 PUSH2 0xA9A SWAP12 ADD SWAP3 ADD ADD PUSH2 0x370C JUMP JUMPDEST SWAP2 AND PUSH2 0x3AE6 JUMP JUMPDEST SWAP4 POP POP SWAP1 POP PUSH2 0xA5C JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 SWAP2 DUP3 MLOAD SWAP2 DUP3 MLOAD DUP4 ADD PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x121E JUMPI PUSH1 0x40 PUSH2 0xB9D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 DUP1 PUSH2 0xBA4 SWAP6 SWAP10 SWAP8 SWAP10 ADD SWAP2 DUP8 ADD ADD PUSH2 0x370C JUMP JUMPDEST SWAP4 ADD PUSH2 0x35C2 JUMP JUMPDEST AND DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0xBBD PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x60 SWAP5 PUSH1 0x40 SWAP3 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP4 EQ SWAP2 DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBF8 DUP3 DUP6 PUSH2 0x33F1 JUMP JUMPDEST MLOAD AND PUSH2 0xC03 DUP2 PUSH2 0x37BC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xC17 DUP13 DUP5 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP4 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP1 ISZERO PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEFC JUMPI DUP13 SWAP2 PUSH2 0xF0D JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC9F DUP7 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0xF07 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEFC JUMPI DUP13 SWAP2 PUSH2 0xEBF JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD09 DUP7 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP2 DUP10 SUB PUSH2 0xD22 JUMPI POP POP POP POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0xBDD JUMP JUMPDEST ISZERO PUSH2 0xDD6 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xDC2 JUMPI SWAP2 DUP10 SWAP2 PUSH2 0xD59 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x3AB4 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0xDB7 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xD9D JUMPI JUMPDEST POP PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xDB0 SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP16 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xE98 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xE84 JUMPI SWAP2 PUSH2 0xE6B SWAP4 SWAP2 DUP12 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xDB7 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xD9D JUMPI POP PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x24 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xEAF SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xEF4 JUMPI JUMPDEST DUP2 PUSH2 0xED9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEF0 JUMPI PUSH2 0xEEA SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0xCF6 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0xCF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xF3E JUMPI JUMPDEST DUP2 PUSH2 0xF27 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEF0 JUMPI PUSH2 0xF38 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0xC8C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF1A JUMP JUMPDEST DUP2 PUSH2 0xC8E JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 PUSH2 0xD1C JUMP JUMPDEST POP SWAP6 SWAP5 SWAP7 POP POP POP POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x11D9 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x11A4 JUMPI JUMPDEST POP PUSH2 0xFF1 JUMPI JUMPDEST POP POP PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x115C JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SWAP3 AND SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x1117 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x10D2 JUMPI JUMPDEST POP DUP2 EXTCODESIZE ISZERO PUSH2 0x10C3 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x10C7 JUMPI ISZERO PUSH2 0xFEA JUMPI DUP2 PUSH2 0x10B8 SWAP2 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x10C3 JUMPI DUP3 CODESIZE PUSH2 0xFEA JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1104 JUMPI JUMPDEST DUP2 PUSH2 0x10EE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10FF JUMPI DUP5 SWAP2 MLOAD CODESIZE PUSH2 0x107C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1154 JUMPI JUMPDEST DUP2 PUSH2 0x1132 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x114D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1046 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x119C JUMPI JUMPDEST DUP2 PUSH2 0x1177 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1194 PUSH1 0x4 SWAP4 PUSH2 0x35C2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1015 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x116A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11D1 JUMPI JUMPDEST DUP2 PUSH2 0x11C0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10FF JUMPI DUP5 SWAP2 MLOAD CODESIZE PUSH2 0xFE4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1216 JUMPI JUMPDEST DUP2 PUSH2 0x11F4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x120F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11E7 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x1237 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3692 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x7 SLOAD SUB PUSH2 0x13AD JUMPI DUP4 SWAP2 DUP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x126D JUMPI PUSH2 0x1265 PUSH1 0x1 SWAP2 PUSH2 0x125E DUP7 DUP7 PUSH2 0x33F1 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x3A6E JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x1245 JUMP JUMPDEST PUSH2 0x2710 SWAP2 SWAP5 SWAP4 POP SUB PUSH2 0x1369 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1355 JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x1355 JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x12F7 JUMPI JUMPDEST POP PUSH1 0x20 ADD PUSH1 0x6 DUP6 MSTORE DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x12C3 JUMPI POP POP POP PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SSTORE ADD PUSH2 0x12B4 JUMP JUMPDEST PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP3 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x134A JUMPI POP PUSH2 0x12AA JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x133D JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726174696F2073756D000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C656E677468000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E206E6F7420616C6C6F7765640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST POP SWAP3 SWAP4 SWAP5 POP POP POP PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920656467657220697320616C6C6F7765640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x14E5 JUMPI JUMPDEST DUP2 PUSH2 0x14C7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x121E JUMPI PUSH2 0x14E0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x35C2 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x151F PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x1527 PUSH2 0x39CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x15FB JUMPI PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x14ED JUMPI SWAP1 PUSH2 0x156E DUP3 PUSH1 0x1 PUSH2 0x158D SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x3388 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x15E7 JUMPI PUSH2 0x15B4 DUP2 PUSH1 0x1 PUSH2 0x15CE SWAP4 ADD PUSH1 0x6 SSTORE PUSH2 0x33B9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206578697374730000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x167B PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3577 JUMP JUMPDEST PUSH2 0x1686 DUP2 CALLVALUE EQ PUSH2 0x3647 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x7 DUP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x1746 JUMPI PUSH2 0x1742 DUP6 PUSH2 0x172E DUP2 DUP8 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x32DF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1717 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x178C PUSH2 0x1782 PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x17B7 DUP2 ISZERO ISZERO PUSH2 0x3405 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x17E3 PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x17F2 DUP3 ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1ACE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x183F DUP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x1858 DUP9 PUSH2 0x225 DUP9 PUSH2 0x220 DUP6 PUSH2 0x37BC JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1866 DUP8 DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x1AC8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x1A8F JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x18C5 DUP5 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x1A56 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x18FF DUP5 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP1 DUP1 PUSH2 0x1A4E JUMPI JUMPDEST ISZERO PUSH2 0x192F JUMPI POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x1927 SWAP5 CALLER GAS CALL PUSH2 0x356 PUSH2 0x34FC JUMP JUMPDEST ADD DUP7 SWAP1 PUSH2 0x1824 JUMP JUMPDEST SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0x1994 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1976 JUMPI JUMPDEST POP PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x198D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP5 POP SWAP1 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP15 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH2 0x1A32 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xDC2 JUMPI SWAP1 DUP10 SWAP2 PUSH2 0x1A05 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB DUP2 DUP4 DUP8 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1A1F JUMPI POP PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x198D SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x1A49 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x19D5 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x190A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1A87 JUMPI JUMPDEST DUP2 PUSH2 0x1A70 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x1A81 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x18ED JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A63 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1AC0 JUMPI JUMPDEST DUP2 PUSH2 0x1AA9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x1ABA SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x18B2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A9C JUMP JUMPDEST DUP3 PUSH2 0x18B4 JUMP JUMPDEST POP PUSH2 0x631 DUP5 CALLER PUSH2 0x394D JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x4 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1BDC JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x1BC8 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1BA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B44 JUMPI JUMPDEST PUSH2 0x1742 DUP5 PUSH2 0x1B30 DUP2 DUP7 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x324F JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1B87 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1B30 DUP3 PUSH2 0x1B20 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x1B30 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x1B03 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP1 CALLER SUB PUSH2 0x1E1C JUMPI PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1E08 JUMPI PUSH2 0x1DC4 JUMPI PUSH1 0xB SLOAD CALLVALUE LT PUSH2 0x1D80 JUMPI PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x78D1C86D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x10C7 JUMPI DUP3 SWAP1 PUSH2 0x1D40 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND DUP3 EXTCODESIZE ISZERO PUSH2 0x1501 JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH32 0x2302440800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1D33 JUMPI PUSH2 0x1D25 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x1D2E SWAP2 PUSH2 0x331C JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D78 JUMPI JUMPDEST DUP2 PUSH2 0x1D5A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1501 JUMPI PUSH2 0x1D73 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x35C2 JUMP JUMPDEST PUSH2 0x1CC2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420666F726B20636F737400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973616C6C6F77656400000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F727920697320616C6C6F776564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH2 0x1E79 PUSH2 0x39CE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1EEF PUSH2 0x3290 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1F21 PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x1F29 PUSH2 0x39CE JUMP JUMPDEST AND DUP1 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x213B JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x2109 JUMPI JUMPDEST POP PUSH2 0x20C5 JUMPI DUP2 JUMPDEST PUSH1 0x7 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x20BF JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1F8D DUP5 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1FA3 JUMPI POP PUSH1 0x1 ADD PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x2097 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1FC3 PUSH2 0x1FD4 SWAP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x156E DUP4 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x20AB JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1FEA DUP2 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x2097 JUMPI SWAP1 PUSH2 0x202C PUSH2 0x201F PUSH2 0x2045 SWAP4 PUSH2 0x33B9 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x33B9 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x2083 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x205B DUP2 PUSH2 0x33B9 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x6 SSTORE DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST POP POP POP DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D7A65726F2062616C616E636500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2133 JUMPI JUMPDEST DUP2 PUSH2 0x2124 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI MLOAD CODESIZE PUSH2 0x1F69 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2197 PUSH2 0x39CE JUMP JUMPDEST PUSH2 0x21A2 DUP2 CALLVALUE EQ PUSH2 0x3647 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x21CE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3577 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x2300 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL DUP1 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP1 PUSH2 0x22CC JUMPI JUMPDEST PUSH2 0x2283 SWAP2 POP PUSH2 0x227D PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x35D6 JUMP JUMPDEST CALLER PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x22F8 JUMPI JUMPDEST DUP2 PUSH2 0x22E6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH2 0x2283 SWAP1 MLOAD PUSH2 0x226A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x22D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x233D JUMPI JUMPDEST DUP2 PUSH2 0x231B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x2336 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x221B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x230E JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x6 DUP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x23CE JUMPI PUSH2 0x1742 DUP6 PUSH2 0x23C2 DUP2 DUP8 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3215 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x23AB JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x23FE PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x2409 PUSH2 0x39CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x242B PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3577 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2570 JUMPI DUP6 SWAP4 PUSH2 0x25AF JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE DUP8 PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2570 JUMPI DUP6 SWAP4 PUSH2 0x257B JUMPI JUMPDEST POP PUSH2 0x24C4 PUSH1 0x5 SLOAD DUP5 LT ISZERO PUSH2 0x35D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP10 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2570 JUMPI PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 SWAP4 PUSH2 0x7AA SWAP4 PUSH2 0x252F SWAP3 PUSH2 0x2553 JUMPI JUMPDEST POP CALLER PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x256B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x25A7 JUMPI JUMPDEST DUP2 PUSH2 0x2597 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB3B JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x24B5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x258A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x25EC JUMPI JUMPDEST DUP2 PUSH2 0x25CA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB3B JUMPI PUSH1 0x20 PUSH2 0x25E5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x35C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2479 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x25BD JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2630 DUP2 ISZERO ISZERO PUSH2 0x3405 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x263F DUP3 ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST DUP3 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x270D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x265D DUP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2676 DUP6 PUSH2 0x225 DUP7 PUSH2 0x220 DUP6 PUSH2 0x37BC JUMP JUMPDEST SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x26B0 JUMPI POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x26A8 SWAP5 CALLER GAS CALL PUSH2 0x356 PUSH2 0x34FC JUMP JUMPDEST ADD DUP4 SWAP1 PUSH2 0x2642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x2570 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x26EF JUMPI JUMPDEST POP PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x2706 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0x26E9 JUMP JUMPDEST POP PUSH2 0x631 DUP3 CALLER PUSH2 0x394D JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 DUP2 DUP4 PUSH1 0x8 DUP7 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 DUP7 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0x2C7C JUMPI PUSH2 0x287C SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x2C61 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2C43 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2C25 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2C07 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2BEA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2BCC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2BAE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B90 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B72 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B54 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B36 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B18 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2AFA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2ADC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2ABE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2AA0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A82 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A64 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A46 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A28 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A0A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29EC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29CE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29B0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2992 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2974 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2956 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2938 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x291A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28FC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28DE JUMPI JUMPDEST LT PUSH2 0x28C7 JUMPI JUMPDEST POP SWAP4 SWAP3 SWAP4 SUB DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x28A4 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 DUP1 DUP3 PUSH2 0x28B9 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x32BC JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x2896 JUMP JUMPDEST SWAP1 PUSH2 0x28D7 DUP2 PUSH1 0x20 SWAP4 PUSH1 0xF8 SHR PUSH2 0x32BC JUMP JUMPDEST ADD CODESIZE PUSH2 0x2871 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28F4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xF0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x286B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2912 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2863 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2930 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x285B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x294E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2853 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x296C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x284B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x298A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2843 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29A8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x283B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29C6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2833 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29E4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x282B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A02 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2823 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A20 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x281B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A3E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x98 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2813 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A5C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x90 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x280B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A7A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x88 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2803 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A98 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x80 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27FB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2AB6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x78 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27F3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2AD4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x70 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2AF2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x68 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27E3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B10 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x60 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27DB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B2E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x58 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27D3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B4C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x50 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27CB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B6A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x48 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27C3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B88 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27BB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BA6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x38 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BC4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x30 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27AB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BE2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x28 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27A3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BFF PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 DUP6 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x279B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C1D PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x18 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2793 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C3B PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x10 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x278B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C59 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2783 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C74 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x277B JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 PUSH2 0x2EF7 DUP8 SLOAD PUSH2 0x2C9A DUP4 PUSH1 0xFF DUP4 AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CAC DUP7 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CBF PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CD2 PUSH1 0x60 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x18 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CE4 PUSH1 0x80 DUP5 ADD PUSH1 0xFF DUP4 DUP10 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CF7 PUSH1 0xA0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x28 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D0A PUSH1 0xC0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x30 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D1D PUSH1 0xE0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x38 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D31 PUSH2 0x100 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D45 PUSH2 0x120 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x48 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D59 PUSH2 0x140 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x50 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D6D PUSH2 0x160 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x58 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D81 PUSH2 0x180 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x60 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D95 PUSH2 0x1A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x68 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DA9 PUSH2 0x1C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x70 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DBD PUSH2 0x1E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x78 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DD1 PUSH2 0x200 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DE5 PUSH2 0x220 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x88 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DF9 PUSH2 0x240 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x90 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E0D PUSH2 0x260 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x98 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E21 PUSH2 0x280 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E35 PUSH2 0x2A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E49 PUSH2 0x2C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E5D PUSH2 0x2E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E71 PUSH2 0x300 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E85 PUSH2 0x320 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E99 PUSH2 0x340 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2EAD PUSH2 0x360 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2EC1 PUSH2 0x380 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2ED5 PUSH2 0x3A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2EE9 PUSH2 0x3C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xF0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x3E0 DUP4 ADD SWAP1 PUSH1 0xF8 SHR PUSH2 0x32BC JUMP JUMPDEST ADD SWAP5 ADD SWAP3 ADD DUP5 SWAP3 SWAP4 SWAP2 PUSH2 0x2763 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x2F1F PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x2F27 PUSH2 0x32A6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 LT PUSH2 0x2F6C JUMPI JUMPDEST POP POP PUSH2 0x178C SWAP4 POP PUSH2 0x3856 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x2FD2 JUMPI DUP1 ISZERO PUSH2 0x2FBF JUMPI CALLER ISZERO PUSH2 0x2FAC JUMPI PUSH1 0x40 DUP7 DUP7 SWAP3 PUSH2 0x178C SWAP9 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x2F60 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 DUP7 DUP5 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x303E PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x30B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x30A6 JUMPI PUSH1 0x40 DUP3 SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x24 SWAP3 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x317F JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x1BC8 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1BA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3122 JUMPI PUSH2 0x1742 DUP5 PUSH2 0x1B30 DUP2 DUP7 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x3165 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1B30 DUP3 PUSH2 0x1B20 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x314C JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x30F6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x7 SLOAD PUSH2 0x31A6 DUP2 PUSH2 0x3370 JUMP JUMPDEST SWAP2 PUSH2 0x31B4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x331C JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x31C3 DUP4 PUSH2 0x3370 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY JUMPDEST DUP2 DUP2 LT PUSH2 0x31E0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x1742 DUP6 DUP3 PUSH2 0x3215 JUMP JUMPDEST DUP1 PUSH2 0x3204 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x31F7 PUSH1 0x1 SWAP5 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x37BC JUMP JUMPDEST PUSH2 0x320E DUP3 DUP7 PUSH2 0x33F1 JUMP JUMPDEST MSTORE ADD PUSH2 0x31CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3239 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x322C JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x327B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x325A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x32C9 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x32FD JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x32F0 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x333E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x333E JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x333E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x340C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3457 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x34AE JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x34CE JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x10FF JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x10FF JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3527 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x350D DUP3 PUSH2 0x3354 JUMP JUMPDEST SWAP2 PUSH2 0x351B PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x331C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3533 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x357E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420737570706F72746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST ISZERO PUSH2 0x35DD JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420616D6F756E7420696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7364000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x364E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x10FF JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x10FF JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x10FF JUMPI DUP2 MLOAD PUSH2 0x36C6 DUP2 PUSH2 0x3370 JUMP JUMPDEST SWAP3 PUSH2 0x36D4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x331C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x10FF JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x36FC JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x36EF JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x10FF JUMPI DUP2 MLOAD PUSH2 0x3723 DUP2 PUSH2 0x3370 JUMP JUMPDEST SWAP3 PUSH2 0x3731 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x331C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x10FF JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3759 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x3766 DUP5 PUSH2 0x35C2 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x374C JUMP JUMPDEST ISZERO PUSH2 0x3778 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x37E9 JUMPI POP POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x384A JUMPI DUP1 SWAP3 PUSH2 0x3819 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3842 JUMPI JUMPDEST DUP2 PUSH2 0x3835 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x634 JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3828 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x391E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x38EF JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x38D5 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x391E JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x39B5 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND CALLER SUB PUSH2 0x39E2 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x38EF JUMPI PUSH2 0x3A2C DUP2 PUSH1 0x2 SLOAD PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x34AE JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x3AA9 PUSH1 0x80 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP8 SWAP7 SWAP6 SWAP8 DUP5 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x32DF JUMP JUMPDEST SWAP6 AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3ADB PUSH1 0x60 SWAP4 SWAP7 SWAP6 SWAP5 SWAP7 PUSH1 0x0 DUP5 MSTORE PUSH1 0x80 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x32DF JUMP JUMPDEST SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x3B0D PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP1 ISZERO PUSH2 0x411B JUMPI SELFBALANCE JUMPDEST DUP1 ISZERO PUSH2 0x4112 JUMPI DUP7 MLOAD SWAP4 SWAP6 SWAP4 PUSH2 0x3B40 SWAP2 PUSH2 0x34C4 JUMP JUMPDEST PUSH1 0x60 SWAP7 SWAP1 SWAP4 PUSH1 0x40 SWAP2 DUP7 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3E78 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3B65 DUP3 DUP5 PUSH2 0x33F1 JUMP JUMPDEST MLOAD AND DUP1 DUP10 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x3B7F PUSH1 0xFF PUSH1 0x40 DUP12 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3B8D DUP13 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE DUP6 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY DUP7 ISZERO PUSH2 0x3E72 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEB4 JUMPI DUP12 SWAP2 PUSH2 0x3E39 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3BFE DUP5 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x3E33 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEB4 JUMPI DUP12 SWAP2 PUSH2 0x3DF6 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3C7D DUP5 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 SUB PUSH2 0x3C92 JUMPI POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0x3B4A JUMP JUMPDEST DUP6 ISZERO PUSH2 0x3D31 JUMPI PUSH1 0x1 TIMESTAMP ADD SWAP1 DUP2 TIMESTAMP GT PUSH2 0xDC2 JUMPI PUSH2 0x3CC7 SWAP2 DUP11 SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x3AB4 JUMP JUMPDEST SUB DUP2 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0x3D26 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x3D0C JUMPI JUMPDEST POP PUSH2 0x3C8C JUMP JUMPDEST PUSH2 0x3D1F SWAP1 RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0x3D06 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP11 SWAP1 MSTORE SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP15 DUP14 GAS CALL DUP1 ISZERO PUSH2 0xEB4 JUMPI PUSH2 0x3DDA JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xE84 JUMPI SWAP2 DUP11 SWAP2 DUP11 DUP4 PUSH2 0x3DC1 SWAP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3D26 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x3D0C JUMPI POP PUSH2 0x3C8C JUMP JUMPDEST PUSH2 0x3DF1 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x3D8C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x3E2B JUMPI JUMPDEST DUP2 PUSH2 0x3E10 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3E27 JUMPI PUSH2 0x3E21 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x3C6A JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3E03 JUMP JUMPDEST DUP1 PUSH2 0x3C6C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x3E6A JUMPI JUMPDEST DUP2 PUSH2 0x3E53 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3E27 JUMPI PUSH2 0x3E64 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x3BEB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3E46 JUMP JUMPDEST DUP5 PUSH2 0x3BED JUMP JUMPDEST POP POP POP POP POP POP POP SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x40CD JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x409B JUMPI JUMPDEST POP PUSH2 0x3F0F JUMPI POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x4053 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SWAP3 AND SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x400E JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x3FDC JUMPI JUMPDEST POP DUP2 EXTCODESIZE ISZERO PUSH2 0x10C3 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x10C7 JUMPI PUSH2 0x3FCF JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x3FD9 SWAP2 PUSH2 0x331C JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4006 JUMPI JUMPDEST DUP2 PUSH2 0x3FF7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI MLOAD CODESIZE PUSH2 0x3F9A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3FEA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x404B JUMPI JUMPDEST DUP2 PUSH2 0x4029 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x4044 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F64 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x401C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4093 JUMPI JUMPDEST DUP2 PUSH2 0x406E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x408B PUSH1 0x4 SWAP4 PUSH2 0x35C2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3F33 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4061 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x40C5 JUMPI JUMPDEST DUP2 PUSH2 0x40B6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI MLOAD CODESIZE PUSH2 0x3F06 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x410A JUMPI JUMPDEST DUP2 PUSH2 0x40E8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x4103 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3ED0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40DB JUMP JUMPDEST POP POP POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2570 JUMPI DUP6 SWAP2 PUSH2 0x414B JUMPI JUMPDEST POP PUSH2 0x3B2C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4175 JUMPI JUMPDEST DUP2 PUSH2 0x4166 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB3B JUMPI MLOAD CODESIZE PUSH2 0x4145 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4159 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER NUMBER JUMPDEST GT NOT 0xB5 0xFC 0x1E RETURNDATACOPY 0xE4 0xAC CALLDATALOAD EXTCODESIZE RETURNDATASIZE MCOPY 0xB3 SWAP5 DUP11 MUL 0xF6 0x2D GT 0xDE 0x26 0xEE NUMBER DUP13 SWAP11 DUP13 0xBA 0x2E 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xAF SWAP4 PUSH13 0xABAD77930E782579FA6B73FADB 0xF ADDRESS PUSH3 0xE90D0A 0xEA SWAP10 EXTCODESIZE 0xBE 0x4D 0xF7 DUP14 0xEA PUSH16 0x64736F6C634300081C00330000000000 ",
              "sourceMap": "205:2297:10:-:0;;;;;;;;;;;;;-1:-1:-1;;205:2297:10;;;;-1:-1:-1;;;;;205:2297:10;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;205:2297:10;;-1:-1:-1;;;;;205:2297:10;;;-1:-1:-1;;;;;;205:2297:10;;;;;;;-1:-1:-1;205:2297:10;;;;;;;;;;;;;;;580:25;205:2297;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;205:2297:10;;;;;;-1:-1:-1;205:2297:10;;;;;-1:-1:-1;205:2297:10;;;;-1:-1:-1;;;;;205:2297:10;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_encode_array_address_dyn": {
                  "entryPoint": 2310,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_enum_ActionCall_dyn": {
                  "entryPoint": 2423,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 2371,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_enum_Visibility": {
                  "entryPoint": 2275,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "array_allocation_size_array_address_dyn": {
                  "entryPoint": 2251,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2195,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x64F079E1 EQ PUSH2 0x3EA JUMPI POP DUP1 PUSH4 0x78D1C86D EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x8403EF08 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x8B5350CC EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF5C8BA93 EQ PUSH2 0x94 JUMPI PUSH4 0xF94F657C EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0x3E646E062F05E01E1860EA53A6DC81E7E9162DE6 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x91 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x91 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x91 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x120 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x12E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x390 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x3A4 JUMPI POP POP POP PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x91 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x91 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x182 DUP4 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x190 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x390 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x394 JUMPI POP POP POP PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x91 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x91 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x91 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1F7 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP5 PUSH2 0x205 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x893 JUMP JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x24 PUSH1 0x20 DUP8 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x390 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x373 JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x4C1F DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x35F JUMPI DUP3 SWAP2 PUSH2 0x2AC SWAP2 PUSH2 0x9BA DUP5 CODECOPY ADDRESS DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x26A PUSH1 0x40 DUP3 ADD DUP11 PUSH2 0x8E3 JUMP JUMPDEST DUP6 PUSH1 0x60 DUP3 ADD MSTORE DUP7 PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x29D PUSH2 0x28F PUSH2 0x100 DUP4 ADD DUP14 PUSH2 0x906 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE DUP12 PUSH2 0x943 JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP2 DUP4 SUB SWAP2 ADD MSTORE DUP8 PUSH2 0x977 JUMP JUMPDEST SUB SWAP1 DUP3 CREATE SWAP1 DUP2 ISZERO PUSH2 0x353 JUMPI POP SWAP4 PUSH2 0x318 SWAP4 PUSH1 0x20 SWAP8 SWAP4 PUSH2 0x348 SWAP4 PUSH2 0x331 PUSH2 0x326 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x7C752B9113B23F79161CC728CA055E06564FD3019BFC3663D04AD659CC708264 SWAP11 AND SWAP11 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP14 DUP12 MSTORE CALLER DUP16 DUP13 ADD MSTORE PUSH2 0x100 PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0x100 DUP12 ADD SWAP1 PUSH2 0x906 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x943 JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP9 ADD SWAP1 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x977 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x38C JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x222 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1AD JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x38C JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x14B JUMP JUMPDEST POP CALLVALUE PUSH2 0x91 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x91 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x88F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 SWAP3 SUB PUSH2 0x633 JUMPI PUSH32 0x8E4E901800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x884 JUMPI DUP4 SWAP2 PUSH2 0x852 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH32 0xAA6CA80800000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP4 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x628 JUMPI DUP5 SWAP3 PUSH2 0x7AE JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x4EADCCA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP5 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI DUP6 SWAP2 PUSH2 0x70E JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH32 0x2494452D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP3 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x703 JUMPI DUP7 SWAP3 PUSH2 0x656 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP4 PUSH2 0x4C1F SWAP4 DUP5 DUP7 ADD SWAP5 DUP7 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0x642 JUMPI SWAP3 PUSH2 0x563 PUSH2 0x57F SWAP6 SWAP4 PUSH2 0x571 SWAP4 DUP10 SWAP9 SWAP7 PUSH2 0x9BA DUP11 CODECOPY ADDRESS DUP8 MSTORE CALLER PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE DUP11 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x906 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x943 JUMP JUMPDEST SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x977 JUMP JUMPDEST SUB SWAP1 DUP4 CREATE DUP1 ISZERO PUSH2 0x637 JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8769B44900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 CALLVALUE DUP8 GAS CALL DUP1 ISZERO PUSH2 0x628 JUMPI SWAP2 PUSH1 0x20 SWAP5 PUSH1 0x60 SWAP3 PUSH32 0xD41CBC93F20EFDC0E7C08E245F3F4B52A335EFA799019F8E94B49BFF570B28B4 SWAP5 PUSH2 0x618 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 DUP6 DUP4 MSTORE AND DUP6 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP2 PUSH2 0x622 SWAP2 PUSH2 0x893 JUMP JUMPDEST CODESIZE PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x668 DUP2 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x6FB JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6FF JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x6FB JUMPI DUP2 MLOAD SWAP1 PUSH2 0x6A0 DUP3 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x6AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x6F7 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x6DA JUMPI POP POP POP SWAP1 CODESIZE PUSH2 0x500 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x6C9 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x71F DUP2 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x79F JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6FB JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x79F JUMPI DUP2 MLOAD PUSH2 0x756 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x764 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x6FF JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x78F JUMPI POP POP POP CODESIZE PUSH2 0x4C2 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x77F JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x7C0 DUP2 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x38C JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x79F JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x38C JUMPI DUP2 MLOAD SWAP1 PUSH2 0x7F8 DUP3 PUSH2 0x8CB JUMP JUMPDEST SWAP3 PUSH2 0x806 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x893 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x6FB JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x832 JUMPI POP POP POP SWAP1 CODESIZE PUSH2 0x485 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6FF JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x821 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x87C JUMPI JUMPDEST DUP2 PUSH2 0x86D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x893 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x633 JUMPI MLOAD CODESIZE PUSH2 0x447 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8B5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8B5 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x8F0 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x924 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x917 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x961 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x954 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x996 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP4 MLOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x20 DUP2 PUSH1 0x1 SWAP4 DUP3 SWAP4 MSTORE ADD SWAP5 ADD SWAP3 ADD SWAP1 PUSH2 0x989 JUMP INVALID PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x77D JUMPI PUSH2 0x4C1F DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x9DC JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH2 0x100 DUP3 DUP3 SUB SLT PUSH2 0x77D JUMPI PUSH2 0x34 DUP3 PUSH2 0x9FF JUMP JUMPDEST SWAP1 PUSH2 0x41 PUSH1 0x20 DUP5 ADD PUSH2 0x9FF JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MLOAD SWAP3 PUSH1 0x2 DUP5 LT ISZERO PUSH2 0x77D JUMPI PUSH1 0x60 DUP6 ADD MLOAD SWAP3 PUSH1 0x80 DUP7 ADD MLOAD SWAP6 PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI DUP2 ADD SWAP5 DUP3 PUSH1 0x1F DUP8 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP6 MLOAD SWAP1 PUSH2 0x89 DUP3 PUSH2 0xA13 JUMP JUMPDEST SWAP7 PUSH2 0x97 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x9DC JUMP JUMPDEST DUP3 DUP9 MSTORE PUSH1 0x20 DUP9 ADD PUSH1 0x20 DUP2 SWAP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP7 DUP4 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9C4 JUMPI POP POP POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI DUP4 ADD SWAP6 DUP5 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP7 MLOAD SWAP4 PUSH2 0xEC DUP6 PUSH2 0xA13 JUMP JUMPDEST SWAP8 PUSH2 0xFA PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x9DC JUMP JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x20 DUP10 ADD PUSH1 0x20 DUP2 SWAP8 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP9 DUP4 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH1 0xE0 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x77D JUMPI ADD SWAP6 DUP6 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP7 MLOAD SWAP7 PUSH2 0x14F DUP9 PUSH2 0xA13 JUMP JUMPDEST SWAP7 PUSH2 0x15D PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x9DC JUMP JUMPDEST DUP9 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP2 PUSH1 0x20 DUP4 SWAP11 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x99B JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x193 PUSH1 0x40 DUP3 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x26282A37B5B2B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B6 PUSH1 0x40 DUP4 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE PUSH2 0x4C5 PUSH1 0xF4 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x991 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8AF JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x942 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x8DA JUMPI PUSH1 0x0 SWAP3 PUSH2 0x8CF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8C5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8AF JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x855 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7ED JUMPI PUSH1 0x0 SWAP3 PUSH2 0x7E2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP9 MLOAD DUP9 MLOAD SUB PUSH2 0x796 JUMPI POP PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0xF5C8BA93 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x74B JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x5 SSTORE DUP6 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x7 SLOAD DUP3 PUSH1 0x7 SSTORE DUP1 DUP4 LT PUSH2 0x710 JUMPI JUMPDEST POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6F3 JUMPI POP POP DUP6 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x6B8 JUMPI JUMPDEST POP PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6A4 JUMPI POP POP SWAP2 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x8 SLOAD DUP3 PUSH1 0x8 SSTORE DUP1 DUP4 LT PUSH2 0x63D JUMPI JUMPDEST POP SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x5F0 JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x588 JUMPI JUMPDEST POP POP POP POP PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP5 JUMPDEST DUP3 MLOAD DUP7 LT ISZERO PUSH2 0x495 JUMPI PUSH2 0x43F DUP7 DUP5 PUSH2 0xA41 JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x47F JUMPI SWAP5 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x45F DUP3 DUP8 PUSH2 0xA41 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP5 PUSH2 0x42C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2710 DUP6 SWAP2 SUB PUSH2 0x54F JUMPI PUSH1 0xFF DUP1 NOT PUSH1 0xC SLOAD AND SWAP2 AND OR PUSH1 0xC SSTORE PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH2 0x41B3 SWAP1 DUP2 PUSH2 0xA6C DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x27D ADD MSTORE DUP2 DUP2 PUSH2 0x2E7 ADD MSTORE DUP2 DUP2 PUSH2 0x430 ADD MSTORE DUP2 DUP2 PUSH2 0x4A0 ADD MSTORE DUP2 DUP2 PUSH2 0xC5C ADD MSTORE DUP2 DUP2 PUSH2 0xCC6 ADD MSTORE DUP2 DUP2 PUSH2 0xD65 ADD MSTORE DUP2 DUP2 PUSH2 0xDED ADD MSTORE DUP2 DUP2 PUSH2 0xF6A ADD MSTORE DUP2 DUP2 PUSH2 0x17F9 ADD MSTORE DUP2 DUP2 PUSH2 0x3BBB ADD MSTORE DUP2 DUP2 PUSH2 0x3C3A ADD MSTORE DUP2 DUP2 PUSH2 0x3CD4 ADD MSTORE DUP2 DUP2 PUSH2 0x3D48 ADD MSTORE PUSH2 0x3E8C ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x848 ADD MSTORE DUP2 DUP2 PUSH2 0x966 ADD MSTORE DUP2 DUP2 PUSH2 0x1C41 ADD MSTORE DUP2 DUP2 PUSH2 0x21EB ADD MSTORE PUSH2 0x2449 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420726174696F2073756D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5A4 JUMPI POP POP POP ADD SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x421 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 DUP6 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5D0 PUSH1 0x20 SWAP2 DUP5 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x58F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x609 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x40C JUMP JUMPDEST SWAP6 SWAP1 DUP2 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x634 PUSH1 0x20 SWAP2 DUP10 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP3 ADD SWAP7 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x66B SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP2 DUP8 AND DUP1 PUSH2 0x671 JUMPI JUMPDEST POP ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x0 NOT DUP6 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x65F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE PUSH2 0x6ED SWAP1 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x3AE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 ADD SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 MSTORE PUSH2 0x745 SWAP1 PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x364 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x782 JUMPI JUMPDEST DUP2 PUSH2 0x766 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9DC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x77D JUMPI PUSH2 0x777 SWAP1 PUSH2 0x9FF JUMP JUMPDEST CODESIZE PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x759 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D69736D61746368656420617272617973 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x83D JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x824 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x28D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x816 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH2 0x89F SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x8A5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x260 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x24C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x92A JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x911 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x229 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x903 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH2 0x98B SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x8A5 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x1FC JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x77D JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x17B JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x118 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x9D1 DUP5 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x68E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x77D JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x68E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xA35 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA2A JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x113E08 EQ PUSH2 0x3189 JUMPI DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x1C04 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x30CC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3024 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3006 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2F05 JUMPI DUP1 PUSH4 0x2494452D EQ PUSH2 0x2718 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2610 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25F4 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x23E4 JUMPI DUP1 PUSH4 0x4EADCCA8 EQ PUSH2 0x2363 JUMPI DUP1 PUSH4 0x531BCDB3 EQ PUSH2 0x2345 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x217F JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0x1EFF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EC8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E60 JUMPI DUP1 PUSH4 0x8769B449 EQ PUSH2 0x1C2B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C04 JUMPI DUP1 PUSH4 0x8E4E9018 EQ PUSH2 0x1BE6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AD9 JUMPI DUP1 PUSH4 0xA216AA06 EQ PUSH2 0x1797 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1765 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x16CF JUMPI DUP1 PUSH4 0xAB83F98A EQ PUSH2 0x163F JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x1505 JUMPI DUP1 PUSH4 0xB317650B EQ PUSH2 0x86C JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x828 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x637 JUMPI PUSH4 0xF9C4D3DB EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x18A PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x198 DUP2 ISZERO ISZERO PUSH2 0x3405 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1BB PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH2 0x1CA DUP5 ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 SWAP3 PUSH1 0x60 SWAP2 SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 DUP8 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x626 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x207 DUP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x22A DUP11 PUSH2 0x225 DUP11 PUSH2 0x220 DUP6 PUSH2 0x37BC JUMP JUMPDEST PUSH2 0x349B JUMP JUMPDEST PUSH2 0x34C4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x238 DUP10 DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP11 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x5E7 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2C0 DUP5 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x599 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x32A DUP5 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP3 DUP8 EQ DUP1 DUP1 PUSH2 0x592 JUMPI JUMPDEST ISZERO PUSH2 0x364 JUMPI POP POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x35C SWAP5 CALLER GAS CALL PUSH2 0x356 PUSH2 0x34FC JUMP JUMPDEST POP PUSH2 0x352C JUMP JUMPDEST ADD DUP9 SWAP1 PUSH2 0x1EC JUMP JUMPDEST SWAP3 SWAP4 SWAP3 ISZERO PUSH2 0x3E5 JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3AC JUMPI JUMPDEST POP PUSH2 0x35C JUMP JUMPDEST PUSH2 0x3CC SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI JUMPDEST PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x34E4 JUMP JUMPDEST POP CODESIZE PUSH2 0x3A6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP5 POP SWAP3 SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x495 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x481 JUMPI SWAP2 DUP12 SWAP2 PUSH2 0x424 SWAP5 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE CALLER SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x3AB4 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x1 SWAP3 PUSH2 0x466 JUMPI POP PUSH2 0x35C JUMP JUMPDEST PUSH2 0x3CC SWAP1 RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0x24 DUP13 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH1 0x20 DUP14 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 PUSH2 0x4FA DUP9 DUP11 PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x587 JUMPI PUSH2 0x56B JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0x557 JUMPI SWAP2 PUSH2 0x53F SWAP5 SWAP4 SWAP2 DUP14 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x1 SWAP3 PUSH2 0x466 JUMPI POP PUSH2 0x35C JUMP JUMPDEST PUSH1 0x24 DUP14 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x582 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x5CE JUMPI JUMPDEST DUP2 PUSH2 0x5B3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x5C4 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x317 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0x319 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x618 JUMPI JUMPDEST DUP2 PUSH2 0x601 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x612 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x2AD JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5F4 JUMP JUMPDEST DUP3 PUSH2 0x2AF JUMP JUMPDEST POP PUSH2 0x631 DUP7 CALLER PUSH2 0x394D JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x659 PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x661 PUSH2 0x39CE JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x6FE PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x724 PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7CD JUMPI PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 SWAP3 PUSH2 0x7AA SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x7C8 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH2 0x7FC PUSH2 0x3290 JUMP JUMPDEST SWAP3 DUP3 PUSH2 0x806 PUSH2 0x32A6 JUMP JUMPDEST SWAP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1501 JUMPI PUSH1 0x40 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1501 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x14ED JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x121E JUMPI DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x121E JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x10C3 JUMPI DUP3 PUSH1 0x4 DUP3 ADD CALLDATALOAD SWAP2 PUSH2 0x8FD DUP4 PUSH2 0x3354 JUMP JUMPDEST SWAP3 PUSH2 0x90B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x331C JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x10C3 JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH32 0xF94F657C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x7CD JUMPI DUP5 SWAP1 PUSH2 0x14AD JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND CALLER SUB PUSH2 0x1469 JUMPI DUP2 MLOAD SWAP2 PUSH1 0x4 DUP4 LT ISZERO SWAP3 DUP4 PUSH2 0x1455 JUMPI PUSH1 0x8 SLOAD SWAP4 DUP6 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1449 JUMPI PUSH1 0x8 DUP9 MSTORE DUP3 PUSH1 0xFF DUP3 PUSH1 0x5 SHR PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SLOAD PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR AND SWAP1 PUSH2 0x1435 JUMPI PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1435 JUMPI DUP5 EQ PUSH2 0xA16 JUMPI PUSH1 0x1 ADD PUSH2 0x9BB JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 POP PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x13F1 JUMPI DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB3F JUMPI ISZERO PUSH2 0x1222 JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x1 EQ PUSH2 0xB53 JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x2 EQ PUSH2 0xAB1 JUMPI JUMPDEST PUSH2 0xA9A SWAP1 PUSH2 0xAAB PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x20 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 MLOAD PUSH2 0x32BC JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x324F JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP2 MLOAD SWAP1 DUP2 MLOAD DUP3 ADD SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0xB3B JUMPI PUSH2 0xACF PUSH1 0x20 DUP3 ADD PUSH2 0x35C2 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x5CA JUMPI PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB2A PUSH2 0xB31 SWAP4 PUSH1 0x20 PUSH2 0xAAB SWAP8 DUP2 PUSH2 0xA9A SWAP12 ADD SWAP3 ADD ADD PUSH2 0x370C JUMP JUMPDEST SWAP2 AND PUSH2 0x3AE6 JUMP JUMPDEST SWAP4 POP POP SWAP1 POP PUSH2 0xA5C JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 SWAP2 DUP3 MLOAD SWAP2 DUP3 MLOAD DUP4 ADD PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x121E JUMPI PUSH1 0x40 PUSH2 0xB9D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 DUP1 PUSH2 0xBA4 SWAP6 SWAP10 SWAP8 SWAP10 ADD SWAP2 DUP8 ADD ADD PUSH2 0x370C JUMP JUMPDEST SWAP4 ADD PUSH2 0x35C2 JUMP JUMPDEST AND DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0xBBD PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x60 SWAP5 PUSH1 0x40 SWAP3 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP4 EQ SWAP2 DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBF8 DUP3 DUP6 PUSH2 0x33F1 JUMP JUMPDEST MLOAD AND PUSH2 0xC03 DUP2 PUSH2 0x37BC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xC17 DUP13 DUP5 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP4 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP1 ISZERO PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEFC JUMPI DUP13 SWAP2 PUSH2 0xF0D JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC9F DUP7 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0xF07 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEFC JUMPI DUP13 SWAP2 PUSH2 0xEBF JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD09 DUP7 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP2 DUP10 SUB PUSH2 0xD22 JUMPI POP POP POP POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0xBDD JUMP JUMPDEST ISZERO PUSH2 0xDD6 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xDC2 JUMPI SWAP2 DUP10 SWAP2 PUSH2 0xD59 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x3AB4 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0xDB7 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xD9D JUMPI JUMPDEST POP PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xDB0 SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP16 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xE98 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xE84 JUMPI SWAP2 PUSH2 0xE6B SWAP4 SWAP2 DUP12 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xDB7 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xD9D JUMPI POP PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x24 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xEAF SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xEF4 JUMPI JUMPDEST DUP2 PUSH2 0xED9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEF0 JUMPI PUSH2 0xEEA SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0xCF6 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0xCF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xF3E JUMPI JUMPDEST DUP2 PUSH2 0xF27 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEF0 JUMPI PUSH2 0xF38 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0xC8C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF1A JUMP JUMPDEST DUP2 PUSH2 0xC8E JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 PUSH2 0xD1C JUMP JUMPDEST POP SWAP6 SWAP5 SWAP7 POP POP POP POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x11D9 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x11A4 JUMPI JUMPDEST POP PUSH2 0xFF1 JUMPI JUMPDEST POP POP PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x115C JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SWAP3 AND SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x1117 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x10D2 JUMPI JUMPDEST POP DUP2 EXTCODESIZE ISZERO PUSH2 0x10C3 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x10C7 JUMPI ISZERO PUSH2 0xFEA JUMPI DUP2 PUSH2 0x10B8 SWAP2 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x10C3 JUMPI DUP3 CODESIZE PUSH2 0xFEA JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1104 JUMPI JUMPDEST DUP2 PUSH2 0x10EE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10FF JUMPI DUP5 SWAP2 MLOAD CODESIZE PUSH2 0x107C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1154 JUMPI JUMPDEST DUP2 PUSH2 0x1132 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x114D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1046 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x119C JUMPI JUMPDEST DUP2 PUSH2 0x1177 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1194 PUSH1 0x4 SWAP4 PUSH2 0x35C2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1015 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x116A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11D1 JUMPI JUMPDEST DUP2 PUSH2 0x11C0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10FF JUMPI DUP5 SWAP2 MLOAD CODESIZE PUSH2 0xFE4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1216 JUMPI JUMPDEST DUP2 PUSH2 0x11F4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x120F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11E7 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x1237 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3692 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x7 SLOAD SUB PUSH2 0x13AD JUMPI DUP4 SWAP2 DUP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x126D JUMPI PUSH2 0x1265 PUSH1 0x1 SWAP2 PUSH2 0x125E DUP7 DUP7 PUSH2 0x33F1 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x3A6E JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x1245 JUMP JUMPDEST PUSH2 0x2710 SWAP2 SWAP5 SWAP4 POP SUB PUSH2 0x1369 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1355 JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x1355 JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x12F7 JUMPI JUMPDEST POP PUSH1 0x20 ADD PUSH1 0x6 DUP6 MSTORE DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x12C3 JUMPI POP POP POP PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SSTORE ADD PUSH2 0x12B4 JUMP JUMPDEST PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP3 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x134A JUMPI POP PUSH2 0x12AA JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x133D JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726174696F2073756D000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C656E677468000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E206E6F7420616C6C6F7765640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST POP SWAP3 SWAP4 SWAP5 POP POP POP PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920656467657220697320616C6C6F7765640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x14E5 JUMPI JUMPDEST DUP2 PUSH2 0x14C7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x121E JUMPI PUSH2 0x14E0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x35C2 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x151F PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x1527 PUSH2 0x39CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x15FB JUMPI PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x14ED JUMPI SWAP1 PUSH2 0x156E DUP3 PUSH1 0x1 PUSH2 0x158D SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x3388 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x15E7 JUMPI PUSH2 0x15B4 DUP2 PUSH1 0x1 PUSH2 0x15CE SWAP4 ADD PUSH1 0x6 SSTORE PUSH2 0x33B9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206578697374730000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x167B PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3577 JUMP JUMPDEST PUSH2 0x1686 DUP2 CALLVALUE EQ PUSH2 0x3647 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x7 DUP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x1746 JUMPI PUSH2 0x1742 DUP6 PUSH2 0x172E DUP2 DUP8 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x32DF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1717 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x178C PUSH2 0x1782 PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x17B7 DUP2 ISZERO ISZERO PUSH2 0x3405 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x17E3 PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x17F2 DUP3 ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1ACE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x183F DUP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x1858 DUP9 PUSH2 0x225 DUP9 PUSH2 0x220 DUP6 PUSH2 0x37BC JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1866 DUP8 DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x1AC8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x1A8F JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x18C5 DUP5 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x1A56 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x18FF DUP5 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP1 DUP1 PUSH2 0x1A4E JUMPI JUMPDEST ISZERO PUSH2 0x192F JUMPI POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x1927 SWAP5 CALLER GAS CALL PUSH2 0x356 PUSH2 0x34FC JUMP JUMPDEST ADD DUP7 SWAP1 PUSH2 0x1824 JUMP JUMPDEST SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0x1994 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1976 JUMPI JUMPDEST POP PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x198D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP5 POP SWAP1 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP15 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH2 0x1A32 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xDC2 JUMPI SWAP1 DUP10 SWAP2 PUSH2 0x1A05 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB DUP2 DUP4 DUP8 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1A1F JUMPI POP PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x198D SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x1A49 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x19D5 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x190A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1A87 JUMPI JUMPDEST DUP2 PUSH2 0x1A70 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x1A81 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x18ED JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A63 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1AC0 JUMPI JUMPDEST DUP2 PUSH2 0x1AA9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x1ABA SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x18B2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A9C JUMP JUMPDEST DUP3 PUSH2 0x18B4 JUMP JUMPDEST POP PUSH2 0x631 DUP5 CALLER PUSH2 0x394D JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x4 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1BDC JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x1BC8 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1BA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B44 JUMPI JUMPDEST PUSH2 0x1742 DUP5 PUSH2 0x1B30 DUP2 DUP7 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x324F JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1B87 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1B30 DUP3 PUSH2 0x1B20 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x1B30 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x1B03 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP1 CALLER SUB PUSH2 0x1E1C JUMPI PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1E08 JUMPI PUSH2 0x1DC4 JUMPI PUSH1 0xB SLOAD CALLVALUE LT PUSH2 0x1D80 JUMPI PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x78D1C86D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x10C7 JUMPI DUP3 SWAP1 PUSH2 0x1D40 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND DUP3 EXTCODESIZE ISZERO PUSH2 0x1501 JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH32 0x2302440800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1D33 JUMPI PUSH2 0x1D25 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x1D2E SWAP2 PUSH2 0x331C JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D78 JUMPI JUMPDEST DUP2 PUSH2 0x1D5A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1501 JUMPI PUSH2 0x1D73 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x35C2 JUMP JUMPDEST PUSH2 0x1CC2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420666F726B20636F737400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973616C6C6F77656400000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F727920697320616C6C6F776564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH2 0x1E79 PUSH2 0x39CE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1EEF PUSH2 0x3290 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1F21 PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x1F29 PUSH2 0x39CE JUMP JUMPDEST AND DUP1 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x213B JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x2109 JUMPI JUMPDEST POP PUSH2 0x20C5 JUMPI DUP2 JUMPDEST PUSH1 0x7 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x20BF JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1F8D DUP5 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1FA3 JUMPI POP PUSH1 0x1 ADD PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x2097 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1FC3 PUSH2 0x1FD4 SWAP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x156E DUP4 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x20AB JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1FEA DUP2 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x2097 JUMPI SWAP1 PUSH2 0x202C PUSH2 0x201F PUSH2 0x2045 SWAP4 PUSH2 0x33B9 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x33B9 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x2083 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x205B DUP2 PUSH2 0x33B9 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x6 SSTORE DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST POP POP POP DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D7A65726F2062616C616E636500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2133 JUMPI JUMPDEST DUP2 PUSH2 0x2124 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI MLOAD CODESIZE PUSH2 0x1F69 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2197 PUSH2 0x39CE JUMP JUMPDEST PUSH2 0x21A2 DUP2 CALLVALUE EQ PUSH2 0x3647 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x21CE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3577 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x2300 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL DUP1 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP1 PUSH2 0x22CC JUMPI JUMPDEST PUSH2 0x2283 SWAP2 POP PUSH2 0x227D PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x35D6 JUMP JUMPDEST CALLER PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x22F8 JUMPI JUMPDEST DUP2 PUSH2 0x22E6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH2 0x2283 SWAP1 MLOAD PUSH2 0x226A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x22D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x233D JUMPI JUMPDEST DUP2 PUSH2 0x231B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x2336 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x221B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x230E JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x6 DUP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x23CE JUMPI PUSH2 0x1742 DUP6 PUSH2 0x23C2 DUP2 DUP8 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3215 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x23AB JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x23FE PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x2409 PUSH2 0x39CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x242B PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3577 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2570 JUMPI DUP6 SWAP4 PUSH2 0x25AF JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE DUP8 PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2570 JUMPI DUP6 SWAP4 PUSH2 0x257B JUMPI JUMPDEST POP PUSH2 0x24C4 PUSH1 0x5 SLOAD DUP5 LT ISZERO PUSH2 0x35D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP10 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2570 JUMPI PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 SWAP4 PUSH2 0x7AA SWAP4 PUSH2 0x252F SWAP3 PUSH2 0x2553 JUMPI JUMPDEST POP CALLER PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x256B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x25A7 JUMPI JUMPDEST DUP2 PUSH2 0x2597 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB3B JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x24B5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x258A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x25EC JUMPI JUMPDEST DUP2 PUSH2 0x25CA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB3B JUMPI PUSH1 0x20 PUSH2 0x25E5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x35C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2479 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x25BD JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2630 DUP2 ISZERO ISZERO PUSH2 0x3405 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x263F DUP3 ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST DUP3 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x270D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x265D DUP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2676 DUP6 PUSH2 0x225 DUP7 PUSH2 0x220 DUP6 PUSH2 0x37BC JUMP JUMPDEST SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x26B0 JUMPI POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x26A8 SWAP5 CALLER GAS CALL PUSH2 0x356 PUSH2 0x34FC JUMP JUMPDEST ADD DUP4 SWAP1 PUSH2 0x2642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x2570 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x26EF JUMPI JUMPDEST POP PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x2706 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0x26E9 JUMP JUMPDEST POP PUSH2 0x631 DUP3 CALLER PUSH2 0x394D JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 DUP2 DUP4 PUSH1 0x8 DUP7 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 DUP7 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0x2C7C JUMPI PUSH2 0x287C SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x2C61 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2C43 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2C25 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2C07 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2BEA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2BCC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2BAE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B90 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B72 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B54 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B36 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B18 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2AFA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2ADC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2ABE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2AA0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A82 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A64 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A46 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A28 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A0A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29EC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29CE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29B0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2992 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2974 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2956 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2938 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x291A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28FC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28DE JUMPI JUMPDEST LT PUSH2 0x28C7 JUMPI JUMPDEST POP SWAP4 SWAP3 SWAP4 SUB DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x28A4 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 DUP1 DUP3 PUSH2 0x28B9 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x32BC JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x2896 JUMP JUMPDEST SWAP1 PUSH2 0x28D7 DUP2 PUSH1 0x20 SWAP4 PUSH1 0xF8 SHR PUSH2 0x32BC JUMP JUMPDEST ADD CODESIZE PUSH2 0x2871 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28F4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xF0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x286B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2912 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2863 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2930 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x285B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x294E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2853 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x296C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x284B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x298A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2843 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29A8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x283B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29C6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2833 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29E4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x282B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A02 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2823 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A20 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x281B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A3E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x98 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2813 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A5C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x90 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x280B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A7A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x88 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2803 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A98 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x80 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27FB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2AB6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x78 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27F3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2AD4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x70 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2AF2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x68 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27E3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B10 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x60 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27DB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B2E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x58 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27D3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B4C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x50 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27CB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B6A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x48 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27C3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B88 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27BB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BA6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x38 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BC4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x30 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27AB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BE2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x28 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27A3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BFF PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 DUP6 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x279B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C1D PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x18 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2793 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C3B PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x10 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x278B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C59 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2783 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C74 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x277B JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 PUSH2 0x2EF7 DUP8 SLOAD PUSH2 0x2C9A DUP4 PUSH1 0xFF DUP4 AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CAC DUP7 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CBF PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CD2 PUSH1 0x60 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x18 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CE4 PUSH1 0x80 DUP5 ADD PUSH1 0xFF DUP4 DUP10 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CF7 PUSH1 0xA0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x28 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D0A PUSH1 0xC0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x30 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D1D PUSH1 0xE0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x38 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D31 PUSH2 0x100 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D45 PUSH2 0x120 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x48 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D59 PUSH2 0x140 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x50 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D6D PUSH2 0x160 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x58 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D81 PUSH2 0x180 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x60 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D95 PUSH2 0x1A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x68 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DA9 PUSH2 0x1C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x70 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DBD PUSH2 0x1E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x78 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DD1 PUSH2 0x200 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DE5 PUSH2 0x220 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x88 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DF9 PUSH2 0x240 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x90 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E0D PUSH2 0x260 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x98 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E21 PUSH2 0x280 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E35 PUSH2 0x2A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E49 PUSH2 0x2C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E5D PUSH2 0x2E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E71 PUSH2 0x300 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E85 PUSH2 0x320 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E99 PUSH2 0x340 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2EAD PUSH2 0x360 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2EC1 PUSH2 0x380 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2ED5 PUSH2 0x3A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2EE9 PUSH2 0x3C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xF0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x3E0 DUP4 ADD SWAP1 PUSH1 0xF8 SHR PUSH2 0x32BC JUMP JUMPDEST ADD SWAP5 ADD SWAP3 ADD DUP5 SWAP3 SWAP4 SWAP2 PUSH2 0x2763 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x2F1F PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x2F27 PUSH2 0x32A6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 LT PUSH2 0x2F6C JUMPI JUMPDEST POP POP PUSH2 0x178C SWAP4 POP PUSH2 0x3856 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x2FD2 JUMPI DUP1 ISZERO PUSH2 0x2FBF JUMPI CALLER ISZERO PUSH2 0x2FAC JUMPI PUSH1 0x40 DUP7 DUP7 SWAP3 PUSH2 0x178C SWAP9 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x2F60 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 DUP7 DUP5 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x303E PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x30B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x30A6 JUMPI PUSH1 0x40 DUP3 SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x24 SWAP3 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x317F JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x1BC8 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1BA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3122 JUMPI PUSH2 0x1742 DUP5 PUSH2 0x1B30 DUP2 DUP7 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x3165 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1B30 DUP3 PUSH2 0x1B20 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x314C JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x30F6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x7 SLOAD PUSH2 0x31A6 DUP2 PUSH2 0x3370 JUMP JUMPDEST SWAP2 PUSH2 0x31B4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x331C JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x31C3 DUP4 PUSH2 0x3370 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY JUMPDEST DUP2 DUP2 LT PUSH2 0x31E0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x1742 DUP6 DUP3 PUSH2 0x3215 JUMP JUMPDEST DUP1 PUSH2 0x3204 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x31F7 PUSH1 0x1 SWAP5 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x37BC JUMP JUMPDEST PUSH2 0x320E DUP3 DUP7 PUSH2 0x33F1 JUMP JUMPDEST MSTORE ADD PUSH2 0x31CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3239 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x322C JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x327B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x325A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x32C9 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x32FD JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x32F0 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x333E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x333E JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x333E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x340C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3457 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x34AE JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x34CE JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x10FF JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x10FF JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3527 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x350D DUP3 PUSH2 0x3354 JUMP JUMPDEST SWAP2 PUSH2 0x351B PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x331C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3533 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x357E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420737570706F72746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST ISZERO PUSH2 0x35DD JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420616D6F756E7420696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7364000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x364E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x10FF JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x10FF JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x10FF JUMPI DUP2 MLOAD PUSH2 0x36C6 DUP2 PUSH2 0x3370 JUMP JUMPDEST SWAP3 PUSH2 0x36D4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x331C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x10FF JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x36FC JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x36EF JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x10FF JUMPI DUP2 MLOAD PUSH2 0x3723 DUP2 PUSH2 0x3370 JUMP JUMPDEST SWAP3 PUSH2 0x3731 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x331C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x10FF JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3759 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x3766 DUP5 PUSH2 0x35C2 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x374C JUMP JUMPDEST ISZERO PUSH2 0x3778 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x37E9 JUMPI POP POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x384A JUMPI DUP1 SWAP3 PUSH2 0x3819 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3842 JUMPI JUMPDEST DUP2 PUSH2 0x3835 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x634 JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3828 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x391E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x38EF JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x38D5 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x391E JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x39B5 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND CALLER SUB PUSH2 0x39E2 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x38EF JUMPI PUSH2 0x3A2C DUP2 PUSH1 0x2 SLOAD PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x34AE JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x3AA9 PUSH1 0x80 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP8 SWAP7 SWAP6 SWAP8 DUP5 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x32DF JUMP JUMPDEST SWAP6 AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3ADB PUSH1 0x60 SWAP4 SWAP7 SWAP6 SWAP5 SWAP7 PUSH1 0x0 DUP5 MSTORE PUSH1 0x80 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x32DF JUMP JUMPDEST SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x3B0D PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP1 ISZERO PUSH2 0x411B JUMPI SELFBALANCE JUMPDEST DUP1 ISZERO PUSH2 0x4112 JUMPI DUP7 MLOAD SWAP4 SWAP6 SWAP4 PUSH2 0x3B40 SWAP2 PUSH2 0x34C4 JUMP JUMPDEST PUSH1 0x60 SWAP7 SWAP1 SWAP4 PUSH1 0x40 SWAP2 DUP7 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3E78 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3B65 DUP3 DUP5 PUSH2 0x33F1 JUMP JUMPDEST MLOAD AND DUP1 DUP10 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x3B7F PUSH1 0xFF PUSH1 0x40 DUP12 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3B8D DUP13 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE DUP6 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY DUP7 ISZERO PUSH2 0x3E72 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEB4 JUMPI DUP12 SWAP2 PUSH2 0x3E39 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3BFE DUP5 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x3E33 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEB4 JUMPI DUP12 SWAP2 PUSH2 0x3DF6 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3C7D DUP5 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 SUB PUSH2 0x3C92 JUMPI POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0x3B4A JUMP JUMPDEST DUP6 ISZERO PUSH2 0x3D31 JUMPI PUSH1 0x1 TIMESTAMP ADD SWAP1 DUP2 TIMESTAMP GT PUSH2 0xDC2 JUMPI PUSH2 0x3CC7 SWAP2 DUP11 SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x3AB4 JUMP JUMPDEST SUB DUP2 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0x3D26 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x3D0C JUMPI JUMPDEST POP PUSH2 0x3C8C JUMP JUMPDEST PUSH2 0x3D1F SWAP1 RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0x3D06 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP11 SWAP1 MSTORE SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP15 DUP14 GAS CALL DUP1 ISZERO PUSH2 0xEB4 JUMPI PUSH2 0x3DDA JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xE84 JUMPI SWAP2 DUP11 SWAP2 DUP11 DUP4 PUSH2 0x3DC1 SWAP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3D26 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x3D0C JUMPI POP PUSH2 0x3C8C JUMP JUMPDEST PUSH2 0x3DF1 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x3D8C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x3E2B JUMPI JUMPDEST DUP2 PUSH2 0x3E10 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3E27 JUMPI PUSH2 0x3E21 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x3C6A JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3E03 JUMP JUMPDEST DUP1 PUSH2 0x3C6C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x3E6A JUMPI JUMPDEST DUP2 PUSH2 0x3E53 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3E27 JUMPI PUSH2 0x3E64 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x3BEB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3E46 JUMP JUMPDEST DUP5 PUSH2 0x3BED JUMP JUMPDEST POP POP POP POP POP POP POP SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x40CD JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x409B JUMPI JUMPDEST POP PUSH2 0x3F0F JUMPI POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x4053 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SWAP3 AND SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x400E JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x3FDC JUMPI JUMPDEST POP DUP2 EXTCODESIZE ISZERO PUSH2 0x10C3 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x10C7 JUMPI PUSH2 0x3FCF JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x3FD9 SWAP2 PUSH2 0x331C JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4006 JUMPI JUMPDEST DUP2 PUSH2 0x3FF7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI MLOAD CODESIZE PUSH2 0x3F9A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3FEA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x404B JUMPI JUMPDEST DUP2 PUSH2 0x4029 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x4044 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F64 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x401C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4093 JUMPI JUMPDEST DUP2 PUSH2 0x406E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x408B PUSH1 0x4 SWAP4 PUSH2 0x35C2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3F33 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4061 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x40C5 JUMPI JUMPDEST DUP2 PUSH2 0x40B6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI MLOAD CODESIZE PUSH2 0x3F06 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x410A JUMPI JUMPDEST DUP2 PUSH2 0x40E8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x4103 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3ED0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40DB JUMP JUMPDEST POP POP POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2570 JUMPI DUP6 SWAP2 PUSH2 0x414B JUMPI JUMPDEST POP PUSH2 0x3B2C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4175 JUMPI JUMPDEST DUP2 PUSH2 0x4166 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB3B JUMPI MLOAD CODESIZE PUSH2 0x4145 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4159 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER NUMBER JUMPDEST GT NOT 0xB5 0xFC 0x1E RETURNDATACOPY 0xE4 0xAC CALLDATALOAD EXTCODESIZE RETURNDATASIZE MCOPY 0xB3 SWAP5 DUP11 MUL 0xF6 0x2D GT 0xDE 0x26 0xEE NUMBER DUP13 SWAP11 DUP13 0xBA 0x2E 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xAF SWAP4 PUSH13 0xABAD77930E782579FA6B73FADB 0xF ADDRESS PUSH3 0xE90D0A 0xEA SWAP10 EXTCODESIZE 0xBE 0x4D 0xF7 DUP14 0xEA PUSH16 0x64736F6C634300081C00330000000000 ",
              "sourceMap": "205:2297:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:42;205:2297;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2266:11:10;205:2297;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2385:9:10;205:2297;;;;;;;;;;;;;;;-1:-1:-1;;205:2297:10;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;930:227;;;;;;;;205:2297;930:227;;;;;;;205:2297;930:227;;;;965:4;205:2297;;985:10;205:2297;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;930:227;;;;;;;;;205:2297;;;;;;;;;;;-1:-1:-1;;;;;1175:234:10;205:2297;;;;;;;;;;;985:10;205:2297;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;1175:234;;;205:2297;;;;;;930:227;205:2297;;;;;;;;;;930:227;205:2297;;-1:-1:-1;;;205:2297:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;205:2297:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;205:2297:10;;;;;;;;;;;;-1:-1:-1;205:2297:10;;-1:-1:-1;;205:2297:10;;;;;;;-1:-1:-1;;;;;205:2297:10;;;;;;;;1730:23;;205:2297;1730:23;205:2297;1730:23;;;;;;;;;;;;;205:2297;;;;1796:16;205:2297;1796:16;;;;205:2297;1796:16;;;;;;;;;;;;;205:2297;;;;;1827:20;;;;205:2297;1827:20;;;;;;;;;;;;;205:2297;;;;1862:24;205:2297;1862:24;;;;205:2297;1862:24;;;;;;;;;;;;;205:2297;;;;1611:286;;;;;;;;;;;;;;;;;205:2297;;1611:286;;205:2297;1611:286;;;;;;;1646:4;205:2297;;1666:10;205:2297;;;;1691:24;205:2297;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;1611:286;;;;;;;;1910:31;;;;;205:2297;;;1910:31;;1929:9;;205:2297;1929:9;;1910:31;;;;;;;;205:2297;1910:31;205:2297;1910:31;1959:51;1910:31;;;205:2297;;;-1:-1:-1;;;;;205:2297:10;;;;;;;;;;;1666:10;205:2297;;;;1959:51;205:2297;;;;;;1910:31;;;;;:::i;:::-;;;;;205:2297;;;;;;;;;1910:31;205:2297;;;1611:286;205:2297;;;;;;;;;1611:286;205:2297;;-1:-1:-1;;;205:2297:10;;;;;;1862:24;;;;;;;;;;;;;:::i;:::-;;;205:2297;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1862:24;;;;;;;205:2297;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1862:24;205:2297;;;;;;;;;1827:20;;;;;;;;;;;;:::i;:::-;;;205:2297;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1827:20;;;;;;205:2297;;;;;;;;;;;;;;;;;1827:20;205:2297;;;;;;;;;1796:16;;;;;;;;;;;;;:::i;:::-;;;205:2297;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:16;;;;;;;205:2297;;;-1:-1:-1;;;;;205:2297:10;;;;;;;;;;;;;;;;1730:23;;;205:2297;1730:23;;205:2297;1730:23;;;;;;205:2297;1730:23;;;:::i;:::-;;;205:2297;;;;;1730:23;;;;;;-1:-1:-1;1730:23:10;;;205:2297;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;205:2297:10;;;;;-1:-1:-1;205:2297:10;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;;;;205:2297:10;;;;;-1:-1:-1;205:2297:10;;;;;;;;;;;;;;;-1:-1:-1;205:2297:10;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;205:2297:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;205:2297:10;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;205:2297:10;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "createStrategy(address[],uint256[],uint8,uint256,uint256,uint8[])": "8403ef08",
              "edger()": "f94f657c",
              "forkStrategy(address)": "64f079e1",
              "getPriceOracleAddress()": "8b5350cc",
              "getRevenueAddress()": "78d1c86d",
              "getSwapRouterAddress()": "f5c8ba93"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revenue_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dataFeed_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapRouter_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"splitRatio\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"enum Enums.Visibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositUsdMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"forkCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"allowedActions\",\"type\":\"uint8[]\"}],\"name\":\"StrategyCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fork\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"forker\",\"type\":\"address\"}],\"name\":\"StrategyForked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"splitRatio\",\"type\":\"uint256[]\"},{\"internalType\":\"enum Enums.Visibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositUsdMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forkCost\",\"type\":\"uint256\"},{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"allowedActions\",\"type\":\"uint8[]\"}],\"name\":\"createStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"edger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"forkStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevenueAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/Factory.sol\":{\"keccak256\":\"0xed7e00f7638a8e895780efdfc911319502ecc3e12b7b8773b23f2c6354309488\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e957331f15a7d61437eb05d7b78470d5638d6e82c98fe4a79877bee8fba1c9ed\",\"dweb:/ipfs/QmQ98UaUDh7xhV8RBd1HtGMSWZjfnMZ9XwLpNRMP3cFp6p\"]},\"contracts/Strategy.sol\":{\"keccak256\":\"0x43d05e351ea33b6ee91d8d28183f04bbe9292f11caa46ef8e689cfbe217e2066\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://470643593f556f57329fdd67190276152ca0cf5a839c4a8f9034221293468ca4\",\"dweb:/ipfs/QmWsEnSjXv9NKa7QoUCXD4WRTZ4LSPU6jP2wAwahmZXjis\"]},\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0xdafda8f5f34be55f0f031adbe18eb4d11a8a6ea1ad2bcd3e67d0e76d11d9530f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a1298e140a1bf2cdc2b0f53c663fd71f010718822a547298435bf49b072693ef\",\"dweb:/ipfs/QmXzbUAgNmRWTtUNT6toQbrsXTS7hQonfDFATSdYRv6JR2\"]},\"contracts/interfaces/IMultiTokenPool.sol\":{\"keccak256\":\"0x82c1289792365bf675770f06d43816e00207385a368e1f004ee662582bb604bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e25dbe134fb5e13f032a5c04342d49d8d6634b32204264c4b1292903eb27b178\",\"dweb:/ipfs/QmXL6WvX7zAiSo2zHeDKJSagSRo4FB3F7DhXsppLw7kdDh\"]},\"contracts/interfaces/IPoolAdmin.sol\":{\"keccak256\":\"0x5531e78ca38f798dac44609d77e3addf1b8720966eea28b28e4e7bae9685d438\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d3f47b4ceebb0590d8454a0b35f4a5b8e0fa914294b4cb7826a5f35177a08af\",\"dweb:/ipfs/QmfWapy95rDTSjvzQkoCavk2AtUamemZvykNds4givHjar\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4252f4cc64140561f61a4d6ab1f39c540dd70099aa0f056ca0162b8683a78c95\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c644be7ada43bdc0faf1103004ad7a4bebf58f5f780e887ec14d9032b13efa59\",\"dweb:/ipfs/Qmc5Sdo5xjJEMJts7YzzUUboML46S4WEKmuSZBT8ZdZceC\"]},\"contracts/interfaces/IRevenue.sol\":{\"keccak256\":\"0xd5a46b604bec7d07fc9e71f4f6353f6e7111ec6ec943b6f3919ac9f3b76cbc7d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f588ebd6d301d2899f1a8cbcf3431ab77ee903745dcb674e6b6362da489e440e\",\"dweb:/ipfs/QmUR57AhBxPf4v8Wjmcs1v5PTTnAFvvtuH1SjDhvixENqY\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x2d3f17b9672e01c840221eeec835270f2a422452a748895c253776dc087520d7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://765b3f5dd0af55dd95ca0d821de87a42ab5009506e5b65b70b03f1e9cf547417\",\"dweb:/ipfs/QmdcVQDuwrezpLrdp4WmveJLUMa9X2WF9MKUoxGo4EG2W9\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x3dc7a557d4025376ed268d521cd42ff61587d313e1affbcea22879f5bacbaa28\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7003ff5090bbcbe986ad6cfd42280a6cc5fd675c309cee9ad1fb87073de1f79a\",\"dweb:/ipfs/QmUuwyMVhVgGqA3ooirHCvPCb98h1YUeeac6Zmn4WtH5FA\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]},\"contracts/lib/Params.sol\":{\"keccak256\":\"0xff8d2345a9a54bea3d7b8b85b10db04c88cd1ed7f945b140fc0479337095a498\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67c5fa1f1789abac9073988c1f1348cb66919b8816117e8cff43699006257a6f\",\"dweb:/ipfs/QmRME4psBXS6botgfdXwSsVW13izZ6arp2JNgC4XfcudY3\"]},\"contracts/lib/Types.sol\":{\"keccak256\":\"0xb9f0c879aa34501ba63fa88aab0713e10884f0f7cf9075a3188138ebe072dc54\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://940f96d0d58e31c3d740a380aa27d1a7215d5ad4e25d595782a99596c19cdb46\",\"dweb:/ipfs/QmcK7CtZ6CRyDNKMdbkWgcmahoXhZE7539WnDe5o9HtkUj\"]},\"contracts/pool/MultiTokenPool.sol\":{\"keccak256\":\"0x7d4a72c34f446d83009e3a71c41f4bf2e6ccf60546e65a1cf361cf8599a078f9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d1ccfe94665510565630bb3bf74f5b3ac522cbabf28d2f83e1a2348d5581ce89\",\"dweb:/ipfs/QmTQLQuraM9PVZeAqgitjugrk85MunMbLQBGeg9ogdh96n\"]},\"contracts/pool/PoolActions.sol\":{\"keccak256\":\"0xbb9f6afc1845f9e1e291c56fe142dfdcdaed185ef9133d24eb77f99130a005aa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f0848c2b663c4ea025fec4db1c7588a980004b5efeefce914830abf561e1f9ae\",\"dweb:/ipfs/QmaLE5YxU3D5Bs2GNG3Y1FU7PSCr1TXYsLck9TVsD6xw1M\"]}},\"version\":1}"
        }
      },
      "contracts/Revenue.sol": {
        "Revenue": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Funded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawn",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "claimed",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "unClaimed",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Types.Revenue",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "fund",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601557610312908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816323024408146101d8575080632e1a7d4d146100bc576370a082311461004057600080fd5b346100b75760203660031901126100b75760043573ffffffffffffffffffffffffffffffffffffffff81168091036100b7576000602061007e6102a6565b828152015260005260006020526040806000206100996102a6565b60206001835493848452015491019081528251918252516020820152f35b600080fd5b346100b75760203660031901126100b757600435336000526000602052600160406000200154811161019457336000526000602052600160406000200180549082820391821161017e57553360005260006020526040600020610120828254610299565b90558060008115610175575b600080809381933390f115610169576040519081527f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d560203392a2005b6040513d6000823e3d90fd5b506108fc61012c565b634e487b7160e01b600052601160045260246000fd5b606460405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152fd5b60203660031901126100b7576004359073ffffffffffffffffffffffffffffffffffffffff82168092036100b757341561025757508060005260006020526001604060002001610229348254610299565b90557f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a5246020604051348152a2005b8062461bcd60e51b6064925260206004820152601360248201527f4d7573742073656e6420736f6d6520636f696e000000000000000000000000006044820152fd5b9190820180921161017e57565b604051906040820182811067ffffffffffffffff8211176102c657604052565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e3831bcc184e4dd9ce28569938914111396f95e3e50bc196d7202bdd8434717064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x312 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x23024408 EQ PUSH2 0x1D8 JUMPI POP DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xBC JUMPI PUSH4 0x70A08231 EQ PUSH2 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xB7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0xB7 JUMPI PUSH1 0x0 PUSH1 0x20 PUSH2 0x7E PUSH2 0x2A6 JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH2 0x99 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 DUP4 SLOAD SWAP4 DUP5 DUP5 MSTORE ADD SLOAD SWAP2 ADD SWAP1 DUP2 MSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xB7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB7 JUMPI PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 GT PUSH2 0x194 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD SWAP1 DUP3 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x17E JUMPI SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x120 DUP3 DUP3 SLOAD PUSH2 0x299 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH1 0x0 DUP2 ISZERO PUSH2 0x175 JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x169 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x12C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB7 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0xB7 JUMPI CALLVALUE ISZERO PUSH2 0x257 JUMPI POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x229 CALLVALUE DUP3 SLOAD PUSH2 0x299 JUMP JUMPDEST SWAP1 SSTORE PUSH32 0x5AF8184BEF8E4B45EB9F6ED7734D04DA38CED226495548F46E0C8FF8D7D9A524 PUSH1 0x20 PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE LOG2 STOP JUMPDEST DUP1 PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x64 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E6420736F6D6520636F696E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x17E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2C6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 DUP4 SHL 0xCC XOR 0x4E 0x4D 0xD9 0xCE 0x28 JUMP SWAP10 CODESIZE SWAP2 COINBASE GT CODECOPY PUSH16 0x95E3E50BC196D7202BDD843471706473 PUSH16 0x6C634300081C00330000000000000000 ",
              "sourceMap": "163:863:11:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "allocate_memory": {
                  "entryPoint": 678,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 665,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c90816323024408146101d8575080632e1a7d4d146100bc576370a082311461004057600080fd5b346100b75760203660031901126100b75760043573ffffffffffffffffffffffffffffffffffffffff81168091036100b7576000602061007e6102a6565b828152015260005260006020526040806000206100996102a6565b60206001835493848452015491019081528251918252516020820152f35b600080fd5b346100b75760203660031901126100b757600435336000526000602052600160406000200154811161019457336000526000602052600160406000200180549082820391821161017e57553360005260006020526040600020610120828254610299565b90558060008115610175575b600080809381933390f115610169576040519081527f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d560203392a2005b6040513d6000823e3d90fd5b506108fc61012c565b634e487b7160e01b600052601160045260246000fd5b606460405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152fd5b60203660031901126100b7576004359073ffffffffffffffffffffffffffffffffffffffff82168092036100b757341561025757508060005260006020526001604060002001610229348254610299565b90557f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a5246020604051348152a2005b8062461bcd60e51b6064925260206004820152601360248201527f4d7573742073656e6420736f6d6520636f696e000000000000000000000000006044820152fd5b9190820180921161017e57565b604051906040820182811067ffffffffffffffff8211176102c657604052565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e3831bcc184e4dd9ce28569938914111396f95e3e50bc196d7202bdd8434717064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x23024408 EQ PUSH2 0x1D8 JUMPI POP DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xBC JUMPI PUSH4 0x70A08231 EQ PUSH2 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xB7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0xB7 JUMPI PUSH1 0x0 PUSH1 0x20 PUSH2 0x7E PUSH2 0x2A6 JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH2 0x99 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 DUP4 SLOAD SWAP4 DUP5 DUP5 MSTORE ADD SLOAD SWAP2 ADD SWAP1 DUP2 MSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xB7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB7 JUMPI PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 GT PUSH2 0x194 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD SWAP1 DUP3 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x17E JUMPI SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x120 DUP3 DUP3 SLOAD PUSH2 0x299 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH1 0x0 DUP2 ISZERO PUSH2 0x175 JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x169 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x12C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB7 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0xB7 JUMPI CALLVALUE ISZERO PUSH2 0x257 JUMPI POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x229 CALLVALUE DUP3 SLOAD PUSH2 0x299 JUMP JUMPDEST SWAP1 SSTORE PUSH32 0x5AF8184BEF8E4B45EB9F6ED7734D04DA38CED226495548F46E0C8FF8D7D9A524 PUSH1 0x20 PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE LOG2 STOP JUMPDEST DUP1 PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x64 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E6420736F6D6520636F696E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x17E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2C6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 DUP4 SHL 0xCC XOR 0x4E 0x4D 0xD9 0xCE 0x28 JUMP SWAP10 CODESIZE SWAP2 COINBASE GT CODECOPY PUSH16 0x95E3E50BC196D7202BDD843471706473 PUSH16 0x6C634300081C00330000000000000000 ",
              "sourceMap": "163:863:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:863:11;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:863:11;;;;;;597:10;163:863;;;;;;;;;588:30;163:863;578:40;;163:863;;597:10;163:863;;;;;;;;;679:30;163:863;;;;;;;;;;;;597:10;163:863;;;;;;;;730:38;163:863;;;730:38;:::i;:::-;163:863;;781:36;163:863;781:36;;;;163:863;;597:10;;;;;;781:36;;;;;163:863;;;;;835:29;163:863;597:10;835:29;;163:863;781:36;163:863;;;;;;;;;781:36;-1:-1:-1;781:36:11;;;163:863;-1:-1:-1;;;163:863:11;;;;;;;;;;;;-1:-1:-1;;;163:863:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:863:11;;;;;;;;;;;;;;;353:9;:13;163:863;;;;;;;;;403:22;163:863;;;403:22;:35;353:9;163:863;;403:35;:::i;:::-;163:863;;456:21;163:863;;;353:9;163:863;;456:21;163:863;;;-1:-1:-1;;;163:863:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;163:863:11;;;;;-1:-1:-1;163:863:11"
            },
            "methodIdentifiers": {
              "balanceOf(address)": "70a08231",
              "fund(address)": "23024408",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unClaimed\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.Revenue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Revenue.sol\":\"Revenue\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Revenue.sol\":{\"keccak256\":\"0x81d9f776d8382209c8a29c13a21bb85bc661d768de5219b6bda08216d9d4c167\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://306245e00ec83c5c202ba474e4517bc4622877dcfc6e875ce8acd7530fd5432f\",\"dweb:/ipfs/QmSkE5MxNg1Qkf4scwMusqh3zqh6wEvVPn2xR5GsjWfKq3\"]},\"contracts/interfaces/IRevenue.sol\":{\"keccak256\":\"0xd5a46b604bec7d07fc9e71f4f6353f6e7111ec6ec943b6f3919ac9f3b76cbc7d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f588ebd6d301d2899f1a8cbcf3431ab77ee903745dcb674e6b6362da489e440e\",\"dweb:/ipfs/QmUR57AhBxPf4v8Wjmcs1v5PTTnAFvvtuH1SjDhvixENqY\"]},\"contracts/lib/Types.sol\":{\"keccak256\":\"0xb9f0c879aa34501ba63fa88aab0713e10884f0f7cf9075a3188138ebe072dc54\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://940f96d0d58e31c3d740a380aa27d1a7215d5ad4e25d595782a99596c19cdb46\",\"dweb:/ipfs/QmcK7CtZ6CRyDNKMdbkWgcmahoXhZE7539WnDe5o9HtkUj\"]}},\"version\":1}"
        }
      },
      "contracts/Strategy.sol": {
        "Strategy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "factory_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "creator_",
                  "type": "address"
                },
                {
                  "internalType": "enum Enums.Visibility",
                  "name": "visibility_",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "depositUsdMin_",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "forkCost_",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "initialTokens_",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "initialSplitRatio_",
                  "type": "uint256[]"
                },
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "allowedActions_",
                  "type": "uint8[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum Enums.ActionCall",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Params.ExecuteCall",
                  "name": "call",
                  "type": "tuple"
                }
              ],
              "name": "ExecuteCalled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "lp",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "donor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensDonated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "lp",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "TokensWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                }
              ],
              "name": "addToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "creator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "depositETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "donate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "donateETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum Enums.ActionCall",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Params.ExecuteCall",
                  "name": "call",
                  "type": "tuple"
                }
              ],
              "name": "executeCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllowedActions",
              "outputs": [
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "",
                  "type": "uint8[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalances",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getDepositUsdMin",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getForkCost",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSplitRatio",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTokens",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "onFork",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "removeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawSingle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawSingleETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 2559,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_array_address_dyn": {
                  "entryPoint": 2579,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_address": {
                  "entryPoint": 2602,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 2524,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 2625,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_dynamic1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x77D JUMPI PUSH2 0x4C1F DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x9DC JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH2 0x100 DUP3 DUP3 SUB SLT PUSH2 0x77D JUMPI PUSH2 0x34 DUP3 PUSH2 0x9FF JUMP JUMPDEST SWAP1 PUSH2 0x41 PUSH1 0x20 DUP5 ADD PUSH2 0x9FF JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MLOAD SWAP3 PUSH1 0x2 DUP5 LT ISZERO PUSH2 0x77D JUMPI PUSH1 0x60 DUP6 ADD MLOAD SWAP3 PUSH1 0x80 DUP7 ADD MLOAD SWAP6 PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI DUP2 ADD SWAP5 DUP3 PUSH1 0x1F DUP8 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP6 MLOAD SWAP1 PUSH2 0x89 DUP3 PUSH2 0xA13 JUMP JUMPDEST SWAP7 PUSH2 0x97 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x9DC JUMP JUMPDEST DUP3 DUP9 MSTORE PUSH1 0x20 DUP9 ADD PUSH1 0x20 DUP2 SWAP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP7 DUP4 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9C4 JUMPI POP POP POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI DUP4 ADD SWAP6 DUP5 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP7 MLOAD SWAP4 PUSH2 0xEC DUP6 PUSH2 0xA13 JUMP JUMPDEST SWAP8 PUSH2 0xFA PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x9DC JUMP JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x20 DUP10 ADD PUSH1 0x20 DUP2 SWAP8 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP9 DUP4 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH1 0xE0 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x77D JUMPI ADD SWAP6 DUP6 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x77D JUMPI DUP7 MLOAD SWAP7 PUSH2 0x14F DUP9 PUSH2 0xA13 JUMP JUMPDEST SWAP7 PUSH2 0x15D PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x9DC JUMP JUMPDEST DUP9 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP2 PUSH1 0x20 DUP4 SWAP11 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x77D JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x99B JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x193 PUSH1 0x40 DUP3 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x26282A37B5B2B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B6 PUSH1 0x40 DUP4 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE PUSH2 0x4C5 PUSH1 0xF4 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x991 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8AF JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x942 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x8DA JUMPI PUSH1 0x0 SWAP3 PUSH2 0x8CF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8C5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8AF JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x855 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7ED JUMPI PUSH1 0x0 SWAP3 PUSH2 0x7E2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP9 MLOAD DUP9 MLOAD SUB PUSH2 0x796 JUMPI POP PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0xF5C8BA93 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x74B JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x5 SSTORE DUP6 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x7 SLOAD DUP3 PUSH1 0x7 SSTORE DUP1 DUP4 LT PUSH2 0x710 JUMPI JUMPDEST POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6F3 JUMPI POP POP DUP6 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x6B8 JUMPI JUMPDEST POP PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6A4 JUMPI POP POP SWAP2 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x68E JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x68E JUMPI PUSH1 0x8 SLOAD DUP3 PUSH1 0x8 SSTORE DUP1 DUP4 LT PUSH2 0x63D JUMPI JUMPDEST POP SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x5F0 JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x588 JUMPI JUMPDEST POP POP POP POP PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP5 JUMPDEST DUP3 MLOAD DUP7 LT ISZERO PUSH2 0x495 JUMPI PUSH2 0x43F DUP7 DUP5 PUSH2 0xA41 JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x47F JUMPI SWAP5 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x45F DUP3 DUP8 PUSH2 0xA41 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP5 PUSH2 0x42C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2710 DUP6 SWAP2 SUB PUSH2 0x54F JUMPI PUSH1 0xFF DUP1 NOT PUSH1 0xC SLOAD AND SWAP2 AND OR PUSH1 0xC SSTORE PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH2 0x41B3 SWAP1 DUP2 PUSH2 0xA6C DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x27D ADD MSTORE DUP2 DUP2 PUSH2 0x2E7 ADD MSTORE DUP2 DUP2 PUSH2 0x430 ADD MSTORE DUP2 DUP2 PUSH2 0x4A0 ADD MSTORE DUP2 DUP2 PUSH2 0xC5C ADD MSTORE DUP2 DUP2 PUSH2 0xCC6 ADD MSTORE DUP2 DUP2 PUSH2 0xD65 ADD MSTORE DUP2 DUP2 PUSH2 0xDED ADD MSTORE DUP2 DUP2 PUSH2 0xF6A ADD MSTORE DUP2 DUP2 PUSH2 0x17F9 ADD MSTORE DUP2 DUP2 PUSH2 0x3BBB ADD MSTORE DUP2 DUP2 PUSH2 0x3C3A ADD MSTORE DUP2 DUP2 PUSH2 0x3CD4 ADD MSTORE DUP2 DUP2 PUSH2 0x3D48 ADD MSTORE PUSH2 0x3E8C ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x848 ADD MSTORE DUP2 DUP2 PUSH2 0x966 ADD MSTORE DUP2 DUP2 PUSH2 0x1C41 ADD MSTORE DUP2 DUP2 PUSH2 0x21EB ADD MSTORE PUSH2 0x2449 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420726174696F2073756D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5A4 JUMPI POP POP POP ADD SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x421 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 DUP6 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5D0 PUSH1 0x20 SWAP2 DUP5 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x58F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x609 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x40C JUMP JUMPDEST SWAP6 SWAP1 DUP2 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x634 PUSH1 0x20 SWAP2 DUP10 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP3 ADD SWAP7 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x66B SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP2 DUP8 AND DUP1 PUSH2 0x671 JUMPI JUMPDEST POP ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x0 NOT DUP6 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x65F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE PUSH2 0x6ED SWAP1 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x3AE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 ADD SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 MSTORE PUSH2 0x745 SWAP1 PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x364 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x782 JUMPI JUMPDEST DUP2 PUSH2 0x766 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9DC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x77D JUMPI PUSH2 0x777 SWAP1 PUSH2 0x9FF JUMP JUMPDEST CODESIZE PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x759 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D69736D61746368656420617272617973 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x83D JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x824 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x28D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x816 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH2 0x89F SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x8A5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x260 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x24C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x92A JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x911 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x229 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x903 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH2 0x98B SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x8A5 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xA2A JUMP JUMPDEST CODESIZE PUSH2 0x1FC JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x77D JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x17B JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x118 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x9D1 DUP5 PUSH2 0x9FF JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x68E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x77D JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x68E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xA35 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA2A JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x113E08 EQ PUSH2 0x3189 JUMPI DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x1C04 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x30CC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3024 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3006 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2F05 JUMPI DUP1 PUSH4 0x2494452D EQ PUSH2 0x2718 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2610 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25F4 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x23E4 JUMPI DUP1 PUSH4 0x4EADCCA8 EQ PUSH2 0x2363 JUMPI DUP1 PUSH4 0x531BCDB3 EQ PUSH2 0x2345 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x217F JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0x1EFF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EC8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E60 JUMPI DUP1 PUSH4 0x8769B449 EQ PUSH2 0x1C2B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C04 JUMPI DUP1 PUSH4 0x8E4E9018 EQ PUSH2 0x1BE6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AD9 JUMPI DUP1 PUSH4 0xA216AA06 EQ PUSH2 0x1797 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1765 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x16CF JUMPI DUP1 PUSH4 0xAB83F98A EQ PUSH2 0x163F JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x1505 JUMPI DUP1 PUSH4 0xB317650B EQ PUSH2 0x86C JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x828 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x637 JUMPI PUSH4 0xF9C4D3DB EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x18A PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x198 DUP2 ISZERO ISZERO PUSH2 0x3405 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1BB PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH2 0x1CA DUP5 ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 SWAP3 PUSH1 0x60 SWAP2 SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 DUP8 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x626 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x207 DUP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x22A DUP11 PUSH2 0x225 DUP11 PUSH2 0x220 DUP6 PUSH2 0x37BC JUMP JUMPDEST PUSH2 0x349B JUMP JUMPDEST PUSH2 0x34C4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x238 DUP10 DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP11 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x5E7 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2C0 DUP5 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x599 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x32A DUP5 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP3 DUP8 EQ DUP1 DUP1 PUSH2 0x592 JUMPI JUMPDEST ISZERO PUSH2 0x364 JUMPI POP POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x35C SWAP5 CALLER GAS CALL PUSH2 0x356 PUSH2 0x34FC JUMP JUMPDEST POP PUSH2 0x352C JUMP JUMPDEST ADD DUP9 SWAP1 PUSH2 0x1EC JUMP JUMPDEST SWAP3 SWAP4 SWAP3 ISZERO PUSH2 0x3E5 JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3AC JUMPI JUMPDEST POP PUSH2 0x35C JUMP JUMPDEST PUSH2 0x3CC SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI JUMPDEST PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x34E4 JUMP JUMPDEST POP CODESIZE PUSH2 0x3A6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP5 POP SWAP3 SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x495 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x481 JUMPI SWAP2 DUP12 SWAP2 PUSH2 0x424 SWAP5 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE CALLER SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x3AB4 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x1 SWAP3 PUSH2 0x466 JUMPI POP PUSH2 0x35C JUMP JUMPDEST PUSH2 0x3CC SWAP1 RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0x24 DUP13 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH1 0x20 DUP14 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 PUSH2 0x4FA DUP9 DUP11 PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x587 JUMPI PUSH2 0x56B JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0x557 JUMPI SWAP2 PUSH2 0x53F SWAP5 SWAP4 SWAP2 DUP14 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x1 SWAP3 PUSH2 0x466 JUMPI POP PUSH2 0x35C JUMP JUMPDEST PUSH1 0x24 DUP14 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x582 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x5CE JUMPI JUMPDEST DUP2 PUSH2 0x5B3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x5C4 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x317 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0x319 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x618 JUMPI JUMPDEST DUP2 PUSH2 0x601 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x612 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x2AD JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5F4 JUMP JUMPDEST DUP3 PUSH2 0x2AF JUMP JUMPDEST POP PUSH2 0x631 DUP7 CALLER PUSH2 0x394D JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x659 PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x661 PUSH2 0x39CE JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x6FE PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x724 PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7CD JUMPI PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 SWAP3 PUSH2 0x7AA SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x7C8 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH2 0x7FC PUSH2 0x3290 JUMP JUMPDEST SWAP3 DUP3 PUSH2 0x806 PUSH2 0x32A6 JUMP JUMPDEST SWAP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1501 JUMPI PUSH1 0x40 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1501 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x14ED JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x121E JUMPI DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x121E JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x10C3 JUMPI DUP3 PUSH1 0x4 DUP3 ADD CALLDATALOAD SWAP2 PUSH2 0x8FD DUP4 PUSH2 0x3354 JUMP JUMPDEST SWAP3 PUSH2 0x90B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x331C JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x10C3 JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH32 0xF94F657C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x7CD JUMPI DUP5 SWAP1 PUSH2 0x14AD JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND CALLER SUB PUSH2 0x1469 JUMPI DUP2 MLOAD SWAP2 PUSH1 0x4 DUP4 LT ISZERO SWAP3 DUP4 PUSH2 0x1455 JUMPI PUSH1 0x8 SLOAD SWAP4 DUP6 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1449 JUMPI PUSH1 0x8 DUP9 MSTORE DUP3 PUSH1 0xFF DUP3 PUSH1 0x5 SHR PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SLOAD PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR AND SWAP1 PUSH2 0x1435 JUMPI PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1435 JUMPI DUP5 EQ PUSH2 0xA16 JUMPI PUSH1 0x1 ADD PUSH2 0x9BB JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 POP PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x13F1 JUMPI DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB3F JUMPI ISZERO PUSH2 0x1222 JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x1 EQ PUSH2 0xB53 JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x2 EQ PUSH2 0xAB1 JUMPI JUMPDEST PUSH2 0xA9A SWAP1 PUSH2 0xAAB PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x20 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 MLOAD PUSH2 0x32BC JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x324F JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP2 MLOAD SWAP1 DUP2 MLOAD DUP3 ADD SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0xB3B JUMPI PUSH2 0xACF PUSH1 0x20 DUP3 ADD PUSH2 0x35C2 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x5CA JUMPI PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB2A PUSH2 0xB31 SWAP4 PUSH1 0x20 PUSH2 0xAAB SWAP8 DUP2 PUSH2 0xA9A SWAP12 ADD SWAP3 ADD ADD PUSH2 0x370C JUMP JUMPDEST SWAP2 AND PUSH2 0x3AE6 JUMP JUMPDEST SWAP4 POP POP SWAP1 POP PUSH2 0xA5C JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 SWAP2 DUP3 MLOAD SWAP2 DUP3 MLOAD DUP4 ADD PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x121E JUMPI PUSH1 0x40 PUSH2 0xB9D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 DUP1 PUSH2 0xBA4 SWAP6 SWAP10 SWAP8 SWAP10 ADD SWAP2 DUP8 ADD ADD PUSH2 0x370C JUMP JUMPDEST SWAP4 ADD PUSH2 0x35C2 JUMP JUMPDEST AND DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0xBBD PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x60 SWAP5 PUSH1 0x40 SWAP3 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP4 EQ SWAP2 DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBF8 DUP3 DUP6 PUSH2 0x33F1 JUMP JUMPDEST MLOAD AND PUSH2 0xC03 DUP2 PUSH2 0x37BC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xC17 DUP13 DUP5 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP4 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP1 ISZERO PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEFC JUMPI DUP13 SWAP2 PUSH2 0xF0D JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC9F DUP7 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0xF07 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEFC JUMPI DUP13 SWAP2 PUSH2 0xEBF JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD09 DUP7 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP2 DUP10 SUB PUSH2 0xD22 JUMPI POP POP POP POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0xBDD JUMP JUMPDEST ISZERO PUSH2 0xDD6 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xDC2 JUMPI SWAP2 DUP10 SWAP2 PUSH2 0xD59 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x3AB4 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0xDB7 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xD9D JUMPI JUMPDEST POP PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xDB0 SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP16 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xE98 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xE84 JUMPI SWAP2 PUSH2 0xE6B SWAP4 SWAP2 DUP12 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xDB7 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xD9D JUMPI POP PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x24 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xEAF SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xEF4 JUMPI JUMPDEST DUP2 PUSH2 0xED9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEF0 JUMPI PUSH2 0xEEA SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0xCF6 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0xCF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xF3E JUMPI JUMPDEST DUP2 PUSH2 0xF27 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEF0 JUMPI PUSH2 0xF38 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0xC8C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF1A JUMP JUMPDEST DUP2 PUSH2 0xC8E JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 PUSH2 0xD1C JUMP JUMPDEST POP SWAP6 SWAP5 SWAP7 POP POP POP POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x11D9 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x11A4 JUMPI JUMPDEST POP PUSH2 0xFF1 JUMPI JUMPDEST POP POP PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x115C JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SWAP3 AND SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x1117 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x10D2 JUMPI JUMPDEST POP DUP2 EXTCODESIZE ISZERO PUSH2 0x10C3 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x10C7 JUMPI ISZERO PUSH2 0xFEA JUMPI DUP2 PUSH2 0x10B8 SWAP2 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x10C3 JUMPI DUP3 CODESIZE PUSH2 0xFEA JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1104 JUMPI JUMPDEST DUP2 PUSH2 0x10EE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10FF JUMPI DUP5 SWAP2 MLOAD CODESIZE PUSH2 0x107C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1154 JUMPI JUMPDEST DUP2 PUSH2 0x1132 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x114D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1046 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x119C JUMPI JUMPDEST DUP2 PUSH2 0x1177 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1194 PUSH1 0x4 SWAP4 PUSH2 0x35C2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1015 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x116A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11D1 JUMPI JUMPDEST DUP2 PUSH2 0x11C0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10FF JUMPI DUP5 SWAP2 MLOAD CODESIZE PUSH2 0xFE4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1216 JUMPI JUMPDEST DUP2 PUSH2 0x11F4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x120F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11E7 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x1237 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3692 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x7 SLOAD SUB PUSH2 0x13AD JUMPI DUP4 SWAP2 DUP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x126D JUMPI PUSH2 0x1265 PUSH1 0x1 SWAP2 PUSH2 0x125E DUP7 DUP7 PUSH2 0x33F1 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x3A6E JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x1245 JUMP JUMPDEST PUSH2 0x2710 SWAP2 SWAP5 SWAP4 POP SUB PUSH2 0x1369 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1355 JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x1355 JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x12F7 JUMPI JUMPDEST POP PUSH1 0x20 ADD PUSH1 0x6 DUP6 MSTORE DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x12C3 JUMPI POP POP POP PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SSTORE ADD PUSH2 0x12B4 JUMP JUMPDEST PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP3 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x134A JUMPI POP PUSH2 0x12AA JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x133D JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726174696F2073756D000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C656E677468000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E206E6F7420616C6C6F7765640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST POP SWAP3 SWAP4 SWAP5 POP POP POP PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920656467657220697320616C6C6F7765640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x14E5 JUMPI JUMPDEST DUP2 PUSH2 0x14C7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x121E JUMPI PUSH2 0x14E0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x35C2 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x151F PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x1527 PUSH2 0x39CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x15FB JUMPI PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x14ED JUMPI SWAP1 PUSH2 0x156E DUP3 PUSH1 0x1 PUSH2 0x158D SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x3388 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x15E7 JUMPI PUSH2 0x15B4 DUP2 PUSH1 0x1 PUSH2 0x15CE SWAP4 ADD PUSH1 0x6 SSTORE PUSH2 0x33B9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206578697374730000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x167B PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3577 JUMP JUMPDEST PUSH2 0x1686 DUP2 CALLVALUE EQ PUSH2 0x3647 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x7 DUP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x1746 JUMPI PUSH2 0x1742 DUP6 PUSH2 0x172E DUP2 DUP8 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x32DF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1717 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x178C PUSH2 0x1782 PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x17B7 DUP2 ISZERO ISZERO PUSH2 0x3405 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x17E3 PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x17F2 DUP3 ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1ACE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x183F DUP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x1858 DUP9 PUSH2 0x225 DUP9 PUSH2 0x220 DUP6 PUSH2 0x37BC JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1866 DUP8 DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x1AC8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x1A8F JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x18C5 DUP5 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x1A56 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x18FF DUP5 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP1 DUP1 PUSH2 0x1A4E JUMPI JUMPDEST ISZERO PUSH2 0x192F JUMPI POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x1927 SWAP5 CALLER GAS CALL PUSH2 0x356 PUSH2 0x34FC JUMP JUMPDEST ADD DUP7 SWAP1 PUSH2 0x1824 JUMP JUMPDEST SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0x1994 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1976 JUMPI JUMPDEST POP PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x198D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP5 POP SWAP1 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP15 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH2 0x1A32 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xDC2 JUMPI SWAP1 DUP10 SWAP2 PUSH2 0x1A05 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB DUP2 DUP4 DUP8 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1A1F JUMPI POP PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x198D SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x1A49 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x19D5 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x190A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1A87 JUMPI JUMPDEST DUP2 PUSH2 0x1A70 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x1A81 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x18ED JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A63 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1AC0 JUMPI JUMPDEST DUP2 PUSH2 0x1AA9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x1ABA SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x18B2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A9C JUMP JUMPDEST DUP3 PUSH2 0x18B4 JUMP JUMPDEST POP PUSH2 0x631 DUP5 CALLER PUSH2 0x394D JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x4 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1BDC JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x1BC8 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1BA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B44 JUMPI JUMPDEST PUSH2 0x1742 DUP5 PUSH2 0x1B30 DUP2 DUP7 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x324F JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1B87 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1B30 DUP3 PUSH2 0x1B20 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x1B30 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x1B03 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP1 CALLER SUB PUSH2 0x1E1C JUMPI PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1E08 JUMPI PUSH2 0x1DC4 JUMPI PUSH1 0xB SLOAD CALLVALUE LT PUSH2 0x1D80 JUMPI PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x78D1C86D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x10C7 JUMPI DUP3 SWAP1 PUSH2 0x1D40 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND DUP3 EXTCODESIZE ISZERO PUSH2 0x1501 JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH32 0x2302440800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1D33 JUMPI PUSH2 0x1D25 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x1D2E SWAP2 PUSH2 0x331C JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D78 JUMPI JUMPDEST DUP2 PUSH2 0x1D5A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1501 JUMPI PUSH2 0x1D73 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x35C2 JUMP JUMPDEST PUSH2 0x1CC2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420666F726B20636F737400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973616C6C6F77656400000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F727920697320616C6C6F776564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH2 0x1E79 PUSH2 0x39CE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1EEF PUSH2 0x3290 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1F21 PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x1F29 PUSH2 0x39CE JUMP JUMPDEST AND DUP1 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x213B JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x2109 JUMPI JUMPDEST POP PUSH2 0x20C5 JUMPI DUP2 JUMPDEST PUSH1 0x7 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x20BF JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1F8D DUP5 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1FA3 JUMPI POP PUSH1 0x1 ADD PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x2097 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1FC3 PUSH2 0x1FD4 SWAP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x156E DUP4 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x20AB JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1FEA DUP2 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x2097 JUMPI SWAP1 PUSH2 0x202C PUSH2 0x201F PUSH2 0x2045 SWAP4 PUSH2 0x33B9 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x33B9 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x2083 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x205B DUP2 PUSH2 0x33B9 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x6 SSTORE DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST POP POP POP DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D7A65726F2062616C616E636500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2133 JUMPI JUMPDEST DUP2 PUSH2 0x2124 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI MLOAD CODESIZE PUSH2 0x1F69 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2197 PUSH2 0x39CE JUMP JUMPDEST PUSH2 0x21A2 DUP2 CALLVALUE EQ PUSH2 0x3647 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x21CE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3577 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x2300 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL DUP1 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP1 PUSH2 0x22CC JUMPI JUMPDEST PUSH2 0x2283 SWAP2 POP PUSH2 0x227D PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x35D6 JUMP JUMPDEST CALLER PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x22F8 JUMPI JUMPDEST DUP2 PUSH2 0x22E6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH2 0x2283 SWAP1 MLOAD PUSH2 0x226A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x22D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x233D JUMPI JUMPDEST DUP2 PUSH2 0x231B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x2336 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x221B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x230E JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x6 DUP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x23CE JUMPI PUSH2 0x1742 DUP6 PUSH2 0x23C2 DUP2 DUP8 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3215 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x23AB JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x23FE PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x2409 PUSH2 0x39CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x242B PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3577 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2570 JUMPI DUP6 SWAP4 PUSH2 0x25AF JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE DUP8 PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2570 JUMPI DUP6 SWAP4 PUSH2 0x257B JUMPI JUMPDEST POP PUSH2 0x24C4 PUSH1 0x5 SLOAD DUP5 LT ISZERO PUSH2 0x35D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP10 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2570 JUMPI PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 SWAP4 PUSH2 0x7AA SWAP4 PUSH2 0x252F SWAP3 PUSH2 0x2553 JUMPI JUMPDEST POP CALLER PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x256B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x25A7 JUMPI JUMPDEST DUP2 PUSH2 0x2597 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB3B JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x24B5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x258A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x25EC JUMPI JUMPDEST DUP2 PUSH2 0x25CA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB3B JUMPI PUSH1 0x20 PUSH2 0x25E5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x35C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2479 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x25BD JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2630 DUP2 ISZERO ISZERO PUSH2 0x3405 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x263F DUP3 ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST DUP3 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x270D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x265D DUP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2676 DUP6 PUSH2 0x225 DUP7 PUSH2 0x220 DUP6 PUSH2 0x37BC JUMP JUMPDEST SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x26B0 JUMPI POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x26A8 SWAP5 CALLER GAS CALL PUSH2 0x356 PUSH2 0x34FC JUMP JUMPDEST ADD DUP4 SWAP1 PUSH2 0x2642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x2570 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x26EF JUMPI JUMPDEST POP PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x2706 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0x26E9 JUMP JUMPDEST POP PUSH2 0x631 DUP3 CALLER PUSH2 0x394D JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 DUP2 DUP4 PUSH1 0x8 DUP7 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 DUP7 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0x2C7C JUMPI PUSH2 0x287C SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x2C61 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2C43 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2C25 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2C07 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2BEA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2BCC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2BAE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B90 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B72 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B54 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B36 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B18 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2AFA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2ADC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2ABE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2AA0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A82 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A64 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A46 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A28 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A0A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29EC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29CE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29B0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2992 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2974 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2956 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2938 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x291A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28FC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28DE JUMPI JUMPDEST LT PUSH2 0x28C7 JUMPI JUMPDEST POP SWAP4 SWAP3 SWAP4 SUB DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x28A4 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 DUP1 DUP3 PUSH2 0x28B9 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x32BC JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x2896 JUMP JUMPDEST SWAP1 PUSH2 0x28D7 DUP2 PUSH1 0x20 SWAP4 PUSH1 0xF8 SHR PUSH2 0x32BC JUMP JUMPDEST ADD CODESIZE PUSH2 0x2871 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28F4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xF0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x286B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2912 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2863 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2930 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x285B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x294E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2853 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x296C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x284B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x298A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2843 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29A8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x283B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29C6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2833 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29E4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x282B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A02 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2823 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A20 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x281B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A3E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x98 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2813 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A5C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x90 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x280B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A7A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x88 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2803 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A98 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x80 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27FB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2AB6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x78 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27F3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2AD4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x70 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2AF2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x68 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27E3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B10 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x60 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27DB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B2E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x58 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27D3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B4C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x50 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27CB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B6A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x48 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27C3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B88 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27BB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BA6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x38 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BC4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x30 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27AB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BE2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x28 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27A3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BFF PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 DUP6 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x279B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C1D PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x18 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2793 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C3B PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x10 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x278B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C59 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2783 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C74 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x277B JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 PUSH2 0x2EF7 DUP8 SLOAD PUSH2 0x2C9A DUP4 PUSH1 0xFF DUP4 AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CAC DUP7 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CBF PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CD2 PUSH1 0x60 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x18 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CE4 PUSH1 0x80 DUP5 ADD PUSH1 0xFF DUP4 DUP10 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CF7 PUSH1 0xA0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x28 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D0A PUSH1 0xC0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x30 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D1D PUSH1 0xE0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x38 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D31 PUSH2 0x100 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D45 PUSH2 0x120 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x48 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D59 PUSH2 0x140 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x50 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D6D PUSH2 0x160 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x58 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D81 PUSH2 0x180 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x60 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D95 PUSH2 0x1A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x68 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DA9 PUSH2 0x1C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x70 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DBD PUSH2 0x1E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x78 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DD1 PUSH2 0x200 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DE5 PUSH2 0x220 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x88 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DF9 PUSH2 0x240 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x90 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E0D PUSH2 0x260 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x98 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E21 PUSH2 0x280 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E35 PUSH2 0x2A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E49 PUSH2 0x2C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E5D PUSH2 0x2E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E71 PUSH2 0x300 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E85 PUSH2 0x320 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E99 PUSH2 0x340 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2EAD PUSH2 0x360 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2EC1 PUSH2 0x380 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2ED5 PUSH2 0x3A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2EE9 PUSH2 0x3C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xF0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x3E0 DUP4 ADD SWAP1 PUSH1 0xF8 SHR PUSH2 0x32BC JUMP JUMPDEST ADD SWAP5 ADD SWAP3 ADD DUP5 SWAP3 SWAP4 SWAP2 PUSH2 0x2763 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x2F1F PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x2F27 PUSH2 0x32A6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 LT PUSH2 0x2F6C JUMPI JUMPDEST POP POP PUSH2 0x178C SWAP4 POP PUSH2 0x3856 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x2FD2 JUMPI DUP1 ISZERO PUSH2 0x2FBF JUMPI CALLER ISZERO PUSH2 0x2FAC JUMPI PUSH1 0x40 DUP7 DUP7 SWAP3 PUSH2 0x178C SWAP9 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x2F60 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 DUP7 DUP5 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x303E PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x30B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x30A6 JUMPI PUSH1 0x40 DUP3 SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x24 SWAP3 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x317F JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x1BC8 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1BA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3122 JUMPI PUSH2 0x1742 DUP5 PUSH2 0x1B30 DUP2 DUP7 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x3165 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1B30 DUP3 PUSH2 0x1B20 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x314C JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x30F6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x7 SLOAD PUSH2 0x31A6 DUP2 PUSH2 0x3370 JUMP JUMPDEST SWAP2 PUSH2 0x31B4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x331C JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x31C3 DUP4 PUSH2 0x3370 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY JUMPDEST DUP2 DUP2 LT PUSH2 0x31E0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x1742 DUP6 DUP3 PUSH2 0x3215 JUMP JUMPDEST DUP1 PUSH2 0x3204 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x31F7 PUSH1 0x1 SWAP5 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x37BC JUMP JUMPDEST PUSH2 0x320E DUP3 DUP7 PUSH2 0x33F1 JUMP JUMPDEST MSTORE ADD PUSH2 0x31CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3239 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x322C JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x327B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x325A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x32C9 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x32FD JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x32F0 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x333E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x333E JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x333E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x340C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3457 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x34AE JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x34CE JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x10FF JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x10FF JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3527 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x350D DUP3 PUSH2 0x3354 JUMP JUMPDEST SWAP2 PUSH2 0x351B PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x331C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3533 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x357E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420737570706F72746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST ISZERO PUSH2 0x35DD JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420616D6F756E7420696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7364000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x364E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x10FF JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x10FF JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x10FF JUMPI DUP2 MLOAD PUSH2 0x36C6 DUP2 PUSH2 0x3370 JUMP JUMPDEST SWAP3 PUSH2 0x36D4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x331C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x10FF JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x36FC JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x36EF JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x10FF JUMPI DUP2 MLOAD PUSH2 0x3723 DUP2 PUSH2 0x3370 JUMP JUMPDEST SWAP3 PUSH2 0x3731 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x331C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x10FF JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3759 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x3766 DUP5 PUSH2 0x35C2 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x374C JUMP JUMPDEST ISZERO PUSH2 0x3778 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x37E9 JUMPI POP POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x384A JUMPI DUP1 SWAP3 PUSH2 0x3819 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3842 JUMPI JUMPDEST DUP2 PUSH2 0x3835 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x634 JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3828 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x391E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x38EF JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x38D5 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x391E JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x39B5 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND CALLER SUB PUSH2 0x39E2 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x38EF JUMPI PUSH2 0x3A2C DUP2 PUSH1 0x2 SLOAD PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x34AE JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x3AA9 PUSH1 0x80 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP8 SWAP7 SWAP6 SWAP8 DUP5 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x32DF JUMP JUMPDEST SWAP6 AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3ADB PUSH1 0x60 SWAP4 SWAP7 SWAP6 SWAP5 SWAP7 PUSH1 0x0 DUP5 MSTORE PUSH1 0x80 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x32DF JUMP JUMPDEST SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x3B0D PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP1 ISZERO PUSH2 0x411B JUMPI SELFBALANCE JUMPDEST DUP1 ISZERO PUSH2 0x4112 JUMPI DUP7 MLOAD SWAP4 SWAP6 SWAP4 PUSH2 0x3B40 SWAP2 PUSH2 0x34C4 JUMP JUMPDEST PUSH1 0x60 SWAP7 SWAP1 SWAP4 PUSH1 0x40 SWAP2 DUP7 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3E78 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3B65 DUP3 DUP5 PUSH2 0x33F1 JUMP JUMPDEST MLOAD AND DUP1 DUP10 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x3B7F PUSH1 0xFF PUSH1 0x40 DUP12 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3B8D DUP13 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE DUP6 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY DUP7 ISZERO PUSH2 0x3E72 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEB4 JUMPI DUP12 SWAP2 PUSH2 0x3E39 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3BFE DUP5 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x3E33 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEB4 JUMPI DUP12 SWAP2 PUSH2 0x3DF6 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3C7D DUP5 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 SUB PUSH2 0x3C92 JUMPI POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0x3B4A JUMP JUMPDEST DUP6 ISZERO PUSH2 0x3D31 JUMPI PUSH1 0x1 TIMESTAMP ADD SWAP1 DUP2 TIMESTAMP GT PUSH2 0xDC2 JUMPI PUSH2 0x3CC7 SWAP2 DUP11 SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x3AB4 JUMP JUMPDEST SUB DUP2 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0x3D26 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x3D0C JUMPI JUMPDEST POP PUSH2 0x3C8C JUMP JUMPDEST PUSH2 0x3D1F SWAP1 RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0x3D06 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP11 SWAP1 MSTORE SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP15 DUP14 GAS CALL DUP1 ISZERO PUSH2 0xEB4 JUMPI PUSH2 0x3DDA JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xE84 JUMPI SWAP2 DUP11 SWAP2 DUP11 DUP4 PUSH2 0x3DC1 SWAP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3D26 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x3D0C JUMPI POP PUSH2 0x3C8C JUMP JUMPDEST PUSH2 0x3DF1 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x3D8C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x3E2B JUMPI JUMPDEST DUP2 PUSH2 0x3E10 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3E27 JUMPI PUSH2 0x3E21 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x3C6A JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3E03 JUMP JUMPDEST DUP1 PUSH2 0x3C6C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x3E6A JUMPI JUMPDEST DUP2 PUSH2 0x3E53 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3E27 JUMPI PUSH2 0x3E64 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x3BEB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3E46 JUMP JUMPDEST DUP5 PUSH2 0x3BED JUMP JUMPDEST POP POP POP POP POP POP POP SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x40CD JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x409B JUMPI JUMPDEST POP PUSH2 0x3F0F JUMPI POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x4053 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SWAP3 AND SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x400E JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x3FDC JUMPI JUMPDEST POP DUP2 EXTCODESIZE ISZERO PUSH2 0x10C3 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x10C7 JUMPI PUSH2 0x3FCF JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x3FD9 SWAP2 PUSH2 0x331C JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4006 JUMPI JUMPDEST DUP2 PUSH2 0x3FF7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI MLOAD CODESIZE PUSH2 0x3F9A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3FEA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x404B JUMPI JUMPDEST DUP2 PUSH2 0x4029 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x4044 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F64 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x401C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4093 JUMPI JUMPDEST DUP2 PUSH2 0x406E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x408B PUSH1 0x4 SWAP4 PUSH2 0x35C2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3F33 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4061 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x40C5 JUMPI JUMPDEST DUP2 PUSH2 0x40B6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI MLOAD CODESIZE PUSH2 0x3F06 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x410A JUMPI JUMPDEST DUP2 PUSH2 0x40E8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x4103 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3ED0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40DB JUMP JUMPDEST POP POP POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2570 JUMPI DUP6 SWAP2 PUSH2 0x414B JUMPI JUMPDEST POP PUSH2 0x3B2C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4175 JUMPI JUMPDEST DUP2 PUSH2 0x4166 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB3B JUMPI MLOAD CODESIZE PUSH2 0x4145 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4159 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER NUMBER JUMPDEST GT NOT 0xB5 0xFC 0x1E RETURNDATACOPY 0xE4 0xAC CALLDATALOAD EXTCODESIZE RETURNDATASIZE MCOPY 0xB3 SWAP5 DUP11 MUL 0xF6 0x2D GT 0xDE 0x26 0xEE NUMBER DUP13 SWAP11 DUP13 0xBA 0x2E 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "469:3362:12:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:3362:12;;;;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:3362:12;;;;;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;469:3362:12;;;;;;;-1:-1:-1;;;;;469:3362:12;;;;1667:13:3;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:12;;;;;;;;;;;;;1667:13:3;469:3362:12;;;;;1667:13:3;469:3362:12;;;;;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:12;;;;;;;;;;;;;1667:13:3;469:3362:12;;;;;;;;-1:-1:-1;;;;;469:3362:12;1273:26:1;;1269:95;;3004:6;469:3362:12;;-1:-1:-1;;;;;;469:3362:12;;;;;;;;;;;-1:-1:-1;;;;;469:3362:12;3052:40:1;-1:-1:-1;;3052:40:1;469:3362:12;;;;1058:50:25;469:3362:12;;-1:-1:-1;469:3362:12;1166:19:25;;;469:3362:12;;-1:-1:-1;;;1219:41:25;;469:3362:12;;;;;;;;;-1:-1:-1;;;;;469:3362:12;1219:41:25;;;;;;;-1:-1:-1;1219:41:25;;;469:3362:12;-1:-1:-1;;;;;;469:3362:12;;1271:44:25;469:3362:12;;;;;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:12;;-1:-1:-1;469:3362:12;-1:-1:-1;469:3362:12;;;;;;-1:-1:-1;;469:3362:12;;;;-1:-1:-1;;;;;;;469:3362:12;;;;;;;;;1417:32:25;469:3362:12;;1417:32:25;469:3362:12;;;;;;;;1417:32:25;-1:-1:-1;469:3362:12;;-1:-1:-1;469:3362:12;-1:-1:-1;469:3362:12;;;;;;-1:-1:-1;;469:3362:12;;;;-1:-1:-1;;;;;;;469:3362:12;;;;;;;;;1462:33:25;469:3362:12;;1462:33:25;469:3362:12;;;;;;;;;1462:33:25;-1:-1:-1;469:3362:12;;-1:-1:-1;469:3362:12;;;;;-1:-1:-1;469:3362:12;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;1508:22:25;;;;-1:-1:-1;1546:13:25;-1:-1:-1;1541:177:25;1592:3;469:3362:12;;1561:29:25;;;;;1626:21;;;;:::i;:::-;469:3362:12;;;;;;;;1612:35:25;469:3362:12;;-1:-1:-1;;;;;1681:17:25;469:3362:12;1681:17:25;;:::i;:::-;469:3362:12;;-1:-1:-1;469:3362:12;1662:18:25;469:3362:12;;;-1:-1:-1;469:3362:12;;;;;;;;;;;1546:13:25;;;469:3362:12;;;;-1:-1:-1;469:3362:12;;;;;-1:-1:-1;469:3362:12;1561:29:25;733:6:26;1561:29:25;;1738:21;733:6:26;;469:3362:12;;;1110:25;469:3362;;;;;1110:25;469:3362;1145:21;469:3362;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;733:6:26;469:3362:12;;-1:-1:-1;;;733:6:26;;469:3362:12;;733:6:26;;;;;;;469:3362:12;-1:-1:-1;;;469:3362:12;;;733:6:26;;;;469:3362:12;;-1:-1:-1;469:3362:12;-1:-1:-1;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:12;;;;;-1:-1:-1;469:3362:12;;-1:-1:-1;469:3362:12;;;;;;;-1:-1:-1;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:33:25;-1:-1:-1;469:3362:12;;-1:-1:-1;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1667:13:3;469:3362:12;;;;;;;;;;;;-1:-1:-1;469:3362:12;;;;;-1:-1:-1;469:3362:12;;;;;;;;;;;;;;;;;;1417:32:25;-1:-1:-1;469:3362:12;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:12;;;;;;;;;;;:::i;:::-;;;;1219:41:25;;;469:3362:12;1219:41:25;;469:3362:12;1219:41:25;;;;;;469:3362:12;1219:41:25;;;:::i;:::-;;;469:3362:12;;;;;;;:::i;:::-;1219:41:25;;;469:3362:12;-1:-1:-1;469:3362:12;;1219:41:25;;;-1:-1:-1;1219:41:25;;;469:3362:12;;;-1:-1:-1;469:3362:12;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;1269:95:1;1322:31;;;-1:-1:-1;1322:31:1;-1:-1:-1;469:3362:12;;;-1:-1:-1;1322:31:1;469:3362:12;;;;-1:-1:-1;469:3362:12;;;;;;-1:-1:-1;469:3362:12;;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:3;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;469:3362:12;;;;;;;;-1:-1:-1;469:3362:12;;;;;-1:-1:-1;469:3362:12;;;;;;;;;;;;-1:-1:-1;469:3362:12;;;;;1667:13:3;-1:-1:-1;469:3362:12;;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:3;469:3362:12;;;;;;;;;;1667:13:3;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:3;-1:-1:-1;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;469:3362:12;;;;;;:::o;:::-;-1:-1:-1;;;;;469:3362:12;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 12944,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_31845": {
                  "entryPoint": 12966,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 13762,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_array_address_dyn_fromMemory": {
                  "entryPoint": 14092,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_array_uint256_dyn_fromMemory": {
                  "entryPoint": 13970,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 13540,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_array_address_dyn": {
                  "entryPoint": 13023,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 12821,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_enum_ActionCall": {
                  "entryPoint": 12988,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_rational_by_array_address_dyn_address_uint256": {
                  "entryPoint": 15028,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 12879,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_rational_by_array_address_dyn_address_uint256": {
                  "entryPoint": 14971,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "array_allocation_size_array_uint256_dyn": {
                  "entryPoint": 13168,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_bytes": {
                  "entryPoint": 13140,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 14958,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 13508,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 13467,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_returndata": {
                  "entryPoint": 13564,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 13084,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_burn": {
                  "entryPoint": 14669,
                  "id": 718,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 14798,
                  "id": 130,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getBalance": {
                  "entryPoint": 14268,
                  "id": 4039,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_mint": {
                  "entryPoint": 14864,
                  "id": 685,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_swapToMany": {
                  "entryPoint": 15078,
                  "id": 3962,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 14422,
                  "id": 575,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 13297,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn_31870": {
                  "entryPoint": 13268,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn_31871": {
                  "entryPoint": 13281,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_2fd1": {
                  "entryPoint": 13317,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_379a": {
                  "entryPoint": 13392,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_5e70": {
                  "entryPoint": 14193,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_785c": {
                  "entryPoint": 13895,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_97c8": {
                  "entryPoint": 13782,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_9d30": {
                  "entryPoint": 13687,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c7c2": {
                  "entryPoint": 13612,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 13192,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "storage_array_index_access_address_dyn_31855": {
                  "entryPoint": 13241,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "update_storage_value_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "3562": [
                  {
                    "length": 32,
                    "start": 637
                  },
                  {
                    "length": 32,
                    "start": 743
                  },
                  {
                    "length": 32,
                    "start": 1072
                  },
                  {
                    "length": 32,
                    "start": 1184
                  },
                  {
                    "length": 32,
                    "start": 3164
                  },
                  {
                    "length": 32,
                    "start": 3270
                  },
                  {
                    "length": 32,
                    "start": 3429
                  },
                  {
                    "length": 32,
                    "start": 3565
                  },
                  {
                    "length": 32,
                    "start": 3946
                  },
                  {
                    "length": 32,
                    "start": 6137
                  },
                  {
                    "length": 32,
                    "start": 15291
                  },
                  {
                    "length": 32,
                    "start": 15418
                  },
                  {
                    "length": 32,
                    "start": 15572
                  },
                  {
                    "length": 32,
                    "start": 15688
                  },
                  {
                    "length": 32,
                    "start": 16012
                  }
                ],
                "3564": [
                  {
                    "length": 32,
                    "start": 2120
                  },
                  {
                    "length": 32,
                    "start": 2406
                  },
                  {
                    "length": 32,
                    "start": 7233
                  },
                  {
                    "length": 32,
                    "start": 8683
                  },
                  {
                    "length": 32,
                    "start": 9289
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b6000803560e01c8062113e081461318957806302d05d3f14611c0457806306fdde03146130cc578063095ea7b31461302457806318160ddd1461300657806323b872dd14612f055780632494452d146127185780632e1a7d4d14612610578063313ce567146125f457806347e7ef24146123e45780634eadcca814612363578063531bcdb3146123455780635358fbda1461217f5780635fa7b58414611eff57806370a0823114611ec8578063715018a614611e605780638769b44914611c2b5780638da5cb5b14611c045780638e4e901814611be657806395d89b4114611ad9578063a216aa0614611797578063a9059cbb14611765578063aa6ca808146116cf578063ab83f98a1461163f578063af81c5b914611505578063b317650b1461086c578063c45a015514610828578063dd62ed3e146107d8578063e69d849d146106e4578063f2fde38b146106375763f9c4d3db1461017157600080fd5b346106345760403660031901126106345761018a613290565b602435610198811515613405565b6001600160a01b0382169081845260096020526101bb60ff604086205416613771565b600254926101ca841515613450565b6040926060919073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81149087805b600754811015610626576001600160a01b0361020782613388565b90549060031b1c1661022a8a6102258a610220856137bc565b61349b565b6134c4565b90604051610238898261331c565b600281528a36602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82148015610620576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105d65787916105e7575b505b6001600160a01b036102c0846133d4565b9116905287156105e1576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105d6578791610599575b505b6001600160a01b0361032a846133e1565b911690528287148080610592575b15610364575050505082808060019561035c94335af16103566134fc565b5061352c565b0188906101ec565b929392156103e557505060405163a9059cbb60e01b815233600482015260248101919091529260209184916044918391905af19182156103da576001926103ac575b5061035c565b6103cc9060203d81116103d3575b6103c4818361331c565b8101906134e4565b50386103a6565b503d6103ba565b6040513d8c823e3d90fd5b93945092909190156104955750600142019182421161048157918b916104249493604051809681948293637ff36ab560e01b8452339060048501613ab4565b03916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19182156103da57600192610466575061035c565b6103cc903d808d833e610479818361331c565b810190613692565b60248c634e487b7160e01b81526011600452fd5b906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169160208d6040519283809263095ea7b360e01b8252816104fa888a60048401602090939291936001600160a01b0360408201951681520152565b03925af180156105875761056b575b506001420192834211610557579161053f9493918d8094604051978895869485936338ed173960e01b8552339160048601613a7b565b03925af19182156103da57600192610466575061035c565b60248d634e487b7160e01b81526011600452fd5b6105829060203d81116103d3576103c4818361331c565b610509565b6040513d8f823e3d90fd5b5088610338565b90506020813d82116105ce575b816105b36020938361331c565b810103126105ca576105c4906135c2565b38610317565b8680fd5b3d91506105a6565b6040513d89823e3d90fd5b88610319565b90506020813d8211610618575b816106016020938361331c565b810103126105ca57610612906135c2565b386102ad565b3d91506105f4565b826102af565b50610631863361394d565b80f35b80fd5b5034610634576020366003190112610634576001600160a01b03610659613290565b6106616139ce565b1680156106b8576001600160a01b03600a548273ffffffffffffffffffffffffffffffffffffffff19821617600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b6024827f1e4fbdf700000000000000000000000000000000000000000000000000000000815280600452fd5b5034610634576040366003190112610634576106fe613290565b6024356001600160a01b03821690818452600960205261072460ff604086205416613771565b6040516323b872dd60e01b815233600482015230602482015260448101829052916020908390606490829088905af19081156107cd577f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f74926107aa926107b0575b50604051918291339583602090939291936001600160a01b0360408201951681520152565b0390a280f35b6107c89060203d6020116103d3576103c4818361331c565b610785565b6040513d86823e3d90fd5b5034610634576040366003190112610634576001600160a01b0360406107fc613290565b92826108066132a6565b9416815260016020522091166000526020526020604060002054604051908152f35b503461063457806003193601126106345760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346106345760203660031901126106345760043567ffffffffffffffff8111611501576040600319823603011261150157604051906040820182811067ffffffffffffffff8211176114ed576040528060040135600481101561121e57825260248101359067ffffffffffffffff821161121e5701366023820112156110c357826004820135916108fd83613354565b9261090b604051948561331c565b80845236602483830101116110c357806024602093018386013783010152602082019081526040517ff94f657c0000000000000000000000000000000000000000000000000000000081526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156107cd5784906114ad575b6001600160a01b0391501633036114695781519160048310159283611455576008549385805b8681101561144957600888528260ff8260051c7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3015460f88460031b161c1690611435576004811015611435578414610a16576001016109bb565b5050505090915060015b156113f15780516004811015610b3f5715611222575b80516004811015610b3f57600114610b53575b80516004811015610b3f57600214610ab1575b610a9a90610aab7f2dbb4029cc94c05452861994b3d66ab5d4b3f2b45418116b370c7981f2eebb9093604051938493602085526020850190516132bc565b51604080840152606083019061324f565b0390a180f35b8151908151820191604081840312610b3b57610acf602082016135c2565b9360408201519167ffffffffffffffff83116105ca577f2dbb4029cc94c05452861994b3d66ab5d4b3f2b45418116b370c7981f2eebb90956001600160a01b03610b2a610b31936020610aab9781610a9a9b0192010161370c565b9116613ae6565b9350509050610a5c565b8480fd5b602484634e487b7160e01b81526021600452fd5b9091825191825183016040848203126110c35760208401519067ffffffffffffffff821161121e576040610b9d6001600160a01b0393602080610ba495999799019187010161370c565b93016135c2565b168083526009602052610bbd60ff604085205416613771565b60609460409273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee831491855b8251811015610f56576001600160a01b03610bf882856133f1565b5116610c03816137bc565b8015610f4c5760405191610c178c8461331c565b600283528836602085013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81148015610f46576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610efc578c91610f0d575b505b6001600160a01b03610c9f866133d4565b911690528715610f07576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610efc578c91610ebf575b505b6001600160a01b03610d09866133e1565b91169052818903610d2257505050506001905b01610bdd565b15610dd657506001420191824211610dc257918991610d5993604051809581948293637ff36ab560e01b8452309060048501613ab4565b03916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af18015610db7579060019291610d9d575b50610d1c565b610db0903d808b833e610479818361331c565b5038610d97565b6040513d8a823e3d90fd5b60248a634e487b7160e01b81526011600452fd5b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201819052602482018490529291602090829060449082908f905af18015610eb457610e98575b506001420192834211610e845791610e6b93918b8094604051968795869485936338ed173960e01b8552309160048601613a7b565b03925af18015610db7579060019291610d9d5750610d1c565b60248b634e487b7160e01b81526011600452fd5b610eaf9060203d81116103d3576103c4818361331c565b610e36565b6040513d8d823e3d90fd5b90506020813d8211610ef4575b81610ed96020938361331c565b81010312610ef057610eea906135c2565b38610cf6565b8b80fd5b3d9150610ecc565b6040513d8e823e3d90fd5b88610cf8565b90506020813d8211610f3e575b81610f276020938361331c565b81010312610ef057610f38906135c2565b38610c8c565b3d9150610f1a565b81610c8e565b5050600190610d1c565b509594965050505050826001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166040516315ab88c960e31b8152602081600481855afa90811561110c5783916111d9575b5060206001600160a01b03916024604051809481936370a0823160e01b8352306004840152165afa90811561110c5783916111a4575b50610ff1575b5050610a49565b6040516315ab88c960e31b8152602081600481855afa90811561110c57839161115c575b5060206001600160a01b036004921692604051928380926315ab88c960e31b82525afa90811561110c578391611117575b5060206001600160a01b03916024604051809481936370a0823160e01b8352306004840152165afa90811561110c5783916110d2575b50813b156110c3578291602483926040519485938492632e1a7d4d60e01b845260048401525af180156110c75715610fea57816110b89161331c565b6110c3578238610fea565b8280fd5b6040513d84823e3d90fd5b9250506020823d602011611104575b816110ee6020938361331c565b810103126110ff578491513861107c565b600080fd5b3d91506110e1565b6040513d85823e3d90fd5b90506020813d602011611154575b816111326020938361331c565b810103126110c357602061114d6001600160a01b03926135c2565b9150611046565b3d9150611125565b90506020813d60201161119c575b816111776020938361331c565b810103126110c35760206001600160a01b036111946004936135c2565b925050611015565b3d915061116a565b9250506020823d6020116111d1575b816111c06020938361331c565b810103126110ff5784915138610fe4565b3d91506111b3565b90506020813d602011611216575b816111f46020938361331c565b810103126110c357602061120f6001600160a01b03926135c2565b9150610fae565b3d91506111e7565b8380fd5b90611237815160208082518301019101613692565b8051600754036113ad578391825b825184101561126d5761126560019161125e86866133f1565b5190613a6e565b930192611245565b61271091949350036113695780519067ffffffffffffffff82116113555768010000000000000000821161135557600654826006558083106112f7575b5060200160068552845b8281106112c357505050610a36565b60019060208351930192817ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0155016112b4565b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01827ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f015b81811061134a57506112aa565b86815560010161133d565b602485634e487b7160e01b81526041600452fd5b606460405162461bcd60e51b815260206004820152601160248201527f496e76616c696420726174696f2073756d0000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964206c656e6774680000000000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601260248201527f416374696f6e206e6f7420616c6c6f77656400000000000000000000000000006044820152fd5b602489634e487b7160e01b81526021600452fd5b50929394505050610a20565b602485634e487b7160e01b81526021600452fd5b606460405162461bcd60e51b815260206004820152601560248201527f4f6e6c7920656467657220697320616c6c6f77656400000000000000000000006044820152fd5b506020813d6020116114e5575b816114c76020938361331c565b8101031261121e576114e06001600160a01b03916135c2565b610995565b3d91506114ba565b602484634e487b7160e01b81526041600452fd5b5080fd5b50346106345760403660031901126106345761151f613290565b6115276139ce565b6001600160a01b03811690818352600960205260ff6040842054166115fb57600754680100000000000000008110156114ed579061156e82600161158d9401600755613388565b9091906001600160a01b038084549260031b9316831b921b1916179055565b600654680100000000000000008110156115e7576115b48160016115ce93016006556133b9565b6024359082549060031b91821b91600019901b1916179055565b8152600960205260408120805460ff1916600117905580f35b602483634e487b7160e01b81526041600452fd5b606460405162461bcd60e51b815260206004820152600c60248201527f546f6b656e2065786973747300000000000000000000000000000000000000006044820152fd5b5060203660031901126106345760043573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8252600960205261167b60ff604084205416613577565b611686813414613647565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f7460403392a280f35b503461063457806003193601126106345760405180916020600754928381520191600782527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688915b818110611746576117428561172e8187038261331c565b6040519182916020835260208301906132df565b0390f35b82546001600160a01b0316845260209093019260019283019201611717565b50346106345760403660031901126106345761178c611782613290565b6024359033613856565b602060405160018152f35b5034610634576020366003190112610634576004356117b7811515613405565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260096020526117e360ff604084205416613771565b600254906117f2821515613450565b60409060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685805b600754811015611ace576001600160a01b0361183f82613388565b90549060031b1c166118588861022588610220856137bc565b90604051611866878261331c565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82148015611ac8576040516315ab88c960e31b81526020816004818b5afa9081156105d6578791611a8f575b505b6001600160a01b036118c5846133d4565b911690526040516315ab88c960e31b81526020816004818b5afa9081156105d6578791611a56575b506001600160a01b036118ff846133e1565b911690528080611a4e575b1561192f5750505082808060019561192794335af16103566134fc565b018690611824565b91929115611994575060405163a9059cbb60e01b815233600482015260248101919091529260209184916044918391905af1918215610db757600192611976575b50611927565b61198d9060203d81116103d3576103c4818361331c565b5038611970565b60405163095ea7b360e01b81526001600160a01b0387166004820152602481018390529094509091602090829060449082908e905af180156103da57611a32575b506001420192834211610dc257908991611a0560405195869384936338ed173960e01b8552339160048601613a7b565b038183875af1918215610db757600192611a1f5750611927565b61198d903d808b833e610479818361331c565b611a499060203d81116103d3576103c4818361331c565b6119d5565b50600161190a565b90506020813d8211611a87575b81611a706020938361331c565b810103126105ca57611a81906135c2565b386118ed565b3d9150611a63565b90506020813d8211611ac0575b81611aa96020938361331c565b810103126105ca57611aba906135c2565b386118b2565b3d9150611a9c565b826118b4565b50610631843361394d565b50346106345780600319360112610634576040519080600454908160011c91600181168015611bdc575b602084108114611bc857838652908115611ba15750600114611b44575b61174284611b308186038261331c565b60405191829160208352602083019061324f565b600481527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b808210611b8757509091508101602001611b3082611b20565b919260018160209254838588010152019101909291611b6e565b60ff191660208087019190915292151560051b85019092019250611b309150839050611b20565b602483634e487b7160e01b81526022600452fd5b92607f1692611b03565b50346106345780600319360112610634576020600554604051908152f35b503461063457806003193601126106345760206001600160a01b03600a5416604051908152f35b5080600319360112610634576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016803303611e1c5760ff600c54166002811015611e0857611dc457600b543410611d80576020600491604051928380927f78d1c86d0000000000000000000000000000000000000000000000000000000082525afa80156110c7578290611d40575b6001600160a01b03915016816001600160a01b03600a5416823b156115015781906024604051809581937f23024408000000000000000000000000000000000000000000000000000000008352600483015234905af18015611d3357611d255780f35b611d2e9161331c565b388180f35b50604051903d90823e3d90fd5b506020813d602011611d78575b81611d5a6020938361331c565b8101031261150157611d736001600160a01b03916135c2565b611cc2565b3d9150611d4d565b606460405162461bcd60e51b815260206004820152601660248201527f496e73756666696369656e7420666f726b20636f7374000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600a60248201527f446973616c6c6f776564000000000000000000000000000000000000000000006044820152fd5b602483634e487b7160e01b81526021600452fd5b606460405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920666163746f727920697320616c6c6f7765640000000000000000006044820152fd5b5034610634578060031936011261063457611e796139ce565b806001600160a01b03600a5473ffffffffffffffffffffffffffffffffffffffff198116600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346106345760203660031901126106345760406020916001600160a01b03611eef613290565b1681528083522054604051908152f35b5034610634576020366003190112610634576001600160a01b03611f21613290565b611f296139ce565b16808252600960205260ff6040832054161561213b576040516370a0823160e01b8152306004820152602081602481855afa90811561110c578391612109575b506120c557815b600754808210156120bf57826001600160a01b03611f8d84613388565b90549060031b1c1614611fa35750600101611f70565b6000198101908111612097576001600160a01b03611fc3611fd492613388565b90549060031b1c1661156e83613388565b60075480156120ab5760001901611fea81613388565b6001600160a01b0382549160031b1b191690556007556006546000198101908111612097579061202c61201f612045936133b9565b90549060031b1c916133b9565b90919082549060031b91821b91600019901b1916179055565b6006548015612083576000190161205b816133b9565b8154906000199060031b1b19169055600655815260096020526040812060ff19815416905580f35b602483634e487b7160e01b81526031600452fd5b602484634e487b7160e01b81526011600452fd5b602484634e487b7160e01b81526031600452fd5b50505080f35b606460405162461bcd60e51b815260206004820152601060248201527f4e6f6e2d7a65726f2062616c616e6365000000000000000000000000000000006044820152fd5b90506020813d602011612133575b816121246020938361331c565b810103126110c3575138611f69565b3d9150612117565b606460405162461bcd60e51b815260206004820152600f60248201527f546f6b656e206e6f7420666f756e6400000000000000000000000000000000006044820152fd5b506020366003190112610634576004356121976139ce565b6121a2813414613647565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260096020526121ce60ff604084205416613577565b6040516322d4d43360e21b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561110c578391612300575b5060206001600160a01b03916044604051809481936333fa33cb60e11b835287600484015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6024840152165afa801561110c5783906122cc575b612283915061227d6005548210156135d6565b33613a10565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f49551760403392a280f35b506020813d6020116122f8575b816122e66020938361331c565b810103126110c357612283905161226a565b3d91506122d9565b90506020813d60201161233d575b8161231b6020938361331c565b810103126110c35760206123366001600160a01b03926135c2565b915061221b565b3d915061230e565b50346106345780600319360112610634576020600b54604051908152f35b503461063457806003193601126106345760405180916020600654928381520191600682527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f915b8181106123ce57611742856123c28187038261331c565b60405191829182613215565b82548452602090930192600192830192016123ab565b5034610634576040366003190112610634576123fe613290565b6024356124096139ce565b6001600160a01b038216808452600960205261242b60ff604086205416613577565b604051916322d4d43360e21b83526020836004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9283156125705785936125af575b5060206001600160a01b03936044604051809681936333fa33cb60e11b8352866004840152876024840152165afa92831561257057859361257b575b506124c46005548410156135d6565b6040516323b872dd60e01b815233600482015230602482015260448101829052916020908390606490829089905af18015612570577fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f495517936107aa9361252f92612553575b5033613a10565b604051918291339583602090939291936001600160a01b0360408201951681520152565b61256b9060203d6020116103d3576103c4818361331c565b612528565b6040513d87823e3d90fd5b9092506020813d6020116125a7575b816125976020938361331c565b81010312610b3b575191386124b5565b3d915061258a565b92506020833d6020116125ec575b816125ca6020938361331c565b81010312610b3b5760206125e56001600160a01b03946135c2565b9350612479565b3d91506125bd565b5034610634578060031936011261063457602060405160128152f35b503461063457602036600319011261063457600435612630811515613405565b6002549061263f821515613450565b82805b60075481101561270d576001600160a01b0361265d82613388565b90549060031b1c166126768561022586610220856137bc565b9073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036126b057508280806001956126a894335af16103566134fc565b018390612642565b60405163a9059cbb60e01b81523360048201526024810192909252909260209184916044918391905af1918215612570576001926126ef575b506126a8565b6127069060203d81116103d3576103c4818361331c565b50386126e9565b50610631823361394d565b50346106345780600319360112610634576040518060206008549283815201918183600886527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee39286905b80601f830110612c7c5761287c945491818110612c61575b818110612c43575b818110612c25575b818110612c07575b818110612bea575b818110612bcc575b818110612bae575b818110612b90575b818110612b72575b818110612b54575b818110612b36575b818110612b18575b818110612afa575b818110612adc575b818110612abe575b818110612aa0575b818110612a82575b818110612a64575b818110612a46575b818110612a28575b818110612a0a575b8181106129ec575b8181106129ce575b8181106129b0575b818110612992575b818110612974575b818110612956575b818110612938575b81811061291a575b8181106128fc575b8181106128de575b106128c7575b50939293038361331c565b604051928392602084019060208552518091526040840192915b8181106128a4575050500390f35b91935091602080826128b960019488516132bc565b019401910191849392612896565b906128d78160209360f81c6132bc565b0138612871565b926020816128f460019360ff8760f01c166132bc565b01930161286b565b9260208161291260019360ff8760e81c166132bc565b019301612863565b9260208161293060019360ff8760e01c166132bc565b01930161285b565b9260208161294e60019360ff8760d81c166132bc565b019301612853565b9260208161296c60019360ff8760d01c166132bc565b01930161284b565b9260208161298a60019360ff8760c81c166132bc565b019301612843565b926020816129a860019360ff8760c01c166132bc565b01930161283b565b926020816129c660019360ff8760b81c166132bc565b019301612833565b926020816129e460019360ff8760b01c166132bc565b01930161282b565b92602081612a0260019360ff8760a81c166132bc565b019301612823565b92602081612a2060019360ff8760a01c166132bc565b01930161281b565b92602081612a3e60019360ff8760981c166132bc565b019301612813565b92602081612a5c60019360ff8760901c166132bc565b01930161280b565b92602081612a7a60019360ff8760881c166132bc565b019301612803565b92602081612a9860019360ff8760801c166132bc565b0193016127fb565b92602081612ab660019360ff8760781c166132bc565b0193016127f3565b92602081612ad460019360ff8760701c166132bc565b0193016127eb565b92602081612af260019360ff8760681c166132bc565b0193016127e3565b92602081612b1060019360ff8760601c166132bc565b0193016127db565b92602081612b2e60019360ff8760581c166132bc565b0193016127d3565b92602081612b4c60019360ff8760501c166132bc565b0193016127cb565b92602081612b6a60019360ff8760481c166132bc565b0193016127c3565b92602081612b8860019360ff8760401c166132bc565b0193016127bb565b92602081612ba660019360ff8760381c166132bc565b0193016127b3565b92602081612bc460019360ff8760301c166132bc565b0193016127ab565b92602081612be260019360ff8760281c166132bc565b0193016127a3565b92602081612bff60019360ff87851c166132bc565b01930161279b565b92602081612c1d60019360ff8760181c166132bc565b019301612793565b92602081612c3b60019360ff8760101c166132bc565b01930161278b565b92602081612c5960019360ff8760081c166132bc565b019301612783565b92602081612c7460019360ff87166132bc565b01930161277b565b916020919350610400600191612ef78754612c9a8360ff83166132bc565b612cac86840160ff8360081c166132bc565b612cbf6040840160ff8360101c166132bc565b612cd26060840160ff8360181c166132bc565b612ce46080840160ff83891c166132bc565b612cf760a0840160ff8360281c166132bc565b612d0a60c0840160ff8360301c166132bc565b612d1d60e0840160ff8360381c166132bc565b612d31610100840160ff8360401c166132bc565b612d45610120840160ff8360481c166132bc565b612d59610140840160ff8360501c166132bc565b612d6d610160840160ff8360581c166132bc565b612d81610180840160ff8360601c166132bc565b612d956101a0840160ff8360681c166132bc565b612da96101c0840160ff8360701c166132bc565b612dbd6101e0840160ff8360781c166132bc565b612dd1610200840160ff8360801c166132bc565b612de5610220840160ff8360881c166132bc565b612df9610240840160ff8360901c166132bc565b612e0d610260840160ff8360981c166132bc565b612e21610280840160ff8360a01c166132bc565b612e356102a0840160ff8360a81c166132bc565b612e496102c0840160ff8360b01c166132bc565b612e5d6102e0840160ff8360b81c166132bc565b612e71610300840160ff8360c01c166132bc565b612e85610320840160ff8360c81c166132bc565b612e99610340840160ff8360d01c166132bc565b612ead610360840160ff8360d81c166132bc565b612ec1610380840160ff8360e01c166132bc565b612ed56103a0840160ff8360e81c166132bc565b612ee96103c0840160ff8360f01c166132bc565b6103e083019060f81c6132bc565b019401920184929391612763565b503461063457606036600319011261063457612f1f613290565b612f276132a6565b604435916001600160a01b0381168085526001602052604085206001600160a01b03331686526020526040852054906000198210612f6c575b505061178c9350613856565b848210612fd2578015612fbf573315612fac57604086869261178c985260016020528181206001600160a01b033316825260205220910390553880612f60565b602486634a1406b160e11b815280600452fd5b60248663e602df0560e01b815280600452fd5b60648686847ffb8f41b200000000000000000000000000000000000000000000000000000000835233600452602452604452fd5b50346106345780600319360112610634576020600254604051908152f35b50346106345760403660031901126106345761303e613290565b6024359033156130b9576001600160a01b03169182156130a65760408291338152600160205281812085825260205220556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b80634a1406b160e11b6024925280600452fd5b60248363e602df0560e01b815280600452fd5b50346106345780600319360112610634576040519080600354908160011c9160018116801561317f575b602084108114611bc857838652908115611ba157506001146131225761174284611b308186038261331c565b600381527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b80821061316557509091508101602001611b3082611b20565b91926001816020925483858801015201910190929161314c565b92607f16926130f6565b50346106345780600319360112610634576007546131a681613370565b916131b4604051938461331c565b818352601f196131c383613370565b013660208501375b8181106131e057604051806117428582613215565b806132046001600160a01b036131f7600194613388565b90549060031b1c166137bc565b61320e82866133f1565b52016131cb565b602060408183019282815284518094520192019060005b8181106132395750505090565b825184526020938401939092019160010161322c565b919082519283825260005b84811061327b575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161325a565b600435906001600160a01b03821682036110ff57565b602435906001600160a01b03821682036110ff57565b9060048210156132c95752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b8181106132fd5750505090565b82516001600160a01b03168452602093840193909201916001016132f0565b90601f8019910116810190811067ffffffffffffffff82111761333e57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161333e57601f01601f191660200190565b67ffffffffffffffff811161333e5760051b60200190565b6007548110156133a357600760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6006548110156133a357600660005260206000200190600090565b8051156133a35760200190565b8051600110156133a35760400190565b80518210156133a35760209160051b010190565b1561340c57565b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420616d6f756e740000000000000000000000000000000000006044820152fd5b1561345757565b606460405162461bcd60e51b815260206004820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b818102929181159184041417156134ae57565b634e487b7160e01b600052601160045260246000fd5b81156134ce570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126110ff575180151581036110ff5790565b3d15613527573d9061350d82613354565b9161351b604051938461331c565b82523d6000602084013e565b606090565b1561353357565b606460405162461bcd60e51b815260206004820152601360248201527f455448207472616e73666572206661696c6564000000000000000000000000006044820152fd5b1561357e57565b606460405162461bcd60e51b815260206004820152601160248201527f455448206e6f7420737570706f727465640000000000000000000000000000006044820152fd5b51906001600160a01b03821682036110ff57565b156135dd57565b608460405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e74206465706f73697420616d6f756e7420696e207560448201527f73640000000000000000000000000000000000000000000000000000000000006064820152fd5b1561364e57565b606460405162461bcd60e51b815260206004820152601460248201527f496e636f72726563742045544820616d6f756e740000000000000000000000006044820152fd5b6020818303126110ff5780519067ffffffffffffffff82116110ff57019080601f830112156110ff5781516136c681613370565b926136d4604051948561331c565b81845260208085019260051b8201019283116110ff57602001905b8282106136fc5750505090565b81518152602091820191016136ef565b9080601f830112156110ff57815161372381613370565b92613731604051948561331c565b81845260208085019260051b8201019283116110ff57602001905b8282106137595750505090565b60208091613766846135c2565b81520191019061374c565b1561377857565b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420746f6b656e000000000000000000000000000000000000006044820152fd5b6000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036137e95750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa91821561384a57809261381957505090565b9091506020823d602011613842575b816138356020938361331c565b8101031261063457505190565b3d9150613828565b604051903d90823e3d90fd5b6001600160a01b031690811561391e576001600160a01b03169182156138ef5760008281528060205260408120548281106138d55791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b0316801561391e576000918183528260205260408320548181106139b557817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b6001600160a01b03600a541633036139e257565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6001600160a01b03169081156138ef57613a2c81600254613a6e565b6002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009284845283825260408420818154019055604051908152a3565b919082018092116134ae57565b90613aa96080936001600160a01b03929796959784526000602085015260a0604085015260a08401906132df565b951660608201520152565b6001600160a01b03613adb60609396959496600084526080602085015260808401906132df565b951660408201520152565b90916000906001600160a01b0383168083526009602052613b0d60ff604085205416613771565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8114801561411b57475b8015614112578651939593613b40916134c4565b6060969093604091865b8151811015613e78576001600160a01b03613b6582846133f1565b51168089526009602052613b7f60ff60408b205416613771565b60405190613b8d8c8361331c565b60028252853660208401378615613e72576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610eb4578b91613e39575b505b6001600160a01b03613bfe846133d4565b9116905273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8103613e33576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610eb4578b91613df6575b505b6001600160a01b03613c7d846133e1565b911690528703613c9257506001905b01613b4a565b8515613d31576001420190814211610dc257613cc7918a916040519384928392637ff36ab560e01b8452309060048501613ab4565b03818b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af18015613d26579060019291613d0c575b50613c8c565b613d1f903d808c833e610479818361331c565b5038613d06565b6040513d8b823e3d90fd5b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201819052602482018a9052906020816044818e8d5af18015610eb457613dda575b506001420191824211610e8457918a918a83613dc195604051968795869485936338ed173960e01b8552309160048601613a7b565b03925af18015613d26579060019291613d0c5750613c8c565b613df19060203d81116103d3576103c4818361331c565b613d8c565b90506020813d8211613e2b575b81613e106020938361331c565b81010312613e2757613e21906135c2565b38613c6a565b8a80fd5b3d9150613e03565b80613c6c565b90506020813d8211613e6a575b81613e536020938361331c565b81010312613e2757613e64906135c2565b38613beb565b3d9150613e46565b84613bed565b505050505050509091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166040516315ab88c960e31b8152602081600481855afa90811561110c5783916140cd575b5060206001600160a01b03916024604051809481936370a0823160e01b8352306004840152165afa90811561110c57839161409b575b50613f0f575050565b6040516315ab88c960e31b8152602081600481855afa90811561110c578391614053575b5060206001600160a01b036004921692604051928380926315ab88c960e31b82525afa90811561110c57839161400e575b5060206001600160a01b03916024604051809481936370a0823160e01b8352306004840152165afa90811561110c578391613fdc575b50813b156110c3578291602483926040519485938492632e1a7d4d60e01b845260048401525af180156110c757613fcf575050565b81613fd99161331c565b50565b90506020813d602011614006575b81613ff76020938361331c565b810103126110c3575138613f9a565b3d9150613fea565b90506020813d60201161404b575b816140296020938361331c565b810103126110c35760206140446001600160a01b03926135c2565b9150613f64565b3d915061401c565b90506020813d602011614093575b8161406e6020938361331c565b810103126110c35760206001600160a01b0361408b6004936135c2565b925050613f33565b3d9150614061565b90506020813d6020116140c5575b816140b66020938361331c565b810103126110c3575138613f06565b3d91506140a9565b90506020813d60201161410a575b816140e86020938361331c565b810103126110c35760206141036001600160a01b03926135c2565b9150613ed0565b3d91506140db565b50505092505050565b6040516370a0823160e01b8152306004820152602081602481865afa90811561257057859161414b575b50613b2c565b90506020813d602011614175575b816141666020938361331c565b81010312610b3b575138614145565b3d915061415956fea264697066735822122033435b1119b5fc1e3ee4ac353b3d5eb3948a02f62d11de26ee438c9a8cba2ead64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x113E08 EQ PUSH2 0x3189 JUMPI DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x1C04 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x30CC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3024 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3006 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2F05 JUMPI DUP1 PUSH4 0x2494452D EQ PUSH2 0x2718 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2610 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25F4 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x23E4 JUMPI DUP1 PUSH4 0x4EADCCA8 EQ PUSH2 0x2363 JUMPI DUP1 PUSH4 0x531BCDB3 EQ PUSH2 0x2345 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x217F JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0x1EFF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EC8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E60 JUMPI DUP1 PUSH4 0x8769B449 EQ PUSH2 0x1C2B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C04 JUMPI DUP1 PUSH4 0x8E4E9018 EQ PUSH2 0x1BE6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AD9 JUMPI DUP1 PUSH4 0xA216AA06 EQ PUSH2 0x1797 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1765 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x16CF JUMPI DUP1 PUSH4 0xAB83F98A EQ PUSH2 0x163F JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x1505 JUMPI DUP1 PUSH4 0xB317650B EQ PUSH2 0x86C JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x828 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x637 JUMPI PUSH4 0xF9C4D3DB EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x18A PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x198 DUP2 ISZERO ISZERO PUSH2 0x3405 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1BB PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH2 0x1CA DUP5 ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 SWAP3 PUSH1 0x60 SWAP2 SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 DUP8 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x626 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x207 DUP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x22A DUP11 PUSH2 0x225 DUP11 PUSH2 0x220 DUP6 PUSH2 0x37BC JUMP JUMPDEST PUSH2 0x349B JUMP JUMPDEST PUSH2 0x34C4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x238 DUP10 DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP11 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x5E7 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2C0 DUP5 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x599 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x32A DUP5 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP3 DUP8 EQ DUP1 DUP1 PUSH2 0x592 JUMPI JUMPDEST ISZERO PUSH2 0x364 JUMPI POP POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x35C SWAP5 CALLER GAS CALL PUSH2 0x356 PUSH2 0x34FC JUMP JUMPDEST POP PUSH2 0x352C JUMP JUMPDEST ADD DUP9 SWAP1 PUSH2 0x1EC JUMP JUMPDEST SWAP3 SWAP4 SWAP3 ISZERO PUSH2 0x3E5 JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x1 SWAP3 PUSH2 0x3AC JUMPI JUMPDEST POP PUSH2 0x35C JUMP JUMPDEST PUSH2 0x3CC SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI JUMPDEST PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x34E4 JUMP JUMPDEST POP CODESIZE PUSH2 0x3A6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP5 POP SWAP3 SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x495 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x481 JUMPI SWAP2 DUP12 SWAP2 PUSH2 0x424 SWAP5 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE CALLER SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x3AB4 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x1 SWAP3 PUSH2 0x466 JUMPI POP PUSH2 0x35C JUMP JUMPDEST PUSH2 0x3CC SWAP1 RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0x24 DUP13 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH1 0x20 DUP14 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 PUSH2 0x4FA DUP9 DUP11 PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x587 JUMPI PUSH2 0x56B JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0x557 JUMPI SWAP2 PUSH2 0x53F SWAP5 SWAP4 SWAP2 DUP14 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x1 SWAP3 PUSH2 0x466 JUMPI POP PUSH2 0x35C JUMP JUMPDEST PUSH1 0x24 DUP14 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x582 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x5CE JUMPI JUMPDEST DUP2 PUSH2 0x5B3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x5C4 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x317 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0x319 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x618 JUMPI JUMPDEST DUP2 PUSH2 0x601 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x612 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x2AD JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5F4 JUMP JUMPDEST DUP3 PUSH2 0x2AF JUMP JUMPDEST POP PUSH2 0x631 DUP7 CALLER PUSH2 0x394D JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x659 PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x661 PUSH2 0x39CE JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x6FE PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x724 PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7CD JUMPI PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 SWAP3 PUSH2 0x7AA SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x7C8 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH2 0x7FC PUSH2 0x3290 JUMP JUMPDEST SWAP3 DUP3 PUSH2 0x806 PUSH2 0x32A6 JUMP JUMPDEST SWAP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1501 JUMPI PUSH1 0x40 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1501 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x14ED JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x121E JUMPI DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x121E JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x10C3 JUMPI DUP3 PUSH1 0x4 DUP3 ADD CALLDATALOAD SWAP2 PUSH2 0x8FD DUP4 PUSH2 0x3354 JUMP JUMPDEST SWAP3 PUSH2 0x90B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x331C JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x10C3 JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH32 0xF94F657C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x7CD JUMPI DUP5 SWAP1 PUSH2 0x14AD JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND CALLER SUB PUSH2 0x1469 JUMPI DUP2 MLOAD SWAP2 PUSH1 0x4 DUP4 LT ISZERO SWAP3 DUP4 PUSH2 0x1455 JUMPI PUSH1 0x8 SLOAD SWAP4 DUP6 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1449 JUMPI PUSH1 0x8 DUP9 MSTORE DUP3 PUSH1 0xFF DUP3 PUSH1 0x5 SHR PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SLOAD PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR AND SWAP1 PUSH2 0x1435 JUMPI PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1435 JUMPI DUP5 EQ PUSH2 0xA16 JUMPI PUSH1 0x1 ADD PUSH2 0x9BB JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 POP PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x13F1 JUMPI DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB3F JUMPI ISZERO PUSH2 0x1222 JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x1 EQ PUSH2 0xB53 JUMPI JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x2 EQ PUSH2 0xAB1 JUMPI JUMPDEST PUSH2 0xA9A SWAP1 PUSH2 0xAAB PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x20 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 MLOAD PUSH2 0x32BC JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x324F JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP2 MLOAD SWAP1 DUP2 MLOAD DUP3 ADD SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0xB3B JUMPI PUSH2 0xACF PUSH1 0x20 DUP3 ADD PUSH2 0x35C2 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x5CA JUMPI PUSH32 0x2DBB4029CC94C05452861994B3D66AB5D4B3F2B45418116B370C7981F2EEBB90 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB2A PUSH2 0xB31 SWAP4 PUSH1 0x20 PUSH2 0xAAB SWAP8 DUP2 PUSH2 0xA9A SWAP12 ADD SWAP3 ADD ADD PUSH2 0x370C JUMP JUMPDEST SWAP2 AND PUSH2 0x3AE6 JUMP JUMPDEST SWAP4 POP POP SWAP1 POP PUSH2 0xA5C JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 SWAP2 DUP3 MLOAD SWAP2 DUP3 MLOAD DUP4 ADD PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x121E JUMPI PUSH1 0x40 PUSH2 0xB9D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 DUP1 PUSH2 0xBA4 SWAP6 SWAP10 SWAP8 SWAP10 ADD SWAP2 DUP8 ADD ADD PUSH2 0x370C JUMP JUMPDEST SWAP4 ADD PUSH2 0x35C2 JUMP JUMPDEST AND DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0xBBD PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x60 SWAP5 PUSH1 0x40 SWAP3 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP4 EQ SWAP2 DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBF8 DUP3 DUP6 PUSH2 0x33F1 JUMP JUMPDEST MLOAD AND PUSH2 0xC03 DUP2 PUSH2 0x37BC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xC17 DUP13 DUP5 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP4 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP1 ISZERO PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEFC JUMPI DUP13 SWAP2 PUSH2 0xF0D JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC9F DUP7 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 ISZERO PUSH2 0xF07 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEFC JUMPI DUP13 SWAP2 PUSH2 0xEBF JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD09 DUP7 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP2 DUP10 SUB PUSH2 0xD22 JUMPI POP POP POP POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0xBDD JUMP JUMPDEST ISZERO PUSH2 0xDD6 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xDC2 JUMPI SWAP2 DUP10 SWAP2 PUSH2 0xD59 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x3AB4 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0xDB7 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xD9D JUMPI JUMPDEST POP PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xDB0 SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP16 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xE98 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xE84 JUMPI SWAP2 PUSH2 0xE6B SWAP4 SWAP2 DUP12 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xDB7 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xD9D JUMPI POP PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x24 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xEAF SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xEF4 JUMPI JUMPDEST DUP2 PUSH2 0xED9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEF0 JUMPI PUSH2 0xEEA SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0xCF6 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0xCF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xF3E JUMPI JUMPDEST DUP2 PUSH2 0xF27 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEF0 JUMPI PUSH2 0xF38 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0xC8C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF1A JUMP JUMPDEST DUP2 PUSH2 0xC8E JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 PUSH2 0xD1C JUMP JUMPDEST POP SWAP6 SWAP5 SWAP7 POP POP POP POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x11D9 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x11A4 JUMPI JUMPDEST POP PUSH2 0xFF1 JUMPI JUMPDEST POP POP PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x115C JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SWAP3 AND SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x1117 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x10D2 JUMPI JUMPDEST POP DUP2 EXTCODESIZE ISZERO PUSH2 0x10C3 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x10C7 JUMPI ISZERO PUSH2 0xFEA JUMPI DUP2 PUSH2 0x10B8 SWAP2 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x10C3 JUMPI DUP3 CODESIZE PUSH2 0xFEA JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1104 JUMPI JUMPDEST DUP2 PUSH2 0x10EE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10FF JUMPI DUP5 SWAP2 MLOAD CODESIZE PUSH2 0x107C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1154 JUMPI JUMPDEST DUP2 PUSH2 0x1132 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x114D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1046 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x119C JUMPI JUMPDEST DUP2 PUSH2 0x1177 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1194 PUSH1 0x4 SWAP4 PUSH2 0x35C2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1015 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x116A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11D1 JUMPI JUMPDEST DUP2 PUSH2 0x11C0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10FF JUMPI DUP5 SWAP2 MLOAD CODESIZE PUSH2 0xFE4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1216 JUMPI JUMPDEST DUP2 PUSH2 0x11F4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x120F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11E7 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x1237 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3692 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x7 SLOAD SUB PUSH2 0x13AD JUMPI DUP4 SWAP2 DUP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x126D JUMPI PUSH2 0x1265 PUSH1 0x1 SWAP2 PUSH2 0x125E DUP7 DUP7 PUSH2 0x33F1 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x3A6E JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x1245 JUMP JUMPDEST PUSH2 0x2710 SWAP2 SWAP5 SWAP4 POP SUB PUSH2 0x1369 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1355 JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x1355 JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x12F7 JUMPI JUMPDEST POP PUSH1 0x20 ADD PUSH1 0x6 DUP6 MSTORE DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x12C3 JUMPI POP POP POP PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SSTORE ADD PUSH2 0x12B4 JUMP JUMPDEST PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP3 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x134A JUMPI POP PUSH2 0x12AA JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x133D JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726174696F2073756D000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C656E677468000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E206E6F7420616C6C6F7765640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST POP SWAP3 SWAP4 SWAP5 POP POP POP PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920656467657220697320616C6C6F7765640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x14E5 JUMPI JUMPDEST DUP2 PUSH2 0x14C7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x121E JUMPI PUSH2 0x14E0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x35C2 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x151F PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x1527 PUSH2 0x39CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x15FB JUMPI PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x14ED JUMPI SWAP1 PUSH2 0x156E DUP3 PUSH1 0x1 PUSH2 0x158D SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x3388 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x15E7 JUMPI PUSH2 0x15B4 DUP2 PUSH1 0x1 PUSH2 0x15CE SWAP4 ADD PUSH1 0x6 SSTORE PUSH2 0x33B9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206578697374730000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x167B PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3577 JUMP JUMPDEST PUSH2 0x1686 DUP2 CALLVALUE EQ PUSH2 0x3647 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x7 DUP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x1746 JUMPI PUSH2 0x1742 DUP6 PUSH2 0x172E DUP2 DUP8 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x32DF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1717 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x178C PUSH2 0x1782 PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x17B7 DUP2 ISZERO ISZERO PUSH2 0x3405 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x17E3 PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x17F2 DUP3 ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1ACE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x183F DUP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x1858 DUP9 PUSH2 0x225 DUP9 PUSH2 0x220 DUP6 PUSH2 0x37BC JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1866 DUP8 DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0x1AC8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x1A8F JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x18C5 DUP5 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5D6 JUMPI DUP8 SWAP2 PUSH2 0x1A56 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x18FF DUP5 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP1 DUP1 PUSH2 0x1A4E JUMPI JUMPDEST ISZERO PUSH2 0x192F JUMPI POP POP POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x1927 SWAP5 CALLER GAS CALL PUSH2 0x356 PUSH2 0x34FC JUMP JUMPDEST ADD DUP7 SWAP1 PUSH2 0x1824 JUMP JUMPDEST SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0x1994 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1976 JUMPI JUMPDEST POP PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x198D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP5 POP SWAP1 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP15 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH2 0x1A32 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0xDC2 JUMPI SWAP1 DUP10 SWAP2 PUSH2 0x1A05 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB DUP2 DUP4 DUP8 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1A1F JUMPI POP PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x198D SWAP1 RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x1A49 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x19D5 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x190A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1A87 JUMPI JUMPDEST DUP2 PUSH2 0x1A70 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x1A81 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x18ED JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A63 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1AC0 JUMPI JUMPDEST DUP2 PUSH2 0x1AA9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CA JUMPI PUSH2 0x1ABA SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x18B2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A9C JUMP JUMPDEST DUP3 PUSH2 0x18B4 JUMP JUMPDEST POP PUSH2 0x631 DUP5 CALLER PUSH2 0x394D JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x4 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1BDC JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x1BC8 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1BA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B44 JUMPI JUMPDEST PUSH2 0x1742 DUP5 PUSH2 0x1B30 DUP2 DUP7 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x324F JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1B87 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1B30 DUP3 PUSH2 0x1B20 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x1B30 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x1B03 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP1 CALLER SUB PUSH2 0x1E1C JUMPI PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1E08 JUMPI PUSH2 0x1DC4 JUMPI PUSH1 0xB SLOAD CALLVALUE LT PUSH2 0x1D80 JUMPI PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x78D1C86D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x10C7 JUMPI DUP3 SWAP1 PUSH2 0x1D40 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND DUP3 EXTCODESIZE ISZERO PUSH2 0x1501 JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH32 0x2302440800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1D33 JUMPI PUSH2 0x1D25 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x1D2E SWAP2 PUSH2 0x331C JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D78 JUMPI JUMPDEST DUP2 PUSH2 0x1D5A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1501 JUMPI PUSH2 0x1D73 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x35C2 JUMP JUMPDEST PUSH2 0x1CC2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420666F726B20636F737400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973616C6C6F77656400000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F727920697320616C6C6F776564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH2 0x1E79 PUSH2 0x39CE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1EEF PUSH2 0x3290 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1F21 PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x1F29 PUSH2 0x39CE JUMP JUMPDEST AND DUP1 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x213B JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x2109 JUMPI JUMPDEST POP PUSH2 0x20C5 JUMPI DUP2 JUMPDEST PUSH1 0x7 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x20BF JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1F8D DUP5 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x1FA3 JUMPI POP PUSH1 0x1 ADD PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x2097 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1FC3 PUSH2 0x1FD4 SWAP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x156E DUP4 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x20AB JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1FEA DUP2 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x2097 JUMPI SWAP1 PUSH2 0x202C PUSH2 0x201F PUSH2 0x2045 SWAP4 PUSH2 0x33B9 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x33B9 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x2083 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x205B DUP2 PUSH2 0x33B9 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x6 SSTORE DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST POP POP POP DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D7A65726F2062616C616E636500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2133 JUMPI JUMPDEST DUP2 PUSH2 0x2124 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI MLOAD CODESIZE PUSH2 0x1F69 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2197 PUSH2 0x39CE JUMP JUMPDEST PUSH2 0x21A2 DUP2 CALLVALUE EQ PUSH2 0x3647 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x21CE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x3577 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x2300 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL DUP1 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP1 PUSH2 0x22CC JUMPI JUMPDEST PUSH2 0x2283 SWAP2 POP PUSH2 0x227D PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x35D6 JUMP JUMPDEST CALLER PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x22F8 JUMPI JUMPDEST DUP2 PUSH2 0x22E6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH2 0x2283 SWAP1 MLOAD PUSH2 0x226A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x22D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x233D JUMPI JUMPDEST DUP2 PUSH2 0x231B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x2336 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x221B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x230E JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x6 DUP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x23CE JUMPI PUSH2 0x1742 DUP6 PUSH2 0x23C2 DUP2 DUP8 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3215 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x23AB JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x23FE PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x2409 PUSH2 0x39CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x242B PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x3577 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2570 JUMPI DUP6 SWAP4 PUSH2 0x25AF JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE DUP8 PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2570 JUMPI DUP6 SWAP4 PUSH2 0x257B JUMPI JUMPDEST POP PUSH2 0x24C4 PUSH1 0x5 SLOAD DUP5 LT ISZERO PUSH2 0x35D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP10 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2570 JUMPI PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 SWAP4 PUSH2 0x7AA SWAP4 PUSH2 0x252F SWAP3 PUSH2 0x2553 JUMPI JUMPDEST POP CALLER PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x256B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x25A7 JUMPI JUMPDEST DUP2 PUSH2 0x2597 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB3B JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x24B5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x258A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x25EC JUMPI JUMPDEST DUP2 PUSH2 0x25CA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB3B JUMPI PUSH1 0x20 PUSH2 0x25E5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x35C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2479 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x25BD JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2630 DUP2 ISZERO ISZERO PUSH2 0x3405 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x263F DUP3 ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST DUP3 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x270D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x265D DUP3 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2676 DUP6 PUSH2 0x225 DUP7 PUSH2 0x220 DUP6 PUSH2 0x37BC JUMP JUMPDEST SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x26B0 JUMPI POP DUP3 DUP1 DUP1 PUSH1 0x1 SWAP6 PUSH2 0x26A8 SWAP5 CALLER GAS CALL PUSH2 0x356 PUSH2 0x34FC JUMP JUMPDEST ADD DUP4 SWAP1 PUSH2 0x2642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x2570 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x26EF JUMPI JUMPDEST POP PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x2706 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0x26E9 JUMP JUMPDEST POP PUSH2 0x631 DUP3 CALLER PUSH2 0x394D JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP2 DUP2 DUP4 PUSH1 0x8 DUP7 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 DUP7 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0x2C7C JUMPI PUSH2 0x287C SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x2C61 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2C43 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2C25 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2C07 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2BEA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2BCC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2BAE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B90 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B72 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B54 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B36 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2B18 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2AFA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2ADC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2ABE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2AA0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A82 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A64 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A46 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A28 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2A0A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29EC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29CE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x29B0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2992 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2974 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2956 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x2938 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x291A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28FC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x28DE JUMPI JUMPDEST LT PUSH2 0x28C7 JUMPI JUMPDEST POP SWAP4 SWAP3 SWAP4 SUB DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x28A4 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 DUP1 DUP3 PUSH2 0x28B9 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x32BC JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x2896 JUMP JUMPDEST SWAP1 PUSH2 0x28D7 DUP2 PUSH1 0x20 SWAP4 PUSH1 0xF8 SHR PUSH2 0x32BC JUMP JUMPDEST ADD CODESIZE PUSH2 0x2871 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x28F4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xF0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x286B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2912 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2863 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2930 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x285B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x294E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2853 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x296C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x284B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x298A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2843 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29A8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x283B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29C6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2833 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x29E4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x282B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A02 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2823 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A20 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x281B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A3E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x98 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2813 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A5C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x90 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x280B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A7A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x88 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2803 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2A98 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x80 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27FB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2AB6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x78 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27F3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2AD4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x70 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2AF2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x68 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27E3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B10 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x60 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27DB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B2E PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x58 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27D3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B4C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x50 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27CB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B6A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x48 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27C3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2B88 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27BB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BA6 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x38 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BC4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x30 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27AB JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BE2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x28 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x27A3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2BFF PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 DUP6 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x279B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C1D PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x18 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2793 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C3B PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x10 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x278B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C59 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x2783 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x2C74 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 AND PUSH2 0x32BC JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x277B JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 PUSH2 0x2EF7 DUP8 SLOAD PUSH2 0x2C9A DUP4 PUSH1 0xFF DUP4 AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CAC DUP7 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CBF PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CD2 PUSH1 0x60 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x18 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CE4 PUSH1 0x80 DUP5 ADD PUSH1 0xFF DUP4 DUP10 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2CF7 PUSH1 0xA0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x28 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D0A PUSH1 0xC0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x30 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D1D PUSH1 0xE0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x38 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D31 PUSH2 0x100 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D45 PUSH2 0x120 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x48 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D59 PUSH2 0x140 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x50 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D6D PUSH2 0x160 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x58 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D81 PUSH2 0x180 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x60 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2D95 PUSH2 0x1A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x68 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DA9 PUSH2 0x1C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x70 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DBD PUSH2 0x1E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x78 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DD1 PUSH2 0x200 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DE5 PUSH2 0x220 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x88 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2DF9 PUSH2 0x240 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x90 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E0D PUSH2 0x260 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x98 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E21 PUSH2 0x280 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E35 PUSH2 0x2A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E49 PUSH2 0x2C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E5D PUSH2 0x2E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E71 PUSH2 0x300 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E85 PUSH2 0x320 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2E99 PUSH2 0x340 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2EAD PUSH2 0x360 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2EC1 PUSH2 0x380 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2ED5 PUSH2 0x3A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE8 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x2EE9 PUSH2 0x3C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xF0 SHR AND PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x3E0 DUP4 ADD SWAP1 PUSH1 0xF8 SHR PUSH2 0x32BC JUMP JUMPDEST ADD SWAP5 ADD SWAP3 ADD DUP5 SWAP3 SWAP4 SWAP2 PUSH2 0x2763 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x2F1F PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x2F27 PUSH2 0x32A6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 LT PUSH2 0x2F6C JUMPI JUMPDEST POP POP PUSH2 0x178C SWAP4 POP PUSH2 0x3856 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x2FD2 JUMPI DUP1 ISZERO PUSH2 0x2FBF JUMPI CALLER ISZERO PUSH2 0x2FAC JUMPI PUSH1 0x40 DUP7 DUP7 SWAP3 PUSH2 0x178C SWAP9 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x2F60 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 DUP7 DUP5 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x634 JUMPI PUSH2 0x303E PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x30B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x30A6 JUMPI PUSH1 0x40 DUP3 SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x24 SWAP3 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x317F JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x1BC8 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1BA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3122 JUMPI PUSH2 0x1742 DUP5 PUSH2 0x1B30 DUP2 DUP7 SUB DUP3 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x3165 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1B30 DUP3 PUSH2 0x1B20 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x314C JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x30F6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x634 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x634 JUMPI PUSH1 0x7 SLOAD PUSH2 0x31A6 DUP2 PUSH2 0x3370 JUMP JUMPDEST SWAP2 PUSH2 0x31B4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x331C JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x31C3 DUP4 PUSH2 0x3370 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY JUMPDEST DUP2 DUP2 LT PUSH2 0x31E0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x1742 DUP6 DUP3 PUSH2 0x3215 JUMP JUMPDEST DUP1 PUSH2 0x3204 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x31F7 PUSH1 0x1 SWAP5 PUSH2 0x3388 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x37BC JUMP JUMPDEST PUSH2 0x320E DUP3 DUP7 PUSH2 0x33F1 JUMP JUMPDEST MSTORE ADD PUSH2 0x31CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3239 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x322C JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x327B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x325A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x32C9 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x32FD JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x32F0 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x333E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x333E JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x333E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x340C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3457 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x34AE JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x34CE JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x10FF JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x10FF JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3527 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x350D DUP3 PUSH2 0x3354 JUMP JUMPDEST SWAP2 PUSH2 0x351B PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x331C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3533 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x357E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420737570706F72746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST ISZERO PUSH2 0x35DD JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420616D6F756E7420696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7364000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x364E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x10FF JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x10FF JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x10FF JUMPI DUP2 MLOAD PUSH2 0x36C6 DUP2 PUSH2 0x3370 JUMP JUMPDEST SWAP3 PUSH2 0x36D4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x331C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x10FF JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x36FC JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x36EF JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x10FF JUMPI DUP2 MLOAD PUSH2 0x3723 DUP2 PUSH2 0x3370 JUMP JUMPDEST SWAP3 PUSH2 0x3731 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x331C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x10FF JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3759 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x3766 DUP5 PUSH2 0x35C2 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x374C JUMP JUMPDEST ISZERO PUSH2 0x3778 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x37E9 JUMPI POP POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x384A JUMPI DUP1 SWAP3 PUSH2 0x3819 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3842 JUMPI JUMPDEST DUP2 PUSH2 0x3835 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x634 JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3828 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x391E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x38EF JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x38D5 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x391E JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x39B5 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND CALLER SUB PUSH2 0x39E2 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x38EF JUMPI PUSH2 0x3A2C DUP2 PUSH1 0x2 SLOAD PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x34AE JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x3AA9 PUSH1 0x80 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP8 SWAP7 SWAP6 SWAP8 DUP5 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x32DF JUMP JUMPDEST SWAP6 AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3ADB PUSH1 0x60 SWAP4 SWAP7 SWAP6 SWAP5 SWAP7 PUSH1 0x0 DUP5 MSTORE PUSH1 0x80 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x32DF JUMP JUMPDEST SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x3B0D PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ DUP1 ISZERO PUSH2 0x411B JUMPI SELFBALANCE JUMPDEST DUP1 ISZERO PUSH2 0x4112 JUMPI DUP7 MLOAD SWAP4 SWAP6 SWAP4 PUSH2 0x3B40 SWAP2 PUSH2 0x34C4 JUMP JUMPDEST PUSH1 0x60 SWAP7 SWAP1 SWAP4 PUSH1 0x40 SWAP2 DUP7 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3E78 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3B65 DUP3 DUP5 PUSH2 0x33F1 JUMP JUMPDEST MLOAD AND DUP1 DUP10 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x3B7F PUSH1 0xFF PUSH1 0x40 DUP12 KECCAK256 SLOAD AND PUSH2 0x3771 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3B8D DUP13 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE DUP6 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY DUP7 ISZERO PUSH2 0x3E72 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEB4 JUMPI DUP12 SWAP2 PUSH2 0x3E39 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3BFE DUP5 PUSH2 0x33D4 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x3E33 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEB4 JUMPI DUP12 SWAP2 PUSH2 0x3DF6 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3C7D DUP5 PUSH2 0x33E1 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP8 SUB PUSH2 0x3C92 JUMPI POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0x3B4A JUMP JUMPDEST DUP6 ISZERO PUSH2 0x3D31 JUMPI PUSH1 0x1 TIMESTAMP ADD SWAP1 DUP2 TIMESTAMP GT PUSH2 0xDC2 JUMPI PUSH2 0x3CC7 SWAP2 DUP11 SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS SWAP1 PUSH1 0x4 DUP6 ADD PUSH2 0x3AB4 JUMP JUMPDEST SUB DUP2 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0x3D26 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x3D0C JUMPI JUMPDEST POP PUSH2 0x3C8C JUMP JUMPDEST PUSH2 0x3D1F SWAP1 RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0x479 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST POP CODESIZE PUSH2 0x3D06 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP11 SWAP1 MSTORE SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP15 DUP14 GAS CALL DUP1 ISZERO PUSH2 0xEB4 JUMPI PUSH2 0x3DDA JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xE84 JUMPI SWAP2 DUP11 SWAP2 DUP11 DUP4 PUSH2 0x3DC1 SWAP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3A7B JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3D26 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x3D0C JUMPI POP PUSH2 0x3C8C JUMP JUMPDEST PUSH2 0x3DF1 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x3C4 DUP2 DUP4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x3D8C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x3E2B JUMPI JUMPDEST DUP2 PUSH2 0x3E10 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3E27 JUMPI PUSH2 0x3E21 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x3C6A JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3E03 JUMP JUMPDEST DUP1 PUSH2 0x3C6C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x3E6A JUMPI JUMPDEST DUP2 PUSH2 0x3E53 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3E27 JUMPI PUSH2 0x3E64 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST CODESIZE PUSH2 0x3BEB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3E46 JUMP JUMPDEST DUP5 PUSH2 0x3BED JUMP JUMPDEST POP POP POP POP POP POP POP SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x40CD JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x409B JUMPI JUMPDEST POP PUSH2 0x3F0F JUMPI POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x4053 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SWAP3 AND SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x400E JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x110C JUMPI DUP4 SWAP2 PUSH2 0x3FDC JUMPI JUMPDEST POP DUP2 EXTCODESIZE ISZERO PUSH2 0x10C3 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x10C7 JUMPI PUSH2 0x3FCF JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x3FD9 SWAP2 PUSH2 0x331C JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4006 JUMPI JUMPDEST DUP2 PUSH2 0x3FF7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI MLOAD CODESIZE PUSH2 0x3F9A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3FEA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x404B JUMPI JUMPDEST DUP2 PUSH2 0x4029 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x4044 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F64 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x401C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4093 JUMPI JUMPDEST DUP2 PUSH2 0x406E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x408B PUSH1 0x4 SWAP4 PUSH2 0x35C2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3F33 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4061 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x40C5 JUMPI JUMPDEST DUP2 PUSH2 0x40B6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI MLOAD CODESIZE PUSH2 0x3F06 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x410A JUMPI JUMPDEST DUP2 PUSH2 0x40E8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10C3 JUMPI PUSH1 0x20 PUSH2 0x4103 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3ED0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40DB JUMP JUMPDEST POP POP POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2570 JUMPI DUP6 SWAP2 PUSH2 0x414B JUMPI JUMPDEST POP PUSH2 0x3B2C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4175 JUMPI JUMPDEST DUP2 PUSH2 0x4166 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x331C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB3B JUMPI MLOAD CODESIZE PUSH2 0x4145 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4159 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER NUMBER JUMPDEST GT NOT 0xB5 0xFC 0x1E RETURNDATACOPY 0xE4 0xAC CALLDATALOAD EXTCODESIZE RETURNDATASIZE MCOPY 0xB3 SWAP5 DUP11 MUL 0xF6 0x2D GT 0xDE 0x26 0xEE NUMBER DUP13 SWAP11 DUP13 0xBA 0x2E 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "469:3362:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;;;:::i;:::-;;;4459:39:25;4467:12;;;4459:39;:::i;:::-;-1:-1:-1;;;;;469:3362:12;;;;;;4517:18:25;469:3362:12;;4509:54:25;469:3362:12;;;;;;4509:54:25;:::i;:::-;2927:12:3;469:3362:12;4630:15:25;4622:40;4630:15;;;4622:40;:::i;:::-;469:3362:12;;;;;776:42:26;5024:22:25;;;4680:13;;4725:3;4699:17;469:3362:12;4695:28:25;;;;;-1:-1:-1;;;;;4763:20:25;;;:::i;:::-;469:3362:12;;;;;;;4817:46:25;4818:19;:30;:19;;;;:::i;:::-;:30;:::i;:::-;4817:46;:::i;:::-;469:3362:12;;;;;;;:::i;:::-;2927:12:3;469:3362:12;;;;;;;;776:42:26;4947:21:25;;:52;;;;469:3362:12;;-1:-1:-1;;;4971:18:25;;469:3362:12;4971:11:25;469:3362:12;4971:11:25;-1:-1:-1;;;;;4971:11:25;469:3362:12;4971:18:25;;;;;;;;;;;4947:52;;;-1:-1:-1;;;;;4937:62:25;;;:::i;:::-;469:3362:12;;;;5024:54:25;;;;469:3362:12;;-1:-1:-1;;;5049:18:25;;469:3362:12;5049:11:25;469:3362:12;5049:11:25;-1:-1:-1;;;;;5049:11:25;469:3362:12;5049:18:25;;;;;;;;;;;5024:54;;;-1:-1:-1;;;;;5014:64:25;;;:::i;:::-;469:3362:12;;;;5099:19:25;;;;;:45;;5024:54;5095:988;;;5193:10;;;;;;;5019:1;5193:10;5291:40;5193:10;;5185:85;;;;:::i;:::-;;5291:40;:::i;:::-;469:3362:12;4680:13:25;;;;5095:988;5353:730;;;;;;-1:-1:-1;;469:3362:12;;-1:-1:-1;;;5397:46:25;;5422:10;469:3362:12;5397:46:25;;469:3362:12;776:42:26;;;469:3362:12;;;;;;;;;776:42:26;;469:3362:12;;;5397:46:25;;;;;;;5019:1;5397:46;;;5353:730;;5095:988;;5397:46;;;469:3362:12;5397:46:25;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;469:3362:12;;776:42:26;469:3362:12;;776:42:26;;;;5353:730:25;5465:618;;-1:-1:-1;5465:618:25;;;;;;;5684:15;5019:1;5684:15;469:3362:12;5684:15:25;;;469:3362:12;;;;;;5511:211:25;469:3362:12;;;;5511:211:25;;;;;;-1:-1:-1;;;5511:211:25;;5651:10;5511:211;469:3362:12;5511:211:25;;;:::i;:::-;;:11;-1:-1:-1;;;;;5511:11:25;469:3362:12;5511:211:25;;;;;;;5019:1;5511:211;;;5465:618;5095:988;;5511:211;;;;;;;;;;;;:::i;:::-;;;;;:::i;469:3362:12:-;;;-1:-1:-1;;;469:3362:12;;;;;;5465:618:25;5795:11;-1:-1:-1;;;;;5795:11:25;469:3362:12;;;;;;5763:55:25;;;;-1:-1:-1;;;5763:55:25;;;;;;469:3362:12;5763:55:25;;776:42:26;;;;;;-1:-1:-1;;;;;776:42:26;;;469:3362:12;;;;776:42:26;469:3362:12;776:42:26;5763:55:25;;;;;;;;;;;5465:618;6029:15;5019:1;6029:15;469:3362:12;6029:15:25;;;469:3362:12;;;;5839:228:25;469:3362:12;;;;;;;;5839:228:25;;;;;;;-1:-1:-1;;;5839:228:25;;5996:10;5839:228;469:3362:12;5839:228:25;;;:::i;:::-;;;;;;;;;;5019:1;5839:228;;;5465:618;5095:988;;469:3362:12;;;-1:-1:-1;;;469:3362:12;;;;;;5763:55:25;;;469:3362:12;5763:55:25;;;;;;;;;:::i;:::-;;;;469:3362:12;;776:42:26;469:3362:12;;776:42:26;;;;5099:45:25;;;;;5049:18;;;469:3362:12;5049:18:25;;;;;;;;;469:3362:12;5049:18:25;;;:::i;:::-;;;469:3362:12;;;;;;;:::i;:::-;5049:18:25;;;469:3362:12;;;;5049:18:25;;;-1:-1:-1;5049:18:25;;;469:3362:12;;776:42:26;469:3362:12;;776:42:26;;;;5024:54:25;;;;4971:18;;;469:3362:12;4971:18:25;;;;;;;;;469:3362:12;4971:18:25;;;:::i;:::-;;;469:3362:12;;;;;;;:::i;:::-;4971:18:25;;;;;;-1:-1:-1;4971:18:25;;4947:52;;;;4695:28;;6124:8;4695:28;6112:10;6124:8;:::i;:::-;469:3362:12;;;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;-1:-1:-1;;;;;469:3362:12;;:::i;:::-;1500:62:1;;:::i;:::-;469:3362:12;2627:22:1;;2623:91;;-1:-1:-1;;;;;3004:6:1;469:3362:12;;-1:-1:-1;;469:3362:12;;;3004:6:1;469:3362:12;;3052:40:1;;;;469:3362:12;;2623:91:1;469:3362:12;2672:31:1;;;;469:3362:12;;;2672:31:1;469:3362:12;;;;;;;-1:-1:-1;;469:3362:12;;;;;;:::i;:::-;;;-1:-1:-1;;;;;469:3362:12;;;;;;6233:18:25;469:3362:12;;6225:51:25;469:3362:12;;;;;;6225:51:25;:::i;:::-;469:3362:12;;-1:-1:-1;;;6287:61:25;;6314:10;469:3362:12;6287:61:25;;469:3362:12;6334:4:25;469:3362:12;;;;;;;;;;;;;;;;;;;6334:4:25;;6287:61;;;;;;;6366:40;6287:61;6366:40;6287:61;;;469:3362:12;;;;6314:10:25;;;;6366:40;;776:42:26;;;;;;-1:-1:-1;;;;;776:42:26;;;469:3362:12;;;;776:42:26;469:3362:12;776:42:26;6366:40:25;;;;469:3362:12;;6287:61:25;;;469:3362:12;6287:61:25;469:3362:12;6287:61:25;;;;;;;:::i;:::-;;;;469:3362:12;;776:42:26;469:3362:12;;776:42:26;;;;469:3362:12;;;;;;;-1:-1:-1;;469:3362:12;;;;-1:-1:-1;;;;;469:3362:12;;;:::i;:::-;;;;;:::i;:::-;;;;;3657:11:3;469:3362:12;;;3657:27:3;469:3362:12;-1:-1:-1;469:3362:12;;;;;-1:-1:-1;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3274:8:12;469:3362;;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:42:26;3738:26:12;;469:3362;3747:8;469:3362;3747:8;-1:-1:-1;;;;;3747:8:12;469:3362;3738:26;;;;;;;;;;469:3362;-1:-1:-1;;;;;469:3362:12;;;3724:10;:40;469:3362;;;;;;;;;;;;;2771:15;469:3362;;2724:15;;2795:3;2767:26;;;;;;2771:15;469:3362;;;;;;;;;;;;;;;;;;;;;;;;;;2818:28;;2814:104;;469:3362;;2755:10;;2814:104;2866:14;;;;;;;469:3362;2750:178;469:3362;;;;;;;;;;;1678:48;1674:183;;2750:178;469:3362;;;;;;;;;1871:44;1867:266;;2750:178;469:3362;;;;;;;;2162:27;2147:42;2143:262;;2750:178;469:3362;;;2420:19;469:3362;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2420:19;;;469:3362;;2143:262;2281:9;;469:3362;;;2253:89;;469:3362;;;;;;;;;;2253:89;;469:3362;:::i;:::-;;;;;;;;;;;;2420:19;2253:89;-1:-1:-1;;;;;469:3362:12;2384:9;2253:89;469:3362;;2253:89;;469:3362;2253:89;;469:3362;;;;:::i;:::-;;;2384:9;:::i;:::-;2143:262;;;;;;;469:3362;;;;;;;-1:-1:-1;;;469:3362:12;;;;;;1867:266;2007:9;;;;469:3362;;;1979:89;;469:3362;;;;;;;;1979:89;;469:3362;;;;;;;;;-1:-1:-1;;;;;1979:89:12;469:3362;1979:89;469:3362;1979:89;;;;;469:3362;;;;;:::i;:::-;;;;:::i;:::-;;;;;948:18:26;469:3362:12;;940:54:26;469:3362:12;;;;;;940:54:26;:::i;:::-;469:3362:12;;;;776:42:26;1355:22;;;1012:13;1048:3;469:3362:12;;1027:19:26;;;;;-1:-1:-1;;;;;1086:11:26;;;;:::i;:::-;469:3362:12;;1131:19:26;;;:::i;:::-;1171:13;;1167:27;;469:3362:12;;;;;;;:::i;:::-;1249:1:26;469:3362:12;;;;;;;;776:42:26;1278:21;;:52;;;;469:3362:12;;-1:-1:-1;;;1302:18:26;;469:3362:12;1302:11:26;469:3362:12;1302:11:26;-1:-1:-1;;;;;1302:11:26;469:3362:12;1302:18:26;;;;;;;;;;;1278:52;;;-1:-1:-1;;;;;1268:62:26;;;:::i;:::-;469:3362:12;;;;1355:54:26;;;;469:3362:12;;-1:-1:-1;;;1380:18:26;;469:3362:12;1380:11:26;469:3362:12;1380:11:26;-1:-1:-1;;;;;1380:11:26;469:3362:12;1380:18:26;;;;;;;;;;;1355:54;;;-1:-1:-1;;;;;1345:64:26;;;:::i;:::-;469:3362:12;;;;1430:19:26;;;;;1470:8;;;;469:3362:12;1470:8:26;1012:13;469:3362:12;1012:13:26;;1426:698;1500:624;;;1722:15;469:3362:12;1722:15:26;469:3362:12;1722:15:26;;;469:3362:12;;;;;;1546:214:26;469:3362:12;;;1546:214:26;;;;;;-1:-1:-1;;;1546:214:26;;1694:4;1546:214;469:3362:12;1546:214:26;;;:::i;:::-;;:11;-1:-1:-1;;;;;1546:11:26;469:3362:12;1546:214:26;;;;;;;469:3362:12;1546:214:26;;;;1500:624;;1048:3;;1546:214;;;;;;;;;;;;:::i;:::-;;;;;;469:3362:12;;776:42:26;469:3362:12;;776:42:26;;;;469:3362:12;;;-1:-1:-1;;;469:3362:12;;;;;;1500:624:26;469:3362:12;;-1:-1:-1;;;1801:55:26;;-1:-1:-1;;;;;1833:11:26;469:3362:12;;1801:55:26;;469:3362:12;;;776:42:26;;;469:3362:12;;;;;;;;;776:42:26;;469:3362:12;;;;1801:55:26;;;;;;;;1500:624;2070:15;469:3362:12;2070:15:26;469:3362:12;2070:15:26;;;469:3362:12;;;;1877:231:26;469:3362:12;;;;;;;1877:231:26;;;;;;;-1:-1:-1;;;1877:231:26;;2042:4;1877:231;469:3362:12;1877:231:26;;;:::i;:::-;;;;;;;;;;469:3362:12;1877:231:26;;;;1500:624;1048:3;;469:3362:12;;;-1:-1:-1;;;469:3362:12;;;;;;1801:55:26;;;469:3362:12;1801:55:26;;;;;;;;;:::i;:::-;;;;469:3362:12;;776:42:26;469:3362:12;;776:42:26;;;;1380:18;;;469:3362:12;1380:18:26;;;;;;;;;469:3362:12;1380:18:26;;;:::i;:::-;;;469:3362:12;;;;;;;:::i;:::-;1380:18:26;;;469:3362:12;;;;1380:18:26;;;-1:-1:-1;1380:18:26;;;469:3362:12;;776:42:26;469:3362:12;;776:42:26;;;;1355:54;;;;1302:18;;;469:3362:12;1302:18:26;;;;;;;;;469:3362:12;1302:18:26;;;:::i;:::-;;;469:3362:12;;;;;;;:::i;:::-;1302:18:26;;;;;;-1:-1:-1;1302:18:26;;1278:52;;;;1167:27;1186:8;;469:3362:12;1186:8:26;;;1027:19;;;;;;;;;;2158:11;-1:-1:-1;;;;;2158:11:26;469:3362:12;;;-1:-1:-1;;;2158:18:26;;469:3362:12;2158:18:26;469:3362:12;2158:18:26;;;;;;;;;;;;;1007:1128;469:3362:12;;-1:-1:-1;;;;;469:3362:12;;;;2151:51:26;;;;-1:-1:-1;;;2151:51:26;;2196:4;469:3362:12;2151:51:26;;469:3362:12;;2151:51:26;;;;;;;;;;;1007:1128;2151:55;2147:207;;1007:1128;1867:266:12;;;;2147:207:26;469:3362:12;;-1:-1:-1;;;2229:18:26;;469:3362:12;2229:18:26;469:3362:12;2229:18:26;;;;;;;;;;;;;2147:207;469:3362:12;;-1:-1:-1;;;;;469:3362:12;;;;;;2283:18:26;;;;-1:-1:-1;;;2283:18:26;;;;;;;;;;;;;2147:207;469:3362:12;;-1:-1:-1;;;;;469:3362:12;;;;2276:51:26;;;;-1:-1:-1;;;2276:51:26;;2196:4;469:3362:12;2276:51:26;;469:3362:12;;2276:51:26;;;;;;;;;;;2147:207;2223:119;;;;;;469:3362:12;;;;;;;2223:119:26;;;;;-1:-1:-1;;;2223:119:26;;469:3362:12;2223:119:26;;469:3362:12;2223:119:26;;;;;;;2147:207;2223:119;;;;;:::i;:::-;469:3362:12;;2223:119:26;;2147:207;;469:3362:12;;;;2223:119:26;469:3362:12;;776:42:26;469:3362:12;;776:42:26;;;;2276:51;;;;469:3362:12;2276:51:26;;469:3362:12;2276:51:26;;;;;;469:3362:12;2276:51:26;;;:::i;:::-;;;469:3362:12;;;;;;;2276:51:26;;;469:3362:12;-1:-1:-1;469:3362:12;;2276:51:26;;;-1:-1:-1;2276:51:26;;;469:3362:12;;776:42:26;469:3362:12;;776:42:26;;;;2283:18;;;469:3362:12;2283:18:26;;469:3362:12;2283:18:26;;;;;;469:3362:12;2283:18:26;;;:::i;:::-;;;469:3362:12;;;;;;-1:-1:-1;;;;;469:3362:12;;:::i;:::-;2283:18:26;;;;;;;-1:-1:-1;2283:18:26;;2229;;;469:3362:12;2229:18:26;;469:3362:12;2229:18:26;;;;;;469:3362:12;2229:18:26;;;:::i;:::-;;;469:3362:12;;;;;-1:-1:-1;;;;;469:3362:12;;;;:::i;:::-;2229:18:26;;;;;;;;-1:-1:-1;2229:18:26;;2151:51;;;;469:3362:12;2151:51:26;;469:3362:12;2151:51:26;;;;;;469:3362:12;2151:51:26;;;:::i;:::-;;;469:3362:12;;;;;;;2151:51:26;;;;;;-1:-1:-1;2151:51:26;;2158:18;;;469:3362:12;2158:18:26;;469:3362:12;2158:18:26;;;;;;469:3362:12;2158:18:26;;;:::i;:::-;;;469:3362:12;;;;;;-1:-1:-1;;;;;469:3362:12;;:::i;:::-;2158:18:26;;;;;;;-1:-1:-1;2158:18:26;;469:3362:12;;;;1674:183;1778:9;1767:34;1778:9;;469:3362;;;;1767:34;;;;;;:::i;:::-;469:3362;;4209:17:26;469:3362:12;4189:44:26;469:3362:12;;4265:22:26;;;4340:3;469:3362:12;;4318:20:26;;;;;4360:26;469:3362:12;4374:12:26;;;;;:::i;:::-;469:3362:12;4360:26:26;;:::i;:::-;4340:3;469:3362:12;4303:13:26;;;4318:20;733:6;4318:20;;;;4418:21;733:6;;469:3362:12;;733:6:26;469:3362:12;733:6:26;;;;;;;;;4474:23;469:3362:12;733:6:26;4474:23;733:6;;;;;;4298:100;469:3362:12;;;4474:23:26;469:3362:12;;733:6:26;;;;;;;1674:183:12;;;;;733:6:26;469:3362:12;;;;;733:6:26;;;;469:3362:12;733:6:26;;;;;;469:3362:12;733:6:26;;469:3362:12;733:6:26;;;;;;;;;;;469:3362:12;;;;733:6:26;;;;469:3362:12;;-1:-1:-1;;;469:3362:12;;;;;;733:6:26;;469:3362:12;;-1:-1:-1;;;733:6:26;;469:3362:12;;733:6:26;;;;469:3362:12;733:6:26;;469:3362:12;733:6:26;469:3362:12;;;733:6:26;;469:3362:12;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:3362:12;;;;;;2767:26;;;;;;;;;;469:3362;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;3738:26;;469:3362;3738:26;;469:3362;3738:26;;;;;;469:3362;3738:26;;;:::i;:::-;;;469:3362;;;;;-1:-1:-1;;;;;469:3362:12;;:::i;:::-;3738:26;;;;;-1:-1:-1;3738:26:12;;469:3362;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;;;:::i;:::-;1500:62:1;;:::i;:::-;-1:-1:-1;;;;;469:3362:12;;;;;;8129:18:25;469:3362:12;;;;;;;;;;8184:17:25;469:3362:12;;;;;;;;;;;;;;8184:17:25;469:3362:12;;:::i;:::-;;;;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;;;;;;;;;;8224:11:25;469:3362:12;;;;;;;;;;;;;8224:11:25;469:3362:12;;:::i;:::-;;;;;;;;;;;;10599:17:3;;;469:3362:12;;;;;;;;;;;8129:18:25;469:3362:12;;;;;;;-1:-1:-1;;469:3362:12;;;;;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:12;;-1:-1:-1;;469:3362:12;;;;;;776:42:26;469:3362:12;;6502:18:25;469:3362:12;;6494:60:25;469:3362:12;;;;;;6494:60:25;:::i;:::-;6565:52;6573:9;;:19;6565:52;:::i;:::-;469:3362:12;;;776:42:26;469:3362:12;;;776:42:26;;469:3362:12;6635:45:25;469:3362:12;6649:10:25;6635:45;;469:3362:12;;;;;;;;;;;;;;;;;;;;7003:17:25;469:3362:12;;;;;;;7003:17:25;469:3362:12;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;3459:5:3;469:3362:12;;:::i;:::-;;;735:10:6;;3459:5:3;:::i;:::-;469:3362:12;;;;;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;;;4459:39:25;4467:12;;;4459:39;:::i;:::-;776:42:26;469:3362:12;;4517:18:25;469:3362:12;;4509:54:25;469:3362:12;;;;;;4509:54:25;:::i;:::-;2927:12:3;469:3362:12;4630:15:25;4622:40;4630:15;;;4622:40;:::i;:::-;469:3362:12;;;5049:11:25;-1:-1:-1;;;;;469:3362:12;4680:13:25;;4725:3;4699:17;469:3362:12;4695:28:25;;;;;-1:-1:-1;;;;;4763:20:25;;;:::i;:::-;469:3362:12;;;;;;;4817:46:25;4818:19;:30;:19;;;;:::i;4817:46::-;469:3362:12;;;;;;;:::i;:::-;2927:12:3;469:3362:12;;;;;;;;776:42:26;4947:21:25;;:52;;;;469:3362:12;;-1:-1:-1;;;4971:18:25;;469:3362:12;4971:18:25;469:3362:12;4971:18:25;;;;;;;;;;;;;4947:52;;;-1:-1:-1;;;;;4937:62:25;;;:::i;:::-;469:3362:12;;;;;;-1:-1:-1;;;5049:18:25;;469:3362:12;5049:18:25;469:3362:12;5049:18:25;;;;;;;;;;;;;4947:52;5024:54;-1:-1:-1;;;;;5014:64:25;;;:::i;:::-;469:3362:12;;;;5099:45:25;;;;4947:52;5095:988;;;5193:10;;;;;;5019:1;5193:10;5291:40;5193:10;;5185:85;;;;:::i;5291:40::-;469:3362:12;4680:13:25;;;;5095:988;5353:730;;;;;;-1:-1:-1;469:3362:12;;-1:-1:-1;;;5397:46:25;;5422:10;469:3362:12;5397:46:25;;469:3362:12;776:42:26;;;469:3362:12;;;;;;;;;776:42:26;;469:3362:12;;;5397:46:25;;;;;;;5019:1;5397:46;;;5353:730;;5095:988;;5397:46;;;469:3362:12;5397:46:25;;;;;;;;;:::i;:::-;;;;;5353:730;469:3362:12;;-1:-1:-1;;;5763:55:25;;-1:-1:-1;;;;;469:3362:12;;;5763:55:25;;469:3362:12;776:42:26;;;469:3362:12;;;5465:618:25;;-1:-1:-1;469:3362:12;;;;;;776:42:26;;469:3362:12;;5763:55:25;;;;;;;;;;5353:730;6029:15;5019:1;6029:15;469:3362:12;6029:15:25;;;469:3362:12;;;;;;5839:228:25;469:3362:12;;5839:228:25;;;;;-1:-1:-1;;;5839:228:25;;5996:10;5839:228;469:3362:12;5839:228:25;;;:::i;:::-;;;;;;;;;;;;5019:1;5839:228;;;5353:730;5095:988;;5839:228;;;;;;;;;;;;:::i;5763:55::-;;;469:3362:12;5763:55:25;;;;;;;;;:::i;:::-;;;5099:45;;5019:1;5099:45;;5049:18;;;469:3362:12;5049:18:25;;;;;;;;;469:3362:12;5049:18:25;;;:::i;:::-;;;469:3362:12;;;;;;;:::i;:::-;5049:18:25;;;;;;-1:-1:-1;5049:18:25;;4971;;;469:3362:12;4971:18:25;;;;;;;;;469:3362:12;4971:18:25;;;:::i;:::-;;;469:3362:12;;;;;;;:::i;:::-;4971:18:25;;;;;;-1:-1:-1;4971:18:25;;4947:52;;;;4695:28;;6124:8;4695:28;6112:10;6124:8;:::i;469:3362:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;469:3362:12;;;;;;;-1:-1:-1;469:3362:12;;-1:-1:-1;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:12;;-1:-1:-1;469:3362:12;;-1:-1:-1;469:3362:12;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;7636:14:25;469:3362:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1710:6:1;469:3362:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3612:8:12;469:3362;3598:10;;:22;469:3362;;;1252:11;469:3362;;;;;;;;;;1323:9;469:3362;1336:9;-1:-1:-1;469:3362:12;;1392:38;469:3362;;;;1392:38;;;;776:42:26;1392:38:12;;;;;;;;;;;;469:3362;-1:-1:-1;;;;;469:3362:12;;;;-1:-1:-1;;;;;1710:6:1;469:3362:12;;1383:102;;;;;469:3362;;1383:102;469:3362;;1383:102;;;;776:42:26;1383:102:12;;469:3362;1383:102;;469:3362;1336:9;1383:102;;;;;;;;;469:3362;;1383:102;;;;:::i;:::-;;;469:3362;;1383:102;469:3362;;;776:42:26;;;;;;;;1392:38:12;;;;;;;;;;;;;;;;:::i;:::-;;;469:3362;;;;;-1:-1:-1;;;;;469:3362:12;;:::i;:::-;1392:38;;;;;-1:-1:-1;1392:38:12;;469:3362;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:1;;:::i;:::-;469:3362:12;-1:-1:-1;;;;;3004:6:1;469:3362:12;-1:-1:-1;;469:3362:12;;3004:6:1;469:3362:12;;3052:40:1;;;;469:3362:12;;;;;;;;;-1:-1:-1;;469:3362:12;;;;;;;-1:-1:-1;;;;;469:3362:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;-1:-1:-1;;;;;469:3362:12;;:::i;:::-;1500:62:1;;:::i;:::-;469:3362:12;;;;8391:18:25;469:3362:12;;;;;;;;;;;;;-1:-1:-1;;;8469:38:25;;8501:4;469:3362:12;8469:38:25;;469:3362:12;;8469:38:25;;;;;;;;;;;;;;;469:3362:12;8469:43:25;469:3362:12;;8574:13:25;8619:3;8593:17;469:3362:12;8589:28:25;;;;;;8643:20;-1:-1:-1;;;;;8643:20:25;;;:::i;:::-;469:3362:12;;;;;;;8643:29:25;8639:405;;8619:3;469:3362:12;;8574:13:25;;8639:405;-1:-1:-1;;469:3362:12;;;;;;;-1:-1:-1;;;;;8716:87:25;8693:110;8716:87;;:::i;:::-;469:3362:12;;;;;;;8693:20:25;;;:::i;:110::-;8593:17;469:3362:12;;;;;-1:-1:-1;;469:3362:12;;;;:::i;:::-;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;8593:17:25;469:3362:12;8881:11:25;469:3362:12;10599:17:3;;469:3362:12;;;;;;;8881:35:25;8864:14;8881:35;8864:52;8881:35;;:::i;:::-;469:3362:12;;;;;;8864:14:25;;:::i;:::-;:52;469:3362:12;;;;;;;;;;10599:17:3;;;469:3362:12;;;;;;;;8864:52:25;8881:11;469:3362:12;;;;;-1:-1:-1;;469:3362:12;;;;:::i;:::-;;;10599:17:3;;;469:3362:12;;;;;;;;8881:11:25;469:3362:12;;;8391:18:25;469:3362:12;;;;;;;;;;;;;;;8469:38:25;469:3362:12;-1:-1:-1;;;469:3362:12;;;;;;;8469:38:25;469:3362:12;-1:-1:-1;;;469:3362:12;;;;;;;8469:38:25;469:3362:12;-1:-1:-1;;;469:3362:12;;;;;;8589:28:25;;;;469:3362:12;;;;;;-1:-1:-1;;;469:3362:12;;;;;;;;8469:38:25;469:3362:12;;;;;;;;;8469:38:25;;;469:3362:12;8469:38:25;;469:3362:12;8469:38:25;;;;;;469:3362:12;8469:38:25;;;:::i;:::-;;;469:3362:12;;;;;8469:38:25;;;;;;-1:-1:-1;8469:38:25;;469:3362:12;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;469:3362:12;;-1:-1:-1;;469:3362:12;;;;;;1500:62:1;;:::i;:::-;2729:52:25;2737:9;;:19;2729:52;:::i;:::-;776:42:26;469:3362:12;;2800:18:25;469:3362:12;;2792:60:25;469:3362:12;;;;;;2792:60:25;:::i;:::-;469:3362:12;;-1:-1:-1;;;2887:42:25;;469:3362:12;2896:8:25;469:3362:12;2896:8:25;-1:-1:-1;;;;;2896:8:25;469:3362:12;2887:42:25;;;;;;;;;;;469:3362:12;;;-1:-1:-1;;;;;469:3362:12;2962:100:25;469:3362:12;;2962:100:25;;;;-1:-1:-1;;;2962:100:25;;;469:3362:12;2962:100:25;;469:3362:12;776:42:26;469:3362:12;;;;;2962:100:25;;;;;;;;;;469:3362:12;3217:9:25;469:3362:12;;3075:111:25;3110:14;469:3362:12;3097:27:25;;;3075:111;:::i;:::-;3205:10;3217:9;:::i;:::-;469:3362:12;;;776:42:26;469:3362:12;;;776:42:26;;469:3362:12;3245:47:25;469:3362:12;3205:10:25;3245:47;;469:3362:12;;2962:100:25;;469:3362:12;2962:100:25;;469:3362:12;2962:100:25;;;;;;469:3362:12;2962:100:25;;;:::i;:::-;;;469:3362:12;;;;3217:9:25;469:3362:12;;2962:100:25;;;;;-1:-1:-1;2962:100:25;;2887:42;;;469:3362:12;2887:42:25;;469:3362:12;2887:42:25;;;;;;469:3362:12;2887:42:25;;;:::i;:::-;;;469:3362:12;;;;;;-1:-1:-1;;;;;469:3362:12;;:::i;:::-;2887:42:25;;;;;;;-1:-1:-1;2887:42:25;;469:3362:12;;;;;;;;;;;;;;3376:9;469:3362;;;;;;;;;;;;;;;;;;;;;;;;;7522:11:25;469:3362:12;;;;;;;7522:11:25;469:3362:12;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;;;:::i;:::-;;;1500:62:1;;:::i;:::-;-1:-1:-1;;;;;469:3362:12;;;;;2081:18:25;469:3362:12;;2073:55:25;469:3362:12;;;;;;2073:55:25;:::i;:::-;469:3362:12;;2163:42:25;-1:-1:-1;;;2163:42:25;;469:3362:12;2172:8:25;469:3362:12;2172:8:25;-1:-1:-1;;;;;2172:8:25;469:3362:12;2163:42:25;;;;;;;;;;;469:3362:12;;;-1:-1:-1;;;;;469:3362:12;2236:95:25;469:3362:12;;2236:95:25;;;;-1:-1:-1;;;2236:95:25;;;469:3362:12;2236:95:25;;469:3362:12;;;;;;;2236:95:25;;;;;;;;;;;469:3362:12;;2344:111:25;2379:14;469:3362:12;2366:27:25;;;2344:111;:::i;:::-;469:3362:12;;-1:-1:-1;;;2468:61:25;;2495:10;469:3362:12;2468:61:25;;469:3362:12;2515:4:25;469:3362:12;;;;;;;;;;;;;;;;;;;2515:4:25;;2468:61;;;;;;2588:42;2468:61;2588:42;2468:61;2560:9;2468:61;;;469:3362:12;2495:10:25;;2560:9;:::i;:::-;469:3362:12;;2495:10:25;;;;2588:42;;776::26;;;;;;-1:-1:-1;;;;;776:42:26;;;469:3362:12;;;;776:42:26;469:3362:12;776:42:26;2468:61:25;;;469:3362:12;2468:61:25;469:3362:12;2468:61:25;;;;;;;:::i;:::-;;;;469:3362:12;;776:42:26;469:3362:12;;776:42:26;;;;2236:95:25;;;;469:3362:12;2236:95:25;;469:3362:12;2236:95:25;;;;;;469:3362:12;2236:95:25;;;:::i;:::-;;;469:3362:12;;;;;2236:95:25;;;;;;;-1:-1:-1;2236:95:25;;2163:42;;;469:3362:12;2163:42:25;;469:3362:12;2163:42:25;;;;;;469:3362:12;2163:42:25;;;:::i;:::-;;;469:3362:12;;;;;;-1:-1:-1;;;;;469:3362:12;;:::i;:::-;2163:42:25;;;;;;;-1:-1:-1;2163:42:25;;469:3362:12;;;;;;;;;;;;;;;;2780:2:3;469:3362:12;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;;;3373:39:25;3381:12;;;3373:39;:::i;:::-;2927:12:3;469:3362:12;3479:15:25;3471:40;3479:15;;;3471:40;:::i;:::-;3529:13;;3574:3;3548:17;469:3362:12;3544:28:25;;;;;-1:-1:-1;;;;;3613:20:25;;;:::i;:::-;469:3362:12;;;;;;;3668:47:25;3669:20;:31;:20;;;;:::i;3668:47::-;3736:22;776:42:26;3736:22:25;;776:42:26;;3807:10:25;;;;469:3362:12;3807:10:25;3906:40;3807:10;;3799:86;;;;:::i;3906:40::-;469:3362:12;3529:13:25;;;;3732:319;469:3362:12;;-1:-1:-1;;;3987:48:25;;4013:10;469:3362:12;3987:48:25;;469:3362:12;776:42:26;;;469:3362:12;;;;;;;;;;776:42:26;;469:3362:12;;;3987:48:25;;;;;;;469:3362:12;3987:48:25;;;3732:319;;;;3987:48;;;469:3362:12;3987:48:25;;;;;;;;;:::i;:::-;;;;;3544:28;;4092:8;3544:28;4080:10;4092:8;:::i;469:3362:12:-;;;;;;;;;;;;;;;;;7813:15:25;469:3362:12;;;;;;;;;7813:15:25;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;7813:15:25;469:3362:12;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;7813:15:25;469:3362:12;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;;-1:-1:-1;;;;;735:10:6;469:3362:12;;;;;;;;;10599:17:3;;;10580:36;;10576:309;;469:3362:12;4986:5:3;;;;;;:::i;10576:309::-;10636:24;;;10632:130;;9813:19;;9809:89;;735:10:6;9911:21:3;9907:90;;469:3362:12;;;;4986:5:3;469:3362:12;;;;;;;;-1:-1:-1;;;;;735:10:6;469:3362:12;;;;;;;;;;10576:309:3;;;;9907:90;469:3362:12;9955:31:3;-1:-1:-1;;;9955:31:3;;469:3362:12;;;9955:31:3;9809:89;469:3362:12;9855:32:3;-1:-1:-1;;;9855:32:3;;469:3362:12;;;9855:32:3;10632:130;469:3362:12;10687:60:3;;;;;;735:10:6;469:3362:12;;;;;;10687:60:3;469:3362:12;;;;;;;;;;;;;;2927:12:3;469:3362:12;;;;;;;;;;;;;;-1:-1:-1;;469:3362:12;;;;;;:::i;:::-;;;735:10:6;;9813:19:3;9809:89;;-1:-1:-1;;;;;469:3362:12;9911:21:3;;;9907:90;;469:3362:12;735:10:6;;;469:3362:12;;;;;;;;;;;;;;;;;;;;10085:31:3;469:3362:12;735:10:6;10085:31:3;;469:3362:12;;;;;;;9907:90:3;9955:31;-1:-1:-1;;;469:3362:12;9955:31:3;;469:3362:12;;;9955:31:3;9809:89;469:3362:12;9855:32:3;-1:-1:-1;;;9855:32:3;;469:3362:12;;;9855:32:3;469:3362:12;;;;;;;;;;;;;;;;;1856:5:3;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1856:5:3;469:3362:12;;;;;-1:-1:-1;469:3362:12;;;;;;;-1:-1:-1;469:3362:12;;-1:-1:-1;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7224:17:25;469:3362:12;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;469:3362:12;;;:::i;:::-;;;;;;;7280:28:25;;;;;;469:3362:12;;;;;;;:::i;7310:3:25:-;7355:20;7344:32;-1:-1:-1;;;;;7355:20:25;469:3362:12;7355:20:25;;:::i;:::-;469:3362:12;;;;;;;7344:32:25;:::i;:::-;7330:46;;;;:::i;:::-;469:3362:12;;7265:13:25;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;469:3362:12;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;469:3362:12;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;;;;469:3362:12;;;;;-1:-1:-1;469:3362:12;;;;;;;;;;;;;;;-1:-1:-1;469:3362:12;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;469:3362:12;;;;;-1:-1:-1;469:3362:12;;;;;;;;;-1:-1:-1;;469:3362:12;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;7224:17:25;469:3362:12;;;;;;7224:17:25;-1:-1:-1;469:3362:12;;-1:-1:-1;469:3362:12;;;-1:-1:-1;469:3362:12;:::o;:::-;-1:-1:-1;;;469:3362:12;;;;;;;;;8881:11:25;469:3362:12;;;;;;8881:11:25;-1:-1:-1;469:3362:12;;-1:-1:-1;469:3362:12;;;-1:-1:-1;469:3362:12;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;469:3362:12;;;;;;;;776:42:26;;;;;;;;;;469:3362:12;;;776:42:26;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;469:3362:12;;;;;;;:::i;:::-;776:42:26;;;-1:-1:-1;776:42:26;;;;:::o;:::-;469:3362:12;776:42:26;:::o;:::-;;;;:::o;:::-;;469:3362:12;;-1:-1:-1;;;776:42:26;;;;;;;;;;;469:3362:12;776:42:26;469:3362:12;;;776:42:26;;469:3362:12;;;;:::o;:::-;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;469:3362:12;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;469:3362:12;;;;;;;;;;;;;;;;;;4513:224:26;-1:-1:-1;;;;;;;469:3362:12;776:42:26;4611:19;;776:42;;4650:21;;;4513:224;:::o;4611:118::-;469:3362:12;4691:38:26;469:3362:12;;;4691:38:26;;;;-1:-1:-1;;;4691:38:26;;4723:4;4691:38;;;469:3362:12;4691:38:26;;;;;;;;;;;4611:118;;4513:224;:::o;4691:38::-;;;;469:3362:12;4691:38:26;;469:3362:12;4691:38:26;;;;;;469:3362:12;4691:38:26;;;:::i;:::-;;;469:3362:12;;;;;;4513:224:26;:::o;4691:38::-;;;-1:-1:-1;4691:38:26;;;469:3362:12;;776:42:26;;;;;;;;5393:300:3;-1:-1:-1;;;;;469:3362:12;5476:18:3;;;5472:86;;-1:-1:-1;;;;;469:3362:12;5571:16:3;;;5567:86;;5492:1;469:3362:12;;;;;;;;;;6340:19:3;;;6336:115;;469:3362:12;;;;7083:25:3;469:3362:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:25:3;5393:300::o;6336:115::-;469:3362:12;6386:50:3;-1:-1:-1;;;6386:50:3;;;;;469:3362:12;;;;;6386:50:3;5567:86;5610:32;5492:1;5610:32;5492:1;5610:32;469:3362:12;;5492:1:3;5610:32;5472:86;5517:30;5492:1;5517:30;5492:1;5517:30;469:3362:12;;5492:1:3;5517:30;7984:206;-1:-1:-1;;;;;469:3362:12;8054:21:3;;8050:89;;8073:1;469:3362:12;;;;;;;;;;;6340:19:3;;;6336:115;;469:3362:12;7083:25:3;469:3362:12;;;;;;;;;;;;;;;6810:21:3;469:3362:12;;6810:21:3;469:3362:12;;;;;;7083:25:3;7984:206::o;6336:115::-;6386:50;;-1:-1:-1;;;469:3362:12;6386:50:3;;;469:3362:12;;;;;6386:50:3;1796:162:1;-1:-1:-1;;;;;1710:6:1;469:3362:12;;735:10:6;1855:23:1;1851:101;;1796:162::o;1851:101::-;1901:40;-1:-1:-1;1901:40:1;735:10:6;1901:40:1;469:3362:12;;-1:-1:-1;1901:40:1;7458:208:3;-1:-1:-1;;;;;469:3362:12;7528:21:3;;;7524:91;;6233:21;469:3362:12;6233:21:3;469:3362:12;6233:21:3;:::i;:::-;;469:3362:12;7083:25:3;469:3362:12;7547:1:3;469:3362:12;;;;;;;;;;;;;;;;;;;;;7083:25:3;7458:208::o;469:3362:12:-;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;469:3362:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;2369:1729:26:-;;;-1:-1:-1;469:3362:12;-1:-1:-1;;;;;469:3362:12;;;;;2463:18:26;469:3362:12;;2455:53:26;469:3362:12;;;;;;2455:53:26;:::i;:::-;776:42;2541:21;;:114;;;;2578:21;2541:114;2672:14;;2668:27;;469:3362:12;;;;;2727:28:26;;;:::i;:::-;469:3362:12;;2774:13:26;;469:3362:12;;2774:13:26;2811:3;469:3362:12;;2789:20:26;;;;;-1:-1:-1;;;;;2850:12:26;;;;:::i;:::-;469:3362:12;;;;;2463:18:26;469:3362:12;;2877:54:26;469:3362:12;;;;;;2877:54:26;:::i;:::-;469:3362:12;;;;;;;:::i;:::-;2986:1:26;469:3362:12;;;;;;;;3015:52:26;;;;469:3362:12;;-1:-1:-1;;;3039:18:26;;469:3362:12;3039:11:26;:18;:11;-1:-1:-1;;;;;3039:11:26;469:3362:12;3039:18:26;;;;;;;;;;;3015:52;;;-1:-1:-1;;;;;3005:62:26;;;:::i;:::-;469:3362:12;;;;776:42:26;3092:22;;776:42;;469:3362:12;;-1:-1:-1;;;3117:18:26;;469:3362:12;3117:11:26;:18;:11;-1:-1:-1;;;;;3117:11:26;469:3362:12;3117:18:26;;;;;;;;;;;3092:54;;;-1:-1:-1;;;;;3082:64:26;;;:::i;:::-;469:3362:12;;;;3167:19:26;;;;3207:8;3087:1;3207:8;2774:13;469:3362:12;2774:13:26;;3163:698;3237:624;;;;3087:1;3459:15;469:3362:12;3459:15:26;;;469:3362:12;;;3283:214:26;469:3362:12;;;;;3283:214:26;;;;;-1:-1:-1;;;3283:214:26;;3431:4;3283:214;;;;;:::i;:::-;;:11;;-1:-1:-1;;;;;3283:11:26;469:3362:12;3283:214:26;;;;;;;3087:1;3283:214;;;;3237:624;;2811:3;;3283:214;;;;;;;;;;;;:::i;:::-;;;;;;469:3362:12;;776:42:26;469:3362:12;;776:42:26;;;;3237:624;469:3362:12;;-1:-1:-1;;;3538:55:26;;-1:-1:-1;;;;;3570:11:26;469:3362:12;3538:55:26;;;469:3362:12;;;776:42:26;;;469:3362:12;;;;;;776:42:26;469:3362:12;;3538:55:26;;;;;;;;;3237:624;3807:15;3087:1;3807:15;469:3362:12;3807:15:26;;;469:3362:12;;;;;;;;3614:231:26;469:3362:12;;;3614:231:26;;;;;;;-1:-1:-1;;;3614:231:26;;3779:4;3614:231;3538:55;3614:231;;;:::i;:::-;;;;;;;;;;3087:1;3614:231;;;;3237:624;2811:3;;3538:55;;;469:3362:12;3538:55:26;;;;;;;;;:::i;:::-;;;3117:18;;;469:3362:12;3117:18:26;;;;;;;;;469:3362:12;3117:18:26;;;:::i;:::-;;;469:3362:12;;;;;;;:::i;:::-;3117:18:26;;;469:3362:12;;;;3117:18:26;;;-1:-1:-1;3117:18:26;;3092:54;;;;3039:18;;;469:3362:12;3039:18:26;;;;;;;;;469:3362:12;3039:18:26;;;:::i;:::-;;;469:3362:12;;;;;;;:::i;:::-;3039:18:26;;;;;;-1:-1:-1;3039:18:26;;3015:52;;;;2789:20;;;;;;;;;;;-1:-1:-1;;;;;3895:11:26;469:3362:12;;;-1:-1:-1;;;3895:18:26;;469:3362:12;3895:18:26;;;;;;;;;;;;;;;2769:1103;469:3362:12;;-1:-1:-1;;;;;469:3362:12;3888:51:26;469:3362:12;;3888:51:26;;;;-1:-1:-1;;;3888:51:26;;3933:4;3895:18;3888:51;;469:3362:12;;3888:51:26;;;;;;;;;;;2769:1103;3888:55;3884:207;;2369:1729;;:::o;3884:207::-;469:3362:12;;-1:-1:-1;;;3966:18:26;;469:3362:12;3966:18:26;3895;3966;;;;;;;;;;;;;3884:207;469:3362:12;;-1:-1:-1;;;;;3895:18:26;469:3362:12;;;;;4020:18:26;;;;-1:-1:-1;;;4020:18:26;;;;;;;;;;;;;3884:207;469:3362:12;;-1:-1:-1;;;;;469:3362:12;3888:51:26;469:3362:12;;4013:51:26;;;;-1:-1:-1;;;4013:51:26;;3933:4;3895:18;4013:51;;469:3362:12;;4013:51:26;;;;;;;;;;;3884:207;3960:119;;;;;;469:3362:12;;3888:51:26;469:3362:12;;;;3960:119:26;;;;;-1:-1:-1;;;3960:119:26;;3895:18;3960:119;;469:3362:12;3960:119:26;;;;;;;;2369:1729;;:::o;3960:119::-;;;;;:::i;:::-;2369:1729;:::o;4013:51::-;;;469:3362:12;4013:51:26;;469:3362:12;4013:51:26;;;;;;469:3362:12;4013:51:26;;;:::i;:::-;;;469:3362:12;;;;;4013:51:26;;;;;;-1:-1:-1;4013:51:26;;4020:18;;;469:3362:12;4020:18:26;;469:3362:12;4020:18:26;;;;;;469:3362:12;4020:18:26;;;:::i;:::-;;;469:3362:12;;;;;;-1:-1:-1;;;;;469:3362:12;;:::i;:::-;4020:18:26;;;;;;;-1:-1:-1;4020:18:26;;3966;;;469:3362:12;3966:18:26;;469:3362:12;3966:18:26;;;;;;469:3362:12;3966:18:26;;;:::i;:::-;;;469:3362:12;;;;;-1:-1:-1;;;;;469:3362:12;3895:18:26;469:3362:12;;:::i;:::-;3966:18:26;;;;;;;;-1:-1:-1;3966:18:26;;3888:51;;;469:3362:12;3888:51:26;;469:3362:12;3888:51:26;;;;;;469:3362:12;3888:51:26;;;:::i;:::-;;;469:3362:12;;;;;3888:51:26;;;;;;-1:-1:-1;3888:51:26;;3895:18;;;469:3362:12;3895:18:26;;469:3362:12;3895:18:26;;;;;;469:3362:12;3895:18:26;;;:::i;:::-;;;469:3362:12;;;;;;-1:-1:-1;;;;;469:3362:12;;:::i;:::-;3895:18:26;;;;;;;-1:-1:-1;3895:18:26;;2668:27;2688:7;;;;;;;:::o;2541:114::-;469:3362:12;;-1:-1:-1;;;2615:40:26;;2649:4;2615:40;;;469:3362:12;;2615:40:26;;;;;;;;;;;;;;;2541:114;;;;2615:40;;;469:3362:12;2615:40:26;;469:3362:12;2615:40:26;;;;;;469:3362:12;2615:40:26;;;:::i;:::-;;;469:3362:12;;;;;2615:40:26;;;;;;-1:-1:-1;2615:40:26;"
            },
            "methodIdentifiers": {
              "addToken(address,uint256)": "af81c5b9",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "creator()": "02d05d3f",
              "decimals()": "313ce567",
              "deposit(address,uint256)": "47e7ef24",
              "depositETH(uint256)": "5358fbda",
              "donate(address,uint256)": "e69d849d",
              "donateETH(uint256)": "ab83f98a",
              "executeCall((uint8,bytes))": "b317650b",
              "factory()": "c45a0155",
              "getAllowedActions()": "2494452d",
              "getBalances()": "00113e08",
              "getDepositUsdMin()": "8e4e9018",
              "getForkCost()": "531bcdb3",
              "getSplitRatio()": "4eadcca8",
              "getTokens()": "aa6ca808",
              "name()": "06fdde03",
              "onFork()": "8769b449",
              "owner()": "8da5cb5b",
              "removeToken(address)": "5fa7b584",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "withdraw(uint256)": "2e1a7d4d",
              "withdrawSingle(address,uint256)": "f9c4d3db",
              "withdrawSingleETH(uint256)": "a216aa06"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"},{\"internalType\":\"enum Enums.Visibility\",\"name\":\"visibility_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositUsdMin_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forkCost_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"initialTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"initialSplitRatio_\",\"type\":\"uint256[]\"},{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"allowedActions_\",\"type\":\"uint8[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"enum Enums.ActionCall\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Params.ExecuteCall\",\"name\":\"call\",\"type\":\"tuple\"}],\"name\":\"ExecuteCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDonated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donateETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum Enums.ActionCall\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Params.ExecuteCall\",\"name\":\"call\",\"type\":\"tuple\"}],\"name\":\"executeCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedActions\",\"outputs\":[{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositUsdMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getForkCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSplitRatio\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onFork\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSingle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSingleETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Strategy.sol\":\"Strategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/Strategy.sol\":{\"keccak256\":\"0x43d05e351ea33b6ee91d8d28183f04bbe9292f11caa46ef8e689cfbe217e2066\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://470643593f556f57329fdd67190276152ca0cf5a839c4a8f9034221293468ca4\",\"dweb:/ipfs/QmWsEnSjXv9NKa7QoUCXD4WRTZ4LSPU6jP2wAwahmZXjis\"]},\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0xdafda8f5f34be55f0f031adbe18eb4d11a8a6ea1ad2bcd3e67d0e76d11d9530f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a1298e140a1bf2cdc2b0f53c663fd71f010718822a547298435bf49b072693ef\",\"dweb:/ipfs/QmXzbUAgNmRWTtUNT6toQbrsXTS7hQonfDFATSdYRv6JR2\"]},\"contracts/interfaces/IMultiTokenPool.sol\":{\"keccak256\":\"0x82c1289792365bf675770f06d43816e00207385a368e1f004ee662582bb604bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e25dbe134fb5e13f032a5c04342d49d8d6634b32204264c4b1292903eb27b178\",\"dweb:/ipfs/QmXL6WvX7zAiSo2zHeDKJSagSRo4FB3F7DhXsppLw7kdDh\"]},\"contracts/interfaces/IPoolAdmin.sol\":{\"keccak256\":\"0x5531e78ca38f798dac44609d77e3addf1b8720966eea28b28e4e7bae9685d438\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d3f47b4ceebb0590d8454a0b35f4a5b8e0fa914294b4cb7826a5f35177a08af\",\"dweb:/ipfs/QmfWapy95rDTSjvzQkoCavk2AtUamemZvykNds4givHjar\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4252f4cc64140561f61a4d6ab1f39c540dd70099aa0f056ca0162b8683a78c95\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c644be7ada43bdc0faf1103004ad7a4bebf58f5f780e887ec14d9032b13efa59\",\"dweb:/ipfs/Qmc5Sdo5xjJEMJts7YzzUUboML46S4WEKmuSZBT8ZdZceC\"]},\"contracts/interfaces/IRevenue.sol\":{\"keccak256\":\"0xd5a46b604bec7d07fc9e71f4f6353f6e7111ec6ec943b6f3919ac9f3b76cbc7d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f588ebd6d301d2899f1a8cbcf3431ab77ee903745dcb674e6b6362da489e440e\",\"dweb:/ipfs/QmUR57AhBxPf4v8Wjmcs1v5PTTnAFvvtuH1SjDhvixENqY\"]},\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x2d3f17b9672e01c840221eeec835270f2a422452a748895c253776dc087520d7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://765b3f5dd0af55dd95ca0d821de87a42ab5009506e5b65b70b03f1e9cf547417\",\"dweb:/ipfs/QmdcVQDuwrezpLrdp4WmveJLUMa9X2WF9MKUoxGo4EG2W9\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x3dc7a557d4025376ed268d521cd42ff61587d313e1affbcea22879f5bacbaa28\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7003ff5090bbcbe986ad6cfd42280a6cc5fd675c309cee9ad1fb87073de1f79a\",\"dweb:/ipfs/QmUuwyMVhVgGqA3ooirHCvPCb98h1YUeeac6Zmn4WtH5FA\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]},\"contracts/lib/Params.sol\":{\"keccak256\":\"0xff8d2345a9a54bea3d7b8b85b10db04c88cd1ed7f945b140fc0479337095a498\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67c5fa1f1789abac9073988c1f1348cb66919b8816117e8cff43699006257a6f\",\"dweb:/ipfs/QmRME4psBXS6botgfdXwSsVW13izZ6arp2JNgC4XfcudY3\"]},\"contracts/lib/Types.sol\":{\"keccak256\":\"0xb9f0c879aa34501ba63fa88aab0713e10884f0f7cf9075a3188138ebe072dc54\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://940f96d0d58e31c3d740a380aa27d1a7215d5ad4e25d595782a99596c19cdb46\",\"dweb:/ipfs/QmcK7CtZ6CRyDNKMdbkWgcmahoXhZE7539WnDe5o9HtkUj\"]},\"contracts/pool/MultiTokenPool.sol\":{\"keccak256\":\"0x7d4a72c34f446d83009e3a71c41f4bf2e6ccf60546e65a1cf361cf8599a078f9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d1ccfe94665510565630bb3bf74f5b3ac522cbabf28d2f83e1a2348d5581ce89\",\"dweb:/ipfs/QmTQLQuraM9PVZeAqgitjugrk85MunMbLQBGeg9ogdh96n\"]},\"contracts/pool/PoolActions.sol\":{\"keccak256\":\"0xbb9f6afc1845f9e1e291c56fe142dfdcdaed185ef9133d24eb77f99130a005aa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f0848c2b663c4ea025fec4db1c7588a980004b5efeefce914830abf561e1f9ae\",\"dweb:/ipfs/QmaLE5YxU3D5Bs2GNG3Y1FU7PSCr1TXYsLck9TVsD6xw1M\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IChainlink.sol": {
        "IChainlink": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "getPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "decimal",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getPrice(address)": "41976e09"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"decimal\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IChainlink.sol\":\"IChainlink\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IChainlink.sol\":{\"keccak256\":\"0xda420cc62622c01860b1ca82bf479ad0f7577905f052b7e2c1b7c88e0166447a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e1b28eb7e0d766e77bf15a861e15f33dcf91b1a043ed2bce18a44c5b0bba485\",\"dweb:/ipfs/QmNT5BhbETpVhg8foLhBLGghBemRaTvkHHrL54ixJBSijc\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IFactory.sol": {
        "IFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "splitRatio",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "enum Enums.Visibility",
                  "name": "visibility",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "depositUsdMin",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "forkCost",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "allowedActions",
                  "type": "uint8[]"
                }
              ],
              "name": "StrategyCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "fork",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "forker",
                  "type": "address"
                }
              ],
              "name": "StrategyForked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "splitRatio",
                  "type": "uint256[]"
                },
                {
                  "internalType": "enum Enums.Visibility",
                  "name": "visibility",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "depositUsdMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "forkCost",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "allowedActions",
                  "type": "uint8[]"
                }
              ],
              "name": "createStrategy",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "edger",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                }
              ],
              "name": "forkStrategy",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPriceOracleAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRevenueAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSwapRouterAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createStrategy(address[],uint256[],uint8,uint256,uint256,uint8[])": "8403ef08",
              "edger()": "f94f657c",
              "forkStrategy(address)": "64f079e1",
              "getPriceOracleAddress()": "8b5350cc",
              "getRevenueAddress()": "78d1c86d",
              "getSwapRouterAddress()": "f5c8ba93"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"splitRatio\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"enum Enums.Visibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositUsdMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"forkCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"allowedActions\",\"type\":\"uint8[]\"}],\"name\":\"StrategyCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fork\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"forker\",\"type\":\"address\"}],\"name\":\"StrategyForked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"splitRatio\",\"type\":\"uint256[]\"},{\"internalType\":\"enum Enums.Visibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositUsdMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forkCost\",\"type\":\"uint256\"},{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"allowedActions\",\"type\":\"uint8[]\"}],\"name\":\"createStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"edger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"forkStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevenueAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFactory.sol\":\"IFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0xdafda8f5f34be55f0f031adbe18eb4d11a8a6ea1ad2bcd3e67d0e76d11d9530f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a1298e140a1bf2cdc2b0f53c663fd71f010718822a547298435bf49b072693ef\",\"dweb:/ipfs/QmXzbUAgNmRWTtUNT6toQbrsXTS7hQonfDFATSdYRv6JR2\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IMultiTokenPool.sol": {
        "IMultiTokenPool": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "lp",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "donor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensDonated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "lp",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "TokensWithdrawn",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                }
              ],
              "name": "addToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "depositETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "donate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "donateETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllowedActions",
              "outputs": [
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "",
                  "type": "uint8[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalances",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getDepositUsdMin",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSplitRatio",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTokens",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "removeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawSingle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawSingleETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addToken(address,uint256)": "af81c5b9",
              "deposit(address,uint256)": "47e7ef24",
              "depositETH(uint256)": "5358fbda",
              "donate(address,uint256)": "e69d849d",
              "donateETH(uint256)": "ab83f98a",
              "getAllowedActions()": "2494452d",
              "getBalances()": "00113e08",
              "getDepositUsdMin()": "8e4e9018",
              "getSplitRatio()": "4eadcca8",
              "getTokens()": "aa6ca808",
              "removeToken(address)": "5fa7b584",
              "withdraw(uint256)": "2e1a7d4d",
              "withdrawSingle(address,uint256)": "f9c4d3db",
              "withdrawSingleETH(uint256)": "a216aa06"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDonated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donateETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedActions\",\"outputs\":[{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositUsdMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSplitRatio\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSingle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSingleETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMultiTokenPool.sol\":\"IMultiTokenPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMultiTokenPool.sol\":{\"keccak256\":\"0x82c1289792365bf675770f06d43816e00207385a368e1f004ee662582bb604bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e25dbe134fb5e13f032a5c04342d49d8d6634b32204264c4b1292903eb27b178\",\"dweb:/ipfs/QmXL6WvX7zAiSo2zHeDKJSagSRo4FB3F7DhXsppLw7kdDh\"]},\"contracts/interfaces/IPoolAdmin.sol\":{\"keccak256\":\"0x5531e78ca38f798dac44609d77e3addf1b8720966eea28b28e4e7bae9685d438\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d3f47b4ceebb0590d8454a0b35f4a5b8e0fa914294b4cb7826a5f35177a08af\",\"dweb:/ipfs/QmfWapy95rDTSjvzQkoCavk2AtUamemZvykNds4givHjar\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IPoolAdmin.sol": {
        "IPoolAdmin": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                }
              ],
              "name": "addToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "removeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addToken(address,uint256)": "af81c5b9",
              "removeToken(address)": "5fa7b584"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPoolAdmin.sol\":\"IPoolAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IPoolAdmin.sol\":{\"keccak256\":\"0x5531e78ca38f798dac44609d77e3addf1b8720966eea28b28e4e7bae9685d438\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d3f47b4ceebb0590d8454a0b35f4a5b8e0fa914294b4cb7826a5f35177a08af\",\"dweb:/ipfs/QmfWapy95rDTSjvzQkoCavk2AtUamemZvykNds4givHjar\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IPriceOracle.sol": {
        "IPriceOracle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                }
              ],
              "name": "getAmountOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                }
              ],
              "name": "getAmountOutInUsd",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amountIns",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "tokenIns",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                }
              ],
              "name": "getAmountsOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amountIns",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "tokenIns",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsOutInUsd",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getAmountOut(uint256,address,address)": "5e1e6325",
              "getAmountOutInUsd(uint256,address)": "67f46796",
              "getAmountsOut(uint256[],address[],address)": "9e99c826",
              "getAmountsOutInUsd(uint256[],address[])": "04eb30c6"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"}],\"name\":\"getAmountOutInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountIns\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenIns\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountIns\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenIns\",\"type\":\"address[]\"}],\"name\":\"getAmountsOutInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceOracle.sol\":\"IPriceOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4252f4cc64140561f61a4d6ab1f39c540dd70099aa0f056ca0162b8683a78c95\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c644be7ada43bdc0faf1103004ad7a4bebf58f5f780e887ec14d9032b13efa59\",\"dweb:/ipfs/Qmc5Sdo5xjJEMJts7YzzUUboML46S4WEKmuSZBT8ZdZceC\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IRevenue.sol": {
        "IRevenue": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Funded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawn",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "claimed",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "unClaimed",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Types.Revenue",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "fund",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "balanceOf(address)": "70a08231",
              "fund(address)": "23024408",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unClaimed\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.Revenue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRevenue.sol\":\"IRevenue\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IRevenue.sol\":{\"keccak256\":\"0xd5a46b604bec7d07fc9e71f4f6353f6e7111ec6ec943b6f3919ac9f3b76cbc7d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f588ebd6d301d2899f1a8cbcf3431ab77ee903745dcb674e6b6362da489e440e\",\"dweb:/ipfs/QmUR57AhBxPf4v8Wjmcs1v5PTTnAFvvtuH1SjDhvixENqY\"]},\"contracts/lib/Types.sol\":{\"keccak256\":\"0xb9f0c879aa34501ba63fa88aab0713e10884f0f7cf9075a3188138ebe072dc54\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://940f96d0d58e31c3d740a380aa27d1a7215d5ad4e25d595782a99596c19cdb46\",\"dweb:/ipfs/QmcK7CtZ6CRyDNKMdbkWgcmahoXhZE7539WnDe5o9HtkUj\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IStrategy.sol": {
        "IStrategy": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum Enums.ActionCall",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Params.ExecuteCall",
                  "name": "call",
                  "type": "tuple"
                }
              ],
              "name": "ExecuteCalled",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "creator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum Enums.ActionCall",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Params.ExecuteCall",
                  "name": "call",
                  "type": "tuple"
                }
              ],
              "name": "executeCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getForkCost",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "onFork",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "creator()": "02d05d3f",
              "executeCall((uint8,bytes))": "b317650b",
              "factory()": "c45a0155",
              "getForkCost()": "531bcdb3",
              "onFork()": "8769b449"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"enum Enums.ActionCall\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Params.ExecuteCall\",\"name\":\"call\",\"type\":\"tuple\"}],\"name\":\"ExecuteCalled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum Enums.ActionCall\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Params.ExecuteCall\",\"name\":\"call\",\"type\":\"tuple\"}],\"name\":\"executeCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getForkCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onFork\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStrategy.sol\":\"IStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x2d3f17b9672e01c840221eeec835270f2a422452a748895c253776dc087520d7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://765b3f5dd0af55dd95ca0d821de87a42ab5009506e5b65b70b03f1e9cf547417\",\"dweb:/ipfs/QmdcVQDuwrezpLrdp4WmveJLUMa9X2WF9MKUoxGo4EG2W9\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]},\"contracts/lib/Params.sol\":{\"keccak256\":\"0xff8d2345a9a54bea3d7b8b85b10db04c88cd1ed7f945b140fc0479337095a498\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67c5fa1f1789abac9073988c1f1348cb66919b8816117e8cff43699006257a6f\",\"dweb:/ipfs/QmRME4psBXS6botgfdXwSsVW13izZ6arp2JNgC4XfcudY3\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IWETH.sol": {
        "IWETH": {
          "abi": [
            {
              "inputs": [],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "depositFor",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "withdrawTo",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deposit()": "d0e30db0",
              "depositFor(address)": "aa67c919",
              "withdraw(uint256)": "2e1a7d4d",
              "withdrawTo(address,uint256)": "205c2878"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x3dc7a557d4025376ed268d521cd42ff61587d313e1affbcea22879f5bacbaa28\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7003ff5090bbcbe986ad6cfd42280a6cc5fd675c309cee9ad1fb87073de1f79a\",\"dweb:/ipfs/QmUuwyMVhVgGqA3ooirHCvPCb98h1YUeeac6Zmn4WtH5FA\"]}},\"version\":1}"
        }
      },
      "contracts/lib/Enums.sol": {
        "Enums": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c2f9abdb70b56f4538fa167690a0f366f17e8a25002f14a04ff767212d625f5364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xF9 0xAB 0xDB PUSH17 0xB56F4538FA167690A0F366F17E8A25002F EQ LOG0 0x4F 0xF7 PUSH8 0x212D625F5364736F PUSH13 0x634300081C0033000000000000 ",
              "sourceMap": "68:277:21:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220c2f9abdb70b56f4538fa167690a0f366f17e8a25002f14a04ff767212d625f5364736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xF9 0xAB 0xDB PUSH17 0xB56F4538FA167690A0F366F17E8A25002F EQ LOG0 0x4F 0xF7 PUSH8 0x212D625F5364736F PUSH13 0x634300081C0033000000000000 ",
              "sourceMap": "68:277:21:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/Enums.sol\":\"Enums\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]}},\"version\":1}"
        }
      },
      "contracts/lib/Params.sol": {
        "Params": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122096d65520c0dfb13c00375be0c9dc62b49ae5c1cc33aa194dca15ec1f38cba87a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xD6 SSTORE KECCAK256 0xC0 0xDF 0xB1 EXTCODECOPY STOP CALLDATACOPY JUMPDEST 0xE0 0xC9 0xDC PUSH3 0xB49AE5 0xC1 0xCC CALLER 0xAA NOT 0x4D 0xCA ISZERO 0xEC 0x1F CODESIZE 0xCB 0xA8 PUSH27 0x64736F6C634300081C003300000000000000000000000000000000 ",
              "sourceMap": "106:107:22:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea264697066735822122096d65520c0dfb13c00375be0c9dc62b49ae5c1cc33aa194dca15ec1f38cba87a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xD6 SSTORE KECCAK256 0xC0 0xDF 0xB1 EXTCODECOPY STOP CALLDATACOPY JUMPDEST 0xE0 0xC9 0xDC PUSH3 0xB49AE5 0xC1 0xCC CALLER 0xAA NOT 0x4D 0xCA ISZERO 0xEC 0x1F CODESIZE 0xCB 0xA8 PUSH27 0x64736F6C634300081C003300000000000000000000000000000000 ",
              "sourceMap": "106:107:22:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/Params.sol\":\"Params\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]},\"contracts/lib/Params.sol\":{\"keccak256\":\"0xff8d2345a9a54bea3d7b8b85b10db04c88cd1ed7f945b140fc0479337095a498\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67c5fa1f1789abac9073988c1f1348cb66919b8816117e8cff43699006257a6f\",\"dweb:/ipfs/QmRME4psBXS6botgfdXwSsVW13izZ6arp2JNgC4XfcudY3\"]}},\"version\":1}"
        }
      },
      "contracts/lib/Types.sol": {
        "Types": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e8f477f32b3c8ff4c72ef8d9d9407def5e92e6f76e1b9999cef0613f1f3830e664736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 DELEGATECALL PUSH24 0xF32B3C8FF4C72EF8D9D9407DEF5E92E6F76E1B9999CEF061 EXTCODEHASH 0x1F CODESIZE ADDRESS 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "68:101:23:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220e8f477f32b3c8ff4c72ef8d9d9407def5e92e6f76e1b9999cef0613f1f3830e664736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 DELEGATECALL PUSH24 0xF32B3C8FF4C72EF8D9D9407DEF5E92E6F76E1B9999CEF061 EXTCODEHASH 0x1F CODESIZE ADDRESS 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "68:101:23:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/Types.sol\":\"Types\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/lib/Types.sol\":{\"keccak256\":\"0xb9f0c879aa34501ba63fa88aab0713e10884f0f7cf9075a3188138ebe072dc54\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://940f96d0d58e31c3d740a380aa27d1a7215d5ad4e25d595782a99596c19cdb46\",\"dweb:/ipfs/QmcK7CtZ6CRyDNKMdbkWgcmahoXhZE7539WnDe5o9HtkUj\"]}},\"version\":1}"
        }
      },
      "contracts/oracle/PriceOracle.sol": {
        "PriceOracle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IChainlink",
                  "name": "chainlink",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                }
              ],
              "name": "getAmountOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                }
              ],
              "name": "getAmountOutInUsd",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amountIns",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "tokenIns",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                }
              ],
              "name": "getAmountsOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amountIns",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "tokenIns",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsOutInUsd",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a034606d57601f61072938819003918201601f19168301916001600160401b03831184841017607257808492602094604052833981010312606d57516001600160a01b0381168103606d576080526040516106a09081610089823960805181818161049c01526105f70152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806304eb30c6146101695780635e1e63251461013a57806367f467961461010c57639e99c8261461004857600080fd5b346101075760603660031901126101075760043567ffffffffffffffff81116101075761007990369060040161025e565b60243567ffffffffffffffff8111610107576100999036906004016102e7565b906100a26102d1565b6000926100b28351825114610355565b6000935b83518510156100fc576100f46001916100ee856100d389896103ba565b516001600160a01b036100e68b896103ba565b51169061047d565b906103e4565b9401936100b6565b602090604051908152f35b600080fd5b3461010757604036600319011261010757602061013261012a6102bb565b6004356105cb565b604051908152f35b346101075760603660031901126101075760206101326101586102bb565b6101606102d1565b9060043561047d565b346101075760403660031901126101075760043567ffffffffffffffff81116101075761019a90369060040161025e565b60243567ffffffffffffffff8111610107576101ba9036906004016102e7565b906000916101cb8251825114610355565b6000925b82518410156100fc576102066001916100ee6101eb87876103ba565b516001600160a01b036101fe89886103ba565b5116906105cb565b9301926101cf565b90601f8019910116810190811067ffffffffffffffff82111761023057604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116102305760051b60200190565b9080601f8301121561010757813561027581610246565b92610283604051948561020e565b81845260208085019260051b82010192831161010757602001905b8282106102ab5750505090565b813581526020918201910161029e565b602435906001600160a01b038216820361010757565b604435906001600160a01b038216820361010757565b9080601f83011215610107578135906102ff82610246565b9261030d604051948561020e565b82845260208085019360051b82010191821161010757602001915b8183106103355750505090565b82356001600160a01b038116810361010757815260209283019201610328565b1561035c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4d69736d617463686564206172726179730000000000000000000000000000006044820152fd5b80518210156103ce5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b919082018092116103f157565b634e487b7160e01b600052601160045260246000fd5b9190826040910312610107576020825192015169ffffffffffffffffffff811681036101075790565b818102929181159184041417156103f157565b69ffffffffffffffffffff16604d81116103f157600a0a90565b8115610467570490565b634e487b7160e01b600052601260045260246000fd5b916001600160a01b0380911691168181146105c6576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016604051916341976e0960e01b83526004830152604082602481845afa928315610596576000926000946105a2575b5060409060248251809481936341976e0960e01b835260048301525afa80156105965761054d9461054793600093600093610550575b509161053b6105356105419361053b95610430565b91610443565b90610430565b93610443565b9061045d565b90565b61054192945061053b935061053561058261053b9260403d60401161058f575b61057a818361020e565b810190610407565b9690969550935050610520565b503d610570565b6040513d6000823e3d90fd5b6105be91945060408094503d851161058f5761057a818361020e565b9390926104ea565b505090565b6001600160a01b03604051926341976e0960e01b84521660048301526040826024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105965761054d9260009060009361063d575b506105479161053591610430565b61054792935061053591506106609060403d60401161058f5761057a818361020e565b939091509161062f56fea264697066735822122035f57e0087d01fa79264f4602f270f5d08d8a2300ff2b1875c4e9e699dddaa2364736f6c634300081c0033",
              "opcodes": "PUSH1 0xA0 CALLVALUE PUSH1 0x6D JUMPI PUSH1 0x1F PUSH2 0x729 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0x72 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0x6D JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH1 0x6D JUMPI PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x6A0 SWAP1 DUP2 PUSH2 0x89 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x49C ADD MSTORE PUSH2 0x5F7 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4EB30C6 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x5E1E6325 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x67F46796 EQ PUSH2 0x10C JUMPI PUSH4 0x9E99C826 EQ PUSH2 0x48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x107 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x107 JUMPI PUSH2 0x79 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x25E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x107 JUMPI PUSH2 0x99 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2E7 JUMP JUMPDEST SWAP1 PUSH2 0xA2 PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x0 SWAP3 PUSH2 0xB2 DUP4 MLOAD DUP3 MLOAD EQ PUSH2 0x355 JUMP JUMPDEST PUSH1 0x0 SWAP4 JUMPDEST DUP4 MLOAD DUP6 LT ISZERO PUSH2 0xFC JUMPI PUSH2 0xF4 PUSH1 0x1 SWAP2 PUSH2 0xEE DUP6 PUSH2 0xD3 DUP10 DUP10 PUSH2 0x3BA JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE6 DUP12 DUP10 PUSH2 0x3BA JUMP JUMPDEST MLOAD AND SWAP1 PUSH2 0x47D JUMP JUMPDEST SWAP1 PUSH2 0x3E4 JUMP JUMPDEST SWAP5 ADD SWAP4 PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x107 JUMPI PUSH1 0x20 PUSH2 0x132 PUSH2 0x12A PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x107 JUMPI PUSH1 0x20 PUSH2 0x132 PUSH2 0x158 PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x160 PUSH2 0x2D1 JUMP JUMPDEST SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x47D JUMP JUMPDEST CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x107 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x107 JUMPI PUSH2 0x19A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x25E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x107 JUMPI PUSH2 0x1BA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2E7 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x1CB DUP3 MLOAD DUP3 MLOAD EQ PUSH2 0x355 JUMP JUMPDEST PUSH1 0x0 SWAP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0xFC JUMPI PUSH2 0x206 PUSH1 0x1 SWAP2 PUSH2 0xEE PUSH2 0x1EB DUP8 DUP8 PUSH2 0x3BA JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1FE DUP10 DUP9 PUSH2 0x3BA JUMP JUMPDEST MLOAD AND SWAP1 PUSH2 0x5CB JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x1CF JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x230 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x230 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x107 JUMPI DUP2 CALLDATALOAD PUSH2 0x275 DUP2 PUSH2 0x246 JUMP JUMPDEST SWAP3 PUSH2 0x283 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x20E JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x107 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2AB JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x107 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x107 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x107 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x2FF DUP3 PUSH2 0x246 JUMP JUMPDEST SWAP3 PUSH2 0x30D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x20E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x107 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x335 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x107 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x328 JUMP JUMPDEST ISZERO PUSH2 0x35C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D61746368656420617272617973000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3F1 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x107 JUMPI PUSH1 0x20 DUP3 MLOAD SWAP3 ADD MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x107 JUMPI SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x3F1 JUMPI JUMP JUMPDEST PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4D DUP2 GT PUSH2 0x3F1 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x467 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP2 AND DUP2 DUP2 EQ PUSH2 0x5C6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x40 MLOAD SWAP2 PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x40 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x596 JUMPI PUSH1 0x0 SWAP3 PUSH1 0x0 SWAP5 PUSH2 0x5A2 JUMPI JUMPDEST POP PUSH1 0x40 SWAP1 PUSH1 0x24 DUP3 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x596 JUMPI PUSH2 0x54D SWAP5 PUSH2 0x547 SWAP4 PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP4 PUSH2 0x550 JUMPI JUMPDEST POP SWAP2 PUSH2 0x53B PUSH2 0x535 PUSH2 0x541 SWAP4 PUSH2 0x53B SWAP6 PUSH2 0x430 JUMP JUMPDEST SWAP2 PUSH2 0x443 JUMP JUMPDEST SWAP1 PUSH2 0x430 JUMP JUMPDEST SWAP4 PUSH2 0x443 JUMP JUMPDEST SWAP1 PUSH2 0x45D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x541 SWAP3 SWAP5 POP PUSH2 0x53B SWAP4 POP PUSH2 0x535 PUSH2 0x582 PUSH2 0x53B SWAP3 PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x58F JUMPI JUMPDEST PUSH2 0x57A DUP2 DUP4 PUSH2 0x20E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x407 JUMP JUMPDEST SWAP7 SWAP1 SWAP7 SWAP6 POP SWAP4 POP POP PUSH2 0x520 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x5BE SWAP2 SWAP5 POP PUSH1 0x40 DUP1 SWAP5 POP RETURNDATASIZE DUP6 GT PUSH2 0x58F JUMPI PUSH2 0x57A DUP2 DUP4 PUSH2 0x20E JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x4EA JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP5 MSTORE AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x40 DUP3 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x596 JUMPI PUSH2 0x54D SWAP3 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP4 PUSH2 0x63D JUMPI JUMPDEST POP PUSH2 0x547 SWAP2 PUSH2 0x535 SWAP2 PUSH2 0x430 JUMP JUMPDEST PUSH2 0x547 SWAP3 SWAP4 POP PUSH2 0x535 SWAP2 POP PUSH2 0x660 SWAP1 PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x58F JUMPI PUSH2 0x57A DUP2 DUP4 PUSH2 0x20E JUMP JUMPDEST SWAP4 SWAP1 SWAP2 POP SWAP2 PUSH2 0x62F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD CREATE2 PUSH31 0x87D01FA79264F4602F270F5D08D8A2300FF2B1875C4E9E699DDDAA236473 PUSH16 0x6C634300081C00330000000000000000 ",
              "sourceMap": "190:1813:24:-:0;;;;;;;;;;;;;-1:-1:-1;;190:1813:24;;;;-1:-1:-1;;;;;190:1813:24;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;190:1813:24;;;;;;328:22;;190:1813;;;;;;;;328:22;190:1813;;;;;;;;;;;;-1:-1:-1;190:1813:24;;;;;;-1:-1:-1;190:1813:24;;;;;-1:-1:-1;190:1813:24"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 721,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_2091": {
                  "entryPoint": 699,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_array_address_dyn": {
                  "entryPoint": 743,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_array_uint256_dyn": {
                  "entryPoint": 606,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256t_uint80_fromMemory": {
                  "entryPoint": 1031,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "array_allocation_size_array_uint256_dyn": {
                  "entryPoint": 582,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 996,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 1117,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_rational_by_uint80": {
                  "entryPoint": 1091,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 1072,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 526,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_getAmountOut": {
                  "entryPoint": 1149,
                  "id": 2639,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "fun_getAmountOutInUsd": {
                  "entryPoint": 1483,
                  "id": 2536,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 954,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_4fa0": {
                  "entryPoint": 853,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "2493": [
                  {
                    "length": 32,
                    "start": 1180
                  },
                  {
                    "length": 32,
                    "start": 1527
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c806304eb30c6146101695780635e1e63251461013a57806367f467961461010c57639e99c8261461004857600080fd5b346101075760603660031901126101075760043567ffffffffffffffff81116101075761007990369060040161025e565b60243567ffffffffffffffff8111610107576100999036906004016102e7565b906100a26102d1565b6000926100b28351825114610355565b6000935b83518510156100fc576100f46001916100ee856100d389896103ba565b516001600160a01b036100e68b896103ba565b51169061047d565b906103e4565b9401936100b6565b602090604051908152f35b600080fd5b3461010757604036600319011261010757602061013261012a6102bb565b6004356105cb565b604051908152f35b346101075760603660031901126101075760206101326101586102bb565b6101606102d1565b9060043561047d565b346101075760403660031901126101075760043567ffffffffffffffff81116101075761019a90369060040161025e565b60243567ffffffffffffffff8111610107576101ba9036906004016102e7565b906000916101cb8251825114610355565b6000925b82518410156100fc576102066001916100ee6101eb87876103ba565b516001600160a01b036101fe89886103ba565b5116906105cb565b9301926101cf565b90601f8019910116810190811067ffffffffffffffff82111761023057604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116102305760051b60200190565b9080601f8301121561010757813561027581610246565b92610283604051948561020e565b81845260208085019260051b82010192831161010757602001905b8282106102ab5750505090565b813581526020918201910161029e565b602435906001600160a01b038216820361010757565b604435906001600160a01b038216820361010757565b9080601f83011215610107578135906102ff82610246565b9261030d604051948561020e565b82845260208085019360051b82010191821161010757602001915b8183106103355750505090565b82356001600160a01b038116810361010757815260209283019201610328565b1561035c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4d69736d617463686564206172726179730000000000000000000000000000006044820152fd5b80518210156103ce5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b919082018092116103f157565b634e487b7160e01b600052601160045260246000fd5b9190826040910312610107576020825192015169ffffffffffffffffffff811681036101075790565b818102929181159184041417156103f157565b69ffffffffffffffffffff16604d81116103f157600a0a90565b8115610467570490565b634e487b7160e01b600052601260045260246000fd5b916001600160a01b0380911691168181146105c6576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016604051916341976e0960e01b83526004830152604082602481845afa928315610596576000926000946105a2575b5060409060248251809481936341976e0960e01b835260048301525afa80156105965761054d9461054793600093600093610550575b509161053b6105356105419361053b95610430565b91610443565b90610430565b93610443565b9061045d565b90565b61054192945061053b935061053561058261053b9260403d60401161058f575b61057a818361020e565b810190610407565b9690969550935050610520565b503d610570565b6040513d6000823e3d90fd5b6105be91945060408094503d851161058f5761057a818361020e565b9390926104ea565b505090565b6001600160a01b03604051926341976e0960e01b84521660048301526040826024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105965761054d9260009060009361063d575b506105479161053591610430565b61054792935061053591506106609060403d60401161058f5761057a818361020e565b939091509161062f56fea264697066735822122035f57e0087d01fa79264f4602f270f5d08d8a2300ff2b1875c4e9e699dddaa2364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4EB30C6 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x5E1E6325 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x67F46796 EQ PUSH2 0x10C JUMPI PUSH4 0x9E99C826 EQ PUSH2 0x48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x107 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x107 JUMPI PUSH2 0x79 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x25E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x107 JUMPI PUSH2 0x99 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2E7 JUMP JUMPDEST SWAP1 PUSH2 0xA2 PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x0 SWAP3 PUSH2 0xB2 DUP4 MLOAD DUP3 MLOAD EQ PUSH2 0x355 JUMP JUMPDEST PUSH1 0x0 SWAP4 JUMPDEST DUP4 MLOAD DUP6 LT ISZERO PUSH2 0xFC JUMPI PUSH2 0xF4 PUSH1 0x1 SWAP2 PUSH2 0xEE DUP6 PUSH2 0xD3 DUP10 DUP10 PUSH2 0x3BA JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE6 DUP12 DUP10 PUSH2 0x3BA JUMP JUMPDEST MLOAD AND SWAP1 PUSH2 0x47D JUMP JUMPDEST SWAP1 PUSH2 0x3E4 JUMP JUMPDEST SWAP5 ADD SWAP4 PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x107 JUMPI PUSH1 0x20 PUSH2 0x132 PUSH2 0x12A PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x107 JUMPI PUSH1 0x20 PUSH2 0x132 PUSH2 0x158 PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x160 PUSH2 0x2D1 JUMP JUMPDEST SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x47D JUMP JUMPDEST CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x107 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x107 JUMPI PUSH2 0x19A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x25E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x107 JUMPI PUSH2 0x1BA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2E7 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x1CB DUP3 MLOAD DUP3 MLOAD EQ PUSH2 0x355 JUMP JUMPDEST PUSH1 0x0 SWAP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0xFC JUMPI PUSH2 0x206 PUSH1 0x1 SWAP2 PUSH2 0xEE PUSH2 0x1EB DUP8 DUP8 PUSH2 0x3BA JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1FE DUP10 DUP9 PUSH2 0x3BA JUMP JUMPDEST MLOAD AND SWAP1 PUSH2 0x5CB JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x1CF JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x230 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x230 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x107 JUMPI DUP2 CALLDATALOAD PUSH2 0x275 DUP2 PUSH2 0x246 JUMP JUMPDEST SWAP3 PUSH2 0x283 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x20E JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x107 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2AB JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x107 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x107 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x107 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x2FF DUP3 PUSH2 0x246 JUMP JUMPDEST SWAP3 PUSH2 0x30D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x20E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x107 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x335 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x107 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x328 JUMP JUMPDEST ISZERO PUSH2 0x35C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D61746368656420617272617973000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3F1 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x107 JUMPI PUSH1 0x20 DUP3 MLOAD SWAP3 ADD MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x107 JUMPI SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x3F1 JUMPI JUMP JUMPDEST PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4D DUP2 GT PUSH2 0x3F1 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x467 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP2 AND DUP2 DUP2 EQ PUSH2 0x5C6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x40 MLOAD SWAP2 PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x40 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x596 JUMPI PUSH1 0x0 SWAP3 PUSH1 0x0 SWAP5 PUSH2 0x5A2 JUMPI JUMPDEST POP PUSH1 0x40 SWAP1 PUSH1 0x24 DUP3 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x596 JUMPI PUSH2 0x54D SWAP5 PUSH2 0x547 SWAP4 PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP4 PUSH2 0x550 JUMPI JUMPDEST POP SWAP2 PUSH2 0x53B PUSH2 0x535 PUSH2 0x541 SWAP4 PUSH2 0x53B SWAP6 PUSH2 0x430 JUMP JUMPDEST SWAP2 PUSH2 0x443 JUMP JUMPDEST SWAP1 PUSH2 0x430 JUMP JUMPDEST SWAP4 PUSH2 0x443 JUMP JUMPDEST SWAP1 PUSH2 0x45D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x541 SWAP3 SWAP5 POP PUSH2 0x53B SWAP4 POP PUSH2 0x535 PUSH2 0x582 PUSH2 0x53B SWAP3 PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x58F JUMPI JUMPDEST PUSH2 0x57A DUP2 DUP4 PUSH2 0x20E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x407 JUMP JUMPDEST SWAP7 SWAP1 SWAP7 SWAP6 POP SWAP4 POP POP PUSH2 0x520 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x5BE SWAP2 SWAP5 POP PUSH1 0x40 DUP1 SWAP5 POP RETURNDATASIZE DUP6 GT PUSH2 0x58F JUMPI PUSH2 0x57A DUP2 DUP4 PUSH2 0x20E JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x4EA JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH4 0x41976E09 PUSH1 0xE0 SHL DUP5 MSTORE AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x40 DUP3 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x596 JUMPI PUSH2 0x54D SWAP3 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP4 PUSH2 0x63D JUMPI JUMPDEST POP PUSH2 0x547 SWAP2 PUSH2 0x535 SWAP2 PUSH2 0x430 JUMP JUMPDEST PUSH2 0x547 SWAP3 SWAP4 POP PUSH2 0x535 SWAP2 POP PUSH2 0x660 SWAP1 PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x58F JUMPI PUSH2 0x57A DUP2 DUP4 PUSH2 0x20E JUMP JUMPDEST SWAP4 SWAP1 SWAP2 POP SWAP2 PUSH2 0x62F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD CREATE2 PUSH31 0x87D01FA79264F4602F270F5D08D8A2300FF2B1875C4E9E699DDDAA236473 PUSH16 0x6C634300081C00330000000000000000 ",
              "sourceMap": "190:1813:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;190:1813:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;1781:65;190:1813;;;;1789:35;1781:65;:::i;:::-;190:1813;1857:136;1899:3;190:1813;;1877:20;;;;;1919:62;190:1813;1945:12;1932:49;1945:12;;;;;:::i;:::-;190:1813;-1:-1:-1;;;;;1959:11:24;;;;:::i;:::-;190:1813;;1932:49;;:::i;:::-;1919:62;;:::i;:::-;1899:3;190:1813;1862:13;;;1877:20;190:1813;1877:20;190:1813;;;;;;;;;;;;;;;;-1:-1:-1;;190:1813:24;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;190:1813:24;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;190:1813:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;820:65;190:1813;;;;828:35;820:65;:::i;:::-;190:1813;896:131;938:3;190:1813;;916:20;;;;;958:57;190:1813;989:12;971:44;989:12;;;;:::i;:::-;190:1813;-1:-1:-1;;;;;1003:11:24;;;;:::i;:::-;190:1813;;971:44;;:::i;958:57::-;938:3;190:1813;901:13;;;190:1813;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;190:1813:24;;;;;-1:-1:-1;190:1813:24;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;190:1813:24;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;190:1813:24;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;190:1813:24;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;190:1813:24;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;190:1813:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;-1:-1:-1;;;190:1813:24;;;;;;;;1042:541;;-1:-1:-1;;;;;1042:541:24;;190:1813;;;1215:19;;;1211:40;;-1:-1:-1;;;;;1306:10:24;190:1813;;;1306:28;-1:-1:-1;;;1306:28:24;;;;;190:1813;;1306:28;;;;;;;;;;;190:1813;;;1306:28;;;1042:541;190:1813;;;1306:28;190:1813;;1389:53;;;;-1:-1:-1;;;1389:53:24;;1306:28;1389:53;;190:1813;1389:53;;;;;;1480:95;1389:53;1542:32;1389:53;190:1813;;;1389:53;;;1042:541;1481:20;;1505:18;1481:20;:43;:20;1556:17;1481:20;;:::i;:::-;1505:18;;:::i;:::-;1481:43;;:::i;:::-;1556:17;;:::i;1542:32::-;1480:95;;:::i;:::-;1042:541;:::o;1389:53::-;1481:43;1389:53;;;1556:17;1389:53;;1481:20;1389:53;1505:18;1389:53;190:1813;1389:53;190:1813;1389:53;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;190:1813;;;;;;;;;1306:28;;;;;190:1813;1306:28;;;;;;;;;;;;:::i;:::-;;;;;;1211:40;1236:15;;;:::o;366:278::-;-1:-1:-1;;;;;190:1813:24;;547:28;-1:-1:-1;;;547:28:24;;190:1813;547:28;;;190:1813;;547:10;:28;:10;-1:-1:-1;;;;;547:10:24;190:1813;547:28;;;;;;;600:36;547:28;-1:-1:-1;;;547:28:24;;;366:278;601:16;622:13;601:16;;;;:::i;547:28::-;622:13;547:28;;;601:16;547:28;;;;190:1813;547:28;190:1813;547:28;;;;;;;:::i;:::-;;;;;;;"
            },
            "methodIdentifiers": {
              "getAmountOut(uint256,address,address)": "5e1e6325",
              "getAmountOutInUsd(uint256,address)": "67f46796",
              "getAmountsOut(uint256[],address[],address)": "9e99c826",
              "getAmountsOutInUsd(uint256[],address[])": "04eb30c6"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IChainlink\",\"name\":\"chainlink\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"}],\"name\":\"getAmountOutInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountIns\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenIns\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountIns\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenIns\",\"type\":\"address[]\"}],\"name\":\"getAmountsOutInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/PriceOracle.sol\":\"PriceOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IChainlink.sol\":{\"keccak256\":\"0xda420cc62622c01860b1ca82bf479ad0f7577905f052b7e2c1b7c88e0166447a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e1b28eb7e0d766e77bf15a861e15f33dcf91b1a043ed2bce18a44c5b0bba485\",\"dweb:/ipfs/QmNT5BhbETpVhg8foLhBLGghBemRaTvkHHrL54ixJBSijc\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4252f4cc64140561f61a4d6ab1f39c540dd70099aa0f056ca0162b8683a78c95\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c644be7ada43bdc0faf1103004ad7a4bebf58f5f780e887ec14d9032b13efa59\",\"dweb:/ipfs/Qmc5Sdo5xjJEMJts7YzzUUboML46S4WEKmuSZBT8ZdZceC\"]},\"contracts/oracle/PriceOracle.sol\":{\"keccak256\":\"0x2e522c5b8c7c22000d040acb9870bcb2af8ded65b2692980ec29578cf7f6cb57\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32893da6df206174862435c9e7990e9c9c440bc0a25ec7b2eced7cb3ecd1bf23\",\"dweb:/ipfs/QmPDnQr1TkKEUmeJPgq8sArYmSK9nxf6N4MVYycX37f2Q7\"]}},\"version\":1}"
        }
      },
      "contracts/pool/MultiTokenPool.sol": {
        "MultiTokenPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "factory_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "creator_",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "depositUsdMin_",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "initialTokens_",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "initialSplitRatio_",
                  "type": "uint256[]"
                },
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "allowedActions_",
                  "type": "uint8[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "lp",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "donor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensDonated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "lp",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "TokensWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                }
              ],
              "name": "addToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "depositETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "donate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "donateETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllowedActions",
              "outputs": [
                {
                  "internalType": "enum Enums.ActionCall[]",
                  "name": "",
                  "type": "uint8[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalances",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getDepositUsdMin",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSplitRatio",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTokens",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "removeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawSingle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpAmount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawSingleETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 2427,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_array_address_dyn": {
                  "entryPoint": 2447,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_address": {
                  "entryPoint": 2470,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 2392,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 2493,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_dynamic1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60c080604052346106f957613498803803809161001c8285610958565b8339810160c0828203126106f9576100338261097b565b906100406020840161097b565b90604084015193606081015160018060401b0381116106f95781019482601f870112156106f9578551906100738261098f565b966100816040519889610958565b828852602088016020819460051b830101918683116106f957602001905b8282106109405750505060808301516001600160401b0381116106f95783019584601f880112156106f9578651936100d68561098f565b976100e4604051998a610958565b858952602089016020819760051b830101918883116106f957602001905b8282106109305750505060a0810151906001600160401b0382116106f957019585601f880112156106f9578651966101398861098f565b966101476040519889610958565b88885260208801916020839a60051b8201019182116106f957602001915b8183106109175750505060405161017d604082610958565b600781526626282a37b5b2b760c91b6020820152604051906101a0604083610958565b600282526104c560f41b60208301528051906001600160401b03821161060a5760035490600182811c9216801561090d575b602083101461082b5781601f8493116108be575b50602090601f83116001146108565760009261084b575b50508160011b916000199060031b1c1916176003555b8051906001600160401b03821161060a5760045490600182811c92168015610841575b602083101461082b5781601f8493116107d1575b50602090601f83116001146107695760009261075e575b50508160011b916000199060031b1c1916176004555b6001600160a01b0316801561074857600a80546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38851885103610712575060a081905260405163f5c8ba9360e01b815290602090829060049082906001600160a01b03165afa908115610706576000916106c7575b506001600160a01b03166080526005558551906001600160401b03821161060a5768010000000000000000821161060a576007548260075580831061068c575b506007600052602060002060005b83811061066f5750508551929150506001600160401b03821161060a5768010000000000000000821161060a5760065482600655808310610634575b506006600052602060002060005b8381106106205750509151929150506001600160401b03821161060a5768010000000000000000821161060a57600854826008558083106105b9575b5090600860005260206000208160051c9160005b83811061056c5750601f198116900380610504575b505050506000916000925b825184101561047f5761042984846109bd565b51810180911161046957926001906001600160a01b0361044982856109bd565b5116600052600960205260406000208260ff198254161790550192610416565b634e487b7160e01b600052601160045260246000fd5b612710036104cb57604051612ab090816109e88239608051818181610247015281816102b201528181610428015281816104a70152610aec015260a0518181816112cb01526114eb0152f35b60405162461bcd60e51b8152602060048201526011602482015270496e76616c696420726174696f2073756d60781b6044820152606490fd5b9260009360005b8181106105205750505001553880808061040b565b909194855160048110156105565761054c602091846001949060ff809160031b9316831b921b19161790565b960192910161050b565b634e487b7160e01b600052602160045260246000fd5b6000805b602081106105855750838201556001016103f6565b959081516004811015610556576105b0602091896001949060ff809160031b9316831b921b19161790565b92019601610570565b6105e79060086000526020600020601f80860160051c820192818716806105ed575b500160051c01906109a6565b386103e2565b6000198501908154906000199060200360031b1c169055386105db565b634e487b7160e01b600052604160045260246000fd5b6001906020845194019381840155016103a6565b6006600052610669907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9081019084016109a6565b38610398565b82516001600160a01b03168183015560209092019160010161035c565b60076000526106c1907fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889081019084016109a6565b3861034e565b90506020813d6020116106fe575b816106e260209383610958565b810103126106f9576106f39061097b565b3861030e565b600080fd5b3d91506106d5565b6040513d6000823e3d90fd5b62461bcd60e51b81526020600482015260116024820152704d69736d6174636865642061727261797360781b6044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b015190503880610261565b600460009081528281209350601f198516905b8181106107b957509084600195949392106107a0575b505050811b01600455610277565b015160001960f88460031b161c19169055388080610792565b9293602060018192878601518155019501930161077c565b600460005261081b907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f850160051c81019160208610610821575b601f0160051c01906109a6565b3861024a565b909150819061080e565b634e487b7160e01b600052602260045260246000fd5b91607f1691610236565b0151905038806101fd565b600360009081528281209350601f198516905b8181106108a6575090846001959493921061088d575b505050811b01600355610213565b015160001960f88460031b161c1916905538808061087f565b92936020600181928786015181550195019301610869565b6003600052610907907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f850160051c8101916020861061082157601f0160051c01906109a6565b386101e6565b91607f16916101d2565b825160048110156106f957815260209283019201610165565b8151815260209182019101610102565b6020809161094d8461097b565b81520191019061009f565b601f909101601f19168101906001600160401b0382119082101761060a57604052565b51906001600160a01b03821682036106f957565b6001600160401b03811161060a5760051b60200190565b8181106109b1575050565b600081556001016109a6565b80518210156109d15760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c8062113e081461221d57806306fdde031461215e578063095ea7b3146120d857806318160ddd146120ba57806323b872dd14611f795780632494452d146117885780632e1a7d4d14611683578063313ce5671461166757806347e7ef24146114855780634eadcca8146114025780635358fbda146112425780635fa7b58414610fe757806370a0823114610fad578063715018a614610f455780638da5cb5b14610f1e5780638e4e901814610f0057806395d89b4114610dfc578063a216aa0614610a70578063a9059cbb14610a3f578063aa6ca808146109a7578063ab83f98a14610917578063af81c5b9146107d8578063dd62ed3e14610780578063e69d849d14610696578063f2fde38b146105e75763f9c4d3db1461013957600080fd5b346105e25760403660031901126105e25761015261234d565b6024359061016182151561247c565b6001600160a01b03811680600052600960205261018560ff6040600020541661270e565b600254916101948315156124c7565b6040916060919073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81149060005b6007548110156105d6576001600160a01b036101d182612413565b90549060031b1c16906101f5886101f08b6101eb86612759565b612512565b612525565b60405161020288826123d9565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee841480156105d0576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a5576000916105b2575b505b6001600160a01b0361028b8461245f565b9116905286156105ac576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a55760009161057e575b505b6001600160a01b036102f68461246c565b911690528486148080610577575b156103305750505060019250600080808061032a94335af161032461255d565b5061259d565b016101b6565b156103b157505060405163a9059cbb60e01b8152336004820152602481019190915291602090839060449082906000905af19182156103a557600192610377575b5061032a565b6103979060203d811161039e575b61038f81836123d9565b810190612545565b5038610371565b503d610385565b6040513d6000823e3d90fd5b909390156104905750600142019283421161047a57600091610410916040518096819482937f7ff36ab500000000000000000000000000000000000000000000000000000000845287600485015260806024850152608484019061239c565b90336044840152606483015203916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19182156103a55760019261045e575061032a565b610397903d806000833e61047281836123d9565b810190612a00565b634e487b7160e01b600052601160045260246000fd5b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820181905260248201849052949291602090829060449082906000905af180156103a55761055b575b50600142019384421161047a576000928361053793604051978895869485936338ed173960e01b8552600485015284602485015260a0604485015260a484019061239c565b90336064840152608483015203925af19182156103a55760019261045e575061032a565b6105729060203d811161039e5761038f81836123d9565b6104f2565b5087610304565b61059f915060203d81116105a5575b61059781836123d9565b810190612633565b386102e3565b503d61058d565b876102e5565b6105ca915060203d81116105a55761059781836123d9565b38610278565b8461027a565b6105e088336128de565b005b600080fd5b346105e25760203660031901126105e2576001600160a01b0361060861234d565b61061061295f565b168015610667576001600160a01b03600a548273ffffffffffffffffffffffffffffffffffffffff19821617600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b346105e25760403660031901126105e2576106af61234d565b6024356001600160a01b038216908160005260096020526106d760ff6040600020541661270e565b6040516323b872dd60e01b81523360048201523060248201526044810182905291602090839060649082906000905af19081156103a5577f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f749261075e92610763575b50604051918291339583602090939291936001600160a01b0360408201951681520152565b0390a2005b61077b9060203d60201161039e5761038f81836123d9565b610739565b346105e25760403660031901126105e25761079961234d565b6001600160a01b036107a9612363565b911660005260016020526001600160a01b03604060002091166000526020526020604060002054604051908152f35b346105e25760403660031901126105e2576107f161234d565b6107f961295f565b6001600160a01b0381169081600052600960205260ff604060002054166108d35760075490680100000000000000008210156108bd576108428260016108619401600755612413565b9091906001600160a01b038084549260031b9316831b921b1916179055565b600654680100000000000000008110156108bd576108888160016108a29301600655612444565b6024359082549060031b91821b91600019901b1916179055565b6000908152600960205260409020805460ff19166001179055005b634e487b7160e01b600052604160045260246000fd5b606460405162461bcd60e51b815260206004820152600c60248201527f546f6b656e2065786973747300000000000000000000000000000000000000006044820152fd5b60203660031901126105e25760043573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee600052600960205261095460ff604060002054166125e8565b61095f8134146126c3565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f7460403392a2005b346105e25760003660031901126105e25760405180602060075491828152019060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889060005b818110610a2057610a1c85610a08818703826123d9565b60405191829160208352602083019061239c565b0390f35b82546001600160a01b03168452602090930192600192830192016109f1565b346105e25760403660031901126105e257610a65610a5b61234d565b60243590336127e7565b602060405160018152f35b346105e25760203660031901126105e257600435610a8f81151561247c565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60005260096020527ea206b70d87cacff7a19f3d98e0957b781c25fb4ae954252c87bcf40626174254610ad99060ff1661270e565b600254610ae78115156124c7565b6040917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316606060005b600754811015610df2576001600160a01b03610b3482612413565b90549060031b1c16610b4d866101f0876101eb85612759565b90604051610b5b85826123d9565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82148015610dec576040516315ab88c960e31b81526020816004818b5afa9081156103a557600091610dce575b505b6001600160a01b03610bbb8461245f565b9116905260006040516315ab88c960e31b81526020816004818c5afa918215610dc25791610da4575b506001600160a01b03610bf68461246c565b911690528080610d9c575b15610c265750505090610c206000808080600196335af161032461255d565b01610b19565b91929115610c8e575060405163a9059cbb60e01b815233600482015260248101919091529190602090839060449082906000905af19182156103a557600192610c70575b50610c20565b610c879060203d811161039e5761038f81836123d9565b5087610c6a565b60405163095ea7b360e01b81526001600160a01b0387166004820152602481018390526000939192916020908290604490829088905af18015610d9157610d75575b5060014201804211610d6157918391610d119360405194859384936338ed173960e01b8552600485015285602485015260a0604485015260a484019061239c565b903360648401526084830152038183895af18015610d5657906001939291610d3b575b5050610c20565b610d4e913d8091833e61047281836123d9565b508780610d34565b6040513d84823e3d90fd5b602484634e487b7160e01b81526011600452fd5b610d8c9060203d811161039e5761038f81836123d9565b610cd0565b6040513d86823e3d90fd5b506001610c01565b610dbc915060203d81116105a55761059781836123d9565b8b610be4565b604051903d90823e3d90fd5b610de6915060203d81116105a55761059781836123d9565b8b610ba8565b82610baa565b6105e084336128de565b346105e25760003660031901126105e25760405160006004548060011c90600181168015610ef6575b602083108114610ee257828552908115610ebe5750600114610e5e575b610a1c83610e52818503826123d9565b60405191829182612304565b91905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b916000905b808210610ea457509091508101602001610e52610e42565b919260018160209254838588010152019101909291610e8c565b60ff191660208086019190915291151560051b84019091019150610e529050610e42565b602484634e487b7160e01b81526022600452fd5b91607f1691610e25565b346105e25760003660031901126105e2576020600554604051908152f35b346105e25760003660031901126105e25760206001600160a01b03600a5416604051908152f35b346105e25760003660031901126105e257610f5e61295f565b60006001600160a01b03600a5473ffffffffffffffffffffffffffffffffffffffff198116600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346105e25760203660031901126105e2576001600160a01b03610fce61234d565b1660005260006020526020604060002054604051908152f35b346105e25760203660031901126105e2576001600160a01b0361100861234d565b61101061295f565b1680600052600960205260ff60406000205416156111fe576040516370a0823160e01b8152306004820152602081602481855afa9081156103a5576000916111cc575b506111885760005b600754808210156105e057826001600160a01b0361107884612413565b90549060031b1c161461108e575060010161105b565b600019810190811161047a576001600160a01b036110ae6110bf92612413565b90549060031b1c1661084283612413565b600754801561117257600019016110d581612413565b6001600160a01b0382549160031b1b1916905560075560065490600019820191821161047a5761111761110a61113093612444565b90549060031b1c91612444565b90919082549060031b91821b91600019901b1916179055565b6006548015611172576000190161114681612444565b8154906000199060031b1b191690556006556000526009602052604060002060ff198154169055600080f35b634e487b7160e01b600052603160045260246000fd5b606460405162461bcd60e51b815260206004820152601060248201527f4e6f6e2d7a65726f2062616c616e6365000000000000000000000000000000006044820152fd5b90506020813d6020116111f6575b816111e7602093836123d9565b810103126105e2575182611053565b3d91506111da565b606460405162461bcd60e51b815260206004820152600f60248201527f546f6b656e206e6f7420666f756e6400000000000000000000000000000000006044820152fd5b60203660031901126105e25760043561125961295f565b6112648134146126c3565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60005260096020527ea206b70d87cacff7a19f3d98e0957b781c25fb4ae954252c87bcf406261742546112ae9060ff166125e8565b6040516322d4d43360e21b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a5576001600160a01b03916020916000916113e5575b506044604051809481936333fa33cb60e11b835287600484015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6024840152165afa80156103a5576000906113ae575b6113669150611360600554821015612652565b336129a1565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f49551760403392a2005b6020823d6020116113dd575b816113c7602093836123d9565b810103126113da5750611366905161134d565b80fd5b3d91506113ba565b6113fc9150823d84116105a55761059781836123d9565b84611308565b346105e25760003660031901126105e25760405180602060065491828152019060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9060005b81811061146f57610a1c85611463818703826123d9565b604051918291826122ca565b825484526020909301926001928301920161144c565b346105e25760403660031901126105e25761149e61234d565b6024356114a961295f565b6001600160a01b0382168060005260096020526114cd60ff604060002054166125e8565b604051916322d4d43360e21b83526020836004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9283156103a5576001600160a01b039360209160009161164a575b506044604051809681936333fa33cb60e11b8352866004840152876024840152165afa9283156103a557600093611616575b50611569600554841015612652565b6040516323b872dd60e01b81523360048201523060248201526044810182905291602090839060649082906000905af180156103a5577fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f4955179361075e936115d5926115f9575b50336129a1565b604051918291339583602090939291936001600160a01b0360408201951681520152565b6116119060203d60201161039e5761038f81836123d9565b6115ce565b90926020823d602011611642575b81611631602093836123d9565b810103126113da575051918461155a565b3d9150611624565b6116619150823d84116105a55761059781836123d9565b86611528565b346105e25760003660031901126105e257602060405160128152f35b346105e25760203660031901126105e2576004356116a281151561247c565b6002546116b08115156124c7565b60005b60075481101561177e576001600160a01b036116ce82612413565b90549060031b1c16906116e8836101f0866101eb86612759565b9173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8103611721575061171b6000808080600196335af161032461255d565b016116b3565b60405163a9059cbb60e01b81523360048201526024810193909352602090839060449082906000905af19182156103a557600192611760575b5061171b565b6117779060203d811161039e5761038f81836123d9565b508461175a565b6105e083336128de565b346105e25760003660031901126105e257604051806020600854918281520190828260086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3926000905b80601f830110611cf0576118ee945491818110611cd5575b818110611cb7575b818110611c99575b818110611c7b575b818110611c5e575b818110611c40575b818110611c22575b818110611c04575b818110611be6575b818110611bc8575b818110611baa575b818110611b8c575b818110611b6e575b818110611b50575b818110611b32575b818110611b14575b818110611af6575b818110611ad8575b818110611aba575b818110611a9c575b818110611a7e575b818110611a60575b818110611a42575b818110611a24575b818110611a06575b8181106119e8575b8181106119ca575b8181106119ac575b81811061198e575b818110611970575b818110611952575b1061193b575b5093929303826123d9565b6040519182916020830190602084525180915260408301919060005b818110611918575050500390f35b919350916020808261192d6001948851612379565b01940191019184939261190a565b9061194b8160209360f81c612379565b01856118e3565b9260208161196860019360ff8760f01c16612379565b0193016118dd565b9260208161198660019360ff8760e81c16612379565b0193016118d5565b926020816119a460019360ff8760e01c16612379565b0193016118cd565b926020816119c260019360ff8760d81c16612379565b0193016118c5565b926020816119e060019360ff8760d01c16612379565b0193016118bd565b926020816119fe60019360ff8760c81c16612379565b0193016118b5565b92602081611a1c60019360ff8760c01c16612379565b0193016118ad565b92602081611a3a60019360ff8760b81c16612379565b0193016118a5565b92602081611a5860019360ff8760b01c16612379565b01930161189d565b92602081611a7660019360ff8760a81c16612379565b019301611895565b92602081611a9460019360ff8760a01c16612379565b01930161188d565b92602081611ab260019360ff8760981c16612379565b019301611885565b92602081611ad060019360ff8760901c16612379565b01930161187d565b92602081611aee60019360ff8760881c16612379565b019301611875565b92602081611b0c60019360ff8760801c16612379565b01930161186d565b92602081611b2a60019360ff8760781c16612379565b019301611865565b92602081611b4860019360ff8760701c16612379565b01930161185d565b92602081611b6660019360ff8760681c16612379565b019301611855565b92602081611b8460019360ff8760601c16612379565b01930161184d565b92602081611ba260019360ff8760581c16612379565b019301611845565b92602081611bc060019360ff8760501c16612379565b01930161183d565b92602081611bde60019360ff8760481c16612379565b019301611835565b92602081611bfc60019360ff8760401c16612379565b01930161182d565b92602081611c1a60019360ff8760381c16612379565b019301611825565b92602081611c3860019360ff8760301c16612379565b01930161181d565b92602081611c5660019360ff8760281c16612379565b019301611815565b92602081611c7360019360ff87851c16612379565b01930161180d565b92602081611c9160019360ff8760181c16612379565b019301611805565b92602081611caf60019360ff8760101c16612379565b0193016117fd565b92602081611ccd60019360ff8760081c16612379565b0193016117f5565b92602081611ce860019360ff8716612379565b0193016117ed565b916020919350610400600191611f6b8754611d0e8360ff8316612379565b611d2086840160ff8360081c16612379565b611d336040840160ff8360101c16612379565b611d466060840160ff8360181c16612379565b611d586080840160ff83891c16612379565b611d6b60a0840160ff8360281c16612379565b611d7e60c0840160ff8360301c16612379565b611d9160e0840160ff8360381c16612379565b611da5610100840160ff8360401c16612379565b611db9610120840160ff8360481c16612379565b611dcd610140840160ff8360501c16612379565b611de1610160840160ff8360581c16612379565b611df5610180840160ff8360601c16612379565b611e096101a0840160ff8360681c16612379565b611e1d6101c0840160ff8360701c16612379565b611e316101e0840160ff8360781c16612379565b611e45610200840160ff8360801c16612379565b611e59610220840160ff8360881c16612379565b611e6d610240840160ff8360901c16612379565b611e81610260840160ff8360981c16612379565b611e95610280840160ff8360a01c16612379565b611ea96102a0840160ff8360a81c16612379565b611ebd6102c0840160ff8360b01c16612379565b611ed16102e0840160ff8360b81c16612379565b611ee5610300840160ff8360c01c16612379565b611ef9610320840160ff8360c81c16612379565b611f0d610340840160ff8360d01c16612379565b611f21610360840160ff8360d81c16612379565b611f35610380840160ff8360e01c16612379565b611f496103a0840160ff8360e81c16612379565b611f5d6103c0840160ff8360f01c16612379565b6103e083019060f81c612379565b0194019201859293916117d5565b346105e25760603660031901126105e257611f9261234d565b611f9a612363565b604435906001600160a01b0383169283600052600160205260406000206001600160a01b0333166000526020526040600020546000198110611fe2575b50610a6593506127e7565b83811061208457841561205557331561202657610a6594600052600160205260406000206001600160a01b0333166000526020528360406000209103905584611fd7565b7f94280d6200000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7fe602df0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b83907ffb8f41b2000000000000000000000000000000000000000000000000000000006000523360045260245260445260646000fd5b346105e25760003660031901126105e2576020600254604051908152f35b346105e25760403660031901126105e2576120f161234d565b602435903315612055576001600160a01b031690811561202657336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346105e25760003660031901126105e25760405160006003548060011c90600181168015612213575b602083108114610ee257828552908115610ebe57506001146121b357610a1c83610e52818503826123d9565b91905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b916000905b8082106121f957509091508101602001610e52610e42565b9192600181602092548385880101520191019092916121e1565b91607f1691612187565b346105e25760003660031901126105e25760075461223a816123fb565b9061224860405192836123d9565b808252601f19612257826123fb565b0136602084013760005b8181106122765760405180610a1c85826122ca565b6122976001600160a01b0361228a83612413565b90549060031b1c16612759565b600084518310156122b65750600582901b840160200152600101612261565b80634e487b7160e01b602492526032600452fd5b602060408183019282815284518094520192019060005b8181106122ee5750505090565b82518452602093840193909201916001016122e1565b91909160208152825180602083015260005b818110612337575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201612316565b600435906001600160a01b03821682036105e257565b602435906001600160a01b03821682036105e257565b9060048210156123865752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b8181106123ba5750505090565b82516001600160a01b03168452602093840193909201916001016123ad565b90601f8019910116810190811067ffffffffffffffff8211176108bd57604052565b67ffffffffffffffff81116108bd5760051b60200190565b60075481101561242e57600760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60065481101561242e57600660005260206000200190600090565b80511561242e5760200190565b80516001101561242e5760400190565b1561248357565b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420616d6f756e740000000000000000000000000000000000006044820152fd5b156124ce57565b606460405162461bcd60e51b815260206004820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b8181029291811591840414171561047a57565b811561252f570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126105e2575180151581036105e25790565b3d15612598573d9067ffffffffffffffff82116108bd576040519161258c601f8201601f1916602001846123d9565b82523d6000602084013e565b606090565b156125a457565b606460405162461bcd60e51b815260206004820152601360248201527f455448207472616e73666572206661696c6564000000000000000000000000006044820152fd5b156125ef57565b606460405162461bcd60e51b815260206004820152601160248201527f455448206e6f7420737570706f727465640000000000000000000000000000006044820152fd5b908160209103126105e257516001600160a01b03811681036105e25790565b1561265957565b608460405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e74206465706f73697420616d6f756e7420696e207560448201527f73640000000000000000000000000000000000000000000000000000000000006064820152fd5b156126ca57565b606460405162461bcd60e51b815260206004820152601460248201527f496e636f72726563742045544820616d6f756e740000000000000000000000006044820152fd5b1561271557565b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420746f6b656e000000000000000000000000000000000000006044820152fd5b6000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036127865750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa918215610dc25780926127b657505090565b9091506020823d6020116127df575b816127d2602093836123d9565b810103126113da57505190565b3d91506127c5565b6001600160a01b03169081156128af576001600160a01b03169182156128805760008281528060205260408120548281106128665791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b031680156128af5760009181835282602052604083205481811061294657817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b6001600160a01b03600a5416330361297357565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6001600160a01b03169081156128805760025481810180911161047a576002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009284845283825260408420818154019055604051908152a3565b6020818303126105e25780519067ffffffffffffffff82116105e257019080601f830112156105e2578151612a34816123fb565b92612a4260405194856123d9565b81845260208085019260051b8201019283116105e257602001905b828210612a6a5750505090565b8151815260209182019101612a5d56fea2646970667358221220ab4d2def14778c67b1e590f503ea4b9e5921c1d17de41a36620d29acfac0377564736f6c634300081c0033",
              "opcodes": "PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x6F9 JUMPI PUSH2 0x3498 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x958 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xC0 DUP3 DUP3 SUB SLT PUSH2 0x6F9 JUMPI PUSH2 0x33 DUP3 PUSH2 0x97B JUMP JUMPDEST SWAP1 PUSH2 0x40 PUSH1 0x20 DUP5 ADD PUSH2 0x97B JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6F9 JUMPI DUP2 ADD SWAP5 DUP3 PUSH1 0x1F DUP8 ADD SLT ISZERO PUSH2 0x6F9 JUMPI DUP6 MLOAD SWAP1 PUSH2 0x73 DUP3 PUSH2 0x98F JUMP JUMPDEST SWAP7 PUSH2 0x81 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x958 JUMP JUMPDEST DUP3 DUP9 MSTORE PUSH1 0x20 DUP9 ADD PUSH1 0x20 DUP2 SWAP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP7 DUP4 GT PUSH2 0x6F9 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x940 JUMPI POP POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6F9 JUMPI DUP4 ADD SWAP6 DUP5 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x6F9 JUMPI DUP7 MLOAD SWAP4 PUSH2 0xD6 DUP6 PUSH2 0x98F JUMP JUMPDEST SWAP8 PUSH2 0xE4 PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x958 JUMP JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x20 DUP10 ADD PUSH1 0x20 DUP2 SWAP8 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP9 DUP4 GT PUSH2 0x6F9 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x930 JUMPI POP POP POP PUSH1 0xA0 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x6F9 JUMPI ADD SWAP6 DUP6 PUSH1 0x1F DUP9 ADD SLT ISZERO PUSH2 0x6F9 JUMPI DUP7 MLOAD SWAP7 PUSH2 0x139 DUP9 PUSH2 0x98F JUMP JUMPDEST SWAP7 PUSH2 0x147 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x958 JUMP JUMPDEST DUP9 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP2 PUSH1 0x20 DUP4 SWAP11 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x6F9 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x917 JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x17D PUSH1 0x40 DUP3 PUSH2 0x958 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x26282A37B5B2B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1A0 PUSH1 0x40 DUP4 PUSH2 0x958 JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE PUSH2 0x4C5 PUSH1 0xF4 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x60A JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x90D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x82B JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x8BE JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x856 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x84B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x60A JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x841 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x82B JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x7D1 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x769 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x75E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP9 MLOAD DUP9 MLOAD SUB PUSH2 0x712 JUMPI POP PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0xF5C8BA93 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x6C7 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x5 SSTORE DUP6 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x60A JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x60A JUMPI PUSH1 0x7 SLOAD DUP3 PUSH1 0x7 SSTORE DUP1 DUP4 LT PUSH2 0x68C JUMPI JUMPDEST POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x66F JUMPI POP POP DUP6 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x60A JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x60A JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x6 SSTORE DUP1 DUP4 LT PUSH2 0x634 JUMPI JUMPDEST POP PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x620 JUMPI POP POP SWAP2 MLOAD SWAP3 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x60A JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0x60A JUMPI PUSH1 0x8 SLOAD DUP3 PUSH1 0x8 SSTORE DUP1 DUP4 LT PUSH2 0x5B9 JUMPI JUMPDEST POP SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x56C JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x504 JUMPI JUMPDEST POP POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x47F JUMPI PUSH2 0x429 DUP5 DUP5 PUSH2 0x9BD JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x469 JUMPI SWAP3 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x449 DUP3 DUP6 PUSH2 0x9BD JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP3 PUSH2 0x416 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH2 0x2AB0 SWAP1 DUP2 PUSH2 0x9E8 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x247 ADD MSTORE DUP2 DUP2 PUSH2 0x2B2 ADD MSTORE DUP2 DUP2 PUSH2 0x428 ADD MSTORE DUP2 DUP2 PUSH2 0x4A7 ADD MSTORE PUSH2 0xAEC ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x12CB ADD MSTORE PUSH2 0x14EB ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420726174696F2073756D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x520 JUMPI POP POP POP ADD SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x40B JUMP JUMPDEST SWAP1 SWAP2 SWAP5 DUP6 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x556 JUMPI PUSH2 0x54C PUSH1 0x20 SWAP2 DUP5 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x50B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x585 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x3F6 JUMP JUMPDEST SWAP6 SWAP1 DUP2 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x556 JUMPI PUSH2 0x5B0 PUSH1 0x20 SWAP2 DUP10 PUSH1 0x1 SWAP5 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP3 ADD SWAP7 ADD PUSH2 0x570 JUMP JUMPDEST PUSH2 0x5E7 SWAP1 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP2 DUP8 AND DUP1 PUSH2 0x5ED JUMPI JUMPDEST POP ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x9A6 JUMP JUMPDEST CODESIZE PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x0 NOT DUP6 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x5DB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE PUSH2 0x669 SWAP1 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0x9A6 JUMP JUMPDEST CODESIZE PUSH2 0x398 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 ADD SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x35C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 MSTORE PUSH2 0x6C1 SWAP1 PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0x9A6 JUMP JUMPDEST CODESIZE PUSH2 0x34E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6FE JUMPI JUMPDEST DUP2 PUSH2 0x6E2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x958 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F9 JUMPI PUSH2 0x6F3 SWAP1 PUSH2 0x97B JUMP JUMPDEST CODESIZE PUSH2 0x30E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D69736D61746368656420617272617973 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x7B9 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x7A0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x277 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x792 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH2 0x81B SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x821 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x9A6 JUMP JUMPDEST CODESIZE PUSH2 0x24A JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x236 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x8A6 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x88D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x213 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x87F JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x869 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH2 0x907 SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x821 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x9A6 JUMP JUMPDEST CODESIZE PUSH2 0x1E6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D2 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x6F9 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x165 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x102 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x94D DUP5 PUSH2 0x97B JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x9F JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x60A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6F9 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x60A JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x9B1 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x9A6 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x113E08 EQ PUSH2 0x221D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x215E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20D8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F79 JUMPI DUP1 PUSH4 0x2494452D EQ PUSH2 0x1788 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1683 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1667 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x1485 JUMPI DUP1 PUSH4 0x4EADCCA8 EQ PUSH2 0x1402 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x1242 JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0xFE7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xFAD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF45 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF1E JUMPI DUP1 PUSH4 0x8E4E9018 EQ PUSH2 0xF00 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xDFC JUMPI DUP1 PUSH4 0xA216AA06 EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xA3F JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x9A7 JUMPI DUP1 PUSH4 0xAB83F98A EQ PUSH2 0x917 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x780 JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E7 JUMPI PUSH4 0xF9C4D3DB EQ PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x152 PUSH2 0x234D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x161 DUP3 ISZERO ISZERO PUSH2 0x247C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x185 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x270E JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 PUSH2 0x194 DUP4 ISZERO ISZERO PUSH2 0x24C7 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x60 SWAP2 SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D1 DUP3 PUSH2 0x2413 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 PUSH2 0x1F5 DUP9 PUSH2 0x1F0 DUP12 PUSH2 0x1EB DUP7 PUSH2 0x2759 JUMP JUMPDEST PUSH2 0x2512 JUMP JUMPDEST PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 DUP9 DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP5 EQ DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x5B2 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x28B DUP5 PUSH2 0x245F JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP7 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x57E JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2F6 DUP5 PUSH2 0x246C JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP5 DUP7 EQ DUP1 DUP1 PUSH2 0x577 JUMPI JUMPDEST ISZERO PUSH2 0x330 JUMPI POP POP POP PUSH1 0x1 SWAP3 POP PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x32A SWAP5 CALLER GAS CALL PUSH2 0x324 PUSH2 0x255D JUMP JUMPDEST POP PUSH2 0x259D JUMP JUMPDEST ADD PUSH2 0x1B6 JUMP JUMPDEST ISZERO PUSH2 0x3B1 JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x377 JUMPI JUMPDEST POP PUSH2 0x32A JUMP JUMPDEST PUSH2 0x397 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x39E JUMPI JUMPDEST PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2545 JUMP JUMPDEST POP CODESIZE PUSH2 0x371 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP4 SWAP1 ISZERO PUSH2 0x490 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0x47A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x410 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH32 0x7FF36AB500000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP8 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD SWAP1 PUSH2 0x239C JUMP JUMPDEST SWAP1 CALLER PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD MSTORE SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x45E JUMPI POP PUSH2 0x32A JUMP JUMPDEST PUSH2 0x397 SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x472 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP5 SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH2 0x55B JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP4 DUP5 TIMESTAMP GT PUSH2 0x47A JUMPI PUSH1 0x0 SWAP3 DUP4 PUSH2 0x537 SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP5 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD SWAP1 PUSH2 0x239C JUMP JUMPDEST SWAP1 CALLER PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x45E JUMPI POP PUSH2 0x32A JUMP JUMPDEST PUSH2 0x572 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x39E JUMPI PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST POP DUP8 PUSH2 0x304 JUMP JUMPDEST PUSH2 0x59F SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A5 JUMPI JUMPDEST PUSH2 0x597 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2633 JUMP JUMPDEST CODESIZE PUSH2 0x2E3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x58D JUMP JUMPDEST DUP8 PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0x5CA SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A5 JUMPI PUSH2 0x597 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST CODESIZE PUSH2 0x278 JUMP JUMPDEST DUP5 PUSH2 0x27A JUMP JUMPDEST PUSH2 0x5E0 DUP9 CALLER PUSH2 0x28DE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x608 PUSH2 0x234D JUMP JUMPDEST PUSH2 0x610 PUSH2 0x295F JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x6AF PUSH2 0x234D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x6D7 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x270E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3A5 JUMPI PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 SWAP3 PUSH2 0x75E SWAP3 PUSH2 0x763 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH2 0x77B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x39E JUMPI PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x799 PUSH2 0x234D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7A9 PUSH2 0x2363 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x7F1 PUSH2 0x234D JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x295F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x8D3 JUMPI PUSH1 0x7 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x8BD JUMPI PUSH2 0x842 DUP3 PUSH1 0x1 PUSH2 0x861 SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x2413 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x8BD JUMPI PUSH2 0x888 DUP2 PUSH1 0x1 PUSH2 0x8A2 SWAP4 ADD PUSH1 0x6 SSTORE PUSH2 0x2444 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206578697374730000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x954 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x25E8 JUMP JUMPDEST PUSH2 0x95F DUP2 CALLVALUE EQ PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA20 JUMPI PUSH2 0xA1C DUP6 PUSH2 0xA08 DUP2 DUP8 SUB DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x239C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x9F1 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0xA65 PUSH2 0xA5B PUSH2 0x234D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x27E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA8F DUP2 ISZERO ISZERO PUSH2 0x247C JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH31 0xA206B70D87CACFF7A19F3D98E0957B781C25FB4AE954252C87BCF406261742 SLOAD PUSH2 0xAD9 SWAP1 PUSH1 0xFF AND PUSH2 0x270E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xAE7 DUP2 ISZERO ISZERO PUSH2 0x24C7 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xDF2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB34 DUP3 PUSH2 0x2413 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0xB4D DUP7 PUSH2 0x1F0 DUP8 PUSH2 0x1EB DUP6 PUSH2 0x2759 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0xB5B DUP6 DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0xDEC JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDCE JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBBB DUP5 PUSH2 0x245F JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP13 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xDC2 JUMPI SWAP2 PUSH2 0xDA4 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBF6 DUP5 PUSH2 0x246C JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP1 DUP1 PUSH2 0xD9C JUMPI JUMPDEST ISZERO PUSH2 0xC26 JUMPI POP POP POP SWAP1 PUSH2 0xC20 PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 SWAP7 CALLER GAS CALL PUSH2 0x324 PUSH2 0x255D JUMP JUMPDEST ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0xC8E JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 SWAP3 PUSH2 0xC70 JUMPI JUMPDEST POP PUSH2 0xC20 JUMP JUMPDEST PUSH2 0xC87 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x39E JUMPI PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST POP DUP8 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xD91 JUMPI PUSH2 0xD75 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0xD61 JUMPI SWAP2 DUP4 SWAP2 PUSH2 0xD11 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP6 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD SWAP1 PUSH2 0x239C JUMP JUMPDEST SWAP1 CALLER PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB DUP2 DUP4 DUP10 GAS CALL DUP1 ISZERO PUSH2 0xD56 JUMPI SWAP1 PUSH1 0x1 SWAP4 SWAP3 SWAP2 PUSH2 0xD3B JUMPI JUMPDEST POP POP PUSH2 0xC20 JUMP JUMPDEST PUSH2 0xD4E SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x472 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST POP DUP8 DUP1 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xD8C SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x39E JUMPI PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0xDBC SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A5 JUMPI PUSH2 0x597 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP12 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xDE6 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A5 JUMPI PUSH2 0x597 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP12 PUSH2 0xBA8 JUMP JUMPDEST DUP3 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x5E0 DUP5 CALLER PUSH2 0x28DE JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xEF6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0xEE2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xEBE JUMPI POP PUSH1 0x1 EQ PUSH2 0xE5E JUMPI JUMPDEST PUSH2 0xA1C DUP4 PUSH2 0xE52 DUP2 DUP6 SUB DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2304 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xEA4 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xE52 PUSH2 0xE42 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xE52 SWAP1 POP PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xE25 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0xF5E PUSH2 0x295F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xFCE PUSH2 0x234D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1008 PUSH2 0x234D JUMP JUMPDEST PUSH2 0x1010 PUSH2 0x295F JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x11FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x11CC JUMPI JUMPDEST POP PUSH2 0x1188 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x5E0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1078 DUP5 PUSH2 0x2413 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x108E JUMPI POP PUSH1 0x1 ADD PUSH2 0x105B JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x47A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x10AE PUSH2 0x10BF SWAP3 PUSH2 0x2413 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x842 DUP4 PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x1172 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x10D5 DUP2 PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x47A JUMPI PUSH2 0x1117 PUSH2 0x110A PUSH2 0x1130 SWAP4 PUSH2 0x2444 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x2444 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x1172 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1146 DUP2 PUSH2 0x2444 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x6 SSTORE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D7A65726F2062616C616E636500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11F6 JUMPI JUMPDEST DUP2 PUSH2 0x11E7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5E2 JUMPI MLOAD DUP3 PUSH2 0x1053 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1259 PUSH2 0x295F JUMP JUMPDEST PUSH2 0x1264 DUP2 CALLVALUE EQ PUSH2 0x26C3 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH31 0xA206B70D87CACFF7A19F3D98E0957B781C25FB4AE954252C87BCF406261742 SLOAD PUSH2 0x12AE SWAP1 PUSH1 0xFF AND PUSH2 0x25E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x13E5 JUMPI JUMPDEST POP PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x13AE JUMPI JUMPDEST PUSH2 0x1366 SWAP2 POP PUSH2 0x1360 PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x2652 JUMP JUMPDEST CALLER PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13DD JUMPI JUMPDEST DUP2 PUSH2 0x13C7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13DA JUMPI POP PUSH2 0x1366 SWAP1 MLOAD PUSH2 0x134D JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x13FC SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x5A5 JUMPI PUSH2 0x597 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP5 PUSH2 0x1308 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x146F JUMPI PUSH2 0xA1C DUP6 PUSH2 0x1463 DUP2 DUP8 SUB DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x22CA JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x144C JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x149E PUSH2 0x234D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x14A9 PUSH2 0x295F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x14CD PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x25E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x164A JUMPI JUMPDEST POP PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE DUP8 PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x1616 JUMPI JUMPDEST POP PUSH2 0x1569 PUSH1 0x5 SLOAD DUP5 LT ISZERO PUSH2 0x2652 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 SWAP4 PUSH2 0x75E SWAP4 PUSH2 0x15D5 SWAP3 PUSH2 0x15F9 JUMPI JUMPDEST POP CALLER PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x1611 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x39E JUMPI PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x15CE JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1642 JUMPI JUMPDEST DUP2 PUSH2 0x1631 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13DA JUMPI POP MLOAD SWAP2 DUP5 PUSH2 0x155A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1624 JUMP JUMPDEST PUSH2 0x1661 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x5A5 JUMPI PUSH2 0x597 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP7 PUSH2 0x1528 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x16A2 DUP2 ISZERO ISZERO PUSH2 0x247C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x16B0 DUP2 ISZERO ISZERO PUSH2 0x24C7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x177E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16CE DUP3 PUSH2 0x2413 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 PUSH2 0x16E8 DUP4 PUSH2 0x1F0 DUP7 PUSH2 0x1EB DUP7 PUSH2 0x2759 JUMP JUMPDEST SWAP2 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x1721 JUMPI POP PUSH2 0x171B PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 SWAP7 CALLER GAS CALL PUSH2 0x324 PUSH2 0x255D JUMP JUMPDEST ADD PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1760 JUMPI JUMPDEST POP PUSH2 0x171B JUMP JUMPDEST PUSH2 0x1777 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x39E JUMPI PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST POP DUP5 PUSH2 0x175A JUMP JUMPDEST PUSH2 0x5E0 DUP4 CALLER PUSH2 0x28DE JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP3 DUP3 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0x1CF0 JUMPI PUSH2 0x18EE SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x1CD5 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1CB7 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C99 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C7B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C5E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C40 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C22 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C04 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1BE6 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1BC8 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1BAA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B8C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B6E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B50 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B32 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B14 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1AF6 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1AD8 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1ABA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A9C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A7E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A60 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A42 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A24 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A06 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x19E8 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x19CA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x19AC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x198E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1970 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1952 JUMPI JUMPDEST LT PUSH2 0x193B JUMPI JUMPDEST POP SWAP4 SWAP3 SWAP4 SUB DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1918 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 DUP1 DUP3 PUSH2 0x192D PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x2379 JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x190A JUMP JUMPDEST SWAP1 PUSH2 0x194B DUP2 PUSH1 0x20 SWAP4 PUSH1 0xF8 SHR PUSH2 0x2379 JUMP JUMPDEST ADD DUP6 PUSH2 0x18E3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1968 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xF0 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18DD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1986 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE8 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18D5 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19A4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE0 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18CD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19C2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD8 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18C5 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19E0 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD0 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18BD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19FE PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC8 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18B5 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A1C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC0 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A3A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB8 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18A5 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A58 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB0 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x189D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A76 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA8 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1895 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A94 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x188D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1AB2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x98 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1885 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1AD0 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x90 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x187D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1AEE PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x88 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1875 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B0C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x80 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x186D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B2A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x78 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1865 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B48 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x70 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x185D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B66 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x68 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1855 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B84 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x60 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BA2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x58 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BC0 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x50 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x183D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BDE PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x48 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1835 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BFC PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x182D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C1A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x38 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1825 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C38 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x30 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x181D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C56 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x28 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1815 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C73 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 DUP6 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x180D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C91 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x18 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1805 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1CAF PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x10 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1CCD PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1CE8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 PUSH2 0x1F6B DUP8 SLOAD PUSH2 0x1D0E DUP4 PUSH1 0xFF DUP4 AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D20 DUP7 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D33 PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D46 PUSH1 0x60 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x18 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D58 PUSH1 0x80 DUP5 ADD PUSH1 0xFF DUP4 DUP10 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D6B PUSH1 0xA0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x28 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D7E PUSH1 0xC0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x30 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D91 PUSH1 0xE0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x38 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1DA5 PUSH2 0x100 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1DB9 PUSH2 0x120 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x48 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1DCD PUSH2 0x140 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x50 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1DE1 PUSH2 0x160 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x58 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1DF5 PUSH2 0x180 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x60 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E09 PUSH2 0x1A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x68 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E1D PUSH2 0x1C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x70 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E31 PUSH2 0x1E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x78 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E45 PUSH2 0x200 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E59 PUSH2 0x220 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x88 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E6D PUSH2 0x240 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x90 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E81 PUSH2 0x260 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x98 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E95 PUSH2 0x280 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1EA9 PUSH2 0x2A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1EBD PUSH2 0x2C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB0 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1ED1 PUSH2 0x2E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB8 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1EE5 PUSH2 0x300 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1EF9 PUSH2 0x320 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC8 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1F0D PUSH2 0x340 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD0 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1F21 PUSH2 0x360 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1F35 PUSH2 0x380 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE0 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1F49 PUSH2 0x3A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE8 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1F5D PUSH2 0x3C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xF0 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x3E0 DUP4 ADD SWAP1 PUSH1 0xF8 SHR PUSH2 0x2379 JUMP JUMPDEST ADD SWAP5 ADD SWAP3 ADD DUP6 SWAP3 SWAP4 SWAP2 PUSH2 0x17D5 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x1F92 PUSH2 0x234D JUMP JUMPDEST PUSH2 0x1F9A PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT PUSH2 0x1FE2 JUMPI JUMPDEST POP PUSH2 0xA65 SWAP4 POP PUSH2 0x27E7 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x2084 JUMPI DUP5 ISZERO PUSH2 0x2055 JUMPI CALLER ISZERO PUSH2 0x2026 JUMPI PUSH2 0xA65 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x1FD7 JUMP JUMPDEST PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x20F1 PUSH2 0x234D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x2055 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2026 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2213 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0xEE2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xEBE JUMPI POP PUSH1 0x1 EQ PUSH2 0x21B3 JUMPI PUSH2 0xA1C DUP4 PUSH2 0xE52 DUP2 DUP6 SUB DUP3 PUSH2 0x23D9 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x21F9 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xE52 PUSH2 0xE42 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2187 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x7 SLOAD PUSH2 0x223A DUP2 PUSH2 0x23FB JUMP JUMPDEST SWAP1 PUSH2 0x2248 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x2257 DUP3 PUSH2 0x23FB JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2276 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xA1C DUP6 DUP3 PUSH2 0x22CA JUMP JUMPDEST PUSH2 0x2297 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x228A DUP4 PUSH2 0x2413 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2759 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD DUP4 LT ISZERO PUSH2 0x22B6 JUMPI POP PUSH1 0x5 DUP3 SWAP1 SHL DUP5 ADD PUSH1 0x20 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2261 JUMP JUMPDEST DUP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x24 SWAP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x22EE JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x22E1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2337 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x2316 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E2 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E2 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x2386 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x23BA JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x23AD JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8BD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8BD JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x242E JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x242E JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x242E JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x242E JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2483 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x24CE JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x47A JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x252F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5E2 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x5E2 JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2598 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8BD JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x258C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x23D9 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x25A4 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x25EF JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420737570706F72746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5E2 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5E2 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2659 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420616D6F756E7420696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7364000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x26CA JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2715 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x2786 JUMPI POP POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xDC2 JUMPI DUP1 SWAP3 PUSH2 0x27B6 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x27DF JUMPI JUMPDEST DUP2 PUSH2 0x27D2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13DA JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x28AF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2880 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x2866 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x28AF JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x2946 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND CALLER SUB PUSH2 0x2973 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2880 JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x47A JUMPI PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x5E2 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x5E2 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x5E2 JUMPI DUP2 MLOAD PUSH2 0x2A34 DUP2 PUSH2 0x23FB JUMP JUMPDEST SWAP3 PUSH2 0x2A42 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x23D9 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x5E2 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A6A JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2A5D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0x4D 0x2D 0xEF EQ PUSH24 0x8C67B1E590F503EA4B9E5921C1D17DE41A36620D29ACFAC0 CALLDATACOPY PUSH22 0x64736F6C634300081C00330000000000000000000000 ",
              "sourceMap": "659:8406:25:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;659:8406:25;;;;-1:-1:-1;;;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;659:8406:25;;;;;-1:-1:-1;;;;;659:8406:25;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;659:8406:25;;;;;;;-1:-1:-1;;;;;659:8406:25;;;;1667:13:3;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:25;;;;;;;;;;;;;1667:13:3;659:8406:25;;;;;1667:13:3;659:8406:25;;;;;-1:-1:-1;;;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:25;;;;;;;;;;;;;1667:13:3;659:8406:25;;;;;;;;-1:-1:-1;;;;;659:8406:25;1273:26:1;;1269:95;;3004:6;659:8406:25;;-1:-1:-1;;;;;;659:8406:25;;;;;;;;;;;-1:-1:-1;;;;;659:8406:25;3052:40:1;-1:-1:-1;;3052:40:1;659:8406:25;;;;1058:50;659:8406;;-1:-1:-1;659:8406:25;1166:19;;;659:8406;;-1:-1:-1;;;1219:41:25;;659:8406;;;;;;;;;-1:-1:-1;;;;;659:8406:25;1219:41;;;;;;;-1:-1:-1;1219:41:25;;;659:8406;-1:-1:-1;;;;;;659:8406:25;;1271:44;659:8406;;;;;-1:-1:-1;;;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:25;;-1:-1:-1;659:8406:25;-1:-1:-1;659:8406:25;;;;;;-1:-1:-1;;659:8406:25;;;;-1:-1:-1;;;;;;;659:8406:25;;;;;;;;;1417:32;659:8406;;1417:32;659:8406;;;;;;;;1417:32;-1:-1:-1;659:8406:25;;-1:-1:-1;659:8406:25;-1:-1:-1;659:8406:25;;;;;;-1:-1:-1;;659:8406:25;;;;-1:-1:-1;;;;;;;659:8406:25;;;;;;;;;1462:33;659:8406;;1462:33;659:8406;;;;;;;;;1462:33;-1:-1:-1;659:8406:25;;-1:-1:-1;659:8406:25;;;;;-1:-1:-1;659:8406:25;;;;;;-1:-1:-1;;;659:8406:25;;;;;;;;1508:22;;;;-1:-1:-1;1546:13:25;-1:-1:-1;1541:177:25;1592:3;659:8406;;1561:29;;;;;1626:21;;;;:::i;:::-;659:8406;;;;;;;;1612:35;659:8406;;-1:-1:-1;;;;;1681:17:25;659:8406;1681:17;;:::i;:::-;659:8406;;-1:-1:-1;659:8406:25;1662:18;659:8406;;;-1:-1:-1;659:8406:25;;;;;;;;;;;1546:13;;;659:8406;;;;-1:-1:-1;659:8406:25;;;;;-1:-1:-1;659:8406:25;1561:29;733:6:26;1738:21:25;733:6:26;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;733:6:26;659:8406:25;;-1:-1:-1;;;733:6:26;;659:8406:25;;733:6:26;;;;;;;659:8406:25;-1:-1:-1;;;659:8406:25;;;733:6:26;;;;659:8406:25;;-1:-1:-1;659:8406:25;-1:-1:-1;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:25;;;;;-1:-1:-1;659:8406:25;;-1:-1:-1;659:8406:25;;;;;;;-1:-1:-1;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:33;-1:-1:-1;659:8406:25;;-1:-1:-1;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1667:13:3;659:8406:25;;;;;;;;;;;;-1:-1:-1;659:8406:25;;;;;-1:-1:-1;659:8406:25;;;;;;;;;;;;;;;;;;1417:32;-1:-1:-1;659:8406:25;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;659:8406:25;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:25;;;;;;;;;;;:::i;:::-;;;;1219:41;;;659:8406;1219:41;;659:8406;1219:41;;;;;;659:8406;1219:41;;;:::i;:::-;;;659:8406;;;;;;;:::i;:::-;1219:41;;;659:8406;-1:-1:-1;659:8406:25;;1219:41;;;-1:-1:-1;1219:41:25;;;659:8406;;;-1:-1:-1;659:8406:25;;;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;-1:-1:-1;;;659:8406:25;;;;;;;1269:95:1;1322:31;;;-1:-1:-1;1322:31:1;-1:-1:-1;659:8406:25;;;-1:-1:-1;1322:31:1;659:8406:25;;;;-1:-1:-1;659:8406:25;;;;;;-1:-1:-1;659:8406:25;;;;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:3;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;659:8406:25;;;;;;;;-1:-1:-1;659:8406:25;;;;;-1:-1:-1;659:8406:25;;;;;;;;;;;;-1:-1:-1;659:8406:25;;;;;1667:13:3;-1:-1:-1;659:8406:25;;;;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:3;659:8406:25;;;;;;;;;;1667:13:3;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:3;-1:-1:-1;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;-1:-1:-1;;;;;659:8406:25;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;659:8406:25;;;;;;:::o;:::-;-1:-1:-1;;;;;659:8406:25;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 9059,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_18653": {
                  "entryPoint": 9037,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 9779,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_array_uint256_dyn_fromMemory": {
                  "entryPoint": 10752,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 9541,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_array_address_dyn": {
                  "entryPoint": 9116,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 8906,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_enum_ActionCall": {
                  "entryPoint": 9081,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 8964,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_allocation_size_array_uint256_dyn": {
                  "entryPoint": 9211,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 9509,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 9490,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_returndata": {
                  "entryPoint": 9565,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 9177,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_burn": {
                  "entryPoint": 10462,
                  "id": 718,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 10591,
                  "id": 130,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getBalance": {
                  "entryPoint": 10073,
                  "id": 4039,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_mint": {
                  "entryPoint": 10657,
                  "id": 685,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 10215,
                  "id": 575,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 9324,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn_18762": {
                  "entryPoint": 9311,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_2fd1": {
                  "entryPoint": 9340,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_379a": {
                  "entryPoint": 9415,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_5e70": {
                  "entryPoint": 9998,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_785c": {
                  "entryPoint": 9923,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_97c8": {
                  "entryPoint": 9810,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_9d30": {
                  "entryPoint": 9704,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c7c2": {
                  "entryPoint": 9629,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 9235,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "storage_array_index_access_address_dyn_18666": {
                  "entryPoint": 9284,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "update_storage_value_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "3562": [
                  {
                    "length": 32,
                    "start": 583
                  },
                  {
                    "length": 32,
                    "start": 690
                  },
                  {
                    "length": 32,
                    "start": 1064
                  },
                  {
                    "length": 32,
                    "start": 1191
                  },
                  {
                    "length": 32,
                    "start": 2796
                  }
                ],
                "3564": [
                  {
                    "length": 32,
                    "start": 4811
                  },
                  {
                    "length": 32,
                    "start": 5355
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c8062113e081461221d57806306fdde031461215e578063095ea7b3146120d857806318160ddd146120ba57806323b872dd14611f795780632494452d146117885780632e1a7d4d14611683578063313ce5671461166757806347e7ef24146114855780634eadcca8146114025780635358fbda146112425780635fa7b58414610fe757806370a0823114610fad578063715018a614610f455780638da5cb5b14610f1e5780638e4e901814610f0057806395d89b4114610dfc578063a216aa0614610a70578063a9059cbb14610a3f578063aa6ca808146109a7578063ab83f98a14610917578063af81c5b9146107d8578063dd62ed3e14610780578063e69d849d14610696578063f2fde38b146105e75763f9c4d3db1461013957600080fd5b346105e25760403660031901126105e25761015261234d565b6024359061016182151561247c565b6001600160a01b03811680600052600960205261018560ff6040600020541661270e565b600254916101948315156124c7565b6040916060919073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81149060005b6007548110156105d6576001600160a01b036101d182612413565b90549060031b1c16906101f5886101f08b6101eb86612759565b612512565b612525565b60405161020288826123d9565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee841480156105d0576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a5576000916105b2575b505b6001600160a01b0361028b8461245f565b9116905286156105ac576040516315ab88c960e31b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a55760009161057e575b505b6001600160a01b036102f68461246c565b911690528486148080610577575b156103305750505060019250600080808061032a94335af161032461255d565b5061259d565b016101b6565b156103b157505060405163a9059cbb60e01b8152336004820152602481019190915291602090839060449082906000905af19182156103a557600192610377575b5061032a565b6103979060203d811161039e575b61038f81836123d9565b810190612545565b5038610371565b503d610385565b6040513d6000823e3d90fd5b909390156104905750600142019283421161047a57600091610410916040518096819482937f7ff36ab500000000000000000000000000000000000000000000000000000000845287600485015260806024850152608484019061239c565b90336044840152606483015203916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19182156103a55760019261045e575061032a565b610397903d806000833e61047281836123d9565b810190612a00565b634e487b7160e01b600052601160045260246000fd5b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820181905260248201849052949291602090829060449082906000905af180156103a55761055b575b50600142019384421161047a576000928361053793604051978895869485936338ed173960e01b8552600485015284602485015260a0604485015260a484019061239c565b90336064840152608483015203925af19182156103a55760019261045e575061032a565b6105729060203d811161039e5761038f81836123d9565b6104f2565b5087610304565b61059f915060203d81116105a5575b61059781836123d9565b810190612633565b386102e3565b503d61058d565b876102e5565b6105ca915060203d81116105a55761059781836123d9565b38610278565b8461027a565b6105e088336128de565b005b600080fd5b346105e25760203660031901126105e2576001600160a01b0361060861234d565b61061061295f565b168015610667576001600160a01b03600a548273ffffffffffffffffffffffffffffffffffffffff19821617600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b346105e25760403660031901126105e2576106af61234d565b6024356001600160a01b038216908160005260096020526106d760ff6040600020541661270e565b6040516323b872dd60e01b81523360048201523060248201526044810182905291602090839060649082906000905af19081156103a5577f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f749261075e92610763575b50604051918291339583602090939291936001600160a01b0360408201951681520152565b0390a2005b61077b9060203d60201161039e5761038f81836123d9565b610739565b346105e25760403660031901126105e25761079961234d565b6001600160a01b036107a9612363565b911660005260016020526001600160a01b03604060002091166000526020526020604060002054604051908152f35b346105e25760403660031901126105e2576107f161234d565b6107f961295f565b6001600160a01b0381169081600052600960205260ff604060002054166108d35760075490680100000000000000008210156108bd576108428260016108619401600755612413565b9091906001600160a01b038084549260031b9316831b921b1916179055565b600654680100000000000000008110156108bd576108888160016108a29301600655612444565b6024359082549060031b91821b91600019901b1916179055565b6000908152600960205260409020805460ff19166001179055005b634e487b7160e01b600052604160045260246000fd5b606460405162461bcd60e51b815260206004820152600c60248201527f546f6b656e2065786973747300000000000000000000000000000000000000006044820152fd5b60203660031901126105e25760043573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee600052600960205261095460ff604060002054166125e8565b61095f8134146126c3565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527f16e2dd942e4846acb6770151f8c5ed72a9949242b893bb783112d656ab171f7460403392a2005b346105e25760003660031901126105e25760405180602060075491828152019060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889060005b818110610a2057610a1c85610a08818703826123d9565b60405191829160208352602083019061239c565b0390f35b82546001600160a01b03168452602090930192600192830192016109f1565b346105e25760403660031901126105e257610a65610a5b61234d565b60243590336127e7565b602060405160018152f35b346105e25760203660031901126105e257600435610a8f81151561247c565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60005260096020527ea206b70d87cacff7a19f3d98e0957b781c25fb4ae954252c87bcf40626174254610ad99060ff1661270e565b600254610ae78115156124c7565b6040917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316606060005b600754811015610df2576001600160a01b03610b3482612413565b90549060031b1c16610b4d866101f0876101eb85612759565b90604051610b5b85826123d9565b600281528836602083013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82148015610dec576040516315ab88c960e31b81526020816004818b5afa9081156103a557600091610dce575b505b6001600160a01b03610bbb8461245f565b9116905260006040516315ab88c960e31b81526020816004818c5afa918215610dc25791610da4575b506001600160a01b03610bf68461246c565b911690528080610d9c575b15610c265750505090610c206000808080600196335af161032461255d565b01610b19565b91929115610c8e575060405163a9059cbb60e01b815233600482015260248101919091529190602090839060449082906000905af19182156103a557600192610c70575b50610c20565b610c879060203d811161039e5761038f81836123d9565b5087610c6a565b60405163095ea7b360e01b81526001600160a01b0387166004820152602481018390526000939192916020908290604490829088905af18015610d9157610d75575b5060014201804211610d6157918391610d119360405194859384936338ed173960e01b8552600485015285602485015260a0604485015260a484019061239c565b903360648401526084830152038183895af18015610d5657906001939291610d3b575b5050610c20565b610d4e913d8091833e61047281836123d9565b508780610d34565b6040513d84823e3d90fd5b602484634e487b7160e01b81526011600452fd5b610d8c9060203d811161039e5761038f81836123d9565b610cd0565b6040513d86823e3d90fd5b506001610c01565b610dbc915060203d81116105a55761059781836123d9565b8b610be4565b604051903d90823e3d90fd5b610de6915060203d81116105a55761059781836123d9565b8b610ba8565b82610baa565b6105e084336128de565b346105e25760003660031901126105e25760405160006004548060011c90600181168015610ef6575b602083108114610ee257828552908115610ebe5750600114610e5e575b610a1c83610e52818503826123d9565b60405191829182612304565b91905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b916000905b808210610ea457509091508101602001610e52610e42565b919260018160209254838588010152019101909291610e8c565b60ff191660208086019190915291151560051b84019091019150610e529050610e42565b602484634e487b7160e01b81526022600452fd5b91607f1691610e25565b346105e25760003660031901126105e2576020600554604051908152f35b346105e25760003660031901126105e25760206001600160a01b03600a5416604051908152f35b346105e25760003660031901126105e257610f5e61295f565b60006001600160a01b03600a5473ffffffffffffffffffffffffffffffffffffffff198116600a55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346105e25760203660031901126105e2576001600160a01b03610fce61234d565b1660005260006020526020604060002054604051908152f35b346105e25760203660031901126105e2576001600160a01b0361100861234d565b61101061295f565b1680600052600960205260ff60406000205416156111fe576040516370a0823160e01b8152306004820152602081602481855afa9081156103a5576000916111cc575b506111885760005b600754808210156105e057826001600160a01b0361107884612413565b90549060031b1c161461108e575060010161105b565b600019810190811161047a576001600160a01b036110ae6110bf92612413565b90549060031b1c1661084283612413565b600754801561117257600019016110d581612413565b6001600160a01b0382549160031b1b1916905560075560065490600019820191821161047a5761111761110a61113093612444565b90549060031b1c91612444565b90919082549060031b91821b91600019901b1916179055565b6006548015611172576000190161114681612444565b8154906000199060031b1b191690556006556000526009602052604060002060ff198154169055600080f35b634e487b7160e01b600052603160045260246000fd5b606460405162461bcd60e51b815260206004820152601060248201527f4e6f6e2d7a65726f2062616c616e6365000000000000000000000000000000006044820152fd5b90506020813d6020116111f6575b816111e7602093836123d9565b810103126105e2575182611053565b3d91506111da565b606460405162461bcd60e51b815260206004820152600f60248201527f546f6b656e206e6f7420666f756e6400000000000000000000000000000000006044820152fd5b60203660031901126105e25760043561125961295f565b6112648134146126c3565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60005260096020527ea206b70d87cacff7a19f3d98e0957b781c25fb4ae954252c87bcf406261742546112ae9060ff166125e8565b6040516322d4d43360e21b81526020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a5576001600160a01b03916020916000916113e5575b506044604051809481936333fa33cb60e11b835287600484015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6024840152165afa80156103a5576000906113ae575b6113669150611360600554821015612652565b336129a1565b6040519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee825260208201527fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f49551760403392a2005b6020823d6020116113dd575b816113c7602093836123d9565b810103126113da5750611366905161134d565b80fd5b3d91506113ba565b6113fc9150823d84116105a55761059781836123d9565b84611308565b346105e25760003660031901126105e25760405180602060065491828152019060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9060005b81811061146f57610a1c85611463818703826123d9565b604051918291826122ca565b825484526020909301926001928301920161144c565b346105e25760403660031901126105e25761149e61234d565b6024356114a961295f565b6001600160a01b0382168060005260096020526114cd60ff604060002054166125e8565b604051916322d4d43360e21b83526020836004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9283156103a5576001600160a01b039360209160009161164a575b506044604051809681936333fa33cb60e11b8352866004840152876024840152165afa9283156103a557600093611616575b50611569600554841015612652565b6040516323b872dd60e01b81523360048201523060248201526044810182905291602090839060649082906000905af180156103a5577fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f4955179361075e936115d5926115f9575b50336129a1565b604051918291339583602090939291936001600160a01b0360408201951681520152565b6116119060203d60201161039e5761038f81836123d9565b6115ce565b90926020823d602011611642575b81611631602093836123d9565b810103126113da575051918461155a565b3d9150611624565b6116619150823d84116105a55761059781836123d9565b86611528565b346105e25760003660031901126105e257602060405160128152f35b346105e25760203660031901126105e2576004356116a281151561247c565b6002546116b08115156124c7565b60005b60075481101561177e576001600160a01b036116ce82612413565b90549060031b1c16906116e8836101f0866101eb86612759565b9173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8103611721575061171b6000808080600196335af161032461255d565b016116b3565b60405163a9059cbb60e01b81523360048201526024810193909352602090839060449082906000905af19182156103a557600192611760575b5061171b565b6117779060203d811161039e5761038f81836123d9565b508461175a565b6105e083336128de565b346105e25760003660031901126105e257604051806020600854918281520190828260086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3926000905b80601f830110611cf0576118ee945491818110611cd5575b818110611cb7575b818110611c99575b818110611c7b575b818110611c5e575b818110611c40575b818110611c22575b818110611c04575b818110611be6575b818110611bc8575b818110611baa575b818110611b8c575b818110611b6e575b818110611b50575b818110611b32575b818110611b14575b818110611af6575b818110611ad8575b818110611aba575b818110611a9c575b818110611a7e575b818110611a60575b818110611a42575b818110611a24575b818110611a06575b8181106119e8575b8181106119ca575b8181106119ac575b81811061198e575b818110611970575b818110611952575b1061193b575b5093929303826123d9565b6040519182916020830190602084525180915260408301919060005b818110611918575050500390f35b919350916020808261192d6001948851612379565b01940191019184939261190a565b9061194b8160209360f81c612379565b01856118e3565b9260208161196860019360ff8760f01c16612379565b0193016118dd565b9260208161198660019360ff8760e81c16612379565b0193016118d5565b926020816119a460019360ff8760e01c16612379565b0193016118cd565b926020816119c260019360ff8760d81c16612379565b0193016118c5565b926020816119e060019360ff8760d01c16612379565b0193016118bd565b926020816119fe60019360ff8760c81c16612379565b0193016118b5565b92602081611a1c60019360ff8760c01c16612379565b0193016118ad565b92602081611a3a60019360ff8760b81c16612379565b0193016118a5565b92602081611a5860019360ff8760b01c16612379565b01930161189d565b92602081611a7660019360ff8760a81c16612379565b019301611895565b92602081611a9460019360ff8760a01c16612379565b01930161188d565b92602081611ab260019360ff8760981c16612379565b019301611885565b92602081611ad060019360ff8760901c16612379565b01930161187d565b92602081611aee60019360ff8760881c16612379565b019301611875565b92602081611b0c60019360ff8760801c16612379565b01930161186d565b92602081611b2a60019360ff8760781c16612379565b019301611865565b92602081611b4860019360ff8760701c16612379565b01930161185d565b92602081611b6660019360ff8760681c16612379565b019301611855565b92602081611b8460019360ff8760601c16612379565b01930161184d565b92602081611ba260019360ff8760581c16612379565b019301611845565b92602081611bc060019360ff8760501c16612379565b01930161183d565b92602081611bde60019360ff8760481c16612379565b019301611835565b92602081611bfc60019360ff8760401c16612379565b01930161182d565b92602081611c1a60019360ff8760381c16612379565b019301611825565b92602081611c3860019360ff8760301c16612379565b01930161181d565b92602081611c5660019360ff8760281c16612379565b019301611815565b92602081611c7360019360ff87851c16612379565b01930161180d565b92602081611c9160019360ff8760181c16612379565b019301611805565b92602081611caf60019360ff8760101c16612379565b0193016117fd565b92602081611ccd60019360ff8760081c16612379565b0193016117f5565b92602081611ce860019360ff8716612379565b0193016117ed565b916020919350610400600191611f6b8754611d0e8360ff8316612379565b611d2086840160ff8360081c16612379565b611d336040840160ff8360101c16612379565b611d466060840160ff8360181c16612379565b611d586080840160ff83891c16612379565b611d6b60a0840160ff8360281c16612379565b611d7e60c0840160ff8360301c16612379565b611d9160e0840160ff8360381c16612379565b611da5610100840160ff8360401c16612379565b611db9610120840160ff8360481c16612379565b611dcd610140840160ff8360501c16612379565b611de1610160840160ff8360581c16612379565b611df5610180840160ff8360601c16612379565b611e096101a0840160ff8360681c16612379565b611e1d6101c0840160ff8360701c16612379565b611e316101e0840160ff8360781c16612379565b611e45610200840160ff8360801c16612379565b611e59610220840160ff8360881c16612379565b611e6d610240840160ff8360901c16612379565b611e81610260840160ff8360981c16612379565b611e95610280840160ff8360a01c16612379565b611ea96102a0840160ff8360a81c16612379565b611ebd6102c0840160ff8360b01c16612379565b611ed16102e0840160ff8360b81c16612379565b611ee5610300840160ff8360c01c16612379565b611ef9610320840160ff8360c81c16612379565b611f0d610340840160ff8360d01c16612379565b611f21610360840160ff8360d81c16612379565b611f35610380840160ff8360e01c16612379565b611f496103a0840160ff8360e81c16612379565b611f5d6103c0840160ff8360f01c16612379565b6103e083019060f81c612379565b0194019201859293916117d5565b346105e25760603660031901126105e257611f9261234d565b611f9a612363565b604435906001600160a01b0383169283600052600160205260406000206001600160a01b0333166000526020526040600020546000198110611fe2575b50610a6593506127e7565b83811061208457841561205557331561202657610a6594600052600160205260406000206001600160a01b0333166000526020528360406000209103905584611fd7565b7f94280d6200000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7fe602df0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b83907ffb8f41b2000000000000000000000000000000000000000000000000000000006000523360045260245260445260646000fd5b346105e25760003660031901126105e2576020600254604051908152f35b346105e25760403660031901126105e2576120f161234d565b602435903315612055576001600160a01b031690811561202657336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346105e25760003660031901126105e25760405160006003548060011c90600181168015612213575b602083108114610ee257828552908115610ebe57506001146121b357610a1c83610e52818503826123d9565b91905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b916000905b8082106121f957509091508101602001610e52610e42565b9192600181602092548385880101520191019092916121e1565b91607f1691612187565b346105e25760003660031901126105e25760075461223a816123fb565b9061224860405192836123d9565b808252601f19612257826123fb565b0136602084013760005b8181106122765760405180610a1c85826122ca565b6122976001600160a01b0361228a83612413565b90549060031b1c16612759565b600084518310156122b65750600582901b840160200152600101612261565b80634e487b7160e01b602492526032600452fd5b602060408183019282815284518094520192019060005b8181106122ee5750505090565b82518452602093840193909201916001016122e1565b91909160208152825180602083015260005b818110612337575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201612316565b600435906001600160a01b03821682036105e257565b602435906001600160a01b03821682036105e257565b9060048210156123865752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b8181106123ba5750505090565b82516001600160a01b03168452602093840193909201916001016123ad565b90601f8019910116810190811067ffffffffffffffff8211176108bd57604052565b67ffffffffffffffff81116108bd5760051b60200190565b60075481101561242e57600760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60065481101561242e57600660005260206000200190600090565b80511561242e5760200190565b80516001101561242e5760400190565b1561248357565b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420616d6f756e740000000000000000000000000000000000006044820152fd5b156124ce57565b606460405162461bcd60e51b815260206004820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b8181029291811591840414171561047a57565b811561252f570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126105e2575180151581036105e25790565b3d15612598573d9067ffffffffffffffff82116108bd576040519161258c601f8201601f1916602001846123d9565b82523d6000602084013e565b606090565b156125a457565b606460405162461bcd60e51b815260206004820152601360248201527f455448207472616e73666572206661696c6564000000000000000000000000006044820152fd5b156125ef57565b606460405162461bcd60e51b815260206004820152601160248201527f455448206e6f7420737570706f727465640000000000000000000000000000006044820152fd5b908160209103126105e257516001600160a01b03811681036105e25790565b1561265957565b608460405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e74206465706f73697420616d6f756e7420696e207560448201527f73640000000000000000000000000000000000000000000000000000000000006064820152fd5b156126ca57565b606460405162461bcd60e51b815260206004820152601460248201527f496e636f72726563742045544820616d6f756e740000000000000000000000006044820152fd5b1561271557565b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420746f6b656e000000000000000000000000000000000000006044820152fd5b6000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036127865750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa918215610dc25780926127b657505090565b9091506020823d6020116127df575b816127d2602093836123d9565b810103126113da57505190565b3d91506127c5565b6001600160a01b03169081156128af576001600160a01b03169182156128805760008281528060205260408120548281106128665791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b60649363391434e360e21b83949352600452602452604452fd5b7fec442f0500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f96c6fd1e00000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6001600160a01b031680156128af5760009181835282602052604083205481811061294657817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b839263391434e360e21b60649552600452602452604452fd5b6001600160a01b03600a5416330361297357565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6001600160a01b03169081156128805760025481810180911161047a576002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009284845283825260408420818154019055604051908152a3565b6020818303126105e25780519067ffffffffffffffff82116105e257019080601f830112156105e2578151612a34816123fb565b92612a4260405194856123d9565b81845260208085019260051b8201019283116105e257602001905b828210612a6a5750505090565b8151815260209182019101612a5d56fea2646970667358221220ab4d2def14778c67b1e590f503ea4b9e5921c1d17de41a36620d29acfac0377564736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x113E08 EQ PUSH2 0x221D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x215E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20D8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F79 JUMPI DUP1 PUSH4 0x2494452D EQ PUSH2 0x1788 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1683 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1667 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x1485 JUMPI DUP1 PUSH4 0x4EADCCA8 EQ PUSH2 0x1402 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x1242 JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0xFE7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xFAD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF45 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF1E JUMPI DUP1 PUSH4 0x8E4E9018 EQ PUSH2 0xF00 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xDFC JUMPI DUP1 PUSH4 0xA216AA06 EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xA3F JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x9A7 JUMPI DUP1 PUSH4 0xAB83F98A EQ PUSH2 0x917 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x780 JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E7 JUMPI PUSH4 0xF9C4D3DB EQ PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x152 PUSH2 0x234D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x161 DUP3 ISZERO ISZERO PUSH2 0x247C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x185 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x270E JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 PUSH2 0x194 DUP4 ISZERO ISZERO PUSH2 0x24C7 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x60 SWAP2 SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 EQ SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D1 DUP3 PUSH2 0x2413 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 PUSH2 0x1F5 DUP9 PUSH2 0x1F0 DUP12 PUSH2 0x1EB DUP7 PUSH2 0x2759 JUMP JUMPDEST PUSH2 0x2512 JUMP JUMPDEST PUSH2 0x2525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 DUP9 DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP5 EQ DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x5B2 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x28B DUP5 PUSH2 0x245F JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP7 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x57E JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2F6 DUP5 PUSH2 0x246C JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP5 DUP7 EQ DUP1 DUP1 PUSH2 0x577 JUMPI JUMPDEST ISZERO PUSH2 0x330 JUMPI POP POP POP PUSH1 0x1 SWAP3 POP PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x32A SWAP5 CALLER GAS CALL PUSH2 0x324 PUSH2 0x255D JUMP JUMPDEST POP PUSH2 0x259D JUMP JUMPDEST ADD PUSH2 0x1B6 JUMP JUMPDEST ISZERO PUSH2 0x3B1 JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x377 JUMPI JUMPDEST POP PUSH2 0x32A JUMP JUMPDEST PUSH2 0x397 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x39E JUMPI JUMPDEST PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2545 JUMP JUMPDEST POP CODESIZE PUSH2 0x371 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP4 SWAP1 ISZERO PUSH2 0x490 JUMPI POP PUSH1 0x1 TIMESTAMP ADD SWAP3 DUP4 TIMESTAMP GT PUSH2 0x47A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x410 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH32 0x7FF36AB500000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP8 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD SWAP1 PUSH2 0x239C JUMP JUMPDEST SWAP1 CALLER PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD MSTORE SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x45E JUMPI POP PUSH2 0x32A JUMP JUMPDEST PUSH2 0x397 SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x472 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP5 SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH2 0x55B JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD SWAP4 DUP5 TIMESTAMP GT PUSH2 0x47A JUMPI PUSH1 0x0 SWAP3 DUP4 PUSH2 0x537 SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP5 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD SWAP1 PUSH2 0x239C JUMP JUMPDEST SWAP1 CALLER PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x45E JUMPI POP PUSH2 0x32A JUMP JUMPDEST PUSH2 0x572 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x39E JUMPI PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST POP DUP8 PUSH2 0x304 JUMP JUMPDEST PUSH2 0x59F SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A5 JUMPI JUMPDEST PUSH2 0x597 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2633 JUMP JUMPDEST CODESIZE PUSH2 0x2E3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x58D JUMP JUMPDEST DUP8 PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0x5CA SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A5 JUMPI PUSH2 0x597 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST CODESIZE PUSH2 0x278 JUMP JUMPDEST DUP5 PUSH2 0x27A JUMP JUMPDEST PUSH2 0x5E0 DUP9 CALLER PUSH2 0x28DE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x608 PUSH2 0x234D JUMP JUMPDEST PUSH2 0x610 PUSH2 0x295F JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x6AF PUSH2 0x234D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x6D7 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x270E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3A5 JUMPI PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 SWAP3 PUSH2 0x75E SWAP3 PUSH2 0x763 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH2 0x77B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x39E JUMPI PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x799 PUSH2 0x234D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7A9 PUSH2 0x2363 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x7F1 PUSH2 0x234D JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x295F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x8D3 JUMPI PUSH1 0x7 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x8BD JUMPI PUSH2 0x842 DUP3 PUSH1 0x1 PUSH2 0x861 SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x2413 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x8BD JUMPI PUSH2 0x888 DUP2 PUSH1 0x1 PUSH2 0x8A2 SWAP4 ADD PUSH1 0x6 SSTORE PUSH2 0x2444 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206578697374730000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x954 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x25E8 JUMP JUMPDEST PUSH2 0x95F DUP2 CALLVALUE EQ PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x16E2DD942E4846ACB6770151F8C5ED72A9949242B893BB783112D656AB171F74 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x7 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA20 JUMPI PUSH2 0xA1C DUP6 PUSH2 0xA08 DUP2 DUP8 SUB DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x239C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x9F1 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0xA65 PUSH2 0xA5B PUSH2 0x234D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x27E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA8F DUP2 ISZERO ISZERO PUSH2 0x247C JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH31 0xA206B70D87CACFF7A19F3D98E0957B781C25FB4AE954252C87BCF406261742 SLOAD PUSH2 0xAD9 SWAP1 PUSH1 0xFF AND PUSH2 0x270E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xAE7 DUP2 ISZERO ISZERO PUSH2 0x24C7 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xDF2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB34 DUP3 PUSH2 0x2413 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0xB4D DUP7 PUSH2 0x1F0 DUP8 PUSH2 0x1EB DUP6 PUSH2 0x2759 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0xB5B DUP6 DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE DUP9 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 EQ DUP1 ISZERO PUSH2 0xDEC JUMPI PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDCE JUMPI JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBBB DUP5 PUSH2 0x245F JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP13 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xDC2 JUMPI SWAP2 PUSH2 0xDA4 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBF6 DUP5 PUSH2 0x246C JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE DUP1 DUP1 PUSH2 0xD9C JUMPI JUMPDEST ISZERO PUSH2 0xC26 JUMPI POP POP POP SWAP1 PUSH2 0xC20 PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 SWAP7 CALLER GAS CALL PUSH2 0x324 PUSH2 0x255D JUMP JUMPDEST ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0xC8E JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 SWAP3 PUSH2 0xC70 JUMPI JUMPDEST POP PUSH2 0xC20 JUMP JUMPDEST PUSH2 0xC87 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x39E JUMPI PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST POP DUP8 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xD91 JUMPI PUSH2 0xD75 JUMPI JUMPDEST POP PUSH1 0x1 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0xD61 JUMPI SWAP2 DUP4 SWAP2 PUSH2 0xD11 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP6 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD SWAP1 PUSH2 0x239C JUMP JUMPDEST SWAP1 CALLER PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB DUP2 DUP4 DUP10 GAS CALL DUP1 ISZERO PUSH2 0xD56 JUMPI SWAP1 PUSH1 0x1 SWAP4 SWAP3 SWAP2 PUSH2 0xD3B JUMPI JUMPDEST POP POP PUSH2 0xC20 JUMP JUMPDEST PUSH2 0xD4E SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x472 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST POP DUP8 DUP1 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xD8C SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x39E JUMPI PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0xDBC SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A5 JUMPI PUSH2 0x597 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP12 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xDE6 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x5A5 JUMPI PUSH2 0x597 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP12 PUSH2 0xBA8 JUMP JUMPDEST DUP3 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x5E0 DUP5 CALLER PUSH2 0x28DE JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xEF6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0xEE2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xEBE JUMPI POP PUSH1 0x1 EQ PUSH2 0xE5E JUMPI JUMPDEST PUSH2 0xA1C DUP4 PUSH2 0xE52 DUP2 DUP6 SUB DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2304 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xEA4 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xE52 PUSH2 0xE42 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xE52 SWAP1 POP PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xE25 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0xF5E PUSH2 0x295F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0xA SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xFCE PUSH2 0x234D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1008 PUSH2 0x234D JUMP JUMPDEST PUSH2 0x1010 PUSH2 0x295F JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x11FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x11CC JUMPI JUMPDEST POP PUSH2 0x1188 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x5E0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1078 DUP5 PUSH2 0x2413 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x108E JUMPI POP PUSH1 0x1 ADD PUSH2 0x105B JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x47A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x10AE PUSH2 0x10BF SWAP3 PUSH2 0x2413 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x842 DUP4 PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x1172 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x10D5 DUP2 PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x47A JUMPI PUSH2 0x1117 PUSH2 0x110A PUSH2 0x1130 SWAP4 PUSH2 0x2444 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x2444 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x1172 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1146 DUP2 PUSH2 0x2444 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x6 SSTORE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D7A65726F2062616C616E636500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11F6 JUMPI JUMPDEST DUP2 PUSH2 0x11E7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5E2 JUMPI MLOAD DUP3 PUSH2 0x1053 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1259 PUSH2 0x295F JUMP JUMPDEST PUSH2 0x1264 DUP2 CALLVALUE EQ PUSH2 0x26C3 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH31 0xA206B70D87CACFF7A19F3D98E0957B781C25FB4AE954252C87BCF406261742 SLOAD PUSH2 0x12AE SWAP1 PUSH1 0xFF AND PUSH2 0x25E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x13E5 JUMPI JUMPDEST POP PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x13AE JUMPI JUMPDEST PUSH2 0x1366 SWAP2 POP PUSH2 0x1360 PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x2652 JUMP JUMPDEST CALLER PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13DD JUMPI JUMPDEST DUP2 PUSH2 0x13C7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13DA JUMPI POP PUSH2 0x1366 SWAP1 MLOAD PUSH2 0x134D JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x13FC SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x5A5 JUMPI PUSH2 0x597 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP5 PUSH2 0x1308 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x146F JUMPI PUSH2 0xA1C DUP6 PUSH2 0x1463 DUP2 DUP8 SUB DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x22CA JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x144C JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x149E PUSH2 0x234D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x14A9 PUSH2 0x295F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x14CD PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x25E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22D4D433 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x164A JUMPI JUMPDEST POP PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x33FA33CB PUSH1 0xE1 SHL DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE DUP8 PUSH1 0x24 DUP5 ADD MSTORE AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x1616 JUMPI JUMPDEST POP PUSH2 0x1569 PUSH1 0x5 SLOAD DUP5 LT ISZERO PUSH2 0x2652 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH32 0xCBC4A4091B012BB1329C38BBBB15455F5CAC5AA3673DA0A7F38CD61A4F495517 SWAP4 PUSH2 0x75E SWAP4 PUSH2 0x15D5 SWAP3 PUSH2 0x15F9 JUMPI JUMPDEST POP CALLER PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x1611 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x39E JUMPI PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x15CE JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1642 JUMPI JUMPDEST DUP2 PUSH2 0x1631 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13DA JUMPI POP MLOAD SWAP2 DUP5 PUSH2 0x155A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1624 JUMP JUMPDEST PUSH2 0x1661 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x5A5 JUMPI PUSH2 0x597 DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP7 PUSH2 0x1528 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x16A2 DUP2 ISZERO ISZERO PUSH2 0x247C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x16B0 DUP2 ISZERO ISZERO PUSH2 0x24C7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x177E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16CE DUP3 PUSH2 0x2413 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 PUSH2 0x16E8 DUP4 PUSH2 0x1F0 DUP7 PUSH2 0x1EB DUP7 PUSH2 0x2759 JUMP JUMPDEST SWAP2 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x1721 JUMPI POP PUSH2 0x171B PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 SWAP7 CALLER GAS CALL PUSH2 0x324 PUSH2 0x255D JUMP JUMPDEST ADD PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1760 JUMPI JUMPDEST POP PUSH2 0x171B JUMP JUMPDEST PUSH2 0x1777 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x39E JUMPI PUSH2 0x38F DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST POP DUP5 PUSH2 0x175A JUMP JUMPDEST PUSH2 0x5E0 DUP4 CALLER PUSH2 0x28DE JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP3 DUP3 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0x1CF0 JUMPI PUSH2 0x18EE SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x1CD5 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1CB7 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C99 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C7B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C5E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C40 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C22 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1C04 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1BE6 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1BC8 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1BAA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B8C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B6E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B50 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B32 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1B14 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1AF6 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1AD8 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1ABA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A9C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A7E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A60 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A42 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A24 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1A06 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x19E8 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x19CA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x19AC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x198E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1970 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1952 JUMPI JUMPDEST LT PUSH2 0x193B JUMPI JUMPDEST POP SWAP4 SWAP3 SWAP4 SUB DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1918 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 DUP1 DUP3 PUSH2 0x192D PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x2379 JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x190A JUMP JUMPDEST SWAP1 PUSH2 0x194B DUP2 PUSH1 0x20 SWAP4 PUSH1 0xF8 SHR PUSH2 0x2379 JUMP JUMPDEST ADD DUP6 PUSH2 0x18E3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1968 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xF0 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18DD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1986 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE8 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18D5 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19A4 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xE0 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18CD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19C2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD8 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18C5 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19E0 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xD0 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18BD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x19FE PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC8 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18B5 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A1C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xC0 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A3A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB8 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x18A5 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A58 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xB0 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x189D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A76 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA8 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1895 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1A94 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x188D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1AB2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x98 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1885 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1AD0 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x90 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x187D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1AEE PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x88 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1875 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B0C PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x80 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x186D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B2A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x78 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1865 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B48 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x70 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x185D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B66 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x68 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1855 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1B84 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x60 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BA2 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x58 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BC0 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x50 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x183D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BDE PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x48 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1835 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1BFC PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x182D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C1A PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x38 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1825 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C38 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x30 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x181D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C56 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x28 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1815 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C73 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 DUP6 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x180D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1C91 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x18 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x1805 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1CAF PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x10 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1CCD PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 PUSH2 0x1CE8 PUSH1 0x1 SWAP4 PUSH1 0xFF DUP8 AND PUSH2 0x2379 JUMP JUMPDEST ADD SWAP4 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 PUSH2 0x1F6B DUP8 SLOAD PUSH2 0x1D0E DUP4 PUSH1 0xFF DUP4 AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D20 DUP7 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D33 PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D46 PUSH1 0x60 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x18 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D58 PUSH1 0x80 DUP5 ADD PUSH1 0xFF DUP4 DUP10 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D6B PUSH1 0xA0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x28 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D7E PUSH1 0xC0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x30 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1D91 PUSH1 0xE0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x38 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1DA5 PUSH2 0x100 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1DB9 PUSH2 0x120 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x48 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1DCD PUSH2 0x140 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x50 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1DE1 PUSH2 0x160 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x58 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1DF5 PUSH2 0x180 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x60 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E09 PUSH2 0x1A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x68 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E1D PUSH2 0x1C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x70 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E31 PUSH2 0x1E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x78 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E45 PUSH2 0x200 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E59 PUSH2 0x220 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x88 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E6D PUSH2 0x240 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x90 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E81 PUSH2 0x260 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0x98 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1E95 PUSH2 0x280 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1EA9 PUSH2 0x2A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1EBD PUSH2 0x2C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB0 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1ED1 PUSH2 0x2E0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xB8 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1EE5 PUSH2 0x300 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1EF9 PUSH2 0x320 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xC8 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1F0D PUSH2 0x340 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD0 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1F21 PUSH2 0x360 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1F35 PUSH2 0x380 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE0 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1F49 PUSH2 0x3A0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xE8 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1F5D PUSH2 0x3C0 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xF0 SHR AND PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x3E0 DUP4 ADD SWAP1 PUSH1 0xF8 SHR PUSH2 0x2379 JUMP JUMPDEST ADD SWAP5 ADD SWAP3 ADD DUP6 SWAP3 SWAP4 SWAP2 PUSH2 0x17D5 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x1F92 PUSH2 0x234D JUMP JUMPDEST PUSH2 0x1F9A PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT PUSH2 0x1FE2 JUMPI JUMPDEST POP PUSH2 0xA65 SWAP4 POP PUSH2 0x27E7 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x2084 JUMPI DUP5 ISZERO PUSH2 0x2055 JUMPI CALLER ISZERO PUSH2 0x2026 JUMPI PUSH2 0xA65 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x1FD7 JUMP JUMPDEST PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH2 0x20F1 PUSH2 0x234D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x2055 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2026 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2213 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0xEE2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xEBE JUMPI POP PUSH1 0x1 EQ PUSH2 0x21B3 JUMPI PUSH2 0xA1C DUP4 PUSH2 0xE52 DUP2 DUP6 SUB DUP3 PUSH2 0x23D9 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x21F9 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xE52 PUSH2 0xE42 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x21E1 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2187 JUMP JUMPDEST CALLVALUE PUSH2 0x5E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5E2 JUMPI PUSH1 0x7 SLOAD PUSH2 0x223A DUP2 PUSH2 0x23FB JUMP JUMPDEST SWAP1 PUSH2 0x2248 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x2257 DUP3 PUSH2 0x23FB JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2276 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xA1C DUP6 DUP3 PUSH2 0x22CA JUMP JUMPDEST PUSH2 0x2297 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x228A DUP4 PUSH2 0x2413 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2759 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD DUP4 LT ISZERO PUSH2 0x22B6 JUMPI POP PUSH1 0x5 DUP3 SWAP1 SHL DUP5 ADD PUSH1 0x20 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2261 JUMP JUMPDEST DUP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x24 SWAP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x22EE JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x22E1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2337 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x2316 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E2 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E2 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x2386 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x23BA JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x23AD JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8BD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8BD JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x242E JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x242E JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x242E JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x242E JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2483 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x24CE JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x47A JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x252F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5E2 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x5E2 JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2598 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8BD JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x258C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x23D9 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x25A4 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x25EF JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420737570706F72746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5E2 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5E2 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2659 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420616D6F756E7420696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7364000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x26CA JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2715 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x2786 JUMPI POP POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xDC2 JUMPI DUP1 SWAP3 PUSH2 0x27B6 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x27DF JUMPI JUMPDEST DUP2 PUSH2 0x27D2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13DA JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x28AF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2880 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x2866 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 SWAP5 SWAP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x28AF JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x2946 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH1 0x64 SWAP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND CALLER SUB PUSH2 0x2973 JUMPI JUMP JUMPDEST PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2880 JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x47A JUMPI PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x5E2 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x5E2 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x5E2 JUMPI DUP2 MLOAD PUSH2 0x2A34 DUP2 PUSH2 0x23FB JUMP JUMPDEST SWAP3 PUSH2 0x2A42 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x23D9 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x5E2 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A6A JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2A5D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0x4D 0x2D 0xEF EQ PUSH24 0x8C67B1E590F503EA4B9E5921C1D17DE41A36620D29ACFAC0 CALLDATACOPY PUSH22 0x64736F6C634300081C00330000000000000000000000 ",
              "sourceMap": "659:8406:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;;:::i;:::-;;;4467:12;4459:39;4467:12;;;4459:39;:::i;:::-;-1:-1:-1;;;;;659:8406:25;;;;;4517:18;659:8406;;4509:54;659:8406;;;;;;4509:54;:::i;:::-;2927:12:3;659:8406:25;4630:15;4622:40;4630:15;;;4622:40;:::i;:::-;659:8406;;;;;776:42:26;5024:22:25;;;659:8406;4725:3;4699:17;659:8406;4695:28;;;;;-1:-1:-1;;;;;4763:20:25;;;:::i;:::-;659:8406;;;;;;;4818:19;4817:46;4818:19;:30;:19;;;;:::i;:::-;:30;:::i;:::-;4817:46;:::i;:::-;659:8406;;;;;;:::i;:::-;2927:12:3;659:8406:25;;;;;;;;776:42:26;4947:21:25;;:52;;;;659:8406;;-1:-1:-1;;;4971:18:25;;659:8406;4971:11;659:8406;4971:11;-1:-1:-1;;;;;4971:11:25;659:8406;4971:18;;;;;;;659:8406;4971:18;;;4947:52;;;-1:-1:-1;;;;;4937:62:25;;;:::i;:::-;659:8406;;;;5024:54;;;;659:8406;;-1:-1:-1;;;5049:18:25;;659:8406;5049:11;659:8406;5049:11;-1:-1:-1;;;;;5049:11:25;659:8406;5049:18;;;;;;;659:8406;5049:18;;;5024:54;;;-1:-1:-1;;;;;5014:64:25;;;:::i;:::-;659:8406;;;;5099:19;;;;;:45;;5024:54;5095:988;;;5193:10;;;5019:1;5193:10;;659:8406;5193:10;;;5291:40;5193:10;;5185:85;;;;:::i;:::-;;5291:40;:::i;:::-;659:8406;4680:13;;5095:988;5353:730;;;-1:-1:-1;;659:8406:25;;-1:-1:-1;;;5397:46:25;;5422:10;659:8406;5397:46;;659:8406;776:42:26;;;659:8406:25;;;;;;;;;776:42:26;;659:8406:25;;-1:-1:-1;;5397:46:25;;;;;;;5019:1;5397:46;;;5353:730;;5095:988;;5397:46;;;659:8406;5397:46;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;659:8406;;776:42:26;659:8406:25;776:42:26;;;;;5353:730:25;5465:618;;;;;;5684:15;5019:1;5684:15;659:8406;5684:15;;;659:8406;;;;;;;;;5511:211;;;;;;776:42:26;5511:211:25;;;659:8406;5511:211;;659:8406;;;;;;;;;;;:::i;:::-;5651:10;;659:8406;;;;;;;;5511:211;:11;-1:-1:-1;;;;;5511:11:25;659:8406;5511:211;;;;;;;5019:1;5511:211;;;5465:618;5095:988;;5511:211;;;;;659:8406;5511:211;;;;;;:::i;:::-;;;;;:::i;659:8406::-;-1:-1:-1;;;659:8406:25;;;;;;;;5465:618;659:8406;;-1:-1:-1;;;5763:55:25;;-1:-1:-1;;;;;5795:11:25;659:8406;;5763:55;;659:8406;;;776:42:26;;;659:8406:25;;;;;;;;;;776:42:26;;659:8406:25;;-1:-1:-1;;5763:55:25;;;;;;;;5465:618;6029:15;5019:1;6029:15;659:8406;6029:15;;;659:8406;;;;;;;;;;5839:228;;;;;;;-1:-1:-1;;;5839:228:25;;659:8406;5839:228;;659:8406;;;;;;;;;;;;;;;;:::i;:::-;5996:10;;659:8406;;;;;;;;5839:228;;;;;;;;;5019:1;5839:228;;;5465:618;5095:988;;5763:55;;;659:8406;5763:55;;;;;;;;;:::i;:::-;;;5099:45;;;;;5049:18;;;;659:8406;5049:18;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;5024:54;;;;4971:18;;;;659:8406;4971:18;;;;;;;;;:::i;:::-;;;;4947:52;;;;4695:28;6124:8;4695:28;6112:10;6124:8;:::i;:::-;659:8406;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;-1:-1:-1;;;;;659:8406:25;;:::i;:::-;1500:62:1;;:::i;:::-;659:8406:25;2627:22:1;;2623:91;;-1:-1:-1;;;;;3004:6:1;659:8406:25;;-1:-1:-1;;659:8406:25;;;3004:6:1;659:8406:25;;3052:40:1;659:8406:25;3052:40:1;;659:8406:25;2623:91:1;2672:31;659:8406:25;2672:31:1;659:8406:25;;;;;2672:31:1;659:8406:25;;;;;;-1:-1:-1;;659:8406:25;;;;;;:::i;:::-;;;-1:-1:-1;;;;;659:8406:25;;;;;;6233:18;659:8406;;6225:51;659:8406;;;;;;6225:51;:::i;:::-;659:8406;;-1:-1:-1;;;6287:61:25;;6314:10;659:8406;6287:61;;659:8406;6334:4;659:8406;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6287:61:25;;;;;;;6366:40;6287:61;6366:40;6287:61;;;659:8406;;;;6314:10;;;;6366:40;;776:42:26;;;;;;-1:-1:-1;;;;;776:42:26;;;659:8406:25;;;;776:42:26;659:8406:25;776:42:26;6366:40:25;;;;659:8406;6287:61;;;659:8406;6287:61;659:8406;6287:61;;;;;;;:::i;:::-;;;659:8406;;;;;;-1:-1:-1;;659:8406:25;;;;;;:::i;:::-;-1:-1:-1;;;;;659:8406:25;;:::i;:::-;;;;;3657:11:3;659:8406:25;;-1:-1:-1;;;;;659:8406:25;;;3657:27:3;659:8406:25;-1:-1:-1;659:8406:25;;;;;-1:-1:-1;659:8406:25;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;;:::i;:::-;1500:62:1;;:::i;:::-;-1:-1:-1;;;;;659:8406:25;;;;;;8129:18;659:8406;;;;;;;;;;8184:17;659:8406;;;;;;;;;;;;;;8184:17;659:8406;;:::i;:::-;;;;-1:-1:-1;;;;;659:8406:25;;;;;;;;;;;;;;;;;;;8224:11;659:8406;;;;;;;;;;;;;8224:11;659:8406;;:::i;:::-;;;;;;;;;;;;10599:17:3;;;659:8406:25;;;;;;;;;;;;;8129:18;659:8406;;;;;;;-1:-1:-1;;659:8406:25;;;;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;;776:42:26;659:8406:25;;6502:18;659:8406;;6494:60;659:8406;;;;;;6494:60;:::i;:::-;6565:52;6573:9;;:19;6565:52;:::i;:::-;659:8406;;;776:42:26;659:8406:25;;;776:42:26;;659:8406:25;6635:45;659:8406;6649:10;6635:45;;659:8406;;;;;;;-1:-1:-1;;659:8406:25;;;;;;;;7003:17;659:8406;;;;;;;7003:17;659:8406;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;3459:5:3;659:8406:25;;:::i;:::-;;;735:10:6;;3459:5:3;:::i;:::-;659:8406:25;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;;4459:39;4467:12;;;4459:39;:::i;:::-;776:42:26;659:8406:25;;4517:18;659:8406;;;;4509:54;;659:8406;;4509:54;:::i;:::-;2927:12:3;659:8406:25;4622:40;4630:15;;;4622:40;:::i;:::-;659:8406;;5049:11;-1:-1:-1;;;;;659:8406:25;;;4725:3;4699:17;659:8406;4695:28;;;;;-1:-1:-1;;;;;4763:20:25;;;:::i;:::-;659:8406;;;;;;;4817:46;4818:19;:30;:19;;;;:::i;4817:46::-;659:8406;;;;;;;:::i;:::-;2927:12:3;659:8406:25;;;;;;;;776:42:26;4947:21:25;;:52;;;;659:8406;;-1:-1:-1;;;4971:18:25;;659:8406;4971:18;659:8406;4971:18;;;;;;;;;659:8406;4971:18;;;4947:52;;;-1:-1:-1;;;;;4937:62:25;;;:::i;:::-;659:8406;;;;;;;-1:-1:-1;;;5049:18:25;;659:8406;5049:18;659:8406;5049:18;;;;;;;;;;;;4947:52;5024:54;-1:-1:-1;;;;;5014:64:25;;;:::i;:::-;659:8406;;;;5099:45;;;;4947:52;5095:988;;;5193:10;;;;5291:40;659:8406;5193:10;;;5019:1;5193:10;;5185:85;;;;:::i;5291:40::-;659:8406;4680:13;;5095:988;5353:730;;;;;;-1:-1:-1;659:8406:25;;-1:-1:-1;;;5397:46:25;;5422:10;659:8406;5397:46;;659:8406;776:42:26;;;659:8406:25;;;;;;;;;;776:42:26;;659:8406:25;;-1:-1:-1;;5397:46:25;;;;;;;5019:1;5397:46;;;5353:730;;5095:988;;5397:46;;;659:8406;5397:46;;;;;;;;;:::i;:::-;;;;;5353:730;659:8406;;-1:-1:-1;;;5763:55:25;;-1:-1:-1;;;;;659:8406:25;;;5763:55;;659:8406;776:42:26;;;659:8406:25;;;-1:-1:-1;;5465:618:25;;659:8406;;;;;776:42:26;;659:8406:25;;-1:-1:-1;;5763:55:25;;;;;;;;5353:730;6029:15;5019:1;6029:15;659:8406;6029:15;;659:8406;;;;;;;;;;5839:228;;;;;-1:-1:-1;;;5839:228:25;;659:8406;5839:228;;659:8406;;;;;;;;;;;;;;;;:::i;:::-;5996:10;;659:8406;;;;;;;;5839:228;;;;;;;;;;;5019:1;5839:228;;;;;5353:730;;;5095:988;;5839:228;;;;;;;;;;;;:::i;:::-;;;;;;;659:8406;;776:42:26;659:8406:25;;776:42:26;;;;659:8406:25;;;-1:-1:-1;;;659:8406:25;;;;;;5763:55;;;659:8406;5763:55;;;;;;;;;:::i;:::-;;;;659:8406;;776:42:26;659:8406:25;;776:42:26;;;;5099:45:25;;5019:1;5099:45;;5049:18;;;;659:8406;5049:18;;;;;;;;;:::i;:::-;;;;;659:8406;;776:42:26;;;;;;;;4971:18:25;;;;659:8406;4971:18;;;;;;;;;:::i;:::-;;;;4947:52;;;;4695:28;6124:8;4695:28;6112:10;6124:8;:::i;659:8406::-;;;;;;-1:-1:-1;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:25;;-1:-1:-1;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:8406:25;;-1:-1:-1;659:8406:25;;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;7636:14;659:8406;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;-1:-1:-1;;;;;1710:6:1;659:8406:25;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;1500:62:1;;:::i;:::-;659:8406:25;-1:-1:-1;;;;;3004:6:1;659:8406:25;-1:-1:-1;;659:8406:25;;3004:6:1;659:8406:25;;3052:40:1;;;;659:8406:25;;;;;;;-1:-1:-1;;659:8406:25;;;;-1:-1:-1;;;;;659:8406:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;-1:-1:-1;;;;;659:8406:25;;:::i;:::-;1500:62:1;;:::i;:::-;659:8406:25;;;;8391:18;659:8406;;;;;;;;;;;;;-1:-1:-1;;;8469:38:25;;8501:4;659:8406;8469:38;;659:8406;;8469:38;;;;;;;;;;;659:8406;8469:38;;;659:8406;8469:43;659:8406;;;8619:3;8593:17;659:8406;8589:28;;;;;;8643:20;-1:-1:-1;;;;;8643:20:25;;;:::i;:::-;659:8406;;;;;;;8643:29;8639:405;;8619:3;659:8406;;8574:13;;8639:405;-1:-1:-1;;659:8406:25;;;;;;;-1:-1:-1;;;;;8716:87:25;8693:110;8716:87;;:::i;:::-;659:8406;;;;;;;8693:20;;;:::i;:110::-;8593:17;659:8406;;;;;-1:-1:-1;;659:8406:25;;;;:::i;:::-;-1:-1:-1;;;;;659:8406:25;;;;;;;;;;8593:17;659:8406;8881:11;659:8406;10599:17:3;;;659:8406:25;;;;;;;8864:14;8881:35;8864:52;8881:35;;:::i;:::-;659:8406;;;;;;8864:14;;:::i;:::-;:52;659:8406;;;;;;;;;;10599:17:3;;;659:8406:25;;;;;;;;8864:52;8881:11;659:8406;;;;;-1:-1:-1;;659:8406:25;;;;:::i;:::-;;;10599:17:3;;;659:8406:25;;;;;;;;8881:11;659:8406;;;8391:18;659:8406;;;;;;;;;;;;;;;;-1:-1:-1;;;659:8406:25;;;;;8469:38;659:8406;;;;;;-1:-1:-1;;;659:8406:25;;;;;;;;8469:38;659:8406;;;;;;;;;8469:38;;;659:8406;8469:38;;659:8406;8469:38;;;;;;659:8406;8469:38;;;:::i;:::-;;;659:8406;;;;;8469:38;;;;;;-1:-1:-1;8469:38:25;;659:8406;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;;1500:62:1;;:::i;:::-;2729:52:25;2737:9;;:19;2729:52;:::i;:::-;776:42:26;659:8406:25;;2800:18;659:8406;;;;2792:60;;659:8406;;2792:60;:::i;:::-;659:8406;;-1:-1:-1;;;2887:42:25;;659:8406;2896:8;659:8406;2896:8;-1:-1:-1;;;;;2896:8:25;659:8406;2887:42;;;;;;;-1:-1:-1;;;;;2887:42:25;659:8406;2887:42;659:8406;2887:42;;;659:8406;;2962:100;659:8406;;2962:100;;;;-1:-1:-1;;;2962:100:25;;;659:8406;2962:100;;659:8406;776:42:26;659:8406:25;;;;;2962:100;;;;;;659:8406;2962:100;;;659:8406;3217:9;659:8406;;3075:111;3110:14;659:8406;3097:27;;;3075:111;:::i;:::-;3205:10;3217:9;:::i;:::-;659:8406;;;776:42:26;659:8406:25;;;776:42:26;;659:8406:25;3245:47;659:8406;3205:10;3245:47;;659:8406;2962:100;659:8406;2962:100;;659:8406;2962:100;;;;;;659:8406;2962:100;;;:::i;:::-;;;659:8406;;;;;3217:9;659:8406;;2962:100;;659:8406;;;2962:100;;;-1:-1:-1;2962:100:25;;2887:42;;;;;;;;;;;;;;:::i;:::-;;;;659:8406;;;;;;-1:-1:-1;;659:8406:25;;;;;;;;7522:11;659:8406;;;;;;;7522:11;659:8406;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;;:::i;:::-;;;1500:62:1;;:::i;:::-;-1:-1:-1;;;;;659:8406:25;;;;;2081:18;659:8406;;2073:55;659:8406;;;;;;2073:55;:::i;:::-;659:8406;;2163:42;-1:-1:-1;;;2163:42:25;;659:8406;2172:8;659:8406;2172:8;-1:-1:-1;;;;;2172:8:25;659:8406;2163:42;;;;;;;-1:-1:-1;;;;;2163:42:25;659:8406;2163:42;659:8406;2163:42;;;659:8406;;2236:95;659:8406;;2236:95;;;;-1:-1:-1;;;2236:95:25;;;659:8406;2236:95;;659:8406;;;;;;;2236:95;;;;;;;659:8406;2236:95;;;659:8406;;2344:111;2379:14;659:8406;2366:27;;;2344:111;:::i;:::-;659:8406;;-1:-1:-1;;;2468:61:25;;2495:10;659:8406;2468:61;;659:8406;2515:4;659:8406;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2468:61:25;;;;;;2588:42;2468:61;2588:42;2468:61;2560:9;2468:61;;;659:8406;2495:10;;2560:9;:::i;:::-;659:8406;;2495:10;;;;2588:42;;776::26;;;;;;-1:-1:-1;;;;;776:42:26;;;659:8406:25;;;;776:42:26;659:8406:25;776:42:26;2468:61:25;;;659:8406;2468:61;659:8406;2468:61;;;;;;;:::i;:::-;;;2236:95;;;659:8406;2236:95;;659:8406;2236:95;;;;;;659:8406;2236:95;;;:::i;:::-;;;659:8406;;;;;;2236:95;;;;;;;-1:-1:-1;2236:95:25;;2163:42;;;;;;;;;;;;;;:::i;:::-;;;;659:8406;;;;;;-1:-1:-1;;659:8406:25;;;;;;;2780:2:3;659:8406:25;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;;3373:39;3381:12;;;3373:39;:::i;:::-;2927:12:3;659:8406:25;3471:40;3479:15;;;3471:40;:::i;:::-;659:8406;3574:3;3548:17;659:8406;3544:28;;;;;-1:-1:-1;;;;;3613:20:25;;;:::i;:::-;659:8406;;;;;;;3669:20;3668:47;3669:20;:31;:20;;;;:::i;3668:47::-;3736:22;776:42:26;3736:22:25;;776:42:26;;3807:10:25;3906:40;659:8406;3807:10;;;659:8406;3807:10;;3799:86;;;;:::i;3906:40::-;659:8406;3529:13;;3732:319;659:8406;;-1:-1:-1;;;3987:48:25;;4013:10;659:8406;3987:48;;659:8406;776:42:26;;;659:8406:25;;;;;;;;776:42:26;;659:8406:25;;-1:-1:-1;;3987:48:25;;;;;;;659:8406;3987:48;;;3732:319;;;;3987:48;;;659:8406;3987:48;;;;;;;;;:::i;:::-;;;;;3544:28;4092:8;3544:28;4080:10;4092:8;:::i;659:8406::-;;;;;;-1:-1:-1;;659:8406:25;;;;;;;;7813:15;659:8406;;;;;;;;;7813:15;659:8406;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;7813:15;659:8406;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;7813:15;659:8406;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;659:8406:25;;;;;;;;;;;;-1:-1:-1;;;;;735:10:6;659:8406:25;-1:-1:-1;659:8406:25;;;;-1:-1:-1;659:8406:25;;10599:17:3;;10580:36;;10576:309;;659:8406:25;4986:5:3;;;;;:::i;10576:309::-;10636:24;;;10632:130;;9813:19;;9809:89;;735:10:6;9911:21:3;9907:90;;4986:5;659:8406:25;;;;;;;;;-1:-1:-1;;;;;735:10:6;659:8406:25;-1:-1:-1;659:8406:25;;;;;-1:-1:-1;659:8406:25;;;;;10576:309:3;;;9907:90;9955:31;659:8406:25;9955:31:3;659:8406:25;;;;;9955:31:3;9809:89;9855:32;659:8406:25;9855:32:3;659:8406:25;;;;;9855:32:3;10632:130;10687:60;;;659:8406:25;10687:60:3;735:10:6;659:8406:25;;;;;;;;10687:60:3;659:8406:25;;;;;;-1:-1:-1;;659:8406:25;;;;;2927:12:3;659:8406:25;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;;:::i;:::-;;;735:10:6;;9813:19:3;9809:89;;-1:-1:-1;;;;;659:8406:25;9911:21:3;;;9907:90;;735:10:6;659:8406:25;;;;;;;;;-1:-1:-1;659:8406:25;;;;;-1:-1:-1;659:8406:25;;;;;;;10085:31:3;659:8406:25;735:10:6;10085:31:3;;659:8406:25;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;;;;1856:5:3;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1856:5:3;659:8406:25;;;;;;;;;;;;-1:-1:-1;659:8406:25;;-1:-1:-1;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:8406:25;;;;7224:17;659:8406;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;659:8406:25;;;:::i;:::-;;;;;;;;7280:28;;;;;;659:8406;;;;;;;:::i;7310:3::-;7344:32;-1:-1:-1;;;;;7355:20:25;;;:::i;:::-;659:8406;;;;;;;7344:32;:::i;:::-;659:8406;;;;;;;;-1:-1:-1;659:8406:25;;;;;;;;;;;7265:13;;659:8406;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;659:8406:25;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;659:8406:25;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;;;;659:8406:25;;;;;-1:-1:-1;659:8406:25;;;;;;;;;;;;;;;-1:-1:-1;659:8406:25;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;7224:17;659:8406;;;;;;7224:17;-1:-1:-1;659:8406:25;;-1:-1:-1;659:8406:25;;;-1:-1:-1;659:8406:25;:::o;:::-;-1:-1:-1;;;659:8406:25;;;;;;;;;8881:11;659:8406;;;;;;8881:11;-1:-1:-1;659:8406:25;;-1:-1:-1;659:8406:25;;;-1:-1:-1;659:8406:25;:::o;:::-;;;;;;;;;:::o;:::-;;;5019:1;659:8406;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;-1:-1:-1;;;659:8406:25;;;;;;;;776:42:26;;;;;;;;;;659:8406:25;;;776:42:26;;;;;:::o;:::-;;;;;;;;;;;;659:8406:25;;;;;;;-1:-1:-1;;659:8406:25;776:42:26;;659:8406:25;;:::i;:::-;776:42:26;;;-1:-1:-1;776:42:26;;;;:::o;:::-;659:8406:25;776:42:26;:::o;:::-;;;;:::o;:::-;;659:8406:25;;-1:-1:-1;;;776:42:26;;;;;;;;;;;659:8406:25;776:42:26;659:8406:25;;;776:42:26;;659:8406:25;;;;:::o;:::-;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;659:8406:25;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;659:8406:25;;;;;;;;;;;;;;;;;;4513:224:26;-1:-1:-1;;;;;;;659:8406:25;776:42:26;4611:19;;776:42;;4650:21;;;4513:224;:::o;4611:118::-;659:8406:25;4691:38:26;659:8406:25;;;4691:38:26;;;;-1:-1:-1;;;4691:38:26;;4723:4;4691:38;;;659:8406:25;4691:38:26;;;;;;;;;;;4611:118;;4513:224;:::o;4691:38::-;;;;659:8406:25;4691:38:26;;659:8406:25;4691:38:26;;;;;;659:8406:25;4691:38:26;;;:::i;:::-;;;659:8406:25;;;;;;4513:224:26;:::o;4691:38::-;;;-1:-1:-1;4691:38:26;;5393:300:3;-1:-1:-1;;;;;659:8406:25;5476:18:3;;;5472:86;;-1:-1:-1;;;;;659:8406:25;5571:16:3;;;5567:86;;5492:1;659:8406:25;;;;;;;;;;6340:19:3;;;6336:115;;659:8406:25;;;;7083:25:3;659:8406:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:25:3;5393:300::o;6336:115::-;659:8406:25;6386:50:3;-1:-1:-1;;;6386:50:3;;;;;659:8406:25;;;;;6386:50:3;5567:86;5610:32;5492:1;5610:32;5492:1;5610:32;659:8406:25;;5492:1:3;5610:32;5472:86;5517:30;5492:1;5517:30;5492:1;5517:30;659:8406:25;;5492:1:3;5517:30;7984:206;-1:-1:-1;;;;;659:8406:25;8054:21:3;;8050:89;;8073:1;659:8406:25;;;;;;;;;;;6340:19:3;;;6336:115;;659:8406:25;7083:25:3;659:8406:25;;;;;;;;;;;;;;;6810:21:3;659:8406:25;;6810:21:3;659:8406:25;;;;;;7083:25:3;7984:206::o;6336:115::-;6386:50;;-1:-1:-1;;;659:8406:25;6386:50:3;;;659:8406:25;;;;;6386:50:3;1796:162:1;-1:-1:-1;;;;;1710:6:1;659:8406:25;;735:10:6;1855:23:1;1851:101;;1796:162::o;1851:101::-;1901:40;-1:-1:-1;1901:40:1;735:10:6;1901:40:1;659:8406:25;;-1:-1:-1;1901:40:1;7458:208:3;-1:-1:-1;;;;;659:8406:25;7528:21:3;;;7524:91;;6233:21;659:8406:25;;;;;;;;;6233:21:3;659:8406:25;7083:25:3;659:8406:25;7547:1:3;659:8406:25;;;;;;;;;;;;;;;;;;;;;7083:25:3;7458:208::o;659:8406:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "addToken(address,uint256)": "af81c5b9",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "deposit(address,uint256)": "47e7ef24",
              "depositETH(uint256)": "5358fbda",
              "donate(address,uint256)": "e69d849d",
              "donateETH(uint256)": "ab83f98a",
              "getAllowedActions()": "2494452d",
              "getBalances()": "00113e08",
              "getDepositUsdMin()": "8e4e9018",
              "getSplitRatio()": "4eadcca8",
              "getTokens()": "aa6ca808",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "removeToken(address)": "5fa7b584",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "withdraw(uint256)": "2e1a7d4d",
              "withdrawSingle(address,uint256)": "f9c4d3db",
              "withdrawSingleETH(uint256)": "a216aa06"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositUsdMin_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"initialTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"initialSplitRatio_\",\"type\":\"uint256[]\"},{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"allowedActions_\",\"type\":\"uint8[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDonated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donateETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedActions\",\"outputs\":[{\"internalType\":\"enum Enums.ActionCall[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositUsdMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSplitRatio\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSingle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSingleETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pool/MultiTokenPool.sol\":\"MultiTokenPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0xdafda8f5f34be55f0f031adbe18eb4d11a8a6ea1ad2bcd3e67d0e76d11d9530f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a1298e140a1bf2cdc2b0f53c663fd71f010718822a547298435bf49b072693ef\",\"dweb:/ipfs/QmXzbUAgNmRWTtUNT6toQbrsXTS7hQonfDFATSdYRv6JR2\"]},\"contracts/interfaces/IMultiTokenPool.sol\":{\"keccak256\":\"0x82c1289792365bf675770f06d43816e00207385a368e1f004ee662582bb604bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e25dbe134fb5e13f032a5c04342d49d8d6634b32204264c4b1292903eb27b178\",\"dweb:/ipfs/QmXL6WvX7zAiSo2zHeDKJSagSRo4FB3F7DhXsppLw7kdDh\"]},\"contracts/interfaces/IPoolAdmin.sol\":{\"keccak256\":\"0x5531e78ca38f798dac44609d77e3addf1b8720966eea28b28e4e7bae9685d438\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d3f47b4ceebb0590d8454a0b35f4a5b8e0fa914294b4cb7826a5f35177a08af\",\"dweb:/ipfs/QmfWapy95rDTSjvzQkoCavk2AtUamemZvykNds4givHjar\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4252f4cc64140561f61a4d6ab1f39c540dd70099aa0f056ca0162b8683a78c95\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c644be7ada43bdc0faf1103004ad7a4bebf58f5f780e887ec14d9032b13efa59\",\"dweb:/ipfs/Qmc5Sdo5xjJEMJts7YzzUUboML46S4WEKmuSZBT8ZdZceC\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x3dc7a557d4025376ed268d521cd42ff61587d313e1affbcea22879f5bacbaa28\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7003ff5090bbcbe986ad6cfd42280a6cc5fd675c309cee9ad1fb87073de1f79a\",\"dweb:/ipfs/QmUuwyMVhVgGqA3ooirHCvPCb98h1YUeeac6Zmn4WtH5FA\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]},\"contracts/pool/MultiTokenPool.sol\":{\"keccak256\":\"0x7d4a72c34f446d83009e3a71c41f4bf2e6ccf60546e65a1cf361cf8599a078f9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d1ccfe94665510565630bb3bf74f5b3ac522cbabf28d2f83e1a2348d5581ce89\",\"dweb:/ipfs/QmTQLQuraM9PVZeAqgitjugrk85MunMbLQBGeg9ogdh96n\"]},\"contracts/pool/PoolActions.sol\":{\"keccak256\":\"0xbb9f6afc1845f9e1e291c56fe142dfdcdaed185ef9133d24eb77f99130a005aa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f0848c2b663c4ea025fec4db1c7588a980004b5efeefce914830abf561e1f9ae\",\"dweb:/ipfs/QmaLE5YxU3D5Bs2GNG3Y1FU7PSCr1TXYsLck9TVsD6xw1M\"]}},\"version\":1}"
        }
      },
      "contracts/pool/PoolActions.sol": {
        "PoolActions": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pool/PoolActions.sol\":\"PoolActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x3dc7a557d4025376ed268d521cd42ff61587d313e1affbcea22879f5bacbaa28\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7003ff5090bbcbe986ad6cfd42280a6cc5fd675c309cee9ad1fb87073de1f79a\",\"dweb:/ipfs/QmUuwyMVhVgGqA3ooirHCvPCb98h1YUeeac6Zmn4WtH5FA\"]},\"contracts/lib/Enums.sol\":{\"keccak256\":\"0x108954c8aad323634005cf8b79b87948d9acb7de8d5133bee8288ddb2a24f74a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44517ac708fa32054706cd9473acc704a5e883055444e76eaff5b43534f862a7\",\"dweb:/ipfs/QmTqL9eccNh2Ae6LXdq4x8q8pEBXGsSBspycVz8aqzSXzV\"]},\"contracts/pool/PoolActions.sol\":{\"keccak256\":\"0xbb9f6afc1845f9e1e291c56fe142dfdcdaed185ef9133d24eb77f99130a005aa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f0848c2b663c4ea025fec4db1c7588a980004b5efeefce914830abf561e1f9ae\",\"dweb:/ipfs/QmaLE5YxU3D5Bs2GNG3Y1FU7PSCr1TXYsLck9TVsD6xw1M\"]}},\"version\":1}"
        }
      }
    }
  }
}